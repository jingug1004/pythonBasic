<?xml version="1.0" encoding='EUC-KR'?>
<queryMap desc="tbeb_organ(편성)">
    <query id="tbeb_organ_fb001" desc="실제출주수조회" fetchSize="10">
        <![CDATA[
            SELECT /* tbeb_organ_fb001 실제출주수조회 */
                     TOR.RACER_NO
                   , TOR.TMS
                   , TOR.DAY_ORD
                   , COUNT(*) RACE_ALLOC_CNT
                   , SUM(DECODE(ST_MTHD_CD,'001',1,0)) RACE_ONLINE_CNT
            FROM     TBEB_ORGAN        TOR
                   , TBEB_RACE_DAY_ORD TRDO
            WHERE  TOR.STND_YEAR       = TRDO.STND_YEAR
            AND    TOR.MBR_CD          = TRDO.MBR_CD
            AND    TOR.TMS             = TRDO.TMS
            AND    TOR.DAY_ORD         = TRDO.DAY_ORD
            AND    TOR.STND_YEAR       = ?
            AND    TOR.MBR_CD          = ?
            AND    TOR.TMS       BETWEEN ?
                                     AND ?
            AND    TOR.ABSE_CD        <> '003'
            AND    TRDO.ORGAN_STAT_CD  = '002'
            GROUP BY TOR.RACER_NO
                   , TOR.TMS
                   , TOR.DAY_ORD
		]]>
    </query> 
    <query id="tbeb_organ_fb002" desc="상세성적조회" fetchSize="10">
        <![CDATA[
			SELECT /* tbeb_organ_fb002 상세성적조회  */
			         TOR.STND_YEAR
			       , TOR.MBR_CD
			       , TOR.TMS
			       , TOR.DAY_ORD
			       , TOR.RACE_NO
			       , TOR.RACE_REG_NO
			       , TOR.RACER_NO
			       , TOR.RACER_GRD_CD
			       , TOR.ABSE_CD
			       , TOR.MOT_NO
			       , SUBSTR(TOR  .MOT_NO, 6, 3) VIEW_MOT_NO                                 -- 모터번호    
			       , TOR.BOAT_NO
			       , SUBSTR(TOR  .BOAT_NO, 6, 3) VIEW_BOAT_NO                                 -- 모터번호    
			       , TOR.RANK
			       , TOR.RACE_TM
			       , TOR.TIME_DIFF
			       , TOR.STRATEGY_CD
			       , TOR.ENTRY_COURSE
			       , TOR.STAR_TM
			       , TOR.RMK
			       , TOR.INTRO_RUN_TM
			       , TOR.FLYING_CNT
			       , TOR.LATE_CNT
			       , TRM.NM_KOR
			       , TRI.ENTRY_BODY_WGHT
			       , TOR.RACE_REG_NO || ' / ' || TOR.ENTRY_COURSE COURSE
			FROM     TBEB_ORGAN           TOR
			       , TBEC_RACER_MASTER    TRM
			       , TBEC_RACER_INTERVIEW TRI
			WHERE  TOR.RACER_NO    = TRM.RACER_NO
			AND    TOR.STND_YEAR   = TRI.STND_YEAR(+)
			AND    TOR.MBR_CD      = TRI.MBR_CD   (+)
			AND    TOR.TMS         = TRI.TMS(+)
			AND    TOR.RACER_NO    = TRI.RACER_NO(+)
			AND    TOR.RACER_NO    = NVL(?, TOR.RACER_NO)
			AND    TOR.MOT_NO      = NVL(?, TOR.MOT_NO  )
			AND    TOR.BOAT_NO     = NVL(?, TOR.BOAT_NO )
			AND    TOR.RACE_DAY    <= (                                                                                                                                      
		                                SELECT                                                                                                                            
		                                       MAX(TRDO.RACE_DAY) RACE_DAY                                                                                                
		                                FROM   TBEB_RACE_DAY_ORD TRDO                                                                                                     
		                                WHERE  TRDO.STND_YEAR = ?                                                                                                         
		                                AND    TRDO.MBR_CD    = ?                                                                                                         
		                                AND    TRDO.TMS       = ?      
			                          )
			AND    TOR.STND_YEAR   IN (?, ? - 1)
			AND    TOR.ST_MTHD_CD  = DECODE(?,'000',TOR.ST_MTHD_CD,?) 
			ORDER BY TOR.RACE_DAY DESC
			       , TOR.RACE_NO  DESC
		]]>
    </query> 
    <query id="tbeb_organ_fb003" desc="정번별출주수조회" fetchSize="10">
        <![CDATA[
			SELECT    /*  tbeb_organ_fb003 IWORK_SFR-008 경정 선수편성 메뉴 개선  정번8 까지 추가 수정.  */
			         TRM.RACER_NO
			       , TRM.NM_KOR
			       , NVL(TOR_TMS.RACER_GRD_CD, TRM.RACER_GRD_CD) RACER_GRD_CD
			       , NVL(MIN(DECODE(TOR_TOT.RACE_REG_NO, 1, TOR_TOT.TOT_RUN_CNT)), 0) TOT_RUN_CNT_1
			       , NVL(MIN(DECODE(TOR_TOT.RACE_REG_NO, 2, TOR_TOT.TOT_RUN_CNT)), 0) TOT_RUN_CNT_2
			       , NVL(MIN(DECODE(TOR_TOT.RACE_REG_NO, 3, TOR_TOT.TOT_RUN_CNT)), 0) TOT_RUN_CNT_3
			       , NVL(MIN(DECODE(TOR_TOT.RACE_REG_NO, 4, TOR_TOT.TOT_RUN_CNT)), 0) TOT_RUN_CNT_4
			       , NVL(MIN(DECODE(TOR_TOT.RACE_REG_NO, 5, TOR_TOT.TOT_RUN_CNT)), 0) TOT_RUN_CNT_5
			       , NVL(MIN(DECODE(TOR_TOT.RACE_REG_NO, 6, TOR_TOT.TOT_RUN_CNT)), 0) TOT_RUN_CNT_6
			       , NVL(MIN(DECODE(TOR_TOT.RACE_REG_NO, 7, TOR_TOT.TOT_RUN_CNT)), 0) TOT_RUN_CNT_7
			       , NVL(MIN(DECODE(TOR_TOT.RACE_REG_NO, 8, TOR_TOT.TOT_RUN_CNT)), 0) TOT_RUN_CNT_8
			       , TOR_TMS.TMS_RUN_CNT_1
			       , TOR_TMS.TMS_RUN_CNT_2
			       , TOR_TMS.TMS_RUN_CNT_3
			       , TOR_TMS.TMS_RUN_CNT_4
			       , TOR_TMS.TMS_RUN_CNT_5
			       , TOR_TMS.TMS_RUN_CNT_6
			       , TOR_TMS.TMS_RUN_CNT_7
			       , TOR_TMS.TMS_RUN_CNT_8
			FROM     TBEC_RACER_MASTER TRM 
			       , (
			            SELECT 
			                     TOR.RACER_NO
			                   , TOR.RACE_REG_NO
			                   , COUNT(*) TOT_RUN_CNT
			            FROM   TBEB_RACE R, TBEB_ORGAN TOR, TBEB_RACE_TMS TRT
                        WHERE  R.STND_YEAR = TOR.STND_YEAR
                        AND    R.MBR_CD    = TOR.MBR_CD
                        AND    R.TMS       = TOR.TMS
                        AND    R.DAY_ORD   = TOR.DAY_ORD
                        AND    R.RACE_NO   = TOR.RACE_NO
                        AND    R.STND_YEAR = TRT.STND_YEAR
                        AND    R.MBR_CD    = TRT.MBR_CD
                        AND    R.TMS       = TRT.TMS
                        AND    TOR.STND_YEAR    = ?
            			AND    TOR.RACE_DAY    >= (                                                                                                                                      
            		                                SELECT                                                                                                                            
            		                                       MIN(TRDO.RACE_DAY) RACE_DAY                                                                                                
            		                                FROM   TBEB_RACE_DAY_ORD TRDO                                                                                                     
            		                                WHERE  TRDO.STND_YEAR = ?                                                                                                         
            		                                AND    TRDO.MBR_CD    = ?                                                                                                         
            		                                AND    TRDO.TMS       = ?                                                                                                         
			                          )  
            			AND    TOR.RACE_DAY    <= (                                                                                                                                      
					                                SELECT                                                                                                                            
							                                MAX(TRDO.RACE_DAY) RACE_DAY                                                                                                
							                         FROM   TBEB_RACE_DAY_ORD TRDO                                                                                                     
							                         WHERE  TRDO.STND_YEAR = ?                                                                                                         
							                         AND    TRDO.MBR_CD    = ?                                                                                                         
							                         AND    TRDO.TMS       = ?                                                                                                         
            										) 
                        AND    ((R.RACE_DGRE_CD NOT IN (SELECT CD FROM TBEA_SPEC_CD WHERE GRP_CD = 'E00151') AND ? = 'N') OR ? = 'Y')
                        AND    ((TRT.QURT_CD = (SELECT QURT_CD FROM TBEB_RACE_TMS WHERE STND_YEAR = ? AND MBR_CD = ? AND TMS= ?) AND ? = 'N') OR ? = 'Y')
                        AND    TOR.ST_MTHD_CD = DECODE(?, '000', TOR.ST_MTHD_CD, ?)
			            GROUP BY 
			                     RACER_NO
			                   , RACE_REG_NO
			         ) TOR_TOT -- 년도별 출주수
			       , (
            			SELECT
            			         RACER_NO
            			       , RACER_GRD_CD
            			       , NVL(MIN(DECODE(RACE_REG_NO, 1, TOT_RUN_CNT)), 0) TMS_RUN_CNT_1
            			       , NVL(MIN(DECODE(RACE_REG_NO, 2, TOT_RUN_CNT)), 0) TMS_RUN_CNT_2
            			       , NVL(MIN(DECODE(RACE_REG_NO, 3, TOT_RUN_CNT)), 0) TMS_RUN_CNT_3
            			       , NVL(MIN(DECODE(RACE_REG_NO, 4, TOT_RUN_CNT)), 0) TMS_RUN_CNT_4
            			       , NVL(MIN(DECODE(RACE_REG_NO, 5, TOT_RUN_CNT)), 0) TMS_RUN_CNT_5
            			       , NVL(MIN(DECODE(RACE_REG_NO, 6, TOT_RUN_CNT)), 0) TMS_RUN_CNT_6
            			       , NVL(MIN(DECODE(RACE_REG_NO, 7, TOT_RUN_CNT)), 0) TMS_RUN_CNT_7
            			       , NVL(MIN(DECODE(RACE_REG_NO, 8, TOT_RUN_CNT)), 0) TMS_RUN_CNT_8
            			FROM   (
            			            SELECT 
            			                     RACER_NO
            			                   , RACER_GRD_CD
            			                   , RACE_REG_NO
            			                   , COUNT(*) TOT_RUN_CNT
            			            FROM   TBEB_ORGAN
            			            WHERE  STND_YEAR = ?
            			            AND    MBR_CD    = ?
            			            AND    TMS       = ?
            			            AND	   ST_MTHD_CD = DECODE(?, '000', ST_MTHD_CD, ?)		
            			            GROUP BY 
            			                     RACER_NO
            			                   , RACER_GRD_CD
            			                   , RACE_REG_NO
            			       )
            			GROUP BY RACER_NO
            			       , RACER_GRD_CD
			         ) TOR_TMS -- 당회차 출주수
			WHERE  TRM.RACER_NO  = TOR_TOT.RACER_NO(+)
			AND    TRM.RACER_NO  = TOR_TMS.RACER_NO(+)
			GROUP BY TRM.RACER_NO
			       , TRM.NM_KOR
			       , NVL(TOR_TMS.RACER_GRD_CD, TRM.RACER_GRD_CD)
			       , TOR_TMS.RACER_GRD_CD
			       , TOR_TMS.TMS_RUN_CNT_1
			       , TOR_TMS.TMS_RUN_CNT_2
			       , TOR_TMS.TMS_RUN_CNT_3
			       , TOR_TMS.TMS_RUN_CNT_4
			       , TOR_TMS.TMS_RUN_CNT_5
			       , TOR_TMS.TMS_RUN_CNT_6
			       , TOR_TMS.TMS_RUN_CNT_7
			       , TOR_TMS.TMS_RUN_CNT_8
			ORDER BY TRM.RACER_NO
		]]>
    </query> 
    <query id="tbeb_organ_fb004" desc="선수,장비 성적 조회" fetchSize="10">
        <![CDATA[
			SELECT /*  tbeb_organ_fb004 선수,장비 성적 조회  */
				TOR  .STND_YEAR
				, TOR  .MBR_CD   
				, TOR  .TMS      
				, TOR  .DAY_ORD  
				, TOR  .RACE_NO  
				, TOR  .ST_MTHD_CD
				, ( SELECT CD_NM FROM TBEA_SPEC_CD WHERE GRP_CD = 'E00009' AND CD = TOR.RACE_REG_NO ) RACE_REG_COLOR
				, TOR  .RACE_REG_NO
				, TOR  .RACER_NO ORG_RACER_NO                                            -- 선수등록번호
				, ''    RACER_RSN                                                        -- 선수변경사유
				, TOR  .RACER_NO                                                         -- 선수등록번호
				, TA   .SPEC_CD                                                          -- 선수등록번호
				, TOR  .MOT_NO ORG_MOT_NO                                                -- 모터번호    
				, ''    MOT_RSN                                                          -- 모터변경사유
				, TOR  .MOT_NO                                                           -- 모터번호    
				, SUBSTR(TOR  .MOT_NO, 6, 3) VIEW_MOT_NO                                 -- 모터번호    
				, TOR  .BOAT_NO ORG_BOAT_NO                                              -- 보트번호    
				, ''    BOAT_RSN                                                         -- 보트변경사유
				, TOR  .BOAT_NO                                                          -- 보트번호    
				, SUBSTR(TOR  .BOAT_NO, 6, 3) VIEW_BOAT_NO    
				, TOR  .ABSE_CD                           
				, TCI  .SPEC_INFO RMK                           
				, TOR  .RACER_GRD_CD
				, TRM  .NM_KOR
				, TRM  .RACER_STAT_CD
				, TRM  .FAVOR_COURSE_CD
				, TRM  .EMAIL_ADDR
				, TRM  .RACER_PERIO_NO
				, ''    ETC_RACE                                                         -- 보트변경사유
				, (SELECT CD_NM FROM TBEA_SPEC_CD WHERE GRP_CD = 'E00024' AND CD = TRD  .NATV_PLAC_CD) NATV_PLAC_CD
				, TRD  .NATY_UNIV
				, ROUND(NVL(TRI  .ENTRY_BODY_WGHT, TRD.WGHT)) ENTRY_BODY_WGHT
				--			       , ROUND(TRI.ENTRY_BODY_WGHT) ENTRY_BODY_WGHT
				, 1 RACE_ALLOC_CNT
				, NVL(NXT.RACE_ALLOC_CNT, TRRAN.RACE_ALLOC_CNT) NEXT_RACE_ALLOC_CNT
				, DECODE(TOR.ST_MTHD_CD, '001', 
							TRIM(TO_CHAR((NVL(TRRAS2.TMS_6_AVG_RANK_SCR, 0) * 0.7) + (NVL(TRRAS2.AVG_RANK_SCR, 0) * 0.25) + (NVL(TRRAS2.AVG_RANK_SCR, 0) * 0.05), '90.99')),
							TRIM(TO_CHAR((NVL(TRRAS. TMS_6_AVG_RANK_SCR, 0) * 0.7) + (NVL(TMRAS. AVG_RANK_SCR, 0) * 0.25) + (NVL(TBRAS. AVG_RANK_SCR, 0) * 0.05), '90.99'))
					) SCR
				, DENSE_RANK() OVER (ORDER BY TRIM(TO_CHAR((NVL(TRRAS.TMS_6_AVG_RANK_SCR, 0) * 0.7) + (NVL(TMRAS.AVG_RANK_SCR, 0) * 0.25) + (NVL(TBRAS.AVG_RANK_SCR, 0) * 0.05), '90.99')) DESC ) RANK
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.RACER_RANK              ,TRRAS.RACER_RANK              )   TRRAS_RACER_RANK
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.TMS_6_AMU_RANK_SCR      ,TRRAS.TMS_6_AMU_RANK_SCR      )   TRRAS_TMS_6_AMU_RANK_SCR     
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.TMS_6_AVG_RANK_SCR      ,TRRAS.TMS_6_AVG_RANK_SCR      )   TRRAS_TMS_6_AVG_RANK_SCR     
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.TMS_6_AMU_ACDNT_SCR     ,TRRAS.TMS_6_AMU_ACDNT_SCR     )   TRRAS_TMS_6_AMU_ACDNT_SCR    
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.TMS_6_AVG_ACDNT_SCR     ,TRRAS.TMS_6_AVG_ACDNT_SCR     )   TRRAS_TMS_6_AVG_ACDNT_SCR    
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.TMS_6_AVG_SCR           ,TRRAS.TMS_6_AVG_SCR           )   TRRAS_TMS_6_AVG_SCR          
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.TMS_6_WIN_RATIO         ,TRRAS.TMS_6_WIN_RATIO         )   TRRAS_TMS_6_WIN_RATIO        
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.TMS_6_HIGH_RANK_RATIO   ,TRRAS.TMS_6_HIGH_RANK_RATIO   )   TRRAS_TMS_6_HIGH_RANK_RATIO  
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.TMS_6_HIGH_3_RANK_RATIO ,TRRAS.TMS_6_HIGH_3_RANK_RATIO )   TRRAS_TMS_6_HIGH_3_RANK_RATIO
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.TMS_6_AVG_STRT_TM       ,TRRAS.TMS_6_AVG_STRT_TM       )   TRRAS_TMS_6_AVG_STRT_TM      
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.TMS_8_RANK_ORD          ,TRRAS.TMS_8_RANK_ORD          )   TRRAS_TMS_8_RANK_ORD         
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.TMS_6_RACE_CNT          ,TRRAS.TMS_6_RACE_CNT          )   TRRAS_TMS_6_RACE_CNT         
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.TMS_6_RANK_1            ,TRRAS.TMS_6_RANK_1            )   TRRAS_TMS_6_RANK_1           
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.TMS_6_RANK_2            ,TRRAS.TMS_6_RANK_2            )   TRRAS_TMS_6_RANK_2           
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.TMS_6_RANK_3            ,TRRAS.TMS_6_RANK_3            )   TRRAS_TMS_6_RANK_3           
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.AMU_RANK_SCR            ,TRRAS.AMU_RANK_SCR            )   TRRAS_AMU_RANK_SCR           
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.AVG_RANK_SCR            ,TRRAS.AVG_RANK_SCR            )   TRRAS_AVG_RANK_SCR           
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.AMU_ACDNT_SCR           ,TRRAS.AMU_ACDNT_SCR           )   TRRAS_AMU_ACDNT_SCR          
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.AVG_ACDNT_SCR           ,TRRAS.AVG_ACDNT_SCR           )   TRRAS_AVG_ACDNT_SCR          
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.BF_AMU_ACDNT_SCR        ,TRRAS.BF_AMU_ACDNT_SCR        )   TRRAS_BF_AMU_ACDNT_SCR      
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.BF_AVG_ACDNT_SCR        ,TRRAS.BF_AVG_ACDNT_SCR        )   TRRAS_BF_AVG_ACDNT_SCR      
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.AF_AMU_ACDNT_SCR        ,TRRAS.AF_AMU_ACDNT_SCR        )   TRRAS_AF_AMU_ACDNT_SCR      
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.AF_AVG_ACDNT_SCR        ,TRRAS.AF_AVG_ACDNT_SCR        )   TRRAS_AF_AVG_ACDNT_SCR      
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.AVG_SCR                 ,TRRAS.AVG_SCR                 )   TRRAS_AVG_SCR                
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.WIN_RATIO               ,TRRAS.WIN_RATIO               )   TRRAS_WIN_RATIO              
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.HIGH_RANK_RATIO         ,TRRAS.HIGH_RANK_RATIO         )   TRRAS_HIGH_RANK_RATIO        
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.HIGH_3_RANK_RATIO       ,TRRAS.HIGH_3_RANK_RATIO       )   TRRAS_HIGH_3_RANK_RATIO      
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.AVG_STRT_TM             ,TRRAS.AVG_STRT_TM             )   TRRAS_AVG_STRT_TM            
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.RUN_CNT                 ,TRRAS.RUN_CNT                 )   TRRAS_RUN_CNT                
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.RACE_DAY_CNT            ,TRRAS.RACE_DAY_CNT            )   TRRAS_RACE_DAY_CNT           
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.RACE_CNT                ,TRRAS.RACE_CNT                )   TRRAS_RACE_CNT               
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.TOT_RACE_CNT            ,TRRAS.TOT_RACE_CNT            )   TRRAS_TOT_RACE_CNT           
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.BF_RACE_CNT             ,TRRAS.BF_RACE_CNT             )   TRRAS_BF_RACE_CNT            
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.AF_RACE_CNT             ,TRRAS.AF_RACE_CNT             )   TRRAS_AF_RACE_CNT            
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.RANK_1_CNT              ,TRRAS.RANK_1_CNT              )   TRRAS_RANK_1_CNT             
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.RANK_2_CNT              ,TRRAS.RANK_2_CNT              )   TRRAS_RANK_2_CNT             
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.RANK_3_CNT              ,TRRAS.RANK_3_CNT              )   TRRAS_RANK_3_CNT             
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.RANK_4_CNT              ,TRRAS.RANK_4_CNT              )   TRRAS_RANK_4_CNT             
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.RANK_5_CNT              ,TRRAS.RANK_5_CNT              )   TRRAS_RANK_5_CNT             
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.RANK_6_CNT              ,TRRAS.RANK_6_CNT              )   TRRAS_RANK_6_CNT
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.RANK_7_CNT              ,TRRAS.RANK_7_CNT              )   TRRAS_RANK_7_CNT
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.RANK_8_CNT              ,TRRAS.RANK_8_CNT              )   TRRAS_RANK_8_CNT
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.RANK_ETC_CNT            ,TRRAS.RANK_ETC_CNT            )   TRRAS_RANK_ETC_CNT           
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.DGRE_JUDG_F_CNT         ,TRRAS.DGRE_JUDG_F_CNT         )   TRRAS_DGRE_JUDG_F_CNT        
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.DGRE_JUDG_L_CNT         ,TRRAS.DGRE_JUDG_L_CNT         )   TRRAS_DGRE_JUDG_L_CNT        
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.BF_F_CNT                ,TRRAS.BF_F_CNT                )   TRRAS_BF_F_CNT                  
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.AF_F_CNT                ,TRRAS.AF_F_CNT                )   TRRAS_AF_F_CNT                  
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.BF_L_CNT                ,TRRAS.BF_L_CNT                )   TRRAS_BF_L_CNT                  
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.AF_L_CNT                ,TRRAS.AF_L_CNT                )   TRRAS_AF_L_CNT                  
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.ABSE_CNT                ,TRRAS.ABSE_CNT                )   TRRAS_ABSE_CNT               
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.RACE_ESC_1_CNT          ,TRRAS.RACE_ESC_1_CNT          )   TRRAS_RACE_ESC_1_CNT         
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.RACE_ESC_2_CNT          ,TRRAS.RACE_ESC_2_CNT          )   TRRAS_RACE_ESC_2_CNT         
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.FOUL_ELIM_CNT           ,TRRAS.FOUL_ELIM_CNT           )   TRRAS_FOUL_ELIM_CNT          
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.ELIM_CNT                ,TRRAS.ELIM_CNT                )   TRRAS_ELIM_CNT               
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.FOUL_WARN_CNT           ,TRRAS.FOUL_WARN_CNT           )   TRRAS_FOUL_WARN_CNT          
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.WARN_CNT                ,TRRAS.WARN_CNT                )   TRRAS_WARN_CNT               
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.ATTEN_CNT               ,TRRAS.ATTEN_CNT               )   TRRAS_ATTEN_CNT              
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.BF_TMS                  ,TRRAS.BF_TMS                  )   TRRAS_BF_TMS                 
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.BF_BF_TMS               ,TRRAS.BF_BF_TMS               )   TRRAS_BF_BF_TMS              
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.BF_BF_BF_TMS            ,TRRAS.BF_BF_BF_TMS            )   TRRAS_BF_BF_BF_TMS           
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.BF_MBR_CD               ,TRRAS.BF_MBR_CD               )   TRRAS_BF_MBR_CD              
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.BF_BF_MBR_CD            ,TRRAS.BF_BF_MBR_CD            )   TRRAS_BF_BF_MBR_CD           
				, DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.BF_BF_BF_MBR_CD         ,TRRAS.BF_BF_BF_MBR_CD         )   TRRAS_BF_BF_BF_MBR_CD        
				, DECODE(TOR.ST_MTHD_CD, '001', TMRAS2.RUN_CNT                 ,TMRAS.RUN_CNT                 )   TMRAS_RUN_CNT                
				, DECODE(TOR.ST_MTHD_CD, '001', TMRAS2.RACE_CNT                ,TMRAS.RACE_CNT                )   TMRAS_RACE_CNT               
				, DECODE(TOR.ST_MTHD_CD, '001', TMRAS2.RACE_DAY_CNT            ,TMRAS.RACE_DAY_CNT            )   TMRAS_RACE_DAY_CNT           
				, DECODE(TOR.ST_MTHD_CD, '001', TMRAS2.RANK_1_CNT              ,TMRAS.RANK_1_CNT              )   TMRAS_RANK_1_CNT             
				, DECODE(TOR.ST_MTHD_CD, '001', TMRAS2.RANK_2_CNT              ,TMRAS.RANK_2_CNT              )   TMRAS_RANK_2_CNT             
				, DECODE(TOR.ST_MTHD_CD, '001', TMRAS2.RANK_3_CNT              ,TMRAS.RANK_3_CNT              )   TMRAS_RANK_3_CNT             
				, DECODE(TOR.ST_MTHD_CD, '001', TMRAS2.RANK_4_CNT              ,TMRAS.RANK_4_CNT              )   TMRAS_RANK_4_CNT             
				, DECODE(TOR.ST_MTHD_CD, '001', TMRAS2.RANK_5_CNT              ,TMRAS.RANK_5_CNT              )   TMRAS_RANK_5_CNT             
				, DECODE(TOR.ST_MTHD_CD, '001', TMRAS2.RANK_6_CNT              ,TMRAS.RANK_6_CNT              )   TMRAS_RANK_6_CNT
				, DECODE(TOR.ST_MTHD_CD, '001', TMRAS2.RANK_7_CNT              ,TMRAS.RANK_7_CNT              )   TMRAS_RANK_7_CNT
				, DECODE(TOR.ST_MTHD_CD, '001', TMRAS2.RANK_8_CNT              ,TMRAS.RANK_8_CNT              )   TMRAS_RANK_8_CNT
				, DECODE(TOR.ST_MTHD_CD, '001', TMRAS2.AMU_RANK_SCR            ,TMRAS.AMU_RANK_SCR            )   TMRAS_AMU_RANK_SCR          
				, DECODE(TOR.ST_MTHD_CD, '001', TMRAS2.AVG_RANK_SCR            ,TMRAS.AVG_RANK_SCR            )   TMRAS_AVG_RANK_SCR           
				, DECODE(TOR.ST_MTHD_CD, '001', TMRAS2.WIN_RATIO               ,TMRAS.WIN_RATIO               )   TMRAS_WIN_RATIO              
				, DECODE(TOR.ST_MTHD_CD, '001', TMRAS2.HIGH_RANK_RATIO         ,TMRAS.HIGH_RANK_RATIO         )   TMRAS_HIGH_RANK_RATIO        
				, DECODE(TOR.ST_MTHD_CD, '001', TMRAS2.HIGH_3_RANK_RATIO       ,TMRAS.HIGH_3_RANK_RATIO       )   TMRAS_HIGH_3_RANK_RATIO      
				, DECODE(TOR.ST_MTHD_CD, '001', TMRAS2.TMS_3_ITRDT_RUN_TM      ,TMRAS.TMS_3_ITRDT_RUN_TM      )   TMRAS_TMS_3_ITRDT_RUN_TM     
				, DECODE(TOR.ST_MTHD_CD, '001', TMRAS2.AVG_ITRDT_RUN_TM        ,TMRAS.AVG_ITRDT_RUN_TM        )   TMRAS_AVG_ITRDT_RUN_TM       
				, DECODE(TOR.ST_MTHD_CD, '001', TMRAS2.MAX_ITRDT_RUN_TM        ,TMRAS.MAX_ITRDT_RUN_TM        )   TMRAS_MAX_ITRDT_RUN_TM       
				, DECODE(TOR.ST_MTHD_CD, '001', TMRAS2.MIN_ITRDT_RUN_TM        ,TMRAS.MIN_ITRDT_RUN_TM        )   TMRAS_MIN_ITRDT_RUN_TM       
				, DECODE(TOR.ST_MTHD_CD, '001', TMRAS2.ITRDT_RUN_TM_DVTN       ,TMRAS.ITRDT_RUN_TM_DVTN       )   TMRAS_ITRDT_RUN_TM_DVTN      
				, DECODE(TOR.ST_MTHD_CD, '001', TBRAS2.RUN_CNT                 ,TBRAS.RUN_CNT                 )   TBRAS_RUN_CNT                
				, DECODE(TOR.ST_MTHD_CD, '001', TBRAS2.RACE_CNT                ,TBRAS.RACE_CNT                )   TBRAS_RACE_CNT               
				, DECODE(TOR.ST_MTHD_CD, '001', TBRAS2.RACE_DAY_CNT            ,TBRAS.RACE_DAY_CNT            )   TBRAS_RACE_DAY_CNT           
				, DECODE(TOR.ST_MTHD_CD, '001', TBRAS2.RANK_1_CNT              ,TBRAS.RANK_1_CNT              )   TBRAS_RANK_1_CNT             
				, DECODE(TOR.ST_MTHD_CD, '001', TBRAS2.RANK_2_CNT              ,TBRAS.RANK_2_CNT              )   TBRAS_RANK_2_CNT             
				, DECODE(TOR.ST_MTHD_CD, '001', TBRAS2.RANK_3_CNT              ,TBRAS.RANK_3_CNT              )   TBRAS_RANK_3_CNT             
				, DECODE(TOR.ST_MTHD_CD, '001', TBRAS2.RANK_4_CNT              ,TBRAS.RANK_4_CNT              )   TBRAS_RANK_4_CNT             
				, DECODE(TOR.ST_MTHD_CD, '001', TBRAS2.RANK_5_CNT              ,TBRAS.RANK_5_CNT              )   TBRAS_RANK_5_CNT             
				, DECODE(TOR.ST_MTHD_CD, '001', TBRAS2.RANK_6_CNT              ,TBRAS.RANK_6_CNT              )   TBRAS_RANK_6_CNT
				, DECODE(TOR.ST_MTHD_CD, '001', TBRAS2.RANK_7_CNT              ,TBRAS.RANK_7_CNT              )   TBRAS_RANK_7_CNT
				, DECODE(TOR.ST_MTHD_CD, '001', TBRAS2.RANK_8_CNT              ,TBRAS.RANK_8_CNT              )   TBRAS_RANK_8_CNT             
				, DECODE(TOR.ST_MTHD_CD, '001', TBRAS2.AMU_RANK_SCR            ,TBRAS.AMU_RANK_SCR            )   TBRAS_AMU_RANK_SCR          
				, DECODE(TOR.ST_MTHD_CD, '001', TBRAS2.AVG_RANK_SCR            ,TBRAS.AVG_RANK_SCR            )   TBRAS_AVG_RANK_SCR           
				, DECODE(TOR.ST_MTHD_CD, '001', TBRAS2.WIN_RATIO               ,TBRAS.WIN_RATIO               )   TBRAS_WIN_RATIO              
				, DECODE(TOR.ST_MTHD_CD, '001', TBRAS2.HIGH_RANK_RATIO         ,TBRAS.HIGH_RANK_RATIO         )   TBRAS_HIGH_RANK_RATIO        
				, DECODE(TOR.ST_MTHD_CD, '001', TBRAS2.HIGH_3_RANK_RATIO       ,TBRAS.HIGH_3_RANK_RATIO       )   TBRAS_HIGH_3_RANK_RATIO      
				, DECODE(TOR.ST_MTHD_CD, '001', TBRAS2.TMS_3_ITRDT_RUN_TM      ,TBRAS.TMS_3_ITRDT_RUN_TM      )   TBRAS_TMS_3_ITRDT_RUN_TM     
				, DECODE(TOR.ST_MTHD_CD, '001', TBRAS2.AVG_ITRDT_RUN_TM        ,TBRAS.AVG_ITRDT_RUN_TM        )   TBRAS_AVG_ITRDT_RUN_TM       
				, DECODE(TOR.ST_MTHD_CD, '001', TBRAS2.MAX_ITRDT_RUN_TM        ,TBRAS.MAX_ITRDT_RUN_TM        )   TBRAS_MAX_ITRDT_RUN_TM       
				, DECODE(TOR.ST_MTHD_CD, '001', TBRAS2.MIN_ITRDT_RUN_TM        ,TBRAS.MIN_ITRDT_RUN_TM        )   TBRAS_MIN_ITRDT_RUN_TM       
				, DECODE(TOR.ST_MTHD_CD, '001', TBRAS2.ITRDT_RUN_TM_DVTN       ,TBRAS.ITRDT_RUN_TM_DVTN       )   TBRAS_ITRDT_RUN_TM_DVTN 
				, PRE  .RACE1    
				, PRE  .RACE2    
				, DECODE(TOR.ST_MTHD_CD, '001', NVL(RACE2.RACE_CNT_1, '0/0'), NVL(RACE .RACE_CNT_1, '0/0')) RACE_CNT_1
				, DECODE(TOR.ST_MTHD_CD, '001', NVL(RACE2.RACE_CNT_2, '0/0'), NVL(RACE .RACE_CNT_2, '0/0')) RACE_CNT_2
				, DECODE(TOR.ST_MTHD_CD, '001', NVL(RACE2.RACE_CNT_3, '0/0'), NVL(RACE .RACE_CNT_3, '0/0')) RACE_CNT_3
				, DECODE(TOR.ST_MTHD_CD, '001', NVL(RACE2.RACE_CNT_4, '0/0'), NVL(RACE .RACE_CNT_4, '0/0')) RACE_CNT_4
				, DECODE(TOR.ST_MTHD_CD, '001', NVL(RACE2.RACE_CNT_5, '0/0'), NVL(RACE .RACE_CNT_5, '0/0')) RACE_CNT_5
				, DECODE(TOR.ST_MTHD_CD, '001', NVL(RACE2.RACE_CNT_6, '0/0'), NVL(RACE .RACE_CNT_6, '0/0')) RACE_CNT_6
				, DECODE(TOR.ST_MTHD_CD, '001', NVL(RACE2.RACE_CNT_7, '0/0'), NVL(RACE .RACE_CNT_7, '0/0')) RACE_CNT_7
				, DECODE(TOR.ST_MTHD_CD, '001', NVL(RACE2.RACE_CNT_8, '0/0'), NVL(RACE .RACE_CNT_8, '0/0')) RACE_CNT_8
				, REGNO.PRE_RACE_REG_NO
			FROM     TBEC_RACER_MASTER        TRM
			, TBEC_RACER_DETAIL        TRD
			, TBEB_ORGAN               TOR
			, TBEB_ARRANGE             TA
			, TBEC_RACER_INTERVIEW     TRI
			, (
				SELECT *
				FROM   (
				            SELECT   RANK() OVER (PARTITION BY TRRAS.RACER_NO ORDER BY APLY_DT DESC) RANK
				                   , TRRAS.*
				            FROM   TBEB_RACER_RECD_ACCU_SUM TRRAS
				            WHERE  TRRAS.APLY_DT <= (
				                                        SELECT
				                                               MAX(TRDO.RACE_DAY) RACE_DAY
				                                        FROM   TBEB_RACE_DAY_ORD TRDO
				                                        WHERE  TRDO.STND_YEAR = ?
				                                        AND    TRDO.MBR_CD    = ?
				                                        AND    TRDO.TMS       = ?
				                                    )
				            AND   MBR_CD = '000'
				            AND   TMS    = 0
				            AND   TRRAS.ST_MTHD_CD = '000' --ST방식전체설정
				       )
				WHERE  RANK = 1
			  ) TRRAS -- 선수최근성적
			, (
					SELECT *
					FROM   (
					            SELECT   RANK() OVER (PARTITION BY TRRAS.RACER_NO ORDER BY APLY_DT DESC) RANK
					                   , TRRAS.*
					            FROM   TBEB_RACER_RECD_ACCU_SUM TRRAS
					            WHERE  TRRAS.APLY_DT <= (
					                                        SELECT
					                                               MAX(TRDO.RACE_DAY) RACE_DAY
					                                        FROM   TBEB_RACE_DAY_ORD TRDO
					                                        WHERE  TRDO.STND_YEAR = ?
					                                        AND    TRDO.MBR_CD    = ?
					                                        AND    TRDO.TMS       = ?
					                                    )
					            AND   MBR_CD = '000'
					            AND   TMS    = 0
					            AND   TRRAS.ST_MTHD_CD = '001' --ST방식 온라인
					       )
					WHERE  RANK = 1
			  ) TRRAS2 -- 선수최근성적(온라인)
			, (
			   SELECT *
			   FROM   (
			             SELECT   RANK() OVER (PARTITION BY TMRAS.MOT_NO 
			                                       ORDER BY TMRAS.STND_YEAR DESC
			                                              , TMRAS.TMS DESC 
			                                  ) RANK
			                    , TMRAS.*
			             FROM   TBEB_MOT_RECD_ACCU_SUM TMRAS
			             WHERE  TMRAS.MBR_CD = ?
			             AND    TMRAS.STND_YEAR || LPAD(TMRAS.TMS, 3, '0') <= ? || LPAD(?, 3, '0')
			             AND    TMRAS.ST_MTHD_CD = '000' --ST방식전체설정		 
			          )
			   WHERE  RANK = 1
			  ) TMRAS -- 모터최근성적
			, (
					   SELECT *
					   FROM   (
					             SELECT   RANK() OVER (PARTITION BY TMRAS.MOT_NO 
					                                       ORDER BY TMRAS.STND_YEAR DESC
					                                              , TMRAS.TMS DESC 
					                                  ) RANK
					                    , TMRAS.*
					             FROM   TBEB_MOT_RECD_ACCU_SUM TMRAS
					             WHERE  TMRAS.MBR_CD = ?
					             AND    TMRAS.STND_YEAR || LPAD(TMRAS.TMS, 3, '0') <= ? || LPAD(?, 3, '0')
					             AND    TMRAS.ST_MTHD_CD = '001' --ST방식 온라인		 
					          )
					   WHERE  RANK = 1
			  ) TMRAS2 -- 모터최근성적(온라인)
			, (
			   SELECT *
			   FROM   (
			             SELECT   RANK() OVER (PARTITION BY TBRAS.BOAT_NO 
			                                       ORDER BY TBRAS.STND_YEAR DESC
			                                              , TBRAS.TMS DESC 
			                                  ) RANK
			                    , TBRAS.*
			             FROM   TBEB_BOAT_RECD_ACCU_SUM TBRAS
			             WHERE  TBRAS.MBR_CD = ?
			             AND    TBRAS.STND_YEAR || LPAD(TBRAS.TMS, 3, '0') <= ? || LPAD(?, 3, '0')
			             AND    TBRAS.ST_MTHD_CD = '000' --ST방식전체설정		 
			          )
			   WHERE  RANK = 1
			  ) TBRAS -- 보트최근성적
			, (
					   SELECT *
					   FROM   (
					             SELECT   RANK() OVER (PARTITION BY TBRAS.BOAT_NO 
					                                       ORDER BY TBRAS.STND_YEAR DESC
					                                              , TBRAS.TMS DESC 
					                                  ) RANK
					                    , TBRAS.*
					             FROM   TBEB_BOAT_RECD_ACCU_SUM TBRAS
					             WHERE  TBRAS.MBR_CD = ?
					             AND    TBRAS.STND_YEAR || LPAD(TBRAS.TMS, 3, '0') <= ? || LPAD(?, 3, '0')
					             AND    TBRAS.ST_MTHD_CD = '001' --ST방식 온라인		 
					          )
					   WHERE  RANK = 1
			  ) TBRAS2 -- 보트최근성적(온라인)
			, (
			   SELECT
			            RACER_NO
			          , MIN(DECODE(RACE, 1, RACE_NO || '/' || NVL(RANK, RACE_REG_NO))) RACE1
			          , MIN(DECODE(RACE, 2, RACE_NO || '/' || NVL(RANK, RACE_REG_NO))) RACE2
			   FROM            
			          (
			               SELECT 
			                         TOR.RACER_NO
			                       , TOR.RACE_NO
			                       , TOR.RANK
			                       , TOR.RACE_REG_NO
			                       , RANK() OVER (PARTITION BY TOR.RACER_NO ORDER BY RACE_NO DESC) RACE
			               FROM    TBEB_ORGAN TOR
			               WHERE   TOR.STND_YEAR = ?
			               AND     TOR.MBR_CD    = ?
			               AND     TOR.TMS       = ?
			               AND     TOR.DAY_ORD   = ( 
			                                           SELECT  DAY_ORD - 1
			                                           FROM    TBEB_RACE_DAY_ORD TRDO
			                                           WHERE   TRDO.STND_YEAR = ?
			                                           AND     TRDO.MBR_CD    = ?
			                                           AND     TRDO.TMS       = ?
			                                           AND     TRDO.DAY_ORD   = ?
			                                        )
			          )
			   GROUP BY RACER_NO
			) PRE -- 전일성적
			, ( 
				SELECT
			        RACER_NO 
			        , RACE_CNT_11||'/'||RACE_CNT_21 AS RACE_CNT_1
			        , RACE_CNT_12||'/'||RACE_CNT_22 AS RACE_CNT_2
			        , RACE_CNT_13||'/'||RACE_CNT_23 AS RACE_CNT_3
			        , RACE_CNT_14||'/'||RACE_CNT_24 AS RACE_CNT_4
			        , RACE_CNT_15||'/'||RACE_CNT_25 AS RACE_CNT_5
			        , RACE_CNT_16||'/'||RACE_CNT_26 AS RACE_CNT_6
			        , RACE_CNT_17||'/'||RACE_CNT_27 AS RACE_CNT_7
			        , RACE_CNT_18||'/'||RACE_CNT_28 AS RACE_CNT_8
			     FROM (
						SELECT
						         TBO.RACER_NO
							   , SUM(CASE WHEN TBO.DAY_ORD = 1 AND RACE_REG_NO = 1 THEN 1 ELSE 0 END) RACE_CNT_11
					           , SUM(CASE WHEN (TBO.DAY_ORD = 2 OR TBO.DAY_ORD = 3) AND RACE_REG_NO = 1 THEN 1 ELSE 0 END) RACE_CNT_21
					           , SUM(CASE WHEN TBO.DAY_ORD = 1 AND RACE_REG_NO = 2 THEN 1 ELSE 0 END) RACE_CNT_12
					           , SUM(CASE WHEN (TBO.DAY_ORD = 2 OR TBO.DAY_ORD = 3) AND RACE_REG_NO = 2 THEN 1 ELSE 0 END) RACE_CNT_22
					           , SUM(CASE WHEN TBO.DAY_ORD = 1 AND RACE_REG_NO = 3 THEN 1 ELSE 0 END) RACE_CNT_13
					           , SUM(CASE WHEN (TBO.DAY_ORD = 2 OR TBO.DAY_ORD = 3) AND RACE_REG_NO = 3 THEN 1 ELSE 0 END) RACE_CNT_23
					           , SUM(CASE WHEN TBO.DAY_ORD = 1 AND RACE_REG_NO = 4 THEN 1 ELSE 0 END) RACE_CNT_14
					           , SUM(CASE WHEN (TBO.DAY_ORD = 2 OR TBO.DAY_ORD = 3) AND RACE_REG_NO = 4 THEN 1 ELSE 0 END) RACE_CNT_24
					           , SUM(CASE WHEN TBO.DAY_ORD = 1 AND RACE_REG_NO = 5 THEN 1 ELSE 0 END) RACE_CNT_15
					           , SUM(CASE WHEN (TBO.DAY_ORD = 2 OR TBO.DAY_ORD = 3) AND RACE_REG_NO = 5 THEN 1 ELSE 0 END) RACE_CNT_25
					           , SUM(CASE WHEN TBO.DAY_ORD = 1 AND RACE_REG_NO = 6 THEN 1 ELSE 0 END) RACE_CNT_16
					           , SUM(CASE WHEN (TBO.DAY_ORD = 2 OR TBO.DAY_ORD = 3) AND RACE_REG_NO = 6 THEN 1 ELSE 0 END) RACE_CNT_26
					           , SUM(CASE WHEN TBO.DAY_ORD = 1 AND RACE_REG_NO = 7 THEN 1 ELSE 0 END) RACE_CNT_17
					           , SUM(CASE WHEN (TBO.DAY_ORD = 2 OR TBO.DAY_ORD = 3) AND RACE_REG_NO = 7 THEN 1 ELSE 0 END) RACE_CNT_27
					           , SUM(CASE WHEN TBO.DAY_ORD = 1 AND RACE_REG_NO = 8 THEN 1 ELSE 0 END) RACE_CNT_18
					           , SUM(CASE WHEN (TBO.DAY_ORD = 2 OR TBO.DAY_ORD = 3) AND RACE_REG_NO = 8 THEN 1 ELSE 0 END) RACE_CNT_28
						FROM   TBEB_ORGAN TBO,
			                TBEB_RACE_TMS TRT,
			                TBEB_RACE TR
						WHERE  TBO.STND_YEAR  = TR.STND_YEAR
			         AND    TBO.MBR_CD     = TR.MBR_CD
			         AND    TBO.TMS        = TR.TMS
			         AND    TBO.DAY_ORD    = TR.DAY_ORD
			         AND    TBO.RACE_NO    = TR.RACE_NO
			         AND    TR.STND_YEAR   = TRT.STND_YEAR
			         AND    TR.MBR_CD      = TRT.MBR_CD
			         AND    TR.TMS         = TRT.TMS 
			         AND    TBO.STND_YEAR  = ?
						AND    TBO.RACE_DAY  <= (
							                    SELECT
							                           TRDO.RACE_DAY
							                    FROM   TBEB_RACE_DAY_ORD TRDO
							                    WHERE  TRDO.STND_YEAR = ?
							                    AND    TRDO.MBR_CD    = ?
							                    AND    TRDO.TMS       = ?
							                    AND    TRDO.DAY_ORD   = ?
						                    )
						AND    TBO.ABSE_CD  <> '003'
			         AND    TR.RACE_DGRE_CD NOT IN (SELECT CD FROM TBEA_SPEC_CD WHERE GRP_CD = 'E00151')
			         AND    TRT.QURT_CD = (SELECT QURT_CD FROM TBEB_RACE_TMS WHERE STND_YEAR = ? AND MBR_CD = ? AND TMS = ?)
			    		AND	   TBO.DAY_ORD IN ('1','2','3') --화면 공간 때문에 1,2일차만 표현, 3일차는 2일차에 합산 
						GROUP BY TBO.RACER_NO
					)
			) RACE -- 정번별 출주수
			, ( 
					SELECT
				        RACER_NO 
				        , RACE_CNT_11||'/'||RACE_CNT_21 AS RACE_CNT_1
				        , RACE_CNT_12||'/'||RACE_CNT_22 AS RACE_CNT_2
				        , RACE_CNT_13||'/'||RACE_CNT_23 AS RACE_CNT_3
				        , RACE_CNT_14||'/'||RACE_CNT_24 AS RACE_CNT_4
				        , RACE_CNT_15||'/'||RACE_CNT_25 AS RACE_CNT_5
				        , RACE_CNT_16||'/'||RACE_CNT_26 AS RACE_CNT_6
				        , RACE_CNT_17||'/'||RACE_CNT_27 AS RACE_CNT_7
				        , RACE_CNT_18||'/'||RACE_CNT_28 AS RACE_CNT_8
				     FROM (
							SELECT
							         TBO.RACER_NO
							       , SUM(CASE WHEN TBO.DAY_ORD = 1 AND RACE_REG_NO = 1 THEN 1 ELSE 0 END) RACE_CNT_11
					               , SUM(CASE WHEN (TBO.DAY_ORD = 2 OR TBO.DAY_ORD = 3) AND RACE_REG_NO = 1 THEN 1 ELSE 0 END) RACE_CNT_21
					               , SUM(CASE WHEN TBO.DAY_ORD = 1 AND RACE_REG_NO = 2 THEN 1 ELSE 0 END) RACE_CNT_12
					               , SUM(CASE WHEN (TBO.DAY_ORD = 2 OR TBO.DAY_ORD = 3) AND RACE_REG_NO = 2 THEN 1 ELSE 0 END) RACE_CNT_22
					               , SUM(CASE WHEN TBO.DAY_ORD = 1 AND RACE_REG_NO = 3 THEN 1 ELSE 0 END) RACE_CNT_13
					               , SUM(CASE WHEN (TBO.DAY_ORD = 2 OR TBO.DAY_ORD = 3) AND RACE_REG_NO = 3 THEN 1 ELSE 0 END) RACE_CNT_23
					               , SUM(CASE WHEN TBO.DAY_ORD = 1 AND RACE_REG_NO = 4 THEN 1 ELSE 0 END) RACE_CNT_14
					               , SUM(CASE WHEN (TBO.DAY_ORD = 2 OR TBO.DAY_ORD = 3) AND RACE_REG_NO = 4 THEN 1 ELSE 0 END) RACE_CNT_24
					               , SUM(CASE WHEN TBO.DAY_ORD = 1 AND RACE_REG_NO = 5 THEN 1 ELSE 0 END) RACE_CNT_15
					               , SUM(CASE WHEN (TBO.DAY_ORD = 2 OR TBO.DAY_ORD = 3) AND RACE_REG_NO = 5 THEN 1 ELSE 0 END) RACE_CNT_25
					               , SUM(CASE WHEN TBO.DAY_ORD = 1 AND RACE_REG_NO = 6 THEN 1 ELSE 0 END) RACE_CNT_16
					               , SUM(CASE WHEN (TBO.DAY_ORD = 2 OR TBO.DAY_ORD = 3) AND RACE_REG_NO = 6 THEN 1 ELSE 0 END) RACE_CNT_26
					               , SUM(CASE WHEN TBO.DAY_ORD = 1 AND RACE_REG_NO = 7 THEN 1 ELSE 0 END) RACE_CNT_17
					               , SUM(CASE WHEN (TBO.DAY_ORD = 2 OR TBO.DAY_ORD = 3) AND RACE_REG_NO = 7 THEN 1 ELSE 0 END) RACE_CNT_27
					               , SUM(CASE WHEN TBO.DAY_ORD = 1 AND RACE_REG_NO = 8 THEN 1 ELSE 0 END) RACE_CNT_18
					               , SUM(CASE WHEN (TBO.DAY_ORD = 2 OR TBO.DAY_ORD = 3) AND RACE_REG_NO = 8 THEN 1 ELSE 0 END) RACE_CNT_28
							FROM   TBEB_ORGAN TBO,
				                TBEB_RACE_TMS TRT,
				                TBEB_RACE TR
							WHERE  TBO.STND_YEAR  = TR.STND_YEAR
				         AND    TBO.MBR_CD     = TR.MBR_CD
				         AND    TBO.TMS        = TR.TMS
				         AND    TBO.DAY_ORD    = TR.DAY_ORD
				         AND    TBO.RACE_NO    = TR.RACE_NO
				         AND    TR.STND_YEAR   = TRT.STND_YEAR
				         AND    TR.MBR_CD      = TRT.MBR_CD
				         AND    TR.TMS         = TRT.TMS 
				         AND    TBO.STND_YEAR  = ?
						 AND    TBO.RACE_DAY  <= (
								                    SELECT
								                           TRDO.RACE_DAY
								                    FROM   TBEB_RACE_DAY_ORD TRDO
								                    WHERE  TRDO.STND_YEAR = ?
								                    AND    TRDO.MBR_CD    = ?
								                    AND    TRDO.TMS       = ?
								                    AND    TRDO.DAY_ORD   = ?
							                    )
						 AND    TBO.ABSE_CD  <> '003'
				         AND    TR.RACE_DGRE_CD NOT IN (SELECT CD FROM TBEA_SPEC_CD WHERE GRP_CD = 'E00151')
				         AND    TRT.QURT_CD = (SELECT QURT_CD FROM TBEB_RACE_TMS WHERE STND_YEAR = ? AND MBR_CD = ? AND TMS = ?)
				    	 AND	TBO.DAY_ORD IN ('1','2','3') --화면 공간 때문에 1,2일차만 표현, 3일차는 2일차에 합산
				    	 AND    TBO.ST_MTHD_CD = '001' --ST방식 온라인
						 GROUP BY TBO.RACER_NO
						)
			) RACE2 -- 정번별 출주수(온라인)
			, (
				SELECT 
				         RACER_NO
				       , RACE_ALLOC_CNT
				FROM   TBEB_RACER_RACE_ALLOC
				WHERE  STND_YEAR = ?
				AND    MBR_CD    = ?
				AND    TMS       = ?				     
				AND    DAY_ORD   = ? + 1				     
			) TRRAN -- 익일 출주 배정수
			, (
				SELECT 
				         RACER_NO
				       , COUNT(*) RACE_ALLOC_CNT
				FROM   TBEB_ORGAN
				WHERE  STND_YEAR = ?
				AND    MBR_CD    = ?
				AND    TMS       = ?
				AND    DAY_ORD   = ? + 1
				GROUP BY RACER_NO
				       , DAY_ORD
			) NXT -- 익일 출주수
			, (
			   SELECT  
			            RACER_NO   
			          , SUBSTR(MAX(SYS_CONNECT_BY_PATH (RACE_REG_NO, '/')), 2) PRE_RACE_REG_NO
			   FROM   (
							SELECT 
							         RACER_NO
							       , RACE_REG_NO
			                      , RANK() OVER (PARTITION BY RACER_NO 
			                                         ORDER BY RACE_REG_NO
			                                    ) SEQ
							FROM   TBEB_ORGAN
							WHERE  STND_YEAR = ?
							AND    MBR_CD    = ?
							AND    TMS       = ?
							AND    DAY_ORD   < ? --전일에서 이전일전체로 변경 
			          )            			                         
			   START WITH SEQ = 1
			   CONNECT BY PRIOR SEQ = SEQ - 1 AND PRIOR RACER_NO = RACER_NO
			   GROUP BY RACER_NO
			) REGNO -- 전일정번
			, TBEB_CNF_INSP         TCI
			WHERE  TOR.RACER_NO  = TRM  .RACER_NO
			AND    TOR.RACER_NO  = TRD  .RACER_NO (+)
			AND    TOR.RACER_NO  = TRRAS.RACER_NO (+)
			AND    TOR.MOT_NO    = TMRAS.MOT_NO   (+)
			AND    TOR.BOAT_NO   = TBRAS.BOAT_NO  (+)
			AND    TOR.RACER_NO  = TRRAS2.RACER_NO(+)
			AND    TOR.MOT_NO    = TMRAS2.MOT_NO  (+)
			AND    TOR.BOAT_NO   = TBRAS2.BOAT_NO (+)
			AND    TOR.RACER_NO  = PRE  .RACER_NO (+)
			AND    TOR.RACER_NO  = RACE .RACER_NO (+)
			AND    TOR.RACER_NO  = RACE2.RACER_NO (+)
			AND    TOR.STND_YEAR = TRI  .STND_YEAR(+)
			AND    TOR.MBR_CD    = TRI  .MBR_CD   (+)
			AND    TOR.TMS       = TRI  .TMS      (+)
			AND    TOR.RACER_NO  = TRI  .RACER_NO (+)
			AND    TOR.RACER_NO  = TRRAN.RACER_NO (+)
			AND    TOR.RACER_NO  = NXT  .RACER_NO (+)
			AND    TOR.RACER_NO  = REGNO.RACER_NO (+)
			AND    TOR.STND_YEAR = TCI  .STND_YEAR(+)
			AND    TOR.MBR_CD    = TCI  .MBR_CD   (+)
			AND    TOR.TMS       = TCI  .TMS      (+)
			AND    TOR.RACER_NO  = TCI  .RACER_NO (+)
			AND    TOR.STND_YEAR = TA   .STND_YEAR(+)
			AND    TOR.MBR_CD    = TA   .MBR_CD   (+)
			AND    TOR.TMS       = TA   .TMS      (+)
			AND    TOR.RACER_NO  = TA   .RACER_NO (+)
			AND    TOR.STND_YEAR = ?
			AND    TOR.MBR_CD    = ?
			AND    TOR.TMS       = ?
			AND    TOR.DAY_ORD   = ?
			AND    TOR.RACE_NO   = NVL(?, TOR.RACE_NO)
			ORDER BY 
			  TOR.STND_YEAR
			, TOR.MBR_CD   
			, TOR.TMS      
			, TOR.DAY_ORD  
			, TOR.RACE_NO  
			, TOR.RACE_REG_NO    
		]]>
    </query> 
    <query id="tbeb_organ_fb005" desc="조회" fetchSize="10">
        <![CDATA[
			SELECT /* tbeb_organ_fb005 */
			         TOR .STND_YEAR
			       , TOR .MBR_CD
			       , TOR .TMS
			       , TOR .DAY_ORD
			       , TOR .RACE_NO
			       , DECODE(TR.RACE_STTS_CD, '002', '불성립', '003', '불성립', '001', DECODE(TOR.ABSE_CD, '002', '결장', '003', '면책결장', '001', DECODE(TOR.IMMT_CLS_CD, '003', (SELECT CD_NM FROM TBEA_SPEC_CD WHERE GRP_CD = 'E00113' AND CD = TOR.IMMT_CLS_CD), TO_CHAR(NVL(TOR.RANK,0))), (SELECT CD_NM FROM TBEA_SPEC_CD WHERE GRP_CD = 'E00110' AND CD = TOR.ABSE_CD))) RANK
			       , TRS .RACE_SCR
			       , NVL(TRVA.ACDNT_SCR, 0) ACDNT_SCR
			FROM     TBEB_ORGAN         TOR
			       , TBEB_RACE          TR
			       , TBEB_RACE_DAY_ORD  TRDO
			       , TBEB_RANK_SCR      TRS
			       , (
                        SELECT
			                     TRVA.STND_YEAR
			                   , TRVA.MBR_CD
			                   , TRVA.TMS
			                   , TRVA.DAY_ORD
			                   , TRVA.RACE_NO
			                   , TRVA.RACE_REG_NO
			                   , NVL(TRVB.ACDNT_SCR, TRVA.ACDNT_SCR) ACDNT_SCR
                        FROM     (
            			            SELECT
            			                     TRVA.STND_YEAR
            			                   , TRVA.MBR_CD
            			                   , TRVA.TMS
            			                   , TRVA.DAY_ORD
            			                   , TRVA.RACE_NO
            			                   , TRVA.RACE_REG_NO
            			                   , SUM(TAS.ACDNT_SCR) ACDNT_SCR
            			            FROM     TBED_RACE_VOIL_ACT TRVA
            			                   , TBEB_ACDNT_SCR     TAS
            			                   , TBEB_ORGAN         TOR
            			            WHERE  TRVA.STND_YEAR    = TAS.STND_YEAR
            			            AND    TRVA.VOIL_CD      = TAS.VOIL_CD
            			            AND    TRVA.STND_YEAR    = TOR.STND_YEAR  
            			            AND    TRVA.MBR_CD       = TOR.MBR_CD     
            			            AND    TRVA.TMS          = TOR.TMS        
            			            AND    TRVA.DAY_ORD      = TOR.DAY_ORD    
            			            AND    TRVA.RACE_NO      = TOR.RACE_NO    
            			            AND    TRVA.RACE_REG_NO  = TOR.RACE_REG_NO
            			            AND    TOR.ABSE_CD      <> '003'
            			            AND    TOR.IMMT_CLS_CD  <> '003'
            			            AND    TRVA.STND_YEAR   IN (?, ? - 1)
            			            AND    TRVA.RACE_DAY    <= (
            			                                            SELECT
            			                                                   MAX(TRDO.RACE_DAY) RACE_DAY
            			                                            FROM   TBEB_RACE_DAY_ORD TRDO
            			                                            WHERE  TRDO.STND_YEAR = ?
            			                                            AND    TRDO.MBR_CD    = ?
            			                                            AND    TRDO.TMS       = ?
            			                                       )
            			            AND    TOR.ST_MTHD_CD = (
            			            		CASE WHEN ? = '000' THEN TOR.ST_MTHD_CD
            			            		ELSE ? END 
            			            	   )
            			            GROUP BY
            			                     TRVA.STND_YEAR
            			                   , TRVA.MBR_CD
            			                   , TRVA.TMS
            			                   , TRVA.DAY_ORD
            			                   , TRVA.RACE_NO
            			                   , TRVA.RACE_REG_NO
			                     ) TRVA -- 사고점 조회
			                   , (
            			            SELECT
            			                     TRVA.STND_YEAR
            			                   , TRVA.MBR_CD
            			                   , TRVA.TMS
            			                   , TRVA.DAY_ORD
            			                   , TRVA.RACE_NO
            			                   , TRVA.RACE_REG_NO
            			                   , TAS .ACDNT_SCR
            			            FROM     TBED_RACE_VOIL_ACT TRVA
            			                   , TBEB_ACDNT_SCR     TAS
            			                   , TBEB_ORGAN         TOR
            			            WHERE  TRVA.STND_YEAR    = TAS.STND_YEAR
            			            AND    TRVA.VOIL_CD      = TAS.VOIL_CD
            			            AND    TRVA.STND_YEAR    = TOR.STND_YEAR  
            			            AND    TRVA.MBR_CD       = TOR.MBR_CD     
            			            AND    TRVA.TMS          = TOR.TMS        
            			            AND    TRVA.DAY_ORD      = TOR.DAY_ORD    
            			            AND    TRVA.RACE_NO      = TOR.RACE_NO    
            			            AND    TRVA.RACE_REG_NO  = TOR.RACE_REG_NO
            			            AND    TOR.ABSE_CD      <> '003'
            			            AND    TOR.IMMT_CLS_CD  <> '003'
            			            AND    TRVA.STND_YEAR   IN (?, ? - 1)
            			            AND    TRVA.RACE_DAY    <= (
            			                                            SELECT
            			                                                   MAX(TRDO.RACE_DAY) RACE_DAY
            			                                            FROM   TBEB_RACE_DAY_ORD TRDO
            			                                            WHERE  TRDO.STND_YEAR = ?
            			                                            AND    TRDO.MBR_CD    = ?
            			                                            AND    TRDO.TMS       = ?
            			                                       )
            			            AND   TRVA.VOIL_CD      IN ('110', '120')
            			            AND   TOR.ST_MTHD_CD = (
            			            		CASE WHEN ? = '000' THEN TOR.ST_MTHD_CD
            			            		ELSE ? END 
            			            	  )
                                 ) TRVB
                        WHERE  TRVA.STND_YEAR   = TRVB.STND_YEAR  (+)
			            AND    TRVA.MBR_CD      = TRVB.MBR_CD     (+)
			            AND    TRVA.TMS         = TRVB.TMS        (+)
			            AND    TRVA.DAY_ORD     = TRVB.DAY_ORD    (+)
			            AND    TRVA.RACE_NO     = TRVB.RACE_NO    (+)
			            AND    TRVA.RACE_REG_NO = TRVB.RACE_REG_NO(+)
			         ) TRVA -- F,L 사고점 조회
			WHERE  TOR .STND_YEAR    = TR  .STND_YEAR
			AND    TOR .MBR_CD       = TR  .MBR_CD
			AND    TOR .TMS          = TR  .TMS
			AND    TOR .DAY_ORD      = TR  .DAY_ORD
			AND    TOR .RACE_NO      = TR  .RACE_NO
			AND    TOR .STND_YEAR    = TRDO.STND_YEAR
			AND    TOR .MBR_CD       = TRDO.MBR_CD
			AND    TOR .TMS          = TRDO.TMS
			AND    TOR .DAY_ORD      = TRDO.DAY_ORD
			AND    TRDO.ORGAN_STAT_CD = '002' 
			AND    TR  .STND_YEAR    = TRS .STND_YEAR
			AND    TR  .RACE_DGRE_CD = TRS .RACE_DGRE_CD
			AND    nvl(TOR .RANK,0)         = TRS .RANK
			AND    TOR .STND_YEAR    = TRVA.STND_YEAR  (+)
			AND    TOR .MBR_CD       = TRVA.MBR_CD     (+)
			AND    TOR .TMS          = TRVA.TMS        (+)
			AND    TOR .DAY_ORD      = TRVA.DAY_ORD    (+)
			AND    TOR .RACE_NO      = TRVA.RACE_NO    (+)
			AND    TOR .RACE_REG_NO  = TRVA.RACE_REG_NO(+)
			AND    TOR .STND_YEAR   IN (?, ? - 1)
			AND    TOR .RACE_DAY    <= (
			                                SELECT
			                                       MAX(TRDO.RACE_DAY) RACE_DAY
			                                FROM   TBEB_RACE_DAY_ORD TRDO
			                                WHERE  TRDO.STND_YEAR = ?
			                                AND    TRDO.MBR_CD    = ?
			                                AND    TRDO.TMS       = ?
			                           )
			AND    TOR.RACER_NO      = NVL(?, TOR.RACER_NO)
			AND    TOR.MOT_NO        = NVL(?, TOR.MOT_NO  )
			AND    TOR.BOAT_NO       = NVL(?, TOR.BOAT_NO )
			AND    TOR.ST_MTHD_CD = (
					CASE WHEN ? = '000' THEN TOR.ST_MTHD_CD
            		ELSE ? END 
            	   )
            ORDER BY
                       TOR.RACE_DAY  DESC
                     , TOR.RACE_NO   DESC
		]]>
    </query>
    <query id="tbeb_organ_fb006" desc="모터별 소개항주 타임 조회" fetchSize="10">
        <![CDATA[
			SELECT  /* tbeb_organ_fb006  모터별 소개항주 타임 조회 */
			         TOR.STND_YEAR
			       , TOR.MBR_CD
			       , TOR.TMS
			       , TOR.MOT_NO
			       , TRIM(TO_CHAR(AVG(TOR.INTRO_RUN_TM), 90.99)) INTRO_RUN_TM
			FROM   TBEB_ORGAN TOR
			WHERE  TOR.STND_YEAR     = ?
			AND    TOR.MBR_CD        = ?
			AND    TOR.TMS          <= ?
			GROUP BY 
			         TOR.STND_YEAR
			       , TOR.MBR_CD
			       , TOR.TMS
			       , TOR.MOT_NO
		]]>
    </query> 
    <query id="tbeb_organ_fb007" desc="출주표성적조회" fetchSize="10">
        <![CDATA[
            SELECT  /*  tbeb_organ_fb007 출주표성적조회  */
	                 TOR  .STND_YEAR
	               , TOR  .MBR_CD
	               , TOR  .TMS
	               , TOR  .DAY_ORD
	               , TOR  .RACE_NO
	               , TOR  .ST_MTHD_CD
	               , TOR  .RACE_REG_NO
	               , ( SELECT CD_NM FROM TBEA_SPEC_CD WHERE GRP_CD = 'E00009' AND CD = TOR.RACE_REG_NO ) RACE_REG_COLOR
			       , TOR  .RACER_NO ORG_RACER_NO                                            -- 선수등록번호
			       , ''    RACER_RSN                                                        -- 선수변경사유
			       , TOR  .RACER_NO                                                         -- 선수등록번호
			       , TOR  .RACER_GRD_CD                                                 	-- 선수등급, 2013.1.18 출주표 등급추가
			       , TOR  .MOT_NO ORG_MOT_NO                                                -- 모터번호
			       , ''    MOT_RSN                                                          -- 모터변경사유
			       , TOR  .MOT_NO                                                           -- 모터번호
			       , SUBSTR(TOR  .MOT_NO, 6, 3) VIEW_MOT_NO                                 -- 모터번호    
			       , TOR  .BOAT_NO ORG_BOAT_NO                                              -- 보트번호
			       , ''    BOAT_RSN                                                         -- 보트변경사유
			       , TOR  .BOAT_NO                                                          -- 보트번호
			       , SUBSTR(TOR  .BOAT_NO, 6, 3) VIEW_BOAT_NO                               -- 보트번호    
                   , DECODE(SUBSTR(GET_DEC(TRD  .RES_NO), 7, 1), 2, '여', 4, '여','남') RACER_SEX     --성별
			       , TOR  .ABSE_CD                           
			       , TCI  .SPEC_INFO RMK                           
			       , TOR  .RACER_GRD_CD
			       , TRM  .NM_KOR
			       , TRM  .RACER_STAT_CD
			       , TRM  .FAVOR_COURSE_CD
			       , TRM  .EMAIL_ADDR
			       , TRM  .RACER_PERIO_NO
			       , TRD  .NATV_PLAC_CD
			       , TRD  .NATY_UNIV
			       , ROUND(NVL(TRI.ENTRY_BODY_WGHT, TRD  .WGHT)) ENTRY_BODY_WGHT
--			       , ROUND(TRI.ENTRY_BODY_WGHT) ENTRY_BODY_WGHT
			       , TRI  .ETC
			       , TOR  .STND_YEAR - SUBSTR(TRD  .BIRTH_DT, 1, 4) AGE
			       , 1 RACE_ALLOC_CNT

			       , DECODE(  TOR.ST_MTHD_CD, '001'
			    		    , TRIM(TO_CHAR((NVL(TRRAS2.TMS_6_AVG_RANK_SCR, 0) * 0.7) + (NVL(TMRAS.AVG_RANK_SCR, 0) * 0.25) + (NVL(TBRAS.AVG_RANK_SCR, 0) * 0.05), '99.99'))
			    		    , TRIM(TO_CHAR((NVL(TRRAS.TMS_6_AVG_RANK_SCR, 0) * 0.7)  + (NVL(TMRAS.AVG_RANK_SCR, 0) * 0.25)  + (NVL(TBRAS.AVG_RANK_SCR, 0) * 0.05), '99.99'))		
			    		   ) SCR
    		       , DECODE(  TOR.ST_MTHD_CD, '001'	    
			                , RANK() OVER (ORDER BY TRIM(TO_CHAR((NVL(TRRAS2.TMS_6_AVG_RANK_SCR, 0) * 0.7) + (NVL(TMRAS.AVG_RANK_SCR, 0) * 0.25) + (NVL(TBRAS.AVG_RANK_SCR, 0) * 0.05), '99.99')) DESC) 
		                    , RANK() OVER (ORDER BY TRIM(TO_CHAR((NVL(TRRAS.TMS_6_AVG_RANK_SCR, 0) * 0.7)  + (NVL(TMRAS.AVG_RANK_SCR, 0) * 0.25)  + (NVL(TBRAS.AVG_RANK_SCR, 0) * 0.05),  '99.99')) DESC)
			               ) RANK
		           , DECODE(  TOR.ST_MTHD_CD, '001'	             
			                , DECODE(TRST.QURT_CD, '001', 'F' || NVL(TRRAS2.BF_F_CNT, 0) || 'L' || NVL(TRRAS2.BF_L_CNT, 0), '002', 'F' || NVL(TRRAS2.AF_F_CNT, 0) || 'L' || NVL(TRRAS2.AF_L_CNT, 0))
			                , DECODE(TRST.QURT_CD, '001', 'F' || NVL(TRRAS.BF_F_CNT, 0)  || 'L' || NVL(TRRAS.BF_L_CNT, 0), '002', 'F'  || NVL(TRRAS.AF_F_CNT, 0)  || 'L' || NVL(TRRAS.AF_L_CNT,  0))
			               ) FL_CNT -- 성적반영분기코드에따라 전반기/후반기 구분
			       , DECODE(  TOR.ST_MTHD_CD, '001'
			                , NVL(DECODE(TRST.QURT_CD, '001', TRRAS2.BF_AVG_ACDNT_SCR, '002', TRRAS2.AF_AVG_ACDNT_SCR), 0)
			                , NVL(DECODE(TRST.QURT_CD, '001', TRRAS.BF_AVG_ACDNT_SCR, '002',  TRRAS.AF_AVG_ACDNT_SCR), 0)
			               ) AVG_ACDNT_SCR -- 성적반영분기코드에따라 전반기/후반기 구분
                   
                   , DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.RACER_RANK                     , TRRAS.RACER_RANK                     )    TRRAS_RACER_RANK
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.TMS_6_AMU_RANK_SCR     , 0), NVL(TRRAS.TMS_6_AMU_RANK_SCR     , 0))    TRRAS_TMS_6_AMU_RANK_SCR
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.TMS_6_AVG_RANK_SCR     , 0), NVL(TRRAS.TMS_6_AVG_RANK_SCR     , 0))    TRRAS_TMS_6_AVG_RANK_SCR
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.TMS_6_AMU_ACDNT_SCR    , 0), NVL(TRRAS.TMS_6_AMU_ACDNT_SCR    , 0))    TRRAS_TMS_6_AMU_ACDNT_SCR
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.TMS_6_AVG_ACDNT_SCR    , 0), NVL(TRRAS.TMS_6_AVG_ACDNT_SCR    , 0))    TRRAS_TMS_6_AVG_ACDNT_SCR
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.TMS_6_AVG_SCR          , 0), NVL(TRRAS.TMS_6_AVG_SCR          , 0))    TRRAS_TMS_6_AVG_SCR
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.TMS_6_WIN_RATIO        , 0), NVL(TRRAS.TMS_6_WIN_RATIO        , 0))    TRRAS_TMS_6_WIN_RATIO
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.TMS_6_HIGH_RANK_RATIO  , 0), NVL(TRRAS.TMS_6_HIGH_RANK_RATIO  , 0))    TRRAS_TMS_6_HIGH_RANK_RATIO
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.TMS_6_HIGH_3_RANK_RATIO, 0), NVL(TRRAS.TMS_6_HIGH_3_RANK_RATIO, 0))    TRRAS_TMS_6_HIGH_3_RANK_RATIO
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.TMS_6_AVG_STRT_TM      , 0), NVL(TRRAS.TMS_6_AVG_STRT_TM      , 0))    TRRAS_TMS_6_AVG_STRT_TM
                   , DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.TMS_8_RANK_ORD                 , TRRAS.TMS_8_RANK_ORD                 )    TRRAS_TMS_8_RANK_ORD
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.TMS_6_RACE_CNT         , 0), NVL(TRRAS.TMS_6_RACE_CNT         , 0))    TRRAS_TMS_6_RACE_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.TMS_6_RANK_1           , 0), NVL(TRRAS.TMS_6_RANK_1           , 0))    TRRAS_TMS_6_RANK_1
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.TMS_6_RANK_2           , 0), NVL(TRRAS.TMS_6_RANK_2           , 0))    TRRAS_TMS_6_RANK_2
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.TMS_6_RANK_3           , 0), NVL(TRRAS.TMS_6_RANK_3           , 0))    TRRAS_TMS_6_RANK_3
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.AMU_RANK_SCR           , 0), NVL(TRRAS.AMU_RANK_SCR           , 0))    TRRAS_AMU_RANK_SCR
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.AVG_RANK_SCR           , 0), NVL(TRRAS.AVG_RANK_SCR           , 0))    TRRAS_AVG_RANK_SCR
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.AMU_ACDNT_SCR          , 0), NVL(TRRAS.AMU_ACDNT_SCR          , 0))    TRRAS_AMU_ACDNT_SCR
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.AVG_ACDNT_SCR          , 0), NVL(TRRAS.AVG_ACDNT_SCR          , 0))    TRRAS_AVG_ACDNT_SCR
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.BF_AMU_ACDNT_SCR       , 0), NVL(TRRAS.BF_AMU_ACDNT_SCR       , 0))    TRRAS_BF_AMU_ACDNT_SCR
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.BF_AVG_ACDNT_SCR       , 0), NVL(TRRAS.BF_AVG_ACDNT_SCR       , 0))    TRRAS_BF_AVG_ACDNT_SCR
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.AF_AMU_ACDNT_SCR       , 0), NVL(TRRAS.AF_AMU_ACDNT_SCR       , 0))    TRRAS_AF_AMU_ACDNT_SCR
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.AF_AVG_ACDNT_SCR       , 0), NVL(TRRAS.AF_AVG_ACDNT_SCR       , 0))    TRRAS_AF_AVG_ACDNT_SCR
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.AVG_SCR                , 0), NVL(TRRAS.AVG_SCR                , 0))    TRRAS_AVG_SCR
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.WIN_RATIO              , 0), NVL(TRRAS.WIN_RATIO              , 0))    TRRAS_WIN_RATIO
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.HIGH_RANK_RATIO        , 0), NVL(TRRAS.HIGH_RANK_RATIO        , 0))    TRRAS_HIGH_RANK_RATIO
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.HIGH_3_RANK_RATIO      , 0), NVL(TRRAS.HIGH_3_RANK_RATIO      , 0))    TRRAS_HIGH_3_RANK_RATIO
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.AVG_STRT_TM            , 0), NVL(TRRAS.AVG_STRT_TM            , 0))    TRRAS_AVG_STRT_TM
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.RUN_CNT                , 0), NVL(TRRAS.RUN_CNT                , 0))    TRRAS_RUN_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.RACE_DAY_CNT           , 0), NVL(TRRAS.RACE_DAY_CNT           , 0))    TRRAS_RACE_DAY_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.RACE_CNT               , 0), NVL(TRRAS.RACE_CNT               , 0))    TRRAS_RACE_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.TOT_RACE_CNT           , 0), NVL(TRRAS.TOT_RACE_CNT           , 0))    TRRAS_TOT_RACE_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.BF_RACE_CNT            , 0), NVL(TRRAS.BF_RACE_CNT            , 0))    TRRAS_BF_RACE_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.AF_RACE_CNT            , 0), NVL(TRRAS.AF_RACE_CNT            , 0))    TRRAS_AF_RACE_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.RANK_1_CNT             , 0), NVL(TRRAS.RANK_1_CNT             , 0))    TRRAS_RANK_1_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.RANK_2_CNT             , 0), NVL(TRRAS.RANK_2_CNT             , 0))    TRRAS_RANK_2_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.RANK_3_CNT             , 0), NVL(TRRAS.RANK_3_CNT             , 0))    TRRAS_RANK_3_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.RANK_4_CNT             , 0), NVL(TRRAS.RANK_4_CNT             , 0))    TRRAS_RANK_4_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.RANK_5_CNT             , 0), NVL(TRRAS.RANK_5_CNT             , 0))    TRRAS_RANK_5_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.RANK_6_CNT             , 0), NVL(TRRAS.RANK_6_CNT             , 0))    TRRAS_RANK_6_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.RANK_7_CNT             , 0), NVL(TRRAS.RANK_7_CNT             , 0))    TRRAS_RANK_7_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.RANK_8_CNT             , 0), NVL(TRRAS.RANK_8_CNT             , 0))    TRRAS_RANK_8_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.RANK_ETC_CNT           , 0), NVL(TRRAS.RANK_ETC_CNT           , 0))    TRRAS_RANK_ETC_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.DGRE_JUDG_F_CNT        , 0), NVL(TRRAS.DGRE_JUDG_F_CNT        , 0))    TRRAS_DGRE_JUDG_F_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.DGRE_JUDG_L_CNT        , 0), NVL(TRRAS.DGRE_JUDG_L_CNT        , 0))    TRRAS_DGRE_JUDG_L_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.BF_F_CNT               , 0), NVL(TRRAS.BF_F_CNT               , 0))    TRRAS_BF_F_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.AF_F_CNT               , 0), NVL(TRRAS.AF_F_CNT               , 0))    TRRAS_AF_F_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.BF_L_CNT               , 0), NVL(TRRAS.BF_L_CNT               , 0))    TRRAS_BF_L_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.AF_L_CNT               , 0), NVL(TRRAS.AF_L_CNT               , 0))    TRRAS_AF_L_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.ABSE_CNT               , 0), NVL(TRRAS.ABSE_CNT               , 0))    TRRAS_ABSE_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.RACE_ESC_1_CNT         , 0), NVL(TRRAS.RACE_ESC_1_CNT         , 0))    TRRAS_RACE_ESC_1_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.RACE_ESC_2_CNT         , 0), NVL(TRRAS.RACE_ESC_2_CNT         , 0))    TRRAS_RACE_ESC_2_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.FOUL_ELIM_CNT          , 0), NVL(TRRAS.FOUL_ELIM_CNT          , 0))    TRRAS_FOUL_ELIM_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.ELIM_CNT               , 0), NVL(TRRAS.ELIM_CNT               , 0))    TRRAS_ELIM_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.FOUL_WARN_CNT          , 0), NVL(TRRAS.FOUL_WARN_CNT          , 0))    TRRAS_FOUL_WARN_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.WARN_CNT               , 0), NVL(TRRAS.WARN_CNT               , 0))    TRRAS_WARN_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.ATTEN_CNT              , 0), NVL(TRRAS.ATTEN_CNT              , 0))    TRRAS_ATTEN_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.BF_TMS                         , TRRAS.BF_TMS                         )    TRRAS_BF_TMS
                   , DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.BF_BF_TMS                      , TRRAS.BF_BF_TMS                      )    TRRAS_BF_BF_TMS
                   , DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.BF_BF_BF_TMS                   , TRRAS.BF_BF_BF_TMS                   )    TRRAS_BF_BF_BF_TMS
                   , DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.BF_MBR_CD                      , TRRAS.BF_MBR_CD                      )    TRRAS_BF_MBR_CD
                   , DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.BF_BF_MBR_CD                   , TRRAS.BF_BF_MBR_CD                   )    TRRAS_BF_BF_MBR_CD
                   , DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.BF_BF_BF_MBR_CD                , TRRAS.BF_BF_BF_MBR_CD                )    TRRAS_BF_BF_BF_MBR_CD
                   
                   , NVL(TMRAS.RUN_CNT                , 0)    TMRAS_RUN_CNT
                   , NVL(TMRAS.RACE_CNT               , 0)    TMRAS_RACE_CNT
                   , NVL(TMRAS.RACE_DAY_CNT           , 0)    TMRAS_RACE_DAY_CNT
                   , NVL(TMRAS.RANK_1_CNT             , 0)    TMRAS_RANK_1_CNT
                   , NVL(TMRAS.RANK_2_CNT             , 0)    TMRAS_RANK_2_CNT
                   , NVL(TMRAS.RANK_3_CNT             , 0)    TMRAS_RANK_3_CNT
                   , NVL(TMRAS.RANK_4_CNT             , 0)    TMRAS_RANK_4_CNT
                   , NVL(TMRAS.RANK_5_CNT             , 0)    TMRAS_RANK_5_CNT
                   , NVL(TMRAS.RANK_6_CNT             , 0)    TMRAS_RANK_6_CNT
                   , NVL(TMRAS.RANK_7_CNT             , 0)    TMRAS_RANK_7_CNT
                   , NVL(TMRAS.RANK_8_CNT             , 0)    TMRAS_RANK_8_CNT
                   , NVL(TMRAS.AMU_RANK_SCR           , 0)    TMRAS_AMU_RANK_SCR
                   , NVL(TMRAS.AVG_RANK_SCR           , 0)    TMRAS_AVG_RANK_SCR
                   , NVL(TMRAS.WIN_RATIO              , 0)    TMRAS_WIN_RATIO
                   , NVL(TMRAS.HIGH_RANK_RATIO        , 0)    TMRAS_HIGH_RANK_RATIO
                   , NVL(TMRAS.HIGH_3_RANK_RATIO      , 0)    TMRAS_HIGH_3_RANK_RATIO
                   , TMRAS.TMS_3_ITRDT_RUN_TM                 TMRAS_TMS_3_ITRDT_RUN_TM
                   , TMRAS.AVG_ITRDT_RUN_TM                   TMRAS_AVG_ITRDT_RUN_TM
                   , TMRAS.MAX_ITRDT_RUN_TM                   TMRAS_MAX_ITRDT_RUN_TM
                   , TMRAS.MIN_ITRDT_RUN_TM                   TMRAS_MIN_ITRDT_RUN_TM
                   , TMRAS.ITRDT_RUN_TM_DVTN                  TMRAS_ITRDT_RUN_TM_DVTN
                   , NVL(TBRAS.RUN_CNT                , 0)    TBRAS_RUN_CNT
                   , NVL(TBRAS.RACE_CNT               , 0)    TBRAS_RACE_CNT
                   , NVL(TBRAS.RACE_DAY_CNT           , 0)    TBRAS_RACE_DAY_CNT
                   , NVL(TBRAS.RANK_1_CNT             , 0)    TBRAS_RANK_1_CNT
                   , NVL(TBRAS.RANK_2_CNT             , 0)    TBRAS_RANK_2_CNT
                   , NVL(TBRAS.RANK_3_CNT             , 0)    TBRAS_RANK_3_CNT
                   , NVL(TBRAS.RANK_4_CNT             , 0)    TBRAS_RANK_4_CNT
                   , NVL(TBRAS.RANK_5_CNT             , 0)    TBRAS_RANK_5_CNT
                   , NVL(TBRAS.RANK_6_CNT             , 0)    TBRAS_RANK_6_CNT
                   , NVL(TBRAS.RANK_7_CNT             , 0)    TBRAS_RANK_7_CNT
                   , NVL(TBRAS.RANK_8_CNT             , 0)    TBRAS_RANK_8_CNT
                   , NVL(TBRAS.AMU_RANK_SCR           , 0)    TBRAS_AMU_RANK_SCR
                   , NVL(TBRAS.AVG_RANK_SCR           , 0)    TBRAS_AVG_RANK_SCR
                   , NVL(TBRAS.WIN_RATIO              , 0)    TBRAS_WIN_RATIO
                   , NVL(TBRAS.HIGH_RANK_RATIO        , 0)    TBRAS_HIGH_RANK_RATIO
                   , NVL(TBRAS.HIGH_3_RANK_RATIO      , 0)    TBRAS_HIGH_3_RANK_RATIO
                   , TBRAS.TMS_3_ITRDT_RUN_TM                 TBRAS_TMS_3_ITRDT_RUN_TM
                   , TBRAS.AVG_ITRDT_RUN_TM                   TBRAS_AVG_ITRDT_RUN_TM
                   , TBRAS.MAX_ITRDT_RUN_TM                   TBRAS_MAX_ITRDT_RUN_TM
                   , TBRAS.MIN_ITRDT_RUN_TM                   TBRAS_MIN_ITRDT_RUN_TM
                   , TBRAS.ITRDT_RUN_TM_DVTN                  TBRAS_ITRDT_RUN_TM_DVTN
                   
                   , NVL(MON_6.MON_6_HIGH_RANK_RATIO, '0.0')  MON_6_HIGH_RANK_RATIO
                   , NVL(MON_6.MON_6_RACE_CNT, 0)             MON_6_RACE_CNT
                   , NVL(MON_6.MON_6_RACE_REG_NO_1, '00.0/0')  MON_6_RACE_REG_NO_1
                   , NVL(MON_6.MON_6_RACE_REG_NO_2, '00.0/0')  MON_6_RACE_REG_NO_2
                   , NVL(MON_6.MON_6_RACE_REG_NO_3, '00.0/0')  MON_6_RACE_REG_NO_3
                   , NVL(MON_6.MON_6_RACE_REG_NO_4, '00.0/0')  MON_6_RACE_REG_NO_4
                   , NVL(MON_6.MON_6_RACE_REG_NO_5, '00.0/0')  MON_6_RACE_REG_NO_5
                   , NVL(MON_6.MON_6_RACE_REG_NO_6, '00.0/0')  MON_6_RACE_REG_NO_6
                   , NVL(MON_6.MON_6_RACE_REG_NO_7, '00.0/0')  MON_6_RACE_REG_NO_7
                   , NVL(MON_6.MON_6_RACE_REG_NO_8, '00.0/0')  MON_6_RACE_REG_NO_8
                   , MPR  .MOT_PRE_RECE1
                   , MPR  .MOT_PRE_RECE2
                   , DECODE(TRDO.ORGAN_STAT_CD, '002', PRE  .PRE_RACE) PRE_RACE
			       , (
                        SELECT 
                                DECODE(TR.RACE_DGRE_CD, '501', '특', '701', '특', '702', '특', '')||TODAY.RACE_NO RACE_NO
                        FROM    TBEB_ORGAN TODAY
                              , TBEB_RACE    TR
                              , TBEA_SPEC_CD TSC
                        WHERE   TODAY.STND_YEAR   = TOR.STND_YEAR  
                        AND     TODAY.MBR_CD      = TOR.MBR_CD     
                        AND     TODAY.TMS         = TOR.TMS        
                        AND     TODAY.DAY_ORD     = TOR.DAY_ORD    
                        AND     TODAY.RACE_NO    <> TOR.RACE_NO    
                        AND     TODAY.RACER_NO    = TOR.RACER_NO   
                        AND     TODAY.STND_YEAR   = TR.STND_YEAR
                        AND     TODAY.MBR_CD      = TR.MBR_CD
                        AND     TODAY.TMS         = TR.TMS
                        AND     TODAY.DAY_ORD     = TR.DAY_ORD
                        AND     TODAY.RACE_NO     = TR.RACE_NO
                        AND     TSC.CD            = TR.RACE_DGRE_CD
                        AND     TSC.GRP_CD        = 'E00005'
                     ) ETC_RACE  
			FROM     TBEB_RACE_TMS            TRT
		           , TBEB_RACE_DAY_ORD        TRDO
			       , TBEC_RACER_MASTER        TRM
			       , TBEC_RACER_DETAIL        TRD
			       , TBEB_ORGAN               TOR
                   , TBEC_RACER_INTERVIEW     TRI
			       , (
						SELECT *
						FROM   (
						            SELECT   RANK() OVER (PARTITION BY TRRAS.RACER_NO ORDER BY APLY_DT DESC) RANK
						                   , TRRAS.*
						            FROM   TBEB_RACER_RECD_ACCU_SUM TRRAS
						            WHERE  TRRAS.APLY_DT  < (
						                                        SELECT
						                                               MIN(TRDO.RACE_DAY) RACE_DAY
						                                        FROM   TBEB_RACE_DAY_ORD TRDO
						                                        WHERE  TRDO.STND_YEAR = ?
						                                        AND    TRDO.MBR_CD    = ?
						                                        AND    TRDO.TMS       = ?
						                                    )
						            AND   MBR_CD = '000'
						            AND   TMS    = 0
						            AND   TRRAS.ST_MTHD_CD = '000' --ST방식전체설정
						       )
						WHERE  RANK = 1
			         ) TRRAS -- 선수최근성적
			       , (
							SELECT *
							FROM   (
							            SELECT   RANK() OVER (PARTITION BY TRRAS.RACER_NO ORDER BY APLY_DT DESC) RANK
							                   , TRRAS.*
							            FROM   TBEB_RACER_RECD_ACCU_SUM TRRAS
							            WHERE  TRRAS.APLY_DT  < (
							                                        SELECT
							                                               MIN(TRDO.RACE_DAY) RACE_DAY
							                                        FROM   TBEB_RACE_DAY_ORD TRDO
							                                        WHERE  TRDO.STND_YEAR = ?
							                                        AND    TRDO.MBR_CD    = ?
							                                        AND    TRDO.TMS       = ?
							                                    )
							            AND   MBR_CD = '000'
							            AND   TMS    = 0
							            AND   TRRAS.ST_MTHD_CD = '001' --ST방식 온라인
							       )
							WHERE  RANK = 1
				     ) TRRAS2 -- 선수최근성적(온라인)
			       , (
			            SELECT *
			            FROM   (
                                  SELECT   RANK() OVER (PARTITION BY TMRAS.MOT_NO 
                                                            ORDER BY TMRAS.STND_YEAR DESC
                                                                   , TMRAS.TMS DESC 
                                                       ) RANK
                                         , TMRAS.*
                                  FROM   TBEB_MOT_RECD_ACCU_SUM TMRAS
                                  WHERE  TMRAS.MBR_CD = ?
                                  AND    TMRAS.STND_YEAR || LPAD(TMRAS.TMS, 3, '0') < ? || LPAD(?, 3, '0')
                                  AND    TMRAS.ST_MTHD_CD = '000' --ST방식전체설정
			                   )
			            WHERE  RANK = 1
			         ) TMRAS -- 모터최근성적
			       , (
			            SELECT *
			            FROM   (
                                  SELECT   RANK() OVER (PARTITION BY TBRAS.BOAT_NO 
                                                            ORDER BY TBRAS.STND_YEAR DESC
                                                                   , TBRAS.TMS DESC 
                                                       ) RANK
                                         , TBRAS.*
                                  FROM   TBEB_BOAT_RECD_ACCU_SUM TBRAS
                                  WHERE  TBRAS.MBR_CD = ?
                                  AND    TBRAS.STND_YEAR || LPAD(TBRAS.TMS, 3, '0') < ? || LPAD(?, 3, '0')
                                  AND    TBRAS.ST_MTHD_CD = '000' --ST방식전체설정
			                   )
			            WHERE  RANK = 1
			         ) TBRAS -- 보트최근성적
                   , (
                        SELECT
                                 MOT_NO
                               , MIN(DECODE(TMS, 1, MOT_PRE_RECE)) MOT_PRE_RECE1
                               , MIN(DECODE(TMS, 2, MOT_PRE_RECE)) MOT_PRE_RECE2
                        FROM   (
                                    SELECT
                                             TOR.MOT_NO
                                           , TRM.NM_KOR || '/' || RACE MOT_PRE_RECE
                                           , RANK() OVER (PARTITION BY TOR.MOT_NO
                                                              ORDER BY TRT.STR_DT DESC) TMS
                                    FROM     TBEB_RACE_TMS     TRT
                                           , TBEC_RACER_MASTER TRM
                                           , (
                                                SELECT
                                                         TOR.STND_YEAR
                                                       , TOR.MBR_CD
                                                       , TOR.TMS
                                                       , TOR.MOT_NO
                                                       , TOR.RACER_NO
                                                       , MIN(DECODE(TOR.RACE, 1, RANK))
                                                      || MIN(DECODE(TOR.RACE, 2, RANK))
                                                      || MIN(DECODE(TOR.RACE, 3, RANK))
                                                      || MIN(DECODE(TOR.RACE, 4, RANK)) RACE
                                                FROM   (
                                                            SELECT
                                                                     TOR.STND_YEAR
                                                                   , TOR.MBR_CD
                                                                   , TOR.TMS
                                                                   , TOR.MOT_NO
                                                                   , TOR.RACER_NO
                                                                   , DECODE(TOR.IMMT_CLS_CD, '003', '', TOR.RANK) RANK
                                                                   , RANK() OVER (PARTITION BY TOR.MOT_NO, TOR.TMS, TOR.RACER_NO
                                                                                      ORDER BY TOR.RACE_DAY DESC
                                                                                             , TOR.RACE_NO  DESC) RACE
                                                            FROM     TBEB_ORGAN        TOR
                                                                   , (
                                                                        SELECT
                                                                                  STND_YEAR
                                                                                , MBR_CD
                                                                                , TMS
                                                                                , MOT_NO
                                                                                , RANK() OVER (PARTITION BY MOT_NO
                                                                                                   ORDER BY RACE_DAY DESC) TMS_2
                                                                        FROM    (
                                                                                    SELECT
                                                                                              STND_YEAR
                                                                                            , MBR_CD
                                                                                            , TMS
                                                                                            , MOT_NO
                                                                                            , MAX(RACE_DAY) RACE_DAY
                                                                                    FROM    TBEB_ORGAN
                                                                                    WHERE   RACE_DAY < (
                                                                                                            SELECT
                                                                                                                   MIN(RACE_DAY)
                                                                                                            FROM   TBEB_RACE_DAY_ORD
                                                                                                            WHERE  STND_YEAR = ?
                                                                                                            AND    MBR_CD    = ?
                                                                                                            AND    TMS       = ?
                                                                                                       )
                                                                                    AND     MOT_NO  IN (
                                                                                                            SELECT
                                                                                                                   MOT_NO
                                                                                                            FROM   TBEB_ORGAN
                                                                                                            WHERE  STND_YEAR = ?
                                                                                                            AND    MBR_CD    = ?
                                                                                                            AND    TMS       = ?
                                                                                                            AND    DAY_ORD   = ?
                                                                                                            AND    RACE_NO   = NVL(?, RACE_NO)
                                                                                                       )
                                                                                    AND    ABSE_CD  <> '003'
                                                                                    GROUP BY
                                                                                              STND_YEAR
                                                                                            , MBR_CD
                                                                                            , TMS
                                                                                            , MOT_NO
                                                                                )
                                                                     ) TMS_2
                                                            WHERE  TOR.STND_YEAR = TMS_2.STND_YEAR
                                                            AND    TOR.MBR_CD    = TMS_2.MBR_CD
                                                            AND    TOR.TMS       = TMS_2.TMS
                                                            AND    TOR.MOT_NO    = TMS_2.MOT_NO
                                                            AND    TMS_2.TMS_2   < 3
                                                            AND    TOR.ABSE_CD  <> '003'
                                                       ) TOR
                                                GROUP BY
                                                         TOR.STND_YEAR
                                                       , TOR.MBR_CD
                                                       , TOR.TMS
                                                       , TOR.MOT_NO
                                                       , TOR.RACER_NO
                                             ) TOR
                                    WHERE  TRT.STND_YEAR = TOR.STND_YEAR
                                    AND    TRT.MBR_CD    = TOR.MBR_CD
                                    AND    TRT.TMS       = TOR.TMS
                                    AND    TOR.RACER_NO  = TRM.RACER_NO
                               )
                        GROUP BY MOT_NO
                     ) MPR -- 모터최근승정선수및성적
                   , (
                        SELECT
                                 RACER_NO, ST_MTHD_CD
                               , ROUND(SUM(WIN12_CNT) / SUM(RACE_CNT) * 100, 1) MON_6_HIGH_RANK_RATIO
                               , SUM(RACE_CNT) MON_6_RACE_CNT
                               , MIN(DECODE(RACE_REG_NO, 1, TRIM(TO_CHAR(WIN12_CNT / RACE_CNT * 100, 900.9) || '/' || RACE_CNT))) MON_6_RACE_REG_NO_1
                               , MIN(DECODE(RACE_REG_NO, 2, TRIM(TO_CHAR(WIN12_CNT / RACE_CNT * 100, 900.9) || '/' || RACE_CNT))) MON_6_RACE_REG_NO_2
                               , MIN(DECODE(RACE_REG_NO, 3, TRIM(TO_CHAR(WIN12_CNT / RACE_CNT * 100, 900.9) || '/' || RACE_CNT))) MON_6_RACE_REG_NO_3
                               , MIN(DECODE(RACE_REG_NO, 4, TRIM(TO_CHAR(WIN12_CNT / RACE_CNT * 100, 900.9) || '/' || RACE_CNT))) MON_6_RACE_REG_NO_4
                               , MIN(DECODE(RACE_REG_NO, 5, TRIM(TO_CHAR(WIN12_CNT / RACE_CNT * 100, 900.9) || '/' || RACE_CNT))) MON_6_RACE_REG_NO_5
                               , MIN(DECODE(RACE_REG_NO, 6, TRIM(TO_CHAR(WIN12_CNT / RACE_CNT * 100, 900.9) || '/' || RACE_CNT))) MON_6_RACE_REG_NO_6
                               , MIN(DECODE(RACE_REG_NO, 7, TRIM(TO_CHAR(WIN12_CNT / RACE_CNT * 100, 900.9) || '/' || RACE_CNT))) MON_6_RACE_REG_NO_7
                               , MIN(DECODE(RACE_REG_NO, 8, TRIM(TO_CHAR(WIN12_CNT / RACE_CNT * 100, 900.9) || '/' || RACE_CNT))) MON_6_RACE_REG_NO_8
                        FROM   (
                                    SELECT
                                              RACER_NO
                                            , ST_MTHD_CD
                                            , RACE_REG_NO
                                            , SUM(DECODE(RANK, 1, 1, 2, 1, 0)) WIN12_CNT
                                            , COUNT(*) RACE_CNT
                                    FROM    TBEB_ORGAN
                                    WHERE   (STND_YEAR, MBR_CD, TMS) IN (
                                                                            SELECT
                                                                                      STND_YEAR
                                                                                    , MBR_CD
                                                                                    , TMS
                                                                            FROM    TBEB_RACE_TMS
                                                                            WHERE   STR_DT > (
                                                                                                SELECT
                                                                                                       TO_CHAR(ADD_MONTHS(TO_DATE(STR_DT, 'YYYYMMDD'), -6), 'YYYYMMDD')
                                                                                                FROM   TBEB_RACE_TMS
                                                                                                WHERE  STND_YEAR = ?
                                                                                                AND    MBR_CD    = ?
                                                                                                AND    TMS       = ?
                                                                                             )
                                                                            AND     STR_DT < (
                                                                                                SELECT
                                                                                                       STR_DT
                                                                                                FROM   TBEB_RACE_TMS
                                                                                                WHERE  STND_YEAR = ?
                                                                                                AND    MBR_CD    = ?
                                                                                                AND    TMS       = ?
                                                                                             )
                                                                        )
                                    AND     RACER_NO    IN (
                                                                SELECT
                                                                       RACER_NO
                                                                FROM   TBEB_ORGAN
                                                                WHERE  STND_YEAR = ?
                                                                AND    MBR_CD    = ?
                                                                AND    TMS       = ?
                                                                AND    DAY_ORD   = ?
                                                                AND    RACE_NO   = NVL(?, RACE_NO)
                                                           )
                                    AND     ABSE_CD  <> '003'
                                    AND	    DAY_ORD IN ('1','2','3') --화면 공간 때문에 1,2일차만 표현
                                    GROUP BY
                                              RACER_NO, RACE_REG_NO, ST_MTHD_CD
                                )
                        GROUP BY RACER_NO, ST_MTHD_CD
                     ) MON_6 -- 최근6개월간연대율
			       , (
			            SELECT  
			                     RACER_NO   
			                   , SUBSTR(MAX(SYS_CONNECT_BY_PATH (RACE_DESC, ', ')), 2) PRE_RACE
			            FROM   (
			            			SELECT 
			                                  TOR.RACER_NO
			                                , DECODE(TR.RACE_STTS_CD, '002', '경주불성립', '003', '경주불성립', DECODE(TOR.ST_MTHD_CD,'001','온',SUBSTR(TSC.RMK2, 1, 1)) || TOR.RACE_NO || '-' || NVL(TRVA.VOIL_NM, TOR.RANK)|| '-' ||TOR.RACE_REG_NO) RACE_DESC
			                                , RANK() OVER (PARTITION BY TOR.RACER_NO 
			                                                   ORDER BY TOR.STND_YEAR
			                                                          , TOR.MBR_CD
			                                                          , TOR.TMS
			                                                          , TOR.DAY_ORD
			                                                          , TOR.RACE_NO) RACE
			            			FROM      TBEB_ORGAN   TOR
			            			        , TBEB_RACE    TR
			            			        , TBEA_SPEC_CD TSC
			            			        , (
                                                SELECT
                         			                      TRVA.STND_YEAR                                                 
                         			                    , TRVA.MBR_CD                                                    
                         			                    , TRVA.TMS                                                       
                         			                    , TRVA.DAY_ORD                                                   
                         			                    , TRVA.RACE_NO                                                   
                         			                    , TRVA.RACE_REG_NO        
                         			                    , TRVA.VOIL_CD
                         			                    , SUBSTR(TSC .RMK,4) VOIL_NM
                                                FROM      TBEA_SPEC_CD TSC
                                                        , (
                                                            SELECT
                                     			                      TRVA.STND_YEAR                                                 
                                     			                    , TRVA.MBR_CD                                                    
                                     			                    , TRVA.TMS                                                       
                                     			                    , TRVA.DAY_ORD                                                   
                                     			                    , TRVA.RACE_NO                                                   
                                     			                    , TRVA.RACE_REG_NO        
                                     			                    , TRVA.VOIL_CD
                        			                                , RANK() OVER (PARTITION BY TRVA.STND_YEAR
                        			                                                          , TRVA.MBR_CD
                        			                                                          , TRVA.TMS
                        			                                                          , TRVA.DAY_ORD
                        			                                                          , TRVA.RACE_NO
                        			                                                          , TRVA.RACE_REG_NO
                        			                                                   ORDER BY TRVA.VOIL_CD ) RANK
                                                            FROM    TBED_RACE_VOIL_ACT TRVA
                        			            			WHERE   TRVA.STND_YEAR = ?
                        			            			AND     TRVA.MBR_CD    = ?
                        			            			AND     TRVA.TMS       = ?
                        			            			AND     TRVA.DAY_ORD   < ?
                        			            			AND     TRVA.VOIL_CD  IN ('110', '120', '125', '130', '140', '995', '996', '997', '998', '999')
                        			                      ) TRVA
                                                WHERE   TSC .CD     = TRVA.VOIL_CD
                                                AND     TSC .GRP_CD = 'E00035'
                                                AND     TRVA.RANK   = 1
			            			          ) TRVA
			            			WHERE   TOR.STND_YEAR   = TR.STND_YEAR
			            			AND     TOR.MBR_CD      = TR.MBR_CD
			            			AND     TOR.TMS         = TR.TMS
			            			AND     TOR.DAY_ORD     = TR.DAY_ORD
			            			AND     TOR.RACE_NO     = TR.RACE_NO
			            			AND     TOR.STND_YEAR   = TRVA.STND_YEAR  (+) 
			            			AND     TOR.MBR_CD      = TRVA.MBR_CD     (+)
			            			AND     TOR.TMS         = TRVA.TMS        (+)
			            			AND     TOR.DAY_ORD     = TRVA.DAY_ORD    (+)
			            			AND     TOR.RACE_NO     = TRVA.RACE_NO    (+)
                                    AND     TOR.RACE_REG_NO = TRVA.RACE_REG_NO(+)
                                    AND     TSC .CD         = TR  .RACE_DGRE_CD
                                    AND     TSC.GRP_CD      = 'E00005'
			            			AND     TOR.STND_YEAR   = ?
			            			AND     TOR.MBR_CD      = ?
			            			AND     TOR.TMS         = ?
			            			AND     TOR.DAY_ORD     < ?
			                   )            			                         
			            START WITH RACE = 1
			            CONNECT BY PRIOR RACE = RACE - 1 AND PRIOR RACER_NO = RACER_NO
			            GROUP BY RACER_NO
                     ) PRE -- 전일성적
                   , TBEB_CNF_INSP         TCI
                   , TBEB_RECD_STND_TERM   TRST   -- 성적반영분기코드
            WHERE  TOR.RACER_NO  = TRM  .RACER_NO
            AND    TOR.RACER_NO  = TRD  .RACER_NO (+)
            AND    TOR.RACER_NO  = TRRAS.RACER_NO (+)
      		AND    TOR.RACER_NO  = TRRAS2.RACER_NO(+)
            AND    TOR.RACER_NO  = MON_6.RACER_NO (+)
        	AND    TOR.ST_MTHD_CD= MON_6.ST_MTHD_CD (+)
            AND    TOR.RACER_NO  = PRE  .RACER_NO (+)
            AND    TOR.MOT_NO    = TMRAS.MOT_NO   (+)
            AND    TOR.MOT_NO    = MPR .MOT_NO    (+)
            AND    TOR.BOAT_NO   = TBRAS.BOAT_NO  (+)
            AND    TOR.STND_YEAR = TRI  .STND_YEAR(+)
            AND    TOR.MBR_CD    = TRI  .MBR_CD   (+)
            AND    TOR.TMS       = TRI  .TMS      (+)
            AND    TOR.RACER_NO  = TRI  .RACER_NO (+)
            AND    TOR.STND_YEAR = TRT  .STND_YEAR
            AND    TOR.MBR_CD    = TRT  .MBR_CD
            AND    TOR.TMS       = TRT  .TMS
            AND    TOR.STND_YEAR = TRDO .STND_YEAR
            AND    TOR.MBR_CD    = TRDO .MBR_CD
            AND    TOR.TMS       = TRDO .TMS
            AND    TOR.DAY_ORD   = TRDO .DAY_ORD
            AND    TOR.STND_YEAR = TCI  .STND_YEAR(+)
            AND    TOR.MBR_CD    = TCI  .MBR_CD   (+)
            AND    TOR.TMS       = TCI  .TMS      (+)
            AND    TOR.RACER_NO  = TCI  .RACER_NO (+)
            AND    TRT.STR_DT >= TRST.STR_DT
            AND    TRT.END_DT <= TRST.END_DT
            AND    TOR.STND_YEAR = ?
            AND    TOR.MBR_CD    = ?
            AND    TOR.TMS       = ?
            AND    TOR.DAY_ORD   = ?
            AND    TOR.RACE_NO   = NVL(?, TOR.RACE_NO)
            ORDER BY
                       TOR.STND_YEAR
                     , TOR.MBR_CD
                     , TOR.TMS
                     , TOR.DAY_ORD
                     , TOR.RACE_NO
                     , TOR.RACE_REG_NO

		]]>
    </query> 
    
    <query id="tbeb_organ_fb007_3" desc="3일차 출주표성적조회" fetchSize="10">
        <![CDATA[
            SELECT  /*  tbeb_organ_fb007_3 3일차 출주표성적조회  */
	                 TOR  .STND_YEAR
	               , TOR  .MBR_CD
	               , TOR  .TMS
	               , TOR  .DAY_ORD
	               , TOR  .RACE_NO
	               , TOR  .ST_MTHD_CD
	               , TOR  .RACE_REG_NO
	               , ( SELECT CD_NM FROM TBEA_SPEC_CD WHERE GRP_CD = 'E00009' AND CD = TOR.RACE_REG_NO ) RACE_REG_COLOR
			       , TOR  .RACER_NO ORG_RACER_NO                                            -- 선수등록번호
			       , ''    RACER_RSN                                                        -- 선수변경사유
			       , TOR  .RACER_NO                                                         -- 선수등록번호
			       , TOR  .RACER_GRD_CD                                                 	-- 선수등급, 2013.1.18 출주표 등급추가
			       , TOR  .MOT_NO ORG_MOT_NO                                                -- 모터번호
			       , ''    MOT_RSN                                                          -- 모터변경사유
			       , TOR  .MOT_NO                                                           -- 모터번호
			       , SUBSTR(TOR  .MOT_NO, 6, 3) VIEW_MOT_NO                                 -- 모터번호    
			       , TOR  .BOAT_NO ORG_BOAT_NO                                              -- 보트번호
			       , ''    BOAT_RSN                                                         -- 보트변경사유
			       , TOR  .BOAT_NO                                                          -- 보트번호
			       , SUBSTR(TOR  .BOAT_NO, 6, 3) VIEW_BOAT_NO                               -- 보트번호    
                   , DECODE(SUBSTR(GET_DEC(TRD  .RES_NO), 7, 1), 2, '여', 4, '여','남') RACER_SEX     --성별
			       , TOR  .ABSE_CD                           
			       , TCI  .SPEC_INFO RMK                           
			       , TOR  .RACER_GRD_CD
			       , TRM  .NM_KOR
			       , TRM  .RACER_STAT_CD
			       , TRM  .FAVOR_COURSE_CD
			       , TRM  .EMAIL_ADDR
			       , TRM  .RACER_PERIO_NO
			       , TRD  .NATV_PLAC_CD
			       , TRD  .NATY_UNIV
			       , ROUND(NVL(TRI.ENTRY_BODY_WGHT, TRD  .WGHT)) ENTRY_BODY_WGHT
--			       , ROUND(TRI.ENTRY_BODY_WGHT) ENTRY_BODY_WGHT
			       , TRI  .ETC
			       , TOR  .STND_YEAR - SUBSTR(TRD  .BIRTH_DT, 1, 4) AGE
			       , 1 RACE_ALLOC_CNT
                   
			       , DECODE(  TOR.ST_MTHD_CD, '001'
			    		    , TRIM(TO_CHAR((NVL(TRRAS2.TMS_6_AVG_RANK_SCR, 0) * 0.7) + (NVL(TMRAS.AVG_RANK_SCR, 0) * 0.25) + (NVL(TBRAS.AVG_RANK_SCR, 0) * 0.05), '99.99'))
			    		    , TRIM(TO_CHAR((NVL(TRRAS.TMS_6_AVG_RANK_SCR, 0) * 0.7)  + (NVL(TMRAS.AVG_RANK_SCR, 0) * 0.25)  + (NVL(TBRAS.AVG_RANK_SCR, 0) * 0.05), '99.99'))		
			    		   ) SCR
   		           , DECODE(  TOR.ST_MTHD_CD, '001'	    
			                , RANK() OVER (ORDER BY TRIM(TO_CHAR((NVL(TRRAS2.TMS_6_AVG_RANK_SCR, 0) * 0.7) + (NVL(TMRAS.AVG_RANK_SCR, 0) * 0.25) + (NVL(TBRAS.AVG_RANK_SCR, 0) * 0.05), '99.99')) DESC) 
		                    , RANK() OVER (ORDER BY TRIM(TO_CHAR((NVL(TRRAS.TMS_6_AVG_RANK_SCR, 0) * 0.7)  + (NVL(TMRAS.AVG_RANK_SCR, 0) * 0.25)  + (NVL(TBRAS.AVG_RANK_SCR, 0) * 0.05),  '99.99')) DESC)
			               ) RANK
		           , DECODE(  TOR.ST_MTHD_CD, '001'	             
			                , DECODE(TRST.QURT_CD, '001', 'F' || NVL(TRRAS2.BF_F_CNT, 0) || 'L' || NVL(TRRAS2.BF_L_CNT, 0), '002', 'F' || NVL(TRRAS2.AF_F_CNT, 0) || 'L' || NVL(TRRAS2.AF_L_CNT, 0))
			                , DECODE(TRST.QURT_CD, '001', 'F' || NVL(TRRAS.BF_F_CNT, 0)  || 'L' || NVL(TRRAS.BF_L_CNT, 0), '002', 'F'  || NVL(TRRAS.AF_F_CNT, 0)  || 'L' || NVL(TRRAS.AF_L_CNT,  0))
			               ) FL_CNT -- 성적반영분기코드에따라 전반기/후반기 구분
			       , DECODE(  TOR.ST_MTHD_CD, '001'
			                , NVL(DECODE(TRST.QURT_CD, '001', TRRAS2.BF_AVG_ACDNT_SCR, '002', TRRAS2.AF_AVG_ACDNT_SCR), 0)
			                , NVL(DECODE(TRST.QURT_CD, '001', TRRAS.BF_AVG_ACDNT_SCR, '002',  TRRAS.AF_AVG_ACDNT_SCR), 0)
			               ) AVG_ACDNT_SCR -- 성적반영분기코드에따라 전반기/후반기 구분
			       
                   , DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.RACER_RANK                     , TRRAS.RACER_RANK                     )    TRRAS_RACER_RANK
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.TMS_6_AMU_RANK_SCR     , 0), NVL(TRRAS.TMS_6_AMU_RANK_SCR     , 0))    TRRAS_TMS_6_AMU_RANK_SCR
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.TMS_6_AVG_RANK_SCR     , 0), NVL(TRRAS.TMS_6_AVG_RANK_SCR     , 0))    TRRAS_TMS_6_AVG_RANK_SCR
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.TMS_6_AMU_ACDNT_SCR    , 0), NVL(TRRAS.TMS_6_AMU_ACDNT_SCR    , 0))    TRRAS_TMS_6_AMU_ACDNT_SCR
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.TMS_6_AVG_ACDNT_SCR    , 0), NVL(TRRAS.TMS_6_AVG_ACDNT_SCR    , 0))    TRRAS_TMS_6_AVG_ACDNT_SCR
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.TMS_6_AVG_SCR          , 0), NVL(TRRAS.TMS_6_AVG_SCR          , 0))    TRRAS_TMS_6_AVG_SCR
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.TMS_6_WIN_RATIO        , 0), NVL(TRRAS.TMS_6_WIN_RATIO        , 0))    TRRAS_TMS_6_WIN_RATIO
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.TMS_6_HIGH_RANK_RATIO  , 0), NVL(TRRAS.TMS_6_HIGH_RANK_RATIO  , 0))    TRRAS_TMS_6_HIGH_RANK_RATIO
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.TMS_6_HIGH_3_RANK_RATIO, 0), NVL(TRRAS.TMS_6_HIGH_3_RANK_RATIO, 0))    TRRAS_TMS_6_HIGH_3_RANK_RATIO
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.TMS_6_AVG_STRT_TM      , 0), NVL(TRRAS.TMS_6_AVG_STRT_TM      , 0))    TRRAS_TMS_6_AVG_STRT_TM
                   , DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.TMS_8_RANK_ORD                 , TRRAS.TMS_8_RANK_ORD                 )    TRRAS_TMS_8_RANK_ORD
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.TMS_6_RACE_CNT         , 0), NVL(TRRAS.TMS_6_RACE_CNT         , 0))    TRRAS_TMS_6_RACE_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.TMS_6_RANK_1           , 0), NVL(TRRAS.TMS_6_RANK_1           , 0))    TRRAS_TMS_6_RANK_1
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.TMS_6_RANK_2           , 0), NVL(TRRAS.TMS_6_RANK_2           , 0))    TRRAS_TMS_6_RANK_2
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.TMS_6_RANK_3           , 0), NVL(TRRAS.TMS_6_RANK_3           , 0))    TRRAS_TMS_6_RANK_3
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.AMU_RANK_SCR           , 0), NVL(TRRAS.AMU_RANK_SCR           , 0))    TRRAS_AMU_RANK_SCR
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.AVG_RANK_SCR           , 0), NVL(TRRAS.AVG_RANK_SCR           , 0))    TRRAS_AVG_RANK_SCR
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.AMU_ACDNT_SCR          , 0), NVL(TRRAS.AMU_ACDNT_SCR          , 0))    TRRAS_AMU_ACDNT_SCR
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.AVG_ACDNT_SCR          , 0), NVL(TRRAS.AVG_ACDNT_SCR          , 0))    TRRAS_AVG_ACDNT_SCR
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.BF_AMU_ACDNT_SCR       , 0), NVL(TRRAS.BF_AMU_ACDNT_SCR       , 0))    TRRAS_BF_AMU_ACDNT_SCR
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.BF_AVG_ACDNT_SCR       , 0), NVL(TRRAS.BF_AVG_ACDNT_SCR       , 0))    TRRAS_BF_AVG_ACDNT_SCR
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.AF_AMU_ACDNT_SCR       , 0), NVL(TRRAS.AF_AMU_ACDNT_SCR       , 0))    TRRAS_AF_AMU_ACDNT_SCR
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.AF_AVG_ACDNT_SCR       , 0), NVL(TRRAS.AF_AVG_ACDNT_SCR       , 0))    TRRAS_AF_AVG_ACDNT_SCR
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.AVG_SCR                , 0), NVL(TRRAS.AVG_SCR                , 0))    TRRAS_AVG_SCR
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.WIN_RATIO              , 0), NVL(TRRAS.WIN_RATIO              , 0))    TRRAS_WIN_RATIO
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.HIGH_RANK_RATIO        , 0), NVL(TRRAS.HIGH_RANK_RATIO        , 0))    TRRAS_HIGH_RANK_RATIO
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.HIGH_3_RANK_RATIO      , 0), NVL(TRRAS.HIGH_3_RANK_RATIO      , 0))    TRRAS_HIGH_3_RANK_RATIO
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.AVG_STRT_TM            , 0), NVL(TRRAS.AVG_STRT_TM            , 0))    TRRAS_AVG_STRT_TM
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.RUN_CNT                , 0), NVL(TRRAS.RUN_CNT                , 0))    TRRAS_RUN_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.RACE_DAY_CNT           , 0), NVL(TRRAS.RACE_DAY_CNT           , 0))    TRRAS_RACE_DAY_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.RACE_CNT               , 0), NVL(TRRAS.RACE_CNT               , 0))    TRRAS_RACE_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.TOT_RACE_CNT           , 0), NVL(TRRAS.TOT_RACE_CNT           , 0))    TRRAS_TOT_RACE_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.BF_RACE_CNT            , 0), NVL(TRRAS.BF_RACE_CNT            , 0))    TRRAS_BF_RACE_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.AF_RACE_CNT            , 0), NVL(TRRAS.AF_RACE_CNT            , 0))    TRRAS_AF_RACE_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.RANK_1_CNT             , 0), NVL(TRRAS.RANK_1_CNT             , 0))    TRRAS_RANK_1_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.RANK_2_CNT             , 0), NVL(TRRAS.RANK_2_CNT             , 0))    TRRAS_RANK_2_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.RANK_3_CNT             , 0), NVL(TRRAS.RANK_3_CNT             , 0))    TRRAS_RANK_3_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.RANK_4_CNT             , 0), NVL(TRRAS.RANK_4_CNT             , 0))    TRRAS_RANK_4_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.RANK_5_CNT             , 0), NVL(TRRAS.RANK_5_CNT             , 0))    TRRAS_RANK_5_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.RANK_6_CNT             , 0), NVL(TRRAS.RANK_6_CNT             , 0))    TRRAS_RANK_6_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.RANK_7_CNT             , 0), NVL(TRRAS.RANK_7_CNT             , 0))    TRRAS_RANK_7_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.RANK_8_CNT             , 0), NVL(TRRAS.RANK_8_CNT             , 0))    TRRAS_RANK_8_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.RANK_ETC_CNT           , 0), NVL(TRRAS.RANK_ETC_CNT           , 0))    TRRAS_RANK_ETC_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.DGRE_JUDG_F_CNT        , 0), NVL(TRRAS.DGRE_JUDG_F_CNT        , 0))    TRRAS_DGRE_JUDG_F_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.DGRE_JUDG_L_CNT        , 0), NVL(TRRAS.DGRE_JUDG_L_CNT        , 0))    TRRAS_DGRE_JUDG_L_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.BF_F_CNT               , 0), NVL(TRRAS.BF_F_CNT               , 0))    TRRAS_BF_F_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.AF_F_CNT               , 0), NVL(TRRAS.AF_F_CNT               , 0))    TRRAS_AF_F_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.BF_L_CNT               , 0), NVL(TRRAS.BF_L_CNT               , 0))    TRRAS_BF_L_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.AF_L_CNT               , 0), NVL(TRRAS.AF_L_CNT               , 0))    TRRAS_AF_L_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.ABSE_CNT               , 0), NVL(TRRAS.ABSE_CNT               , 0))    TRRAS_ABSE_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.RACE_ESC_1_CNT         , 0), NVL(TRRAS.RACE_ESC_1_CNT         , 0))    TRRAS_RACE_ESC_1_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.RACE_ESC_2_CNT         , 0), NVL(TRRAS.RACE_ESC_2_CNT         , 0))    TRRAS_RACE_ESC_2_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.FOUL_ELIM_CNT          , 0), NVL(TRRAS.FOUL_ELIM_CNT          , 0))    TRRAS_FOUL_ELIM_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.ELIM_CNT               , 0), NVL(TRRAS.ELIM_CNT               , 0))    TRRAS_ELIM_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.FOUL_WARN_CNT          , 0), NVL(TRRAS.FOUL_WARN_CNT          , 0))    TRRAS_FOUL_WARN_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.WARN_CNT               , 0), NVL(TRRAS.WARN_CNT               , 0))    TRRAS_WARN_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', NVL(TRRAS2.ATTEN_CNT              , 0), NVL(TRRAS.ATTEN_CNT              , 0))    TRRAS_ATTEN_CNT
                   , DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.BF_TMS                         , TRRAS.BF_TMS                         )    TRRAS_BF_TMS
                   , DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.BF_BF_TMS                      , TRRAS.BF_BF_TMS                      )    TRRAS_BF_BF_TMS
                   , DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.BF_BF_BF_TMS                   , TRRAS.BF_BF_BF_TMS                   )    TRRAS_BF_BF_BF_TMS
                   , DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.BF_MBR_CD                      , TRRAS.BF_MBR_CD                      )    TRRAS_BF_MBR_CD
                   , DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.BF_BF_MBR_CD                   , TRRAS.BF_BF_MBR_CD                   )    TRRAS_BF_BF_MBR_CD
                   , DECODE(TOR.ST_MTHD_CD, '001', TRRAS2.BF_BF_BF_MBR_CD                , TRRAS.BF_BF_BF_MBR_CD                )    TRRAS_BF_BF_BF_MBR_CD
                   , NVL(TMRAS.RUN_CNT                , 0)    TMRAS_RUN_CNT
                   , NVL(TMRAS.RACE_CNT               , 0)    TMRAS_RACE_CNT
                   , NVL(TMRAS.RACE_DAY_CNT           , 0)    TMRAS_RACE_DAY_CNT
                   , NVL(TMRAS.RANK_1_CNT             , 0)    TMRAS_RANK_1_CNT
                   , NVL(TMRAS.RANK_2_CNT             , 0)    TMRAS_RANK_2_CNT
                   , NVL(TMRAS.RANK_3_CNT             , 0)    TMRAS_RANK_3_CNT
                   , NVL(TMRAS.RANK_4_CNT             , 0)    TMRAS_RANK_4_CNT
                   , NVL(TMRAS.RANK_5_CNT             , 0)    TMRAS_RANK_5_CNT
                   , NVL(TMRAS.RANK_6_CNT             , 0)    TMRAS_RANK_6_CNT
                   , NVL(TMRAS.RANK_7_CNT             , 0)    TMRAS_RANK_7_CNT
                   , NVL(TMRAS.RANK_8_CNT             , 0)    TMRAS_RANK_8_CNT
                   , NVL(TMRAS.AMU_RANK_SCR           , 0)    TMRAS_AMU_RANK_SCR
                   , NVL(TMRAS.AVG_RANK_SCR           , 0)    TMRAS_AVG_RANK_SCR
                   , NVL(TMRAS.WIN_RATIO              , 0)    TMRAS_WIN_RATIO
                   , NVL(TMRAS.HIGH_RANK_RATIO        , 0)    TMRAS_HIGH_RANK_RATIO
                   , NVL(TMRAS.HIGH_3_RANK_RATIO      , 0)    TMRAS_HIGH_3_RANK_RATIO
                   , TMRAS.TMS_3_ITRDT_RUN_TM                 TMRAS_TMS_3_ITRDT_RUN_TM
                   , TMRAS.AVG_ITRDT_RUN_TM                   TMRAS_AVG_ITRDT_RUN_TM
                   , TMRAS.MAX_ITRDT_RUN_TM                   TMRAS_MAX_ITRDT_RUN_TM
                   , TMRAS.MIN_ITRDT_RUN_TM                   TMRAS_MIN_ITRDT_RUN_TM
                   , TMRAS.ITRDT_RUN_TM_DVTN                  TMRAS_ITRDT_RUN_TM_DVTN
                   , NVL(TBRAS.RUN_CNT                , 0)    TBRAS_RUN_CNT
                   , NVL(TBRAS.RACE_CNT               , 0)    TBRAS_RACE_CNT
                   , NVL(TBRAS.RACE_DAY_CNT           , 0)    TBRAS_RACE_DAY_CNT
                   , NVL(TBRAS.RANK_1_CNT             , 0)    TBRAS_RANK_1_CNT
                   , NVL(TBRAS.RANK_2_CNT             , 0)    TBRAS_RANK_2_CNT
                   , NVL(TBRAS.RANK_3_CNT             , 0)    TBRAS_RANK_3_CNT
                   , NVL(TBRAS.RANK_4_CNT             , 0)    TBRAS_RANK_4_CNT
                   , NVL(TBRAS.RANK_5_CNT             , 0)    TBRAS_RANK_5_CNT
                   , NVL(TBRAS.RANK_6_CNT             , 0)    TBRAS_RANK_6_CNT
                   , NVL(TBRAS.RANK_7_CNT             , 0)    TBRAS_RANK_7_CNT
                   , NVL(TBRAS.RANK_8_CNT             , 0)    TBRAS_RANK_8_CNT
                   , NVL(TBRAS.AMU_RANK_SCR           , 0)    TBRAS_AMU_RANK_SCR
                   , NVL(TBRAS.AVG_RANK_SCR           , 0)    TBRAS_AVG_RANK_SCR
                   , NVL(TBRAS.WIN_RATIO              , 0)    TBRAS_WIN_RATIO
                   , NVL(TBRAS.HIGH_RANK_RATIO        , 0)    TBRAS_HIGH_RANK_RATIO
                   , NVL(TBRAS.HIGH_3_RANK_RATIO      , 0)    TBRAS_HIGH_3_RANK_RATIO
                   , TBRAS.TMS_3_ITRDT_RUN_TM                 TBRAS_TMS_3_ITRDT_RUN_TM
                   , TBRAS.AVG_ITRDT_RUN_TM                   TBRAS_AVG_ITRDT_RUN_TM
                   , TBRAS.MAX_ITRDT_RUN_TM                   TBRAS_MAX_ITRDT_RUN_TM
                   , TBRAS.MIN_ITRDT_RUN_TM                   TBRAS_MIN_ITRDT_RUN_TM
                   , TBRAS.ITRDT_RUN_TM_DVTN                  TBRAS_ITRDT_RUN_TM_DVTN
                   , NVL(MON_6.MON_6_HIGH_RANK_RATIO, '0.0')  MON_6_HIGH_RANK_RATIO
                   , NVL(MON_6.MON_6_RACE_CNT, 0)             MON_6_RACE_CNT
                   , NVL(MON_6.MON_6_RACE_REG_NO_1, '00.0/0')  MON_6_RACE_REG_NO_1
                   , NVL(MON_6.MON_6_RACE_REG_NO_2, '00.0/0')  MON_6_RACE_REG_NO_2
                   , NVL(MON_6.MON_6_RACE_REG_NO_3, '00.0/0')  MON_6_RACE_REG_NO_3
                   , NVL(MON_6.MON_6_RACE_REG_NO_4, '00.0/0')  MON_6_RACE_REG_NO_4
                   , NVL(MON_6.MON_6_RACE_REG_NO_5, '00.0/0')  MON_6_RACE_REG_NO_5
                   , NVL(MON_6.MON_6_RACE_REG_NO_6, '00.0/0')  MON_6_RACE_REG_NO_6
                   , NVL(MON_6.MON_6_RACE_REG_NO_7, '00.0/0')  MON_6_RACE_REG_NO_7
                   , NVL(MON_6.MON_6_RACE_REG_NO_8, '00.0/0')  MON_6_RACE_REG_NO_8
                   , MPR  .MOT_PRE_RECE1
                   , MPR  .MOT_PRE_RECE2
                  -- , DECODE(TRDO.ORGAN_STAT_CD, '002', PRE  .PRE_RACE) PRE_RACE
                   , DECODE(TRDO.ORGAN_STAT_CD, '002', 
                            REPLACE(PRE1.PRE_RACE,' ',' 1')||
                                NVL2(PRE1.PRE_RACE,',','')||REPLACE(PRE2.PRE_RACE,' ',' 2')) AS PRE_RACE
			       , (
                        SELECT 
                                DECODE(TR.RACE_DGRE_CD, '501', '특', '701', '특', '702', '특', '')||TODAY.RACE_NO RACE_NO
                        FROM    TBEB_ORGAN TODAY
                              , TBEB_RACE    TR
                              , TBEA_SPEC_CD TSC
                        WHERE   TODAY.STND_YEAR   = TOR.STND_YEAR  
                        AND     TODAY.MBR_CD      = TOR.MBR_CD     
                        AND     TODAY.TMS         = TOR.TMS        
                        AND     TODAY.DAY_ORD     = TOR.DAY_ORD    
                        AND     TODAY.RACE_NO    <> TOR.RACE_NO    
                        AND     TODAY.RACER_NO    = TOR.RACER_NO   
                        AND     TODAY.STND_YEAR   = TR.STND_YEAR
                        AND     TODAY.MBR_CD      = TR.MBR_CD
                        AND     TODAY.TMS         = TR.TMS
                        AND     TODAY.DAY_ORD     = TR.DAY_ORD
                        AND     TODAY.RACE_NO     = TR.RACE_NO
                        AND     TSC.CD            = TR.RACE_DGRE_CD
                        AND     TSC.GRP_CD        = 'E00005'
                     ) ETC_RACE  
			FROM     TBEB_RACE_TMS            TRT
		           , TBEB_RACE_DAY_ORD        TRDO
			       , TBEC_RACER_MASTER        TRM
			       , TBEC_RACER_DETAIL        TRD
			       , TBEB_ORGAN               TOR
                   , TBEC_RACER_INTERVIEW     TRI
			       , (
						SELECT *
						FROM   (
						            SELECT   RANK() OVER (PARTITION BY TRRAS.RACER_NO ORDER BY APLY_DT DESC) RANK
						                   , TRRAS.*
						            FROM   TBEB_RACER_RECD_ACCU_SUM TRRAS
						            WHERE  TRRAS.APLY_DT  < (
						                                        SELECT
						                                               MIN(TRDO.RACE_DAY) RACE_DAY
						                                        FROM   TBEB_RACE_DAY_ORD TRDO
						                                        WHERE  TRDO.STND_YEAR = ?
						                                        AND    TRDO.MBR_CD    = ?
						                                        AND    TRDO.TMS       = ?
						                                    )
						            AND   MBR_CD = '000'
						            AND   TMS    = 0
						            AND   TRRAS.ST_MTHD_CD = '000' --ST방식전체설정
						       )
						WHERE  RANK = 1
			         ) TRRAS -- 선수최근성적
			       , (
						SELECT *
						FROM   (
						            SELECT   RANK() OVER (PARTITION BY TRRAS.RACER_NO ORDER BY APLY_DT DESC) RANK
						                   , TRRAS.*
						            FROM   TBEB_RACER_RECD_ACCU_SUM TRRAS
						            WHERE  TRRAS.APLY_DT  < (
						                                        SELECT
						                                               MIN(TRDO.RACE_DAY) RACE_DAY
						                                        FROM   TBEB_RACE_DAY_ORD TRDO
						                                        WHERE  TRDO.STND_YEAR = ?
						                                        AND    TRDO.MBR_CD    = ?
						                                        AND    TRDO.TMS       = ?
						                                    )
						            AND   MBR_CD = '000'
						            AND   TMS    = 0
						            AND   TRRAS.ST_MTHD_CD = '001' --ST방식 온라인
						       )
						WHERE  RANK = 1
			         ) TRRAS2 -- 선수최근성적(온라인)
			       , (
			            SELECT *
			            FROM   (
                                  SELECT   RANK() OVER (PARTITION BY TMRAS.MOT_NO 
                                                            ORDER BY TMRAS.STND_YEAR DESC
                                                                   , TMRAS.TMS DESC 
                                                       ) RANK
                                         , TMRAS.*
                                  FROM   TBEB_MOT_RECD_ACCU_SUM TMRAS
                                  WHERE  TMRAS.MBR_CD = ?
                                  AND    TMRAS.STND_YEAR || LPAD(TMRAS.TMS, 3, '0') < ? || LPAD(?, 3, '0')
                            	  AND    TMRAS.ST_MTHD_CD = '000' --ST방식전체설정		  
			                   )
			            WHERE  RANK = 1
			         ) TMRAS -- 모터최근성적
			       , (
			            SELECT *
			            FROM   (
                                  SELECT   RANK() OVER (PARTITION BY TBRAS.BOAT_NO 
                                                            ORDER BY TBRAS.STND_YEAR DESC
                                                                   , TBRAS.TMS DESC 
                                                       ) RANK
                                         , TBRAS.*
                                  FROM   TBEB_BOAT_RECD_ACCU_SUM TBRAS
                                  WHERE  TBRAS.MBR_CD = ?
                                  AND    TBRAS.STND_YEAR || LPAD(TBRAS.TMS, 3, '0') < ? || LPAD(?, 3, '0')
                                  AND    TBRAS.ST_MTHD_CD = '000' --ST방식전체설정
			                   )
			            WHERE  RANK = 1
			         ) TBRAS -- 보트최근성적
                   , (
                        SELECT
                                 MOT_NO
                               , MIN(DECODE(TMS, 1, MOT_PRE_RECE)) MOT_PRE_RECE1
                               , MIN(DECODE(TMS, 2, MOT_PRE_RECE)) MOT_PRE_RECE2
                        FROM   (
                                    SELECT
                                             TOR.MOT_NO
                                           , TRM.NM_KOR || '/' || RACE MOT_PRE_RECE
                                           , RANK() OVER (PARTITION BY TOR.MOT_NO
                                                              ORDER BY TRT.STR_DT DESC) TMS
                                    FROM     TBEB_RACE_TMS     TRT
                                           , TBEC_RACER_MASTER TRM
                                           , (
                                                SELECT
                                                         TOR.STND_YEAR
                                                       , TOR.MBR_CD
                                                       , TOR.TMS
                                                       , TOR.MOT_NO
                                                       , TOR.RACER_NO
                                                       , MIN(DECODE(TOR.RACE, 1, RANK))
                                                      || MIN(DECODE(TOR.RACE, 2, RANK))
                                                      || MIN(DECODE(TOR.RACE, 3, RANK))
                                                      || MIN(DECODE(TOR.RACE, 4, RANK)) RACE
                                                FROM   (
                                                            SELECT
                                                                     TOR.STND_YEAR
                                                                   , TOR.MBR_CD
                                                                   , TOR.TMS
                                                                   , TOR.MOT_NO
                                                                   , TOR.RACER_NO
                                                                   , DECODE(TOR.IMMT_CLS_CD, '003', '', TOR.RANK) RANK
                                                                   , RANK() OVER (PARTITION BY TOR.MOT_NO, TOR.TMS, TOR.RACER_NO
                                                                                      ORDER BY TOR.RACE_DAY DESC
                                                                                             , TOR.RACE_NO  DESC) RACE
                                                            FROM     TBEB_ORGAN        TOR
                                                                   , (
                                                                        SELECT
                                                                                  STND_YEAR
                                                                                , MBR_CD
                                                                                , TMS
                                                                                , MOT_NO
                                                                                , RANK() OVER (PARTITION BY MOT_NO
                                                                                                   ORDER BY RACE_DAY DESC) TMS_2
                                                                        FROM    (
                                                                                    SELECT
                                                                                              STND_YEAR
                                                                                            , MBR_CD
                                                                                            , TMS
                                                                                            , MOT_NO
                                                                                            , MAX(RACE_DAY) RACE_DAY
                                                                                    FROM    TBEB_ORGAN
                                                                                    WHERE   RACE_DAY < (
                                                                                                            SELECT
                                                                                                                   MIN(RACE_DAY)
                                                                                                            FROM   TBEB_RACE_DAY_ORD
                                                                                                            WHERE  STND_YEAR = ?
                                                                                                            AND    MBR_CD    = ?
                                                                                                            AND    TMS       = ?
                                                                                                       )
                                                                                    AND     MOT_NO  IN (
                                                                                                            SELECT
                                                                                                                   MOT_NO
                                                                                                            FROM   TBEB_ORGAN
                                                                                                            WHERE  STND_YEAR = ?
                                                                                                            AND    MBR_CD    = ?
                                                                                                            AND    TMS       = ?
                                                                                                            AND    DAY_ORD   = ?
                                                                                                            AND    RACE_NO   = NVL(?, RACE_NO)
                                                                                                       )
                                                                                    AND    ABSE_CD  <> '003'
                                                                                    GROUP BY
                                                                                              STND_YEAR
                                                                                            , MBR_CD
                                                                                            , TMS
                                                                                            , MOT_NO
                                                                                )
                                                                     ) TMS_2
                                                            WHERE  TOR.STND_YEAR = TMS_2.STND_YEAR
                                                            AND    TOR.MBR_CD    = TMS_2.MBR_CD
                                                            AND    TOR.TMS       = TMS_2.TMS
                                                            AND    TOR.MOT_NO    = TMS_2.MOT_NO
                                                            AND    TMS_2.TMS_2   < 3
                                                            AND    TOR.ABSE_CD  <> '003'
                                                       ) TOR
                                                GROUP BY
                                                         TOR.STND_YEAR
                                                       , TOR.MBR_CD
                                                       , TOR.TMS
                                                       , TOR.MOT_NO
                                                       , TOR.RACER_NO
                                             ) TOR
                                    WHERE  TRT.STND_YEAR = TOR.STND_YEAR
                                    AND    TRT.MBR_CD    = TOR.MBR_CD
                                    AND    TRT.TMS       = TOR.TMS
                                    AND    TOR.RACER_NO  = TRM.RACER_NO
                               )
                        GROUP BY MOT_NO
                     ) MPR -- 모터최근승정선수및성적
                   , (
                        SELECT
                                 RACER_NO, ST_MTHD_CD
                               , ROUND(SUM(WIN12_CNT) / SUM(RACE_CNT) * 100, 1) MON_6_HIGH_RANK_RATIO
                               , SUM(RACE_CNT) MON_6_RACE_CNT
                               , MIN(DECODE(RACE_REG_NO, 1, TRIM(TO_CHAR(WIN12_CNT / RACE_CNT * 100, 900.9) || '/' || RACE_CNT))) MON_6_RACE_REG_NO_1
                               , MIN(DECODE(RACE_REG_NO, 2, TRIM(TO_CHAR(WIN12_CNT / RACE_CNT * 100, 900.9) || '/' || RACE_CNT))) MON_6_RACE_REG_NO_2
                               , MIN(DECODE(RACE_REG_NO, 3, TRIM(TO_CHAR(WIN12_CNT / RACE_CNT * 100, 900.9) || '/' || RACE_CNT))) MON_6_RACE_REG_NO_3
                               , MIN(DECODE(RACE_REG_NO, 4, TRIM(TO_CHAR(WIN12_CNT / RACE_CNT * 100, 900.9) || '/' || RACE_CNT))) MON_6_RACE_REG_NO_4
                               , MIN(DECODE(RACE_REG_NO, 5, TRIM(TO_CHAR(WIN12_CNT / RACE_CNT * 100, 900.9) || '/' || RACE_CNT))) MON_6_RACE_REG_NO_5
                               , MIN(DECODE(RACE_REG_NO, 6, TRIM(TO_CHAR(WIN12_CNT / RACE_CNT * 100, 900.9) || '/' || RACE_CNT))) MON_6_RACE_REG_NO_6
                               , MIN(DECODE(RACE_REG_NO, 7, TRIM(TO_CHAR(WIN12_CNT / RACE_CNT * 100, 900.9) || '/' || RACE_CNT))) MON_6_RACE_REG_NO_7
                               , MIN(DECODE(RACE_REG_NO, 8, TRIM(TO_CHAR(WIN12_CNT / RACE_CNT * 100, 900.9) || '/' || RACE_CNT))) MON_6_RACE_REG_NO_8
                        FROM   (
                                    SELECT
                                              RACER_NO, ST_MTHD_CD
                                            , RACE_REG_NO
                                            , SUM(DECODE(RANK, 1, 1, 2, 1, 0)) WIN12_CNT
                                            , COUNT(*) RACE_CNT
                                    FROM    TBEB_ORGAN
                                    WHERE   (STND_YEAR, MBR_CD, TMS) IN (
                                                                            SELECT
                                                                                      STND_YEAR
                                                                                    , MBR_CD
                                                                                    , TMS
                                                                            FROM    TBEB_RACE_TMS
                                                                            WHERE   STR_DT > (
                                                                                                SELECT
                                                                                                       TO_CHAR(ADD_MONTHS(TO_DATE(STR_DT, 'YYYYMMDD'), -6), 'YYYYMMDD')
                                                                                                FROM   TBEB_RACE_TMS
                                                                                                WHERE  STND_YEAR = ?
                                                                                                AND    MBR_CD    = ?
                                                                                                AND    TMS       = ?
                                                                                             )
                                                                            AND     STR_DT < (
                                                                                                SELECT
                                                                                                       STR_DT
                                                                                                FROM   TBEB_RACE_TMS
                                                                                                WHERE  STND_YEAR = ?
                                                                                                AND    MBR_CD    = ?
                                                                                                AND    TMS       = ?
                                                                                             )
                                                                        )
                                    AND     RACER_NO    IN (
                                                                SELECT
                                                                       RACER_NO
                                                                FROM   TBEB_ORGAN
                                                                WHERE  STND_YEAR = ?
                                                                AND    MBR_CD    = ?
                                                                AND    TMS       = ?
                                                                AND    DAY_ORD   = ?
                                                                AND    RACE_NO   = NVL(?, RACE_NO)
                                                           )
                                    AND     ABSE_CD  <> '003'
                                    AND	    DAY_ORD IN ('1','2','3') --화면 공간 때문에 1,2일차만 표현
                                    GROUP BY RACER_NO, RACE_REG_NO, ST_MTHD_CD
                                )
                        GROUP BY RACER_NO, ST_MTHD_CD
                     ) MON_6 -- 최근6개월간연대율
			       , (
			            SELECT  
			                     RACER_NO   
			                   , SUBSTR(MAX(SYS_CONNECT_BY_PATH (RACE_DESC, ', ')), 2) PRE_RACE
			            FROM   (
			            			SELECT 
			                                  TOR.RACER_NO
			                                , DECODE(TR.RACE_STTS_CD, '002', '경주불성립', '003', '경주불성립', SUBSTR(TSC.RMK2, 1, 1) || TOR.RACE_NO || '-' || NVL(TRVA.VOIL_NM, TOR.RANK)) RACE_DESC
			                                , RANK() OVER (PARTITION BY TOR.RACER_NO 
			                                                   ORDER BY TOR.STND_YEAR
			                                                          , TOR.MBR_CD
			                                                          , TOR.TMS
			                                                          , TOR.DAY_ORD
			                                                          , TOR.RACE_NO) RACE
			            			FROM      TBEB_ORGAN   TOR
			            			        , TBEB_RACE    TR
			            			        , TBEA_SPEC_CD TSC
			            			        , (
                                                SELECT
                         			                      TRVA.STND_YEAR                                                 
                         			                    , TRVA.MBR_CD                                                    
                         			                    , TRVA.TMS                                                       
                         			                    , TRVA.DAY_ORD                                                   
                         			                    , TRVA.RACE_NO                                                   
                         			                    , TRVA.RACE_REG_NO        
                         			                    , TRVA.VOIL_CD
                         			                    , SUBSTR(TSC .RMK,4) VOIL_NM
                                                FROM      TBEA_SPEC_CD TSC
                                                        , (
                                                            SELECT
                                     			                      TRVA.STND_YEAR                                                 
                                     			                    , TRVA.MBR_CD                                                    
                                     			                    , TRVA.TMS                                                       
                                     			                    , TRVA.DAY_ORD                                                   
                                     			                    , TRVA.RACE_NO                                                   
                                     			                    , TRVA.RACE_REG_NO        
                                     			                    , TRVA.VOIL_CD
                        			                                , RANK() OVER (PARTITION BY TRVA.STND_YEAR
                        			                                                          , TRVA.MBR_CD
                        			                                                          , TRVA.TMS
                        			                                                          , TRVA.DAY_ORD
                        			                                                          , TRVA.RACE_NO
                        			                                                          , TRVA.RACE_REG_NO
                        			                                                   ORDER BY TRVA.VOIL_CD ) RANK
                                                            FROM    TBED_RACE_VOIL_ACT TRVA
                        			            			WHERE   TRVA.STND_YEAR = ?
                        			            			AND     TRVA.MBR_CD    = ?
                        			            			AND     TRVA.TMS       = ?
                        			            			AND     TRVA.DAY_ORD   = ? -2
                        			            			AND     TRVA.VOIL_CD  IN ('110', '120', '125', '130', '140', '995', '996', '997', '998', '999')
                        			                      ) TRVA
                                                WHERE   TSC .CD     = TRVA.VOIL_CD
                                                AND     TSC .GRP_CD = 'E00035'
                                                AND     TRVA.RANK   = 1
			            			          ) TRVA
			            			WHERE   TOR.STND_YEAR   = TR.STND_YEAR
			            			AND     TOR.MBR_CD      = TR.MBR_CD
			            			AND     TOR.TMS         = TR.TMS
			            			AND     TOR.DAY_ORD     = TR.DAY_ORD
			            			AND     TOR.RACE_NO     = TR.RACE_NO
			            			AND     TOR.STND_YEAR   = TRVA.STND_YEAR  (+) 
			            			AND     TOR.MBR_CD      = TRVA.MBR_CD     (+)
			            			AND     TOR.TMS         = TRVA.TMS        (+)
			            			AND     TOR.DAY_ORD     = TRVA.DAY_ORD    (+)
			            			AND     TOR.RACE_NO     = TRVA.RACE_NO    (+)
                                    AND     TOR.RACE_REG_NO = TRVA.RACE_REG_NO(+)
                                    AND     TSC .CD         = TR  .RACE_DGRE_CD
                                    AND     TSC.GRP_CD      = 'E00005'
			            			AND     TOR.STND_YEAR   = ?
			            			AND     TOR.MBR_CD      = ?
			            			AND     TOR.TMS         = ?
			            			AND     TOR.DAY_ORD     = ? -2
			                   )            			                         
			            START WITH RACE = 1
			            CONNECT BY PRIOR RACE = RACE - 1 AND PRIOR RACER_NO = RACER_NO
			            GROUP BY RACER_NO
                     ) PRE1 -- 전일성적
                   , (
			            SELECT  
			                     RACER_NO   
			                   , SUBSTR(MAX(SYS_CONNECT_BY_PATH (RACE_DESC, ', ')), 2) PRE_RACE
			            FROM   (
			            			SELECT 
			                                  TOR.RACER_NO
			                                , DECODE(TR.RACE_STTS_CD, '002', '경주불성립', '003', '경주불성립', DECODE(TOR.ST_MTHD_CD,'001','온',SUBSTR(TSC.RMK2, 1, 1)) || TOR.RACE_NO || '-' || NVL(TRVA.VOIL_NM, TOR.RANK)|| '-' ||TOR.RACE_REG_NO) RACE_DESC
			                                , RANK() OVER (PARTITION BY TOR.RACER_NO 
			                                                   ORDER BY TOR.STND_YEAR
			                                                          , TOR.MBR_CD
			                                                          , TOR.TMS
			                                                          , TOR.DAY_ORD
			                                                          , TOR.RACE_NO) RACE
			            			FROM      TBEB_ORGAN   TOR
			            			        , TBEB_RACE    TR
			            			        , TBEA_SPEC_CD TSC
			            			        , (
                                                SELECT
                         			                      TRVA.STND_YEAR                                                 
                         			                    , TRVA.MBR_CD                                                    
                         			                    , TRVA.TMS                                                       
                         			                    , TRVA.DAY_ORD                                                   
                         			                    , TRVA.RACE_NO                                                   
                         			                    , TRVA.RACE_REG_NO        
                         			                    , TRVA.VOIL_CD
                         			                    , SUBSTR(TSC .RMK,4) VOIL_NM
                                                FROM      TBEA_SPEC_CD TSC
                                                        , (
                                                            SELECT
                                     			                      TRVA.STND_YEAR                                                 
                                     			                    , TRVA.MBR_CD                                                    
                                     			                    , TRVA.TMS                                                       
                                     			                    , TRVA.DAY_ORD                                                   
                                     			                    , TRVA.RACE_NO                                                   
                                     			                    , TRVA.RACE_REG_NO        
                                     			                    , TRVA.VOIL_CD
                        			                                , RANK() OVER (PARTITION BY TRVA.STND_YEAR
                        			                                                          , TRVA.MBR_CD
                        			                                                          , TRVA.TMS
                        			                                                          , TRVA.DAY_ORD
                        			                                                          , TRVA.RACE_NO
                        			                                                          , TRVA.RACE_REG_NO
                        			                                                   ORDER BY TRVA.VOIL_CD ) RANK
                                                            FROM    TBED_RACE_VOIL_ACT TRVA
                        			            			WHERE   TRVA.STND_YEAR = ?
                        			            			AND     TRVA.MBR_CD    = ?
                        			            			AND     TRVA.TMS       = ?
                        			            			AND     TRVA.DAY_ORD   = ? -1
                        			            			AND     TRVA.VOIL_CD  IN ('110', '120', '125', '130', '140', '995', '996', '997', '998', '999')
                        			                      ) TRVA
                                                WHERE   TSC .CD     = TRVA.VOIL_CD
                                                AND     TSC .GRP_CD = 'E00035'
                                                AND     TRVA.RANK   = 1
			            			          ) TRVA
			            			WHERE   TOR.STND_YEAR   = TR.STND_YEAR
			            			AND     TOR.MBR_CD      = TR.MBR_CD
			            			AND     TOR.TMS         = TR.TMS
			            			AND     TOR.DAY_ORD     = TR.DAY_ORD
			            			AND     TOR.RACE_NO     = TR.RACE_NO
			            			AND     TOR.STND_YEAR   = TRVA.STND_YEAR  (+) 
			            			AND     TOR.MBR_CD      = TRVA.MBR_CD     (+)
			            			AND     TOR.TMS         = TRVA.TMS        (+)
			            			AND     TOR.DAY_ORD     = TRVA.DAY_ORD    (+)
			            			AND     TOR.RACE_NO     = TRVA.RACE_NO    (+)
                                    AND     TOR.RACE_REG_NO = TRVA.RACE_REG_NO(+)
                                    AND     TSC .CD         = TR  .RACE_DGRE_CD
                                    AND     TSC.GRP_CD      = 'E00005'
			            			AND     TOR.STND_YEAR   = ?
			            			AND     TOR.MBR_CD      = ?
			            			AND     TOR.TMS         = ?
			            			AND     TOR.DAY_ORD     = ? -1
			                   )            			                         
			            START WITH RACE = 1
			            CONNECT BY PRIOR RACE = RACE - 1 AND PRIOR RACER_NO = RACER_NO
			            GROUP BY RACER_NO
                     ) PRE2 -- 전일성적
                   , TBEB_CNF_INSP         TCI
                   , TBEB_RECD_STND_TERM   TRST   -- 성적반영분기코드
            WHERE  TOR.RACER_NO  = TRM  .RACER_NO
            AND    TOR.RACER_NO  = TRD  .RACER_NO (+)
            AND    TOR.RACER_NO  = TRRAS.RACER_NO (+)
            AND    TOR.RACER_NO  = TRRAS2.RACER_NO (+)            
            AND    TOR.RACER_NO  = MON_6.RACER_NO (+)
            AND    TOR.ST_MTHD_CD= MON_6.ST_MTHD_CD (+)
            AND    TOR.RACER_NO  = PRE1 .RACER_NO (+)
            AND    TOR.RACER_NO  = PRE2 .RACER_NO (+)
            AND    TOR.MOT_NO    = TMRAS.MOT_NO   (+)
            AND    TOR.MOT_NO    = MPR  .MOT_NO   (+)
            AND    TOR.BOAT_NO   = TBRAS.BOAT_NO  (+)
            AND    TOR.STND_YEAR = TRI  .STND_YEAR(+)
            AND    TOR.MBR_CD    = TRI  .MBR_CD   (+)
            AND    TOR.TMS       = TRI  .TMS      (+)
            AND    TOR.RACER_NO  = TRI  .RACER_NO (+)
            AND    TOR.STND_YEAR = TRT  .STND_YEAR
            AND    TOR.MBR_CD    = TRT  .MBR_CD
            AND    TOR.TMS       = TRT  .TMS
            AND    TOR.STND_YEAR = TRDO .STND_YEAR
            AND    TOR.MBR_CD    = TRDO .MBR_CD
            AND    TOR.TMS       = TRDO .TMS
            AND    TOR.DAY_ORD   = TRDO .DAY_ORD
            AND    TOR.STND_YEAR = TCI  .STND_YEAR(+)
            AND    TOR.MBR_CD    = TCI  .MBR_CD   (+)
            AND    TOR.TMS       = TCI  .TMS      (+)
            AND    TOR.RACER_NO  = TCI  .RACER_NO (+)
            AND    TRT.STR_DT >= TRST.STR_DT
            AND    TRT.END_DT <= TRST.END_DT
            AND    TOR.STND_YEAR = ?
            AND    TOR.MBR_CD    = ?
            AND    TOR.TMS       = ?
            AND    TOR.DAY_ORD   = ?
            AND    TOR.RACE_NO   = NVL(?, TOR.RACE_NO)
            ORDER BY
                       TOR.STND_YEAR
                     , TOR.MBR_CD
                     , TOR.TMS
                     , TOR.DAY_ORD
                     , TOR.RACE_NO
                     , TOR.RACE_REG_NO

		]]>
    </query> 
    <query id="tbeb_organ_fb008" desc="전일성적 조회" fetchSize="10">
        <![CDATA[
			SELECT /* tbeb_organ_fb008 전일성적 조회 */
			         TOR  .RACER_NO
			       , TRM  .NM_KOR
			       , TOR  .RACER_GRD_CD
			       , COUNT(*)                  RACE_CNT
			       , NVL(SUM(TRS.RACE_SCR), 0) DAY_AMU_RANK_SCR
			       , NVL(SUM(TRVA.ACDNT_SCR), 0)    DAY_ACDNT_SCR
			       , TO_CHAR(NVL(SUM(TRS.RACE_SCR), 0) / COUNT(*), '99.99') AVG_RANK_SCR
			       , TO_CHAR((NVL(SUM(TRS.RACE_SCR), 0) - NVL(SUM(TRVA.ACDNT_SCR), 0)) / COUNT(*), '99.99') DAY_AVG_SCR
			       , RANK() OVER (ORDER BY NVL(SUM(TRS.RACE_SCR), 0) / COUNT(*) DESC) RANK
			       , TRRAS.TMS_6_AVG_SCR 
			       , RANK .RACE_RANK
			FROM     TBEB_ORGAN         TOR
			       , TBEC_RACER_MASTER  TRM
			       , TBEB_RACE          TR
			       , TBEB_RANK_SCR      TRS
			       , (
                        SELECT
			                     TRVA.STND_YEAR
			                   , TRVA.MBR_CD
			                   , TRVA.TMS
			                   , TRVA.DAY_ORD
			                   , TRVA.RACE_NO
			                   , TRVA.RACE_REG_NO
			                   , NVL(TRVB.ACDNT_SCR, TRVA.ACDNT_SCR) ACDNT_SCR
                        FROM     (
            			            SELECT
            			                     TRVA.STND_YEAR
            			                   , TRVA.MBR_CD
            			                   , TRVA.TMS
            			                   , TRVA.DAY_ORD
            			                   , TRVA.RACE_NO
            			                   , TRVA.RACE_REG_NO
            			                   , SUM(ACDNT_SCR) ACDNT_SCR
            			            FROM     TBED_RACE_VOIL_ACT TRVA
            			                   , TBEB_ACDNT_SCR     TAS
            			                   , TBEB_ORGAN         TOR
            			            WHERE  TRVA.STND_YEAR    = TAS.STND_YEAR
            			            AND    TRVA.VOIL_CD      = TAS.VOIL_CD
            			            AND    TRVA.STND_YEAR    = TOR.STND_YEAR  
            			            AND    TRVA.MBR_CD       = TOR.MBR_CD     
            			            AND    TRVA.TMS          = TOR.TMS        
            			            AND    TRVA.DAY_ORD      = TOR.DAY_ORD    
            			            AND    TRVA.RACE_NO      = TOR.RACE_NO    
            			            AND    TRVA.RACE_REG_NO  = TOR.RACE_REG_NO
            			            AND    TOR.ABSE_CD      <> '003'
            			            AND    TOR.IMMT_CLS_CD  <> '003'
						            AND    TRVA.STND_YEAR     = ?
						            AND    TRVA.MBR_CD        = ?
						            AND    TRVA.TMS           = ?
						            AND    TRVA.DAY_ORD       = ? - 1
						            AND    TRVA.RACE_NO BETWEEN ?
						                                    AND ?
            			            GROUP BY
            			                     TRVA.STND_YEAR
            			                   , TRVA.MBR_CD
            			                   , TRVA.TMS
            			                   , TRVA.DAY_ORD
            			                   , TRVA.RACE_NO
            			                   , TRVA.RACE_REG_NO
			                     ) TRVA
			                   , (
            			            SELECT
            			                     TRVA.STND_YEAR
            			                   , TRVA.MBR_CD
            			                   , TRVA.TMS
            			                   , TRVA.DAY_ORD
            			                   , TRVA.RACE_NO
            			                   , TRVA.RACE_REG_NO
            			                   , SUM(ACDNT_SCR) ACDNT_SCR
            			            FROM     TBED_RACE_VOIL_ACT TRVA
            			                   , TBEB_ACDNT_SCR     TAS
            			                   , TBEB_ORGAN         TOR
            			            WHERE  TRVA.STND_YEAR    = TAS.STND_YEAR
            			            AND    TRVA.VOIL_CD      = TAS.VOIL_CD
            			            AND    TRVA.STND_YEAR    = TOR.STND_YEAR  
            			            AND    TRVA.MBR_CD       = TOR.MBR_CD     
            			            AND    TRVA.TMS          = TOR.TMS        
            			            AND    TRVA.DAY_ORD      = TOR.DAY_ORD    
            			            AND    TRVA.RACE_NO      = TOR.RACE_NO    
            			            AND    TRVA.RACE_REG_NO  = TOR.RACE_REG_NO
            			            AND    TOR.ABSE_CD      <> '003'
            			            AND    TOR.IMMT_CLS_CD  <> '003'
						            AND    TRVA.STND_YEAR     = ?
						            AND    TRVA.MBR_CD        = ?
						            AND    TRVA.TMS           = ?
						            AND    TRVA.DAY_ORD       = ? - 1
						            AND    TRVA.RACE_NO BETWEEN ?
						                                    AND ?
            			            AND   TRVA.VOIL_CD      IN ('110', '120')
            			            GROUP BY
            			                     TRVA.STND_YEAR
            			                   , TRVA.MBR_CD
            			                   , TRVA.TMS
            			                   , TRVA.DAY_ORD
            			                   , TRVA.RACE_NO
            			                   , TRVA.RACE_REG_NO
                                 ) TRVB
                        WHERE  TRVA.STND_YEAR   = TRVB.STND_YEAR  (+)
			            AND    TRVA.MBR_CD      = TRVB.MBR_CD     (+)
			            AND    TRVA.TMS         = TRVB.TMS        (+)
			            AND    TRVA.DAY_ORD     = TRVB.DAY_ORD    (+)
			            AND    TRVA.RACE_NO     = TRVB.RACE_NO    (+)
			            AND    TRVA.RACE_REG_NO = TRVB.RACE_REG_NO(+)
			         ) TRVA -- 사고점 조회
			       , (
						SELECT *
						FROM   (
						            SELECT   RANK() OVER (PARTITION BY TRRAS.RACER_NO ORDER BY APLY_DT DESC) RANK
						                   , TRRAS.*
						            FROM   TBEB_RACER_RECD_ACCU_SUM TRRAS
						            WHERE  TRRAS.APLY_DT  < (
						                                        SELECT
						                                               MIN(TRDO.RACE_DAY) RACE_DAY
						                                        FROM   TBEB_RACE_DAY_ORD TRDO
						                                        WHERE  TRDO.STND_YEAR = ?
						                                        AND    TRDO.MBR_CD    = ?
						                                        AND    TRDO.TMS       = ?
						                                    )
						            AND   MBR_CD = '000'
						            AND   TMS    = 0
						            AND   TRRAS.ST_MTHD_CD = '000' --ST방식전체설정
						       )
						WHERE  RANK = 1
			         ) TRRAS -- 선수최근성적
			       , (
			            SELECT     
			                     RACER_NO
			                   , SUBSTR(MAX(SYS_CONNECT_BY_PATH(RANK, ', ')), 2) RACE_RANK
			            FROM   (
			                        SELECT 
			                                 TOR.RACER_NO
			                               , TOR.RACE_NO
			                               --, TOR.RANK
										   , DECODE(TR.RACE_STTS_CD, '002', '불성립', '003', '불성립', '001', DECODE(TOR.ABSE_CD, '002', '결장', '003', '면책결장', '001', DECODE(TOR.IMMT_CLS_CD, '003', (SELECT CD_NM FROM TBEA_SPEC_CD WHERE GRP_CD = 'E00113' AND CD = TOR.IMMT_CLS_CD), TO_CHAR(TOR.RANK)), (SELECT CD_NM FROM TBEA_SPEC_CD WHERE GRP_CD = 'E00110' AND CD = TOR.ABSE_CD))) RANK
			                               , RANK() OVER (PARTITION BY TOR.RACER_NO ORDER BY TOR.DAY_ORD DESC, TOR.RACE_NO DESC) RACE
			                        FROM   TBEB_ORGAN TOR
			                             , TBEB_RACE TR
			                        WHERE  TOR .STND_YEAR     = TR.STND_YEAR
			                        AND    TOR .MBR_CD        = TR.MBR_CD
			                        AND    TOR .TMS           = TR.TMS
			                        AND    TOR .DAY_ORD       = TR.DAY_ORD
			                        AND    TOR .RACE_NO       = TR.RACE_NO
			                        AND    TOR .STND_YEAR     = ?
			                        AND    TOR .MBR_CD        = ?
			                        AND    TOR .TMS           = ?
			                        AND    TOR .DAY_ORD       = ? - 1
			                        AND    TOR .RACE_NO BETWEEN ?
			                                                AND ?
			                    )
			            START WITH RACE = 1
			            CONNECT BY PRIOR RACE = RACE - 1 
			            AND PRIOR RACER_NO = RACER_NO
			            GROUP BY RACER_NO
			         ) RANK -- 전일성적조회
			WHERE  TOR .STND_YEAR    = TR   .STND_YEAR
			AND    TOR .MBR_CD       = TR   .MBR_CD
			AND    TOR .TMS          = TR   .TMS
			AND    TOR .DAY_ORD      = TR   .DAY_ORD
			AND    TOR .RACE_NO      = TR   .RACE_NO
			AND    TOR .STND_YEAR    = TRS  .STND_YEAR
			AND    TR  .RACE_DGRE_CD = TRS  .RACE_DGRE_CD
			AND    TOR .RANK         = TRS  .RANK
			AND    TOR .STND_YEAR    = TRVA .STND_YEAR  (+)
			AND    TOR .MBR_CD       = TRVA .MBR_CD     (+)
			AND    TOR .TMS          = TRVA .TMS        (+)
			AND    TOR .DAY_ORD      = TRVA .DAY_ORD    (+)
			AND    TOR .RACE_NO      = TRVA .RACE_NO    (+)
			AND    TOR .RACE_REG_NO  = TRVA .RACE_REG_NO(+)
			AND    TOR .RACER_NO     = TRRAS.RACER_NO   (+)
			AND    TOR .RACER_NO     = RANK .RACER_NO   (+)
			AND    TOR .RACER_NO     = TRM  .RACER_NO
			AND    TOR .ABSE_CD     <> '003'   -- 면책결장이 아닌 경우
			AND    TOR .IMMT_CLS_CD <> '003'   -- 면책이 아닌 경우
			AND    TOR .STND_YEAR    = ?
			AND    TOR .MBR_CD       = ?
			AND    TOR .TMS          = ?
			AND    TOR .DAY_ORD      = ? - 1
			AND    TOR .RACE_NO BETWEEN ?
			                        AND ?
			GROUP BY TOR  .RACER_NO
			       , TRM  .NM_KOR
			       , TOR  .RACER_GRD_CD
			       , TRRAS.TMS_6_AVG_SCR 
			       , RANK .RACE_RANK
        ]]>
    </query> 
    <query id="tbeb_organ_fb009" desc="8명선수에대한 중복출전조회" fetchSize="10">
        <![CDATA[
			SELECT /*  tbeb_organ_fb009 IWORK_SFR-008 경정 선수편성 메뉴 개선  */
			         STND_YEAR
			       , MBR_CD
			       , TMS
			       , DAY_ORD
			       , RACE_NO
			       , CNT
			       , SUBSTR(MAX(SYS_CONNECT_BY_PATH (NM_KOR, ', ')), 2) RACER
			FROM   (
			            SELECT
			                     TOR .STND_YEAR
			                   , TOR .MBR_CD
			                   , TOR .TMS
			                   , TOR .DAY_ORD
			                   , TOR .RACE_NO
			                   , RACE.CNT
			                   , TRM .NM_KOR || '(' || RACE_REG_NO || ')' NM_KOR
			                   , RANK() OVER (PARTITION BY TOR .STND_YEAR
			                                             , TOR .MBR_CD
			                                             , TOR .TMS
			                                             , TOR .DAY_ORD
			                                             , TOR .RACE_NO
			                                      ORDER BY TOR .RACE_REG_NO ) RACE
			            FROM     TBEC_RACER_MASTER TRM
			                   , TBEB_ORGAN        TOR
			                   , (
			                        SELECT
			                                 STND_YEAR
			                               , MBR_CD
			                               , TMS
			                               , DAY_ORD
			                               , RACE_NO
			                               , COUNT(*) CNT
			                        FROM   TBEB_ORGAN
			                        WHERE  RACER_NO IN (?, ?, ?, ?, ?, ?, ?, ?)
			                        AND    STND_YEAR = ?
			                        GROUP BY STND_YEAR
			                               , MBR_CD
			                               , TMS
			                               , DAY_ORD
			                               , RACE_NO
			                        HAVING COUNT(*) > 1
			                     ) RACE -- 중복출전선수
			            WHERE  TOR.STND_YEAR = RACE.STND_YEAR
			            AND    TOR.MBR_CD    = RACE.MBR_CD
			            AND    TOR.TMS       = RACE.TMS
			            AND    TOR.DAY_ORD   = RACE.DAY_ORD
			            AND    TOR.RACE_NO   = RACE.RACE_NO
			            AND    TOR.RACER_NO  = TRM .RACER_NO
			            AND    TOR.RACER_NO IN (?, ?, ?, ?, ?, ?, ?, ?)
			            AND    TOR.STND_YEAR = ?
			            AND    TOR.MBR_CD    = ?
			            AND    TOR.TMS       < ?
			       )
			START WITH RACE = 1
			CONNECT BY PRIOR RACE = RACE - 1
			AND PRIOR STND_YEAR = STND_YEAR
			AND PRIOR MBR_CD    = MBR_CD
			AND PRIOR TMS       = TMS
			AND PRIOR DAY_ORD   = DAY_ORD
			AND PRIOR RACE_NO   = RACE_NO
			AND PRIOR CNT       = CNT
			GROUP BY
			         STND_YEAR
			       , MBR_CD
			       , TMS
			       , DAY_ORD
			       , RACE_NO
			       , CNT
			ORDER BY
			         STND_YEAR DESC
			       , MBR_CD
			       , TMS       DESC
			       , DAY_ORD   DESC
			       , RACE_NO   DESC
			       , CNT
        ]]>
    </query> 
    <query id="tbeb_organ_fb010" desc="출주표검증" fetchSize="10">
        <![CDATA[
            SELECT /*  tbeb_organ_fb010 IWORK_SFR-008 경정 선수편성 메뉴 개선  */
                     TOR.STND_YEAR
                   , TOR.MBR_CD
                   , TOR.TMS
                   , TOR.DAY_ORD
                   , DECODE(TOR.ST_MTHD_CD, '001', '(온)'||TOR.RACE_NO, TOR.RACE_NO) RACE_NO
                   , TOR.RACE_REG_NO
                   , TSC.CD_NM
                   , TOR.RACER_NO
                   , TRM.NM_KOR
                   , GET_ESC_RACE    (TOR.STND_YEAR, TOR.MBR_CD, TOR.TMS, TOR.DAY_ORD, TOR.RACE_NO, TOR.RACER_NO) ESC_RACE
                   , GET_VERIFI_RACER(TOR.STND_YEAR, TOR.MBR_CD, TOR.TMS, TOR.DAY_ORD, TOR.RACE_NO, TOR.RACER_NO) VERIFI_RACER
                   , GET_RELA_RACER  (TOR.STND_YEAR, TOR.MBR_CD, TOR.TMS, TOR.DAY_ORD, TOR.RACE_NO, TOR.RACER_NO) RELA_RACER
			       , NVL(RACE .RACE_CNT_1, '0/0') RACE_CNT_1
			       , NVL(RACE .RACE_CNT_2, '0/0') RACE_CNT_2
			       , NVL(RACE .RACE_CNT_3, '0/0') RACE_CNT_3
			       , NVL(RACE .RACE_CNT_4, '0/0') RACE_CNT_4
			       , NVL(RACE .RACE_CNT_5, '0/0') RACE_CNT_5
			       , NVL(RACE .RACE_CNT_6, '0/0') RACE_CNT_6
			       , NVL(RACE .RACE_CNT_7, '0/0') RACE_CNT_7
			       , NVL(RACE .RACE_CNT_8, '0/0') RACE_CNT_8
			       , REG.REG_CNT
            FROM     TBEB_ORGAN        TOR
                   , TBEA_SPEC_CD      TSC
                   , TBEC_RACER_MASTER TRM
                   , (
               		   SELECT
                           RACER_NO 
                           , RACE_CNT_11||'/'||RACE_CNT_21 AS RACE_CNT_1
                           , RACE_CNT_12||'/'||RACE_CNT_22 AS RACE_CNT_2
                           , RACE_CNT_13||'/'||RACE_CNT_23 AS RACE_CNT_3
                           , RACE_CNT_14||'/'||RACE_CNT_24 AS RACE_CNT_4
                           , RACE_CNT_15||'/'||RACE_CNT_25 AS RACE_CNT_5
                           , RACE_CNT_16||'/'||RACE_CNT_26 AS RACE_CNT_6
                           , RACE_CNT_17||'/'||RACE_CNT_27 AS RACE_CNT_7
                           , RACE_CNT_18||'/'||RACE_CNT_28 AS RACE_CNT_8
                        FROM (
							SELECT
							         TBO.RACER_NO, TBO.DAY_ORD
							         , SUM(CASE WHEN TBO.DAY_ORD = 1 AND RACE_REG_NO = 1 THEN 1 ELSE 0 END) RACE_CNT_11
	                                 , SUM(CASE WHEN TBO.DAY_ORD = 2 AND RACE_REG_NO = 1 THEN 1 ELSE 0 END) RACE_CNT_21
	                                 , SUM(CASE WHEN TBO.DAY_ORD = 1 AND RACE_REG_NO = 2 THEN 1 ELSE 0 END) RACE_CNT_12
	                                 , SUM(CASE WHEN TBO.DAY_ORD = 2 AND RACE_REG_NO = 2 THEN 1 ELSE 0 END) RACE_CNT_22
	                                 , SUM(CASE WHEN TBO.DAY_ORD = 1 AND RACE_REG_NO = 3 THEN 1 ELSE 0 END) RACE_CNT_13
	                                 , SUM(CASE WHEN TBO.DAY_ORD = 2 AND RACE_REG_NO = 3 THEN 1 ELSE 0 END) RACE_CNT_23
	                                 , SUM(CASE WHEN TBO.DAY_ORD = 1 AND RACE_REG_NO = 4 THEN 1 ELSE 0 END) RACE_CNT_14
	                                 , SUM(CASE WHEN TBO.DAY_ORD = 2 AND RACE_REG_NO = 4 THEN 1 ELSE 0 END) RACE_CNT_24
	                                 , SUM(CASE WHEN TBO.DAY_ORD = 1 AND RACE_REG_NO = 5 THEN 1 ELSE 0 END) RACE_CNT_15
	                                 , SUM(CASE WHEN TBO.DAY_ORD = 2 AND RACE_REG_NO = 5 THEN 1 ELSE 0 END) RACE_CNT_25
	                                 , SUM(CASE WHEN TBO.DAY_ORD = 1 AND RACE_REG_NO = 6 THEN 1 ELSE 0 END) RACE_CNT_16
	                                 , SUM(CASE WHEN TBO.DAY_ORD = 2 AND RACE_REG_NO = 6 THEN 1 ELSE 0 END) RACE_CNT_26
	                                 , SUM(CASE WHEN TBO.DAY_ORD = 1 AND RACE_REG_NO = 7 THEN 1 ELSE 0 END) RACE_CNT_17
	                                 , SUM(CASE WHEN TBO.DAY_ORD = 2 AND RACE_REG_NO = 7 THEN 1 ELSE 0 END) RACE_CNT_27
	                                 , SUM(CASE WHEN TBO.DAY_ORD = 1 AND RACE_REG_NO = 8 THEN 1 ELSE 0 END) RACE_CNT_18
	                                 , SUM(CASE WHEN TBO.DAY_ORD = 2 AND RACE_REG_NO = 8 THEN 1 ELSE 0 END) RACE_CNT_28
							FROM   TBEB_ORGAN TBO,
	                               TBEB_RACE_TMS TRT,
	                               TBEB_RACE TR
							WHERE  TBO.STND_YEAR  = TR.STND_YEAR
	                        AND    TBO.MBR_CD     = TR.MBR_CD
	                        AND    TBO.TMS        = TR.TMS
	                        AND    TBO.DAY_ORD    = TR.DAY_ORD
	                        AND    TBO.RACE_NO    = TR.RACE_NO
	                        AND    TR.STND_YEAR   = TRT.STND_YEAR
	                        AND    TR.MBR_CD      = TRT.MBR_CD
	                        AND    TR.TMS         = TRT.TMS 
	                        AND    TBO.STND_YEAR  = ?
							AND    TBO.RACE_DAY  <= (
								                    SELECT
								                           TRDO.RACE_DAY
								                    FROM   TBEB_RACE_DAY_ORD TRDO
								                    WHERE  TRDO.STND_YEAR = ?
								                    AND    TRDO.MBR_CD    = ?
								                    AND    TRDO.TMS       = ?
								                    AND    TRDO.DAY_ORD   = ?
							                    )
							AND    TBO.ABSE_CD  <> '003'
	                        AND    TR.RACE_DGRE_CD NOT IN (SELECT CD FROM TBEA_SPEC_CD WHERE GRP_CD = 'E00151')
	                        AND    TRT.QURT_CD = (SELECT QURT_CD FROM TBEB_RACE_TMS WHERE STND_YEAR = ? AND MBR_CD = ? AND TMS = ?)
	                   		AND	   TBO.DAY_ORD IN ('1','2') --화면 공간 때문에 1,2일차만 표현 
	                   		AND    TBO.ST_MTHD_CD = DECODE(?, '000', TBO.ST_MTHD_CD, ?)
							GROUP BY TBO.RACER_NO, TBO.DAY_ORD
						) 	
                     ) RACE -- 년도별 정번수
                   , (
 			            SELECT
                                 TOR.RACER_NO
                               , TOR.RACE_REG_NO
                               , COUNT(*) REG_CNT
 			            FROM   TBEB_ORGAN         TOR
                        WHERE  TOR.STND_YEAR      = ?
                        AND    TOR.MBR_CD         = ?
                        AND    TOR.TMS            = ?
                        AND    TOR.DAY_ORD       <= ?
                        AND    TOR.ST_MTHD_CD = DECODE(?, '000', TOR.ST_MTHD_CD, ?)
                        GROUP BY 
                                 TOR.RACER_NO
                               , TOR.RACE_REG_NO
                        HAVING COUNT(*) > 1
                     ) REG -- 회차별 정번수
            WHERE  TOR.RACE_REG_NO = TSC.CD
            AND    TSC.GRP_CD      = 'E00009'
            AND    TOR.RACER_NO    = TRM .RACER_NO
            AND    TOR.RACER_NO    = RACE.RACER_NO   (+)
            AND    TOR.RACER_NO    = REG .RACER_NO   (+)
            AND    TOR.RACE_REG_NO = REG .RACE_REG_NO(+)
            AND    TOR.STND_YEAR   = ?
			AND    TOR.MBR_CD      = ?
			AND    TOR.TMS         = ?
			AND    TOR.DAY_ORD     = ?
			AND    TOR.ST_MTHD_CD = DECODE(?, '000', TOR.ST_MTHD_CD, ?)
            ORDER BY 
                     TOR.STND_YEAR
                   , TOR.MBR_CD
                   , TOR.TMS
                   , TOR.DAY_ORD
                   , TOR.RACE_NO
                   , TOR.RACE_REG_NO
        ]]>
    </query> 
    <query id="tbeb_organ_fb011" desc="기수별 출주횟수 조회" fetchSize="10">
        <![CDATA[
			SELECT /* tbeb_organ_fb011 기수별 출주횟수 조회  */
			         TOR.STND_YEAR
			       , TOR.MBR_CD
			       , TOR.TMS
			       , TOR.DAY_ORD
			       , TOR.RACE_NO
			       , TRM.RACER_PERIO_NO
			       , TOR.RACE_NO || TRM.RACER_PERIO_NO PERIO_NO
			       , COUNT(*) CNT
			FROM     TBEB_ORGAN        TOR
			       , TBEC_RACER_MASTER TRM
			WHERE  TOR.RACER_NO  = TRM.RACER_NO
			AND    TOR.STND_YEAR = ?
			AND    TOR.MBR_CD    = ?
			AND    TOR.TMS       = ?
			AND    TOR.DAY_ORD   = ?
			AND    TOR.ST_MTHD_CD = DECODE(?, '000', TOR.ST_MTHD_CD, ?)
			GROUP BY
			         TOR.STND_YEAR
			       , TOR.MBR_CD
			       , TOR.TMS
			       , TOR.DAY_ORD
			       , TOR.RACE_NO
			       , TRM.RACER_PERIO_NO
			ORDER BY 
			         TOR.STND_YEAR
			       , TOR.MBR_CD
			       , TOR.TMS
			       , TOR.DAY_ORD
			       , TOR.RACE_NO        
		]]>
    </query> 
    <query id="tbeb_organ_fb012" desc="소개항주리스트조회" fetchSize="10">
        <![CDATA[
			SELECT /* tbeb_organ_fb012 소개항주리스트조회  */
			         STND_YEAR
			       , MBR_CD
			       , TMS
			       , DAY_ORD
			       , RACE_NO
			       , RACE_REG_NO
			       , RACER_NO
			       , NM_KOR
			       , VIEW_MOT_NO
			       , VIEW_BOAT_NO
			       , INTRO_RUN_TM RUN_TM
			       , SEQ
			FROM   (
			            SELECT
			                     TOR.STND_YEAR
			                   , TOR.MBR_CD
			                   , TOR.TMS
			                   , TOR.DAY_ORD
			                   , TOR.RACE_NO
			                   , TOR.RACE_REG_NO
			                   , TOR.RACER_NO
			                   , TRM.NM_KOR
			                   , SUBSTR(TOR.MOT_NO , 6, 3) VIEW_MOT_NO
			                   , SUBSTR(TOR.BOAT_NO, 6, 3) VIEW_BOAT_NO
			                   , TOR.INTRO_RUN_TM
			                   , RANK() OVER (ORDER BY TOR.INTRO_RUN_TM) SEQ
			            FROM     TBEB_ORGAN        TOR
			                   , TBEC_RACER_MASTER TRM
			            WHERE  TOR.RACER_NO       = TRM.RACER_NO
			            AND    TOR.RACE_DAY BETWEEN ?
			                                    AND ?
			       )
			WHERE  SEQ <= ?
		]]>
    </query> 
    <query id="tbeb_organ_fb013" desc="완주타임리스트조회" fetchSize="10">
        <![CDATA[
			SELECT /*tbeb_organ_fb013 완주타임리스트조회*/
			         STND_YEAR
			       , MBR_CD
			       , TMS
			       , DAY_ORD
			       , RACE_NO
			       , RACE_REG_NO
			       , RACER_NO
			       , NM_KOR
			       , VIEW_MOT_NO
			       , VIEW_BOAT_NO
			       , RACE_TM RUN_TM
			       , SEQ
			FROM   (
			            SELECT
			                     TOR.STND_YEAR
			                   , TOR.MBR_CD
			                   , TOR.TMS
			                   , TOR.DAY_ORD
			                   , TOR.RACE_NO
			                   , TOR.RACE_REG_NO
			                   , TOR.RACER_NO
			                   , TRM.NM_KOR
			                   , SUBSTR(TOR.MOT_NO , 6, 3) VIEW_MOT_NO
			                   , SUBSTR(TOR.BOAT_NO, 6, 3) VIEW_BOAT_NO
			                   , TOR.RACE_TM
			                   , RANK() OVER (ORDER BY TOR.RACE_TM) SEQ
			            FROM     TBEB_ORGAN        TOR
			                   , TBEC_RACER_MASTER TRM
			            WHERE  TOR.RACER_NO       = TRM.RACER_NO
			            AND    TOR.RACE_DAY BETWEEN ?
			                                    AND ?
			       )
			WHERE  SEQ <= ?
		]]>
    </query> 
    <query id="tbeb_organ_fb014" desc="다승리스트조회" fetchSize="10">
        <![CDATA[
			SELECT /* tbeb_organ_fb014 다승리스트조회 */
			         TOR.RACER_NO
			       , TRM.NM_KOR
			       , TOR.STND_YEAR
			       , TOR.CNT
			       , TOR.SEQ
			FROM     TBEC_RACER_MASTER TRM
			       , (
			            SELECT
			                     RACER_NO
			                   , STND_YEAR
			                   , CNT
			                   , RANK() OVER (ORDER BY CNT DESC) SEQ
			            FROM   (
			                        SELECT
			                                 RACER_NO
			                               , STND_YEAR
			                               , COUNT(*) CNT
			                        FROM   TBEB_ORGAN
			                        WHERE  RACE_DAY BETWEEN ?
			                                            AND ?
			                        AND    RANK     <= ?
			                        AND    RANK      > 0
			                        AND    ST_MTHD_CD   = DECODE(?, '000', ST_MTHD_CD, ?)
			                        GROUP BY RACER_NO
			                               , STND_YEAR
			                   )
			         ) TOR
			WHERE  TOR.RACER_NO = TRM.RACER_NO
			AND    TOR.SEQ     <= ?
		]]>
    </query> 
    <query id="tbeb_organ_fb015" desc="코스별입상률조회" fetchSize="10">
        <![CDATA[
			SELECT	/*  tbeb_organ_fb015 IWORK_SFR-008 경정 선수편성 메뉴 개선  */
			         RANK.ENTRY_COURSE
			       , NVL(MIN(DECODE(RANK.RANK       , 1    , RANK.CNT       )), 0) CNT_1
			       , NVL(MIN(DECODE(RANK.RANK       , 2    , RANK.CNT       )), 0) CNT_2
			       , NVL(MIN(DECODE(RANK.RANK       , 3    , RANK.CNT       )), 0) CNT_3
			       , NVL(MIN(DECODE(RANK.RANK       , 4    , RANK.CNT       )), 0) CNT_4
			       , NVL(MIN(DECODE(RANK.RANK       , 5    , RANK.CNT       )), 0) CNT_5
			       , NVL(MIN(DECODE(RANK.RANK       , 6    , RANK.CNT       )), 0) CNT_6
			       , NVL(MIN(DECODE(RANK.RANK       , 7    , RANK.CNT       )), 0) CNT_7
			       , NVL(MIN(DECODE(RANK.RANK       , 8    , RANK.CNT       )), 0) CNT_8
			       , NVL(MIN(DECODE(RANK.RANK       , 1    , RANK.PERCENTAGE)), 0) PERCENTAGE_1
			       , NVL(MIN(DECODE(RANK.RANK       , 2    , RANK.PERCENTAGE)), 0) PERCENTAGE_2
			       , NVL(MIN(DECODE(RANK.RANK       , 3    , RANK.PERCENTAGE)), 0) PERCENTAGE_3
			       , NVL(MIN(DECODE(RANK.RANK       , 4    , RANK.PERCENTAGE)), 0) PERCENTAGE_4
			       , NVL(MIN(DECODE(RANK.RANK       , 5    , RANK.PERCENTAGE)), 0) PERCENTAGE_5
			       , NVL(MIN(DECODE(RANK.RANK       , 6    , RANK.PERCENTAGE)), 0) PERCENTAGE_6
			       , NVL(MIN(DECODE(RANK.RANK       , 7    , RANK.PERCENTAGE)), 0) PERCENTAGE_7
			       , NVL(MIN(DECODE(RANK.RANK       , 8    , RANK.PERCENTAGE)), 0) PERCENTAGE_8
			       , MAX(RANK.MAX_RACE_REG_NO) MAX_RACE_REG_NO
			FROM   
			         (
			            SELECT
			                     ENTRY_COURSE
			                   , RANK
			                   , COUNT(*) CNT
			                   , ROUND((RATIO_TO_REPORT(COUNT(*)) OVER(PARTITION BY ENTRY_COURSE)) * 100, 1)  PERCENTAGE
			                   , (SELECT  MAX(RACE_REG_NO) 
                                    FROM    TBEB_ORGAN
                                    WHERE  RACE_DAY BETWEEN  ?
                                                        AND  ? 
                                    AND    ST_MTHD_CD   = DECODE(?, '000', ST_MTHD_CD, ?)) MAX_RACE_REG_NO
			            FROM   TBEB_ORGAN
			            WHERE  RACE_DAY BETWEEN ?
			                                AND ?
			            AND    ENTRY_COURSE IS NOT NULL
			            AND    RANK         <> 0
			            AND    ST_MTHD_CD   = DECODE(?, '000', ST_MTHD_CD, ?)
			            GROUP BY ENTRY_COURSE
			                   , RANK
			         ) RANK
			GROUP BY RANK.ENTRY_COURSE
			ORDER BY RANK.ENTRY_COURSE
		]]>
    </query> 
    <query id="tbeb_organ_fb015_" desc="코스별전법조회" fetchSize="10">
        <![CDATA[
			SELECT /*tbeb_organ_fb015_ 코스별전법조회  */
			         STRA.ENTRY_COURSE
			       , NVL(MIN(DECODE(STRA.STRATEGY_CD, '001', STRA.CNT       )), 0) CNT_1
			       , NVL(MIN(DECODE(STRA.STRATEGY_CD, '002', STRA.CNT       )), 0) CNT_2
			       , NVL(MIN(DECODE(STRA.STRATEGY_CD, '003', STRA.CNT       )), 0) CNT_3
			       , NVL(MIN(DECODE(STRA.STRATEGY_CD, '004', STRA.CNT       )), 0) CNT_4
			       , NVL(MIN(DECODE(STRA.STRATEGY_CD, '005', STRA.CNT       )), 0) CNT_5
			       , NVL(MIN(DECODE(STRA.STRATEGY_CD, '001', STRA.PERCENTAGE)), 0) PERCENTAGE_1
			       , NVL(MIN(DECODE(STRA.STRATEGY_CD, '002', STRA.PERCENTAGE)), 0) PERCENTAGE_2
			       , NVL(MIN(DECODE(STRA.STRATEGY_CD, '003', STRA.PERCENTAGE)), 0) PERCENTAGE_3
			       , NVL(MIN(DECODE(STRA.STRATEGY_CD, '004', STRA.PERCENTAGE)), 0) PERCENTAGE_4
			       , NVL(MIN(DECODE(STRA.STRATEGY_CD, '005', STRA.PERCENTAGE)), 0) PERCENTAGE_5
			FROM   
			         (
			            SELECT
			                     ENTRY_COURSE
			                   , STRATEGY_CD
			                   , COUNT(*) CNT
			                   , ROUND((RATIO_TO_REPORT(COUNT(*)) OVER(PARTITION BY ENTRY_COURSE)) * 100, 1)  PERCENTAGE
			            FROM   TBEB_ORGAN
			            WHERE  RACE_DAY BETWEEN ?
			                                AND ?
			            AND    ENTRY_COURSE IS NOT NULL
			            AND    STRATEGY_CD IS NOT NULL
			            AND    ST_MTHD_CD   = DECODE(?, '000', ST_MTHD_CD, ?)
			            GROUP BY ENTRY_COURSE
			                   , STRATEGY_CD
			         ) STRA
			GROUP BY STRA.ENTRY_COURSE
			ORDER BY STRA.ENTRY_COURSE
		]]>
    </query> 
    <query id="tbeb_organ_fb016" desc="정번별 코스 취득률 조회" fetchSize="10">
        <![CDATA[
			SELECT	/*  tbeb_organ_fb016 IWORK_SFR-008 경정 선수편성 메뉴 개선  */
			         RACE_REG_NO
			       , NVL(MIN(DECODE(ENTRY_COURSE, 1, CNT       )), 0) CNT_1
			       , NVL(MIN(DECODE(ENTRY_COURSE, 2, CNT       )), 0) CNT_2
			       , NVL(MIN(DECODE(ENTRY_COURSE, 3, CNT       )), 0) CNT_3
			       , NVL(MIN(DECODE(ENTRY_COURSE, 4, CNT       )), 0) CNT_4
			       , NVL(MIN(DECODE(ENTRY_COURSE, 5, CNT       )), 0) CNT_5
			       , NVL(MIN(DECODE(ENTRY_COURSE, 6, CNT       )), 0) CNT_6
			       , NVL(MIN(DECODE(ENTRY_COURSE, 7, CNT       )), 0) CNT_7
			       , NVL(MIN(DECODE(ENTRY_COURSE, 8, CNT       )), 0) CNT_8
			       , NVL(MIN(DECODE(ENTRY_COURSE, 1, PERCENTAGE)), 0) PERCENTAGE_1
			       , NVL(MIN(DECODE(ENTRY_COURSE, 2, PERCENTAGE)), 0) PERCENTAGE_2
			       , NVL(MIN(DECODE(ENTRY_COURSE, 3, PERCENTAGE)), 0) PERCENTAGE_3
			       , NVL(MIN(DECODE(ENTRY_COURSE, 4, PERCENTAGE)), 0) PERCENTAGE_4
			       , NVL(MIN(DECODE(ENTRY_COURSE, 5, PERCENTAGE)), 0) PERCENTAGE_5
			       , NVL(MIN(DECODE(ENTRY_COURSE, 6, PERCENTAGE)), 0) PERCENTAGE_6
			       , NVL(MIN(DECODE(ENTRY_COURSE, 7, PERCENTAGE)), 0) PERCENTAGE_7
			       , NVL(MIN(DECODE(ENTRY_COURSE, 8, PERCENTAGE)), 0) PERCENTAGE_8
			FROM   (
			            SELECT
			                     RACE_REG_NO
			                   , ENTRY_COURSE
			                   , COUNT(*) CNT
			                   , ROUND((RATIO_TO_REPORT(COUNT(*)) OVER(PARTITION BY RACE_REG_NO)) * 100, 1)  PERCENTAGE
			            FROM   TBEB_ORGAN
			            WHERE  RACE_DAY BETWEEN ?
			                                AND ?
			            AND    ENTRY_COURSE IS NOT NULL
			            AND    ST_MTHD_CD   = DECODE(?, '000', ST_MTHD_CD, ?)
			            GROUP BY RACE_REG_NO
			                   , ENTRY_COURSE
			       )
			GROUP BY RACE_REG_NO
			ORDER BY RACE_REG_NO
		]]>
    </query> 
    <query id="tbeb_organ_fb017" desc="출발위반현황 리스트조회" fetchSize="10">
        <![CDATA[
			SELECT /* tbeb_organ_fb017 출발위반현황 리스트조회*/
			         TOR .STND_YEAR
			       , TRVA.F_CNT
			       , TRVA.L_CNT
			       , TRVA.CNT
			       , TOR .STAR_TM
			       , ROUND(TRVA.CNT / TOR .RACE_CNT * 100, 1) FAIL
			       , TOR .RACE_CNT
			       , TSVR.RMK
			FROM   
			         (
			            SELECT
			                     STND_YEAR
			                   , DECODE('000','000', 
			                 			ROUND(SUM(DECODE(ST_MTHD_CD, '001', 0,STAR_TM))/NVL(SUM(DECODE(ST_MTHD_CD, '001', 0, 1)),1), 2) ,
			                 			ROUND(AVG(STAR_TM))
			                     ) STAR_TM
			                   , COUNT(*) RACE_CNT
			            FROM   TBEB_ORGAN
			            WHERE  RACE_DAY BETWEEN ?
			                                AND ?
			            GROUP BY STND_YEAR
			         ) TOR
			       , (
			            SELECT 
			                     STND_YEAR
			                   , NVL(MIN(DECODE(VOIL_CD, '110', CNT)), 0) F_CNT
			                   , NVL(MIN(DECODE(VOIL_CD, '120', CNT)), 0) L_CNT
			                   , SUM(CNT)                                 CNT
			            FROM   (
			                        SELECT 
			                                 STND_YEAR
			                               , VOIL_CD
			                               , COUNT(*) CNT
			                        FROM   TBED_RACE_VOIL_ACT
			                        WHERE  VOIL_CD IN('110', '120')
			                        AND    RACE_DAY BETWEEN ?
			                                            AND ?
			                        GROUP BY 
			                                 STND_YEAR
			                               , VOIL_CD
			                   )
			            GROUP BY STND_YEAR
			         ) TRVA
			       , TBEB_STR_VOIL_RGTN TSVR
			WHERE  TOR.STND_YEAR = TRVA.STND_YEAR(+)
			AND    TOR.STND_YEAR = TSVR.STND_YEAR(+)
			ORDER BY STND_YEAR DESC
		]]>
    </query> 
    <query id="tbeb_organ_fb018" desc="코스별 승률 리스트조회" fetchSize="10">
        <![CDATA[
			SELECT	/*  tbeb_organ_fb018 IWORK_SFR-008 경정 선수편성 메뉴 개선  정번8 까지 추가 수정.  */
			         STND_YEAR
			       , NVL(MIN(DECODE(ENTRY_COURSE, 1, CNT       )), 0) CNT_1
			       , NVL(MIN(DECODE(ENTRY_COURSE, 2, CNT       )), 0) CNT_2
			       , NVL(MIN(DECODE(ENTRY_COURSE, 3, CNT       )), 0) CNT_3
			       , NVL(MIN(DECODE(ENTRY_COURSE, 4, CNT       )), 0) CNT_4
			       , NVL(MIN(DECODE(ENTRY_COURSE, 5, CNT       )), 0) CNT_5
			       , NVL(MIN(DECODE(ENTRY_COURSE, 6, CNT       )), 0) CNT_6
			       , NVL(MIN(DECODE(ENTRY_COURSE, 7, CNT       )), 0) CNT_7
			       , NVL(MIN(DECODE(ENTRY_COURSE, 8, CNT       )), 0) CNT_8
			       , NVL(MIN(DECODE(ENTRY_COURSE, 1, PERCENTAGE)), 0) PERCENTAGE_1
			       , NVL(MIN(DECODE(ENTRY_COURSE, 2, PERCENTAGE)), 0) PERCENTAGE_2
			       , NVL(MIN(DECODE(ENTRY_COURSE, 3, PERCENTAGE)), 0) PERCENTAGE_3
			       , NVL(MIN(DECODE(ENTRY_COURSE, 4, PERCENTAGE)), 0) PERCENTAGE_4
			       , NVL(MIN(DECODE(ENTRY_COURSE, 5, PERCENTAGE)), 0) PERCENTAGE_5
			       , NVL(MIN(DECODE(ENTRY_COURSE, 6, PERCENTAGE)), 0) PERCENTAGE_6
			       , NVL(MIN(DECODE(ENTRY_COURSE, 7, PERCENTAGE)), 0) PERCENTAGE_7
			       , NVL(MIN(DECODE(ENTRY_COURSE, 8, PERCENTAGE)), 0) PERCENTAGE_8
			       , MAX(MAX_RACE_REG_NO) MAX_RACE_REG_NO
			FROM   (
			            SELECT
			                     STND_YEAR
			                   , ENTRY_COURSE
			                   , COUNT(*) CNT
			                   , ROUND((RATIO_TO_REPORT(COUNT(*)) OVER(PARTITION BY STND_YEAR)) * 100, 1)  PERCENTAGE
			                   , MAX(RACE_REG_NO) MAX_RACE_REG_NO
			            FROM   TBEB_ORGAN
			            WHERE  RACE_DAY BETWEEN ?
			                                AND ?
			            AND    ENTRY_COURSE   >= 1
			            AND    RANK            > 0
			            AND    RANK           <= ?
			            AND    ST_MTHD_CD   = DECODE(?, '000', ST_MTHD_CD, ?)		
			            GROUP BY 
			                     STND_YEAR
			                   , ENTRY_COURSE
			       )
			GROUP BY STND_YEAR
			ORDER BY STND_YEAR DESC
		]]>
    </query> 
    <query id="tbeb_organ_fb019" desc="전법별 승률 리스트조회" fetchSize="10">
        <![CDATA[
            SELECT /* tbeb_organ_fb019 전법별 승률 리스트조회  */
        	         STND_YEAR
        	       , NVL(MIN(DECODE(STRATEGY_CD, '001', CNT       )), 0) CNT_1
        	       , NVL(MIN(DECODE(STRATEGY_CD, '002', CNT       )), 0) CNT_2
        	       , NVL(MIN(DECODE(STRATEGY_CD, '003', CNT       )), 0) CNT_3
        	       , NVL(MIN(DECODE(STRATEGY_CD, '004', CNT       )), 0) CNT_4
        	       , NVL(MIN(DECODE(STRATEGY_CD, '005', CNT       )), 0) CNT_5
        	       , NVL(MIN(DECODE(STRATEGY_CD, '001', PERCENTAGE)), 0) PERCENTAGE_1
        	       , NVL(MIN(DECODE(STRATEGY_CD, '002', PERCENTAGE)), 0) PERCENTAGE_2
        	       , NVL(MIN(DECODE(STRATEGY_CD, '003', PERCENTAGE)), 0) PERCENTAGE_3
        	       , NVL(MIN(DECODE(STRATEGY_CD, '004', PERCENTAGE)), 0) PERCENTAGE_4
        	       , NVL(MIN(DECODE(STRATEGY_CD, '005', PERCENTAGE)), 0) PERCENTAGE_5
			FROM   (
			            SELECT
			                     STND_YEAR
			                   , STRATEGY_CD
			                   , COUNT(*) CNT
			                   , ROUND((RATIO_TO_REPORT(COUNT(*)) OVER(PARTITION BY STND_YEAR)) * 100, 1)  PERCENTAGE
			            FROM   TBEB_ORGAN
			            WHERE  RACE_DAY BETWEEN ?
			                                AND ?
			            AND    RANK           = 1
			            AND    ST_MTHD_CD   = DECODE(?, '000', ST_MTHD_CD, ?)
			            GROUP BY 
			                     STND_YEAR
			                   , STRATEGY_CD
			       )
			GROUP BY STND_YEAR
			ORDER BY STND_YEAR DESC
		]]>
    </query> 
    <query id="tbeb_organ_fb020" desc="1위자(스타트타임) 입상률 리스트조회" fetchSize="10">
        <![CDATA[
			SELECT /* tbeb_organ_fb020 1위자(스타트타임) 입상률 리스트조회  */
			         AVGR.STND_YEAR
			       , AVGR.STAR_TM RUN_TM
			       , NVL(MIN(DECODE(RANK, 1, CNT       )), 0) CNT_1
			       , NVL(MIN(DECODE(RANK, 2, CNT       )), 0) CNT_2
			       , NVL(MIN(DECODE(RANK, 3, CNT       )), 0) CNT_3
			       , NVL(MIN(DECODE(RANK, 4, CNT       )), 0) CNT_4
			       , NVL(MIN(DECODE(RANK, 5, CNT       )), 0) CNT_5
			       , NVL(MIN(DECODE(RANK, 6, CNT       )), 0) CNT_6
			       , NVL(MIN(DECODE(RANK, 1, PERCENTAGE)), 0) PERCENTAGE_1
			       , NVL(MIN(DECODE(RANK, 2, PERCENTAGE)), 0) PERCENTAGE_2
			       , NVL(MIN(DECODE(RANK, 3, PERCENTAGE)), 0) PERCENTAGE_3
			       , NVL(MIN(DECODE(RANK, 4, PERCENTAGE)), 0) PERCENTAGE_4
			       , NVL(MIN(DECODE(RANK, 5, PERCENTAGE)), 0) PERCENTAGE_5
			       , NVL(MIN(DECODE(RANK, 6, PERCENTAGE)), 0) PERCENTAGE_6
			FROM   
  			         (
			            SELECT
			                     STND_YEAR
			                   , RANK
			                   , COUNT(*) CNT
			                   , ROUND((RATIO_TO_REPORT(COUNT(*)) OVER(PARTITION BY STND_YEAR)) * 100, 1)  PERCENTAGE
			            FROM   (
			                        SELECT
			                                 STND_YEAR
			                               , STAR_TM
			                               , RANK
			                        FROM   (
			                                    SELECT
			                                             STND_YEAR
			                                           , MBR_CD
			                                           , TMS
			                                           , DAY_ORD
			                                           , RACE_NO
			                                           , STAR_TM
			                                           , RANK
			                                           , RANK() OVER (PARTITION BY STND_YEAR
			                                                                     , MBR_CD
			                                                                     , TMS
			                                                                     , DAY_ORD
			                                                                     , RACE_NO
			                                                              ORDER BY STAR_TM) SEQ
			                                    FROM   TBEB_ORGAN
			                                    WHERE  RACE_DAY BETWEEN ?
			                                                        AND ?
			                                    AND    ST_MTHD_CD   = DECODE(?, '000', ST_MTHD_CD, ?)
			                                    AND    RANK IS NOT NULL
			                               )
			                        WHERE  SEQ = 1
			                   )
			            GROUP BY STND_YEAR
			                   , RANK
			         ) PERS
			       , (
			            SELECT
			                     STND_YEAR
			                   , ROUND(AVG(STAR_TM), 2) STAR_TM
			            FROM   (
			                        SELECT
			                                 STND_YEAR
			                               , STAR_TM
			                        FROM   (
			                                    SELECT
			                                             STND_YEAR
			                                           , MBR_CD
			                                           , TMS
			                                           , DAY_ORD
			                                           , RACE_NO
			                                           , STAR_TM
			                                           , RANK() OVER (PARTITION BY STND_YEAR
			                                                                     , MBR_CD
			                                                                     , TMS
			                                                                     , DAY_ORD
			                                                                     , RACE_NO
			                                                              ORDER BY STAR_TM) SEQ
			                                    FROM   TBEB_ORGAN
			                                    WHERE  RACE_DAY BETWEEN ?
			                                                        AND ?
			                                    AND    RANK IS NOT NULL
			                                    AND    ST_MTHD_CD   = DECODE(?, '000', ST_MTHD_CD, ?)
			                               )
			                        WHERE  SEQ = 1
			                   )
			            GROUP BY STND_YEAR
			         ) AVGR
			WHERE PERS.STND_YEAR = AVGR.STND_YEAR
			GROUP BY AVGR.STND_YEAR
			       , AVGR.STAR_TM
			ORDER BY AVGR.STND_YEAR DESC
		]]>
    </query> 
    <query id="tbeb_organ_fb021" desc="1위자(소개항주) 입상률조회" fetchSize="10">
        <![CDATA[
			SELECT /* tbeb_organ_fb021 1위자(소개항주) 입상률조회  */
			         AVGR.STND_YEAR
			       , AVGR.INTRO_RUN_TM RUN_TM
			       , NVL(MIN(DECODE(RANK, 1, CNT       )), 0) CNT_1
			       , NVL(MIN(DECODE(RANK, 2, CNT       )), 0) CNT_2
			       , NVL(MIN(DECODE(RANK, 3, CNT       )), 0) CNT_3
			       , NVL(MIN(DECODE(RANK, 4, CNT       )), 0) CNT_4
			       , NVL(MIN(DECODE(RANK, 5, CNT       )), 0) CNT_5
			       , NVL(MIN(DECODE(RANK, 6, CNT       )), 0) CNT_6
			       , NVL(MIN(DECODE(RANK, 1, PERCENTAGE)), 0) PERCENTAGE_1
			       , NVL(MIN(DECODE(RANK, 2, PERCENTAGE)), 0) PERCENTAGE_2
			       , NVL(MIN(DECODE(RANK, 3, PERCENTAGE)), 0) PERCENTAGE_3
			       , NVL(MIN(DECODE(RANK, 4, PERCENTAGE)), 0) PERCENTAGE_4
			       , NVL(MIN(DECODE(RANK, 5, PERCENTAGE)), 0) PERCENTAGE_5
			       , NVL(MIN(DECODE(RANK, 6, PERCENTAGE)), 0) PERCENTAGE_6
			FROM   
  			         (
			            SELECT
			                     STND_YEAR
			                   , RANK
			                   , COUNT(*) CNT
			                   , ROUND((RATIO_TO_REPORT(COUNT(*)) OVER(PARTITION BY STND_YEAR)) * 100, 1)  PERCENTAGE
			            FROM   (
			                        SELECT
			                                 STND_YEAR
			                               , INTRO_RUN_TM
			                               , RANK
			                        FROM   (
			                                    SELECT
			                                             STND_YEAR
			                                           , MBR_CD
			                                           , TMS
			                                           , DAY_ORD
			                                           , RACE_NO
			                                           , INTRO_RUN_TM
			                                           , RANK
			                                           , RANK() OVER (PARTITION BY STND_YEAR
			                                                                     , MBR_CD
			                                                                     , TMS
			                                                                     , DAY_ORD
			                                                                     , RACE_NO
			                                                              ORDER BY INTRO_RUN_TM) SEQ
			                                    FROM   TBEB_ORGAN
			                                    WHERE  RACE_DAY BETWEEN ?
			                                                        AND ?
			                                    AND    RANK IS NOT NULL
			                                    AND    ST_MTHD_CD   = DECODE(?, '000', ST_MTHD_CD, ?)
			                               )
			                        WHERE  SEQ = 1
			                   )
			            GROUP BY STND_YEAR
			                   , RANK
			         ) PERS
			       , (
			            SELECT
			                     STND_YEAR
			                   , ROUND(AVG(INTRO_RUN_TM), 2) INTRO_RUN_TM
			            FROM   (
			                        SELECT
			                                 STND_YEAR
			                               , INTRO_RUN_TM
			                        FROM   (
			                                    SELECT
			                                             STND_YEAR
			                                           , MBR_CD
			                                           , TMS
			                                           , DAY_ORD
			                                           , RACE_NO
			                                           , INTRO_RUN_TM
			                                           , RANK() OVER (PARTITION BY STND_YEAR
			                                                                     , MBR_CD
			                                                                     , TMS
			                                                                     , DAY_ORD
			                                                                     , RACE_NO
			                                                              ORDER BY INTRO_RUN_TM) SEQ
			                                    FROM   TBEB_ORGAN
			                                    WHERE  RACE_DAY BETWEEN ?
			                                                        AND ?
			                                    AND    RANK IS NOT NULL
			                                    AND    ST_MTHD_CD   = DECODE(?, '000', ST_MTHD_CD, ?)
			                               )
			                        WHERE  SEQ = 1
			                   )
			            GROUP BY STND_YEAR
			         ) AVGR
			WHERE PERS.STND_YEAR = AVGR.STND_YEAR
			GROUP BY AVGR.STND_YEAR
			       , AVGR.INTRO_RUN_TM
			ORDER BY AVGR.STND_YEAR DESC
		]]>
    </query> 
    <query id="tbeb_organ_fb022" desc="스타트타임분포 리스트조회" fetchSize="10">
        <![CDATA[
			SELECT /* tbeb_organ_fb022 스타트타임분포 리스트조회  */
			         ST.STND_YEAR
			       , NVL(MIN(DECODE(STAR_TM, 1, CNT       )), 0) CNT_1
			       , NVL(MIN(DECODE(STAR_TM, 2, CNT       )), 0) CNT_2
			       , NVL(MIN(DECODE(STAR_TM, 3, CNT       )), 0) CNT_3
			       , NVL(MIN(DECODE(STAR_TM, 4, CNT       )), 0) CNT_4
			       , NVL(MIN(DECODE(STAR_TM, 5, CNT       )), 0) CNT_5
			       , NVL(MIN(DECODE(STAR_TM, 6, CNT       )), 0) CNT_6
			       , NVL(MIN(DECODE(STAR_TM, 7, CNT       )), 0) CNT_7
			       , NVL(MIN(DECODE(STAR_TM, 1, PERCENTAGE)), 0) PERCENTAGE_1
			       , NVL(MIN(DECODE(STAR_TM, 2, PERCENTAGE)), 0) PERCENTAGE_2
			       , NVL(MIN(DECODE(STAR_TM, 3, PERCENTAGE)), 0) PERCENTAGE_3
			       , NVL(MIN(DECODE(STAR_TM, 4, PERCENTAGE)), 0) PERCENTAGE_4
			       , NVL(MIN(DECODE(STAR_TM, 5, PERCENTAGE)), 0) PERCENTAGE_5
			       , NVL(MIN(DECODE(STAR_TM, 6, PERCENTAGE)), 0) PERCENTAGE_6
			       , NVL(MIN(DECODE(STAR_TM, 7, PERCENTAGE)), 0) PERCENTAGE_7
			       , AVG.AVG_ST
			FROM   (
                        SELECT
                                 STND_YEAR
                               , STAR_TM
                               , COUNT(*) CNT
                               , ROUND((RATIO_TO_REPORT(COUNT(*)) OVER(PARTITION BY STND_YEAR)) * 100, 1)  PERCENTAGE
                        FROM   (
                                    SELECT
                                             STND_YEAR
                                           , CASE WHEN STAR_TM >= 0.0 AND STAR_TM < 0.2 THEN 1
                                                  WHEN STAR_TM >= 0.2 AND STAR_TM < 0.4 THEN 2
                                                  WHEN STAR_TM >= 0.4 AND STAR_TM < 0.6 THEN 3
                                                  WHEN STAR_TM >= 0.6 AND STAR_TM < 0.8 THEN 4
                                                  WHEN STAR_TM >= 0.8 AND STAR_TM < 1.0 THEN 5
                                                  WHEN STAR_TM >= 1.0 AND STAR_TM < 1.5 THEN 6
                                                  WHEN STAR_TM >= 1.5                   THEN 7
                                             END  STAR_TM
                                    FROM   TBEB_ORGAN
                                    WHERE  RACE_DAY BETWEEN ?
                                                        AND ?
                                    AND ST_MTHD_CD = '002' --플라잉
                               )
			            GROUP BY STND_YEAR
			                   , STAR_TM
			         ) ST
			       , (
                        SELECT
                                 STND_YEAR
                               , ROUND(NVL(AVG(STAR_TM),0),2) AVG_ST
                        FROM   TBEB_ORGAN
                        WHERE  RACE_DAY BETWEEN ?
                                            AND ?
                        AND ST_MTHD_CD = '002' --플라잉
			            GROUP BY STND_YEAR
			         ) AVG
			WHERE ST.STND_YEAR = AVG.STND_YEAR
			GROUP BY ST.STND_YEAR, AVG.AVG_ST
			ORDER BY ST.STND_YEAR DESC
		]]>
    </query> 
    <query id="tbeb_organ_fb023" desc="위반행위현황리스트조회" fetchSize="10">
        <![CDATA[
			SELECT /* tbeb_organ_fb023 위반행위현황리스트조회 */
			         TRDO.STND_YEAR
			       , TRDO.DAY_CNT
			       , NVL(MIN(DECODE(TRVA.VOIL_CD, '125', TRVA.CNT)), 0) CNT_1
			       , NVL(MIN(DECODE(TRVA.VOIL_CD, '140', TRVA.CNT)), 0) CNT_2
			       , NVL(MIN(DECODE(TRVA.VOIL_CD, '150', TRVA.CNT)), 0) CNT_3
			       , NVL(MIN(DECODE(TRVA.VOIL_CD, '210', TRVA.CNT)), 0) CNT_4
			       , NVL(MIN(DECODE(TRVA.VOIL_CD, '220', TRVA.CNT)), 0) CNT_5
			       , NVL(MIN(DECODE(TRVA.VOIL_CD, '125', ROUND(TRVA.CNT / TRDO.DAY_CNT, 2))), 0) AVG_1
			       , NVL(MIN(DECODE(TRVA.VOIL_CD, '140', ROUND(TRVA.CNT / TRDO.DAY_CNT, 2))), 0) AVG_2
			       , NVL(MIN(DECODE(TRVA.VOIL_CD, '150', ROUND(TRVA.CNT / TRDO.DAY_CNT, 2))), 0) AVG_3
			       , NVL(MIN(DECODE(TRVA.VOIL_CD, '210', ROUND(TRVA.CNT / TRDO.DAY_CNT, 2))), 0) AVG_4
			       , NVL(MIN(DECODE(TRVA.VOIL_CD, '220', ROUND(TRVA.CNT / TRDO.DAY_CNT, 2))), 0) AVG_5
			FROM
			         (
			            SELECT
			                     TRDO.STND_YEAR
			                   , COUNT(*) DAY_CNT
			            FROM     TBEB_RACE_DAY_ORD TRDO
			                   , TBEB_RACE_TMS     TRT
			            WHERE  TRT.STND_YEAR        = TRDO.STND_YEAR
			            AND    TRT.MBR_CD           = TRDO.MBR_CD
			            AND    TRT.TMS              = TRDO.TMS
			            AND    TRT.RACE_TMS_STAT_CD = '060'
			            AND    TRDO.RACE_DAY  BETWEEN ?
			                                      AND ?
			                                    		  
			            GROUP BY TRDO.STND_YEAR
			         ) TRDO
			       , (
                        SELECT
			                     TRVA.STND_YEAR
			                   , TRVA.VOIL_CD
			                   , COUNT(*) CNT
			            FROM   TBED_RACE_VOIL_ACT TRVA, TBEB_RACE TR
			            WHERE    RACE_DAY  BETWEEN ?
			                                   AND ?
			            AND    VOIL_CD IN ('125', '140', '150', '210', '220')
			            AND TRVA.STND_YEAR = TR.STND_YEAR
			            AND TRVA.MBR_CD    = TR.MBR_CD
			            AND TRVA.TMS       = TR.TMS
			            AND TRVA.DAY_ORD   = TR.DAY_ORD
			            AND TRVA.RACE_NO   = TR.RACE_NO
			            AND TR.ST_MTHD_CD   = DECODE(?, '000', TR.ST_MTHD_CD, ?)
			            GROUP BY TRVA.STND_YEAR
			                   , TRVA.VOIL_CD       
			         ) TRVA
			WHERE  TRDO.STND_YEAR = TRVA.STND_YEAR
			GROUP BY 
			         TRDO.STND_YEAR
			       , TRDO.DAY_CNT
			ORDER BY TRDO.STND_YEAR DESC
		]]>
    </query>    
    <query id="tbeb_organ_fb024" desc="년도에 따른 기수별 입상률 조회" fetchSize="10">
        <![CDATA[
			SELECT /* tbeb_organ_fb024  년도에 따른 기수별 입상률 조회 */
			         TOR.STND_YEAR
			       , TRM.RACER_PERIO_NO
			       , COUNT(*) CNT
			       , ROUND((RATIO_TO_REPORT(COUNT(*)) OVER(PARTITION BY STND_YEAR)) * 100, 1)  PERCENTAGE
			FROM     TBEB_ORGAN        TOR
			       , TBEC_RACER_MASTER TRM
			WHERE  TOR.RACER_NO        = TRM.RACER_NO
			AND    TOR.RACE_DAY  BETWEEN ?
			                         AND ?
			AND    TOR.RANK           <= ?
			AND    TOR.RANK            > 0
			AND    TOR.ST_MTHD_CD   = DECODE(?, '000', TOR.ST_MTHD_CD, ?)
			GROUP BY 
			         TOR.STND_YEAR
			       , TRM.RACER_PERIO_NO
			ORDER BY 
			         TOR.STND_YEAR DESC
			       , TRM.RACER_PERIO_NO
		]]>
    </query>
    <query id="tbeb_organ_fb025" desc="년도별 등급별 입상률 조회" fetchSize="10">
        <![CDATA[
            SELECT /* tbeb_organ_fb025 년도별 등급별 입상률 조회*/
			         STND_YEAR
			       , NVL(MIN(DECODE(RACER_GRD_CD, 'A1', CNT       )), 0) CNT_1
			       , NVL(MIN(DECODE(RACER_GRD_CD, 'A2', CNT       )), 0) CNT_2
			       , NVL(MIN(DECODE(RACER_GRD_CD, 'B1', CNT       )), 0) CNT_3
			       , NVL(MIN(DECODE(RACER_GRD_CD, 'B2', CNT       )), 0) CNT_4
			       , NVL(       SUM(CNT                            ), 0) CNT
			       , NVL(MIN(DECODE(RACER_GRD_CD, 'A1', PERCENTAGE)), 0) PERCENTAGE_1
			       , NVL(MIN(DECODE(RACER_GRD_CD, 'A2', PERCENTAGE)), 0) PERCENTAGE_2
			       , NVL(MIN(DECODE(RACER_GRD_CD, 'B1', PERCENTAGE)), 0) PERCENTAGE_3
			       , NVL(MIN(DECODE(RACER_GRD_CD, 'B2', PERCENTAGE)), 0) PERCENTAGE_4
			       , NVL(       SUM(PERCENTAGE                     ), 0) PERCENTAGE
			FROM
			         (
                        SELECT
                                 STND_YEAR
                               , RACER_GRD_CD
                               , COUNT(*) CNT
                               , ROUND((RATIO_TO_REPORT(COUNT(*)) OVER(PARTITION BY STND_YEAR)) * 100, 1)  PERCENTAGE
                        FROM   TBEB_ORGAN
                        WHERE  RACE_DAY  BETWEEN ?
                                             AND ?
                        AND    RANK           <= ?
						AND    RANK            > 0
                        AND    ST_MTHD_CD   = DECODE(?, '000', ST_MTHD_CD, ?)
                        GROUP BY 
                                 STND_YEAR
                               , RACER_GRD_CD
                     )
            GROUP BY STND_YEAR
            ORDER BY STND_YEAR DESC
		]]>
    </query>
    <query id="tbeb_organ_fb026" desc="연승리스트조회" fetchSize="10">
        <![CDATA[
            SELECT /* tbeb_organ_fb026 연승리스트조회 */
                     TOR.RACER_NO
                   , TRM.NM_KOR
                   , TOR.STND_YEAR
                   , TOR.TERM
                   , TOR.SEQ
            FROM     (
                        SELECT
                                 RACER_NO
                               , STND_YEAR
                               , MAX(TERM) TERM
                               , RANK() OVER (ORDER BY MAX(TERM) DESC) SEQ
                        FROM   (
                                    SELECT
                                             RACER_NO
                                           , STND_YEAR
                                           , WIN_CNT
                        			       , PRE
                                           , SEQ
                                           --, LEAD(SEQ) OVER (PARTITION BY RACER_NO, STND_YEAR ORDER BY SEQ) - SEQ TERM
                                           , LEAD(SEQ) OVER (PARTITION BY RACER_NO, STND_YEAR ORDER BY SEQ) - DECODE(SEQ, 1, DECODE(WIN_CNT, 1, DECODE(PRE, 1, 0, SEQ), SEQ), SEQ) TERM
                                    FROM   (
                                                SELECT
                                                         RACER_NO
                                                       , STND_YEAR
                                                       , WIN_CNT
                                    			       , LEAD(WIN_CNT) OVER (PARTITION BY RACER_NO, STND_YEAR ORDER BY SEQ) PRE
                                                       , SEQ
                                                FROM   (
                                                            SELECT   TOR.RACER_NO
                                                                   , TOR.STND_YEAR
                                                                   , CASE WHEN TOR.RANK <= ? AND TOR.RANK > 0 THEN 1 ELSE 0 END WIN_CNT
                                                                   , RANK() OVER (PARTITION BY TOR.RACER_NO
                                                                                             , STND_YEAR
                                                                                      ORDER BY TOR.RACE_DAY DESC
                                                                                             , TOR.RACE_NO  DESC ) SEQ
                                                            FROM   TBEB_ORGAN TOR
                                                            WHERE  TOR.RACE_DAY  BETWEEN ?
                                                                                     AND ?
                                                            AND    TOR .ST_MTHD_CD   = DECODE(?, '000', TOR.ST_MTHD_CD, ?)
                                                       )
                                           )
                                    WHERE  (WIN_CNT = 1 AND PRE = 0)
                                    OR     (WIN_CNT = 0 AND PRE = 1)
                                    OR     (WIN_CNT = 1 AND PRE IS NULL)
									OR     (WIN_CNT = 1 AND PRE = 1 AND SEQ = 1)	-- 조건추가(09.03.19)
                               )
                        WHERE ((WIN_CNT = 0 AND PRE = 1) OR (WIN_CNT = 1 AND PRE = 1 AND SEQ = 1))	-- OR 이후 조건추가(09.03.19)
                        AND   TERM IS NOT NULL
                        GROUP BY 
                                 RACER_NO
                               , STND_YEAR
                        ORDER BY 
                                 SEQ
                               , RACER_NO
                               , STND_YEAR
                     ) TOR
                   , TBEC_RACER_MASTER TRM
            WHERE  TOR.RACER_NO = TRM.RACER_NO
            AND    SEQ <= ?
		]]>
    </query>
    <query id="tbeb_organ_fb027" desc="편성 최종저장자 조회" fetchSize="10">
        <![CDATA[
            SELECT   LAST_ID /* tbeb_organ_fb027 편성 최종저장자 조회 */
                   , VU.USER_NM LAST_NM 
                   , LAST_DTM 
              FROM (
              	   	SELECT   DECODE(NVL(MAX(UPDT_DTM),''),'', MAX(INST_ID), MAX(UPDT_ID)) LAST_ID
            	           , DECODE(NVL(MAX(UPDT_DTM),''),'', MAX(INST_DTM), MAX(UPDT_DTM)) LAST_DTM 
            	      FROM (
              	   	         SELECT   MAX(INST_ID) INST_ID
                        	                    , MAX(INST_DTM) INST_DTM
                        	                    , '' UPDT_ID
            	                    , TO_DATE('') UPDT_DTM
            	               FROM   TBEB_ORGAN
            	              WHERE   STND_YEAR = ?
            	                AND   MBR_CD = ?
            	                AND   TMS = ?
            	                AND   DAY_ORD = ?
            	                AND   INST_DTM = (SELECT MAX(INST_DTM) 
                                                    FROM TBEB_ORGAN
                                                   WHERE STND_YEAR = ?
                                                     AND MBR_CD = ?
                                                     AND TMS = ?
                                                     AND DAY_ORD = ?)
              	   	         UNION ALL
              	   	         SELECT   ''
            		                , TO_DATE('')
            			            , MAX(UPDT_ID)
            			            , MAX(UPDT_DTM)
            	             FROM   TBEB_ORGAN
            	            WHERE   STND_YEAR = ?
            	              AND   MBR_CD = ?
            	              AND   TMS = ?
            	              AND   DAY_ORD = ?
            	              AND   UPDT_DTM = (SELECT MAX(UPDT_DTM) 
                                                  FROM TBEB_ORGAN
                                                 WHERE STND_YEAR = ?
                                                   AND MBR_CD = ?
                                                   AND TMS = ?
                                                   AND DAY_ORD = ?)
                           )
                   ) LAST
            	   , VWEA_USER VU
             WHERE LAST.LAST_ID = VU.USER_ID	   
		]]>
    </query>
    <query id="tbeb_organ_fb028" desc="편성 선수상대전적 조회" fetchSize="10">
        <![CDATA[
            SELECT   TOR1.STND_YEAR /* tbeb_organ_fb028 편성 선수상대전적 조회 */
                   , TOR1.TMS
                   , TOR1.DAY_ORD
                   , TOR1.RACE_NO
                   , (SELECT NM_KOR FROM TBEC_RACER_MASTER WHERE RACER_NO = TOR1.RACER_NO) || '(' || TOR1.RANK || '위)' RACER_NM1
                   , (SELECT NM_KOR FROM TBEC_RACER_MASTER WHERE RACER_NO = TOR2.RACER_NO) || '(' || TOR2.RANK || '위)' RACER_NM2
                   , DECODE(TOR1.RANK, TOR2.RANK, '무', LEAST(DECODE(TOR1.RANK,0,7,TOR1.RANK), DECODE(TOR2.RANK,0,7,TOR2.RANK)), '승', '패') WIN_LOSE
				   , DECODE(TOR1.RANK, TOR2.RANK, 1, 0) TIE
				   , DECODE(TOR1.RANK, TOR2.RANK, 0, LEAST(DECODE(TOR1.RANK,0,7,TOR1.RANK), DECODE(TOR2.RANK,0,7,TOR2.RANK)), 1, 0) WIN
				   , DECODE(TOR1.RANK, TOR2.RANK, 0, LEAST(DECODE(TOR1.RANK,0,7,TOR1.RANK), DECODE(TOR2.RANK,0,7,TOR2.RANK)), 0, 1) LOSE
              FROM   TBEB_ORGAN TOR1
                   , TBEB_ORGAN TOR2
             WHERE   TOR1.STND_YEAR = TOR2.STND_YEAR
               AND   TOR1.MBR_CD = TOR2.MBR_CD
               AND   TOR1.TMS = TOR2.TMS
               AND   TOR1.DAY_ORD = TOR2.DAY_ORD
               AND   TOR1.RACE_NO = TOR2.RACE_NO
               AND   TOR1.STND_YEAR = NVL(?, TOR1.STND_YEAR)
               AND   TOR1.MBR_CD = ?
               AND   TOR1.RACER_NO = ?
               AND   TOR2.RACER_NO = ?
               AND   TOR1.ST_MTHD_CD   = DECODE(?, '000', TOR1.ST_MTHD_CD, ?)
            ORDER BY TOR1.STND_YEAR DESC
                   , TOR1.TMS DESC
                   , TOR1.DAY_ORD DESC
                   , TOR1.RACE_NO DESC
		]]>
    </query>
    <query id="tbeb_organ_fb029" desc="경주별출주집계현황 조회" fetchSize="10">
        <![CDATA[
            SELECT   TOR.STND_YEAR /* tbeb_organ_fb029 경주별출주집계현황 조회 */
                   , TOR.MBR_CD
                   , TOR.DAY_ORD
                   , TO_NUMBER(TOR.RACE_NO) RACE_NO
                   , TRM.RACER_NO || '   ' || TRM.NM_KOR RACER_NO
				   , COUNT(*) RUN_CNT
              FROM   TBEB_ORGAN TOR
			       , TBEC_RACER_MASTER TRM
			       , (
                      SELECT   DISTINCT TA.RACER_NO
                        FROM   TBEB_ARRANGE TA
						     , TBEB_RACE_TMS TRT
                       WHERE   TA.STND_YEAR = TRT.STND_YEAR
					     AND   TA.MBR_CD = TRT.MBR_CD
						 AND   TA.TMS = TRT.TMS
						 AND   TRT.ARRANGE_CMPL_YN = 'Y'
					     AND   TA.STND_YEAR = ?
                         AND   TA.MBR_CD    = ?
                         AND   TA.TMS       BETWEEN ? AND ?
                         AND   TA.ST_MTHD_CD = DECODE(?, '000', TA.ST_MTHD_CD, ?)
                     ) RACER
             WHERE   TRM.RACER_NO  = TOR.RACER_NO
			   AND   TRM.RACER_NO  = RACER.RACER_NO
               AND   TOR.STND_YEAR = ?
               AND   TOR.MBR_CD    = ?
			GROUP BY TOR.STND_YEAR
                   , TOR.MBR_CD
                   , TOR.DAY_ORD
                   , TOR.RACE_NO
                   , TRM.RACER_NO
				   , TRM.NM_KOR
            ORDER BY TRM.RACER_NO
			       , TOR.DAY_ORD
				   , TOR.RACE_NO
		]]>
    </query>
    <query id="tbeb_organ_fb030" desc="선수상대전적 조회" fetchSize="10">
        <![CDATA[	
				WITH TEMP_ORGAN AS (
				    SELECT TEMP.*,  /*  tbeb_organ_fb030 IWORK_SFR-008  기존 VWEB_MATCH_RESLT 뷰는 편성을 저장하지 않으면 조회되지 않아 사용안함.*/  
				           ROWNUM AS RACE_REG_NO
				    FROM  (
						    SELECT   ? AS STND_YEAR
						           , ? AS TMS
						           , ? AS DAY_ORD
						           , ? AS RACE_NO
						           , RACER_NO
						    FROM   TBEC_RACER_MASTER  TRM
						    WHERE  TRM.RACER_NO IN (?, ?, ?, ?, ?, ?, ?, ?)
						    ORDER BY DECODE(TRM.RACER_NO, ?, 1, ?, 2, ?, 3, ?, 4, ?, 5, ?, 6, ?, 7, ?, 8)
				    ) TEMP
				)
				SELECT
				        VMR.F_REG_NO RACE_REG_NO
				      , VMR.F_RACER_NO RACER_NO
				      , TRM.NM_KOR RACER_NM
				      , SUM(DECODE(VMR.S_REG_NO, 1, VMR.WIN_CNT, 0)) ||' / '||  SUM(DECODE(VMR.S_REG_NO, 1, VMR.TOT_CNT, 0)) SCORE1
				      , SUM(DECODE(VMR.S_REG_NO, 2, VMR.WIN_CNT, 0)) ||' / '||  SUM(DECODE(VMR.S_REG_NO, 2, VMR.TOT_CNT, 0)) SCORE2
				      , SUM(DECODE(VMR.S_REG_NO, 3, VMR.WIN_CNT, 0)) ||' / '||  SUM(DECODE(VMR.S_REG_NO, 3, VMR.TOT_CNT, 0)) SCORE3
				      , SUM(DECODE(VMR.S_REG_NO, 4, VMR.WIN_CNT, 0)) ||' / '||  SUM(DECODE(VMR.S_REG_NO, 4, VMR.TOT_CNT, 0)) SCORE4
				      , SUM(DECODE(VMR.S_REG_NO, 5, VMR.WIN_CNT, 0)) ||' / '||  SUM(DECODE(VMR.S_REG_NO, 5, VMR.TOT_CNT, 0)) SCORE5
				      , SUM(DECODE(VMR.S_REG_NO, 6, VMR.WIN_CNT, 0)) ||' / '||  SUM(DECODE(VMR.S_REG_NO, 6, VMR.TOT_CNT, 0)) SCORE6
				      , SUM(DECODE(VMR.S_REG_NO, 7, VMR.WIN_CNT, 0)) ||' / '||  SUM(DECODE(VMR.S_REG_NO, 7, VMR.TOT_CNT, 0)) SCORE7
				      , SUM(DECODE(VMR.S_REG_NO, 8, VMR.WIN_CNT, 0)) ||' / '||  SUM(DECODE(VMR.S_REG_NO, 8, VMR.TOT_CNT, 0)) SCORE8
				FROM  (  
				       SELECT F.STND_YEAR, 
				            F.TMS,
				            F.DAY_ORD,
				            F.RACE_NO,
				            F.RACE_REG_NO F_REG_NO,
				            F.RACER_NO F_RACER_NO,
				            S.RACE_REG_NO S_REG_NO,
				            S.RACER_NO S_RACER_NO,
				            COUNT (CASE WHEN TRIM (TO_CHAR (A.TMS, '09') || A.DAY_ORD || A.RACE_NO) < TRIM (TO_CHAR (F.TMS, '09')|| F.DAY_ORD|| F.RACE_NO)
				                         AND DECODE (A.RANK, 0, 9, A.RANK) < DECODE (B.RANK, 0, 9, B.RANK)
				                         AND A.RANK IS NOT NULL 
				                        THEN 1 END) AS WIN_CNT,
				            COUNT (CASE WHEN TRIM (TO_CHAR (A.TMS, '09') || A.DAY_ORD || A.RACE_NO) < TRIM (TO_CHAR (F.TMS, '09')|| F.DAY_ORD|| F.RACE_NO)
				                         AND A.RANK IS NOT NULL
				                        THEN 1 END) AS TOT_CNT
				       FROM TBEB_ORGAN A,
				            TBEB_ORGAN B,
				            TEMP_ORGAN F,
				            TEMP_ORGAN S
				       WHERE A.STND_YEAR = B.STND_YEAR
				            AND A.TMS = B.TMS
				            AND A.DAY_ORD = B.DAY_ORD
				            AND A.RACE_NO = B.RACE_NO
				            AND A.RACER_NO != B.RACER_NO
				            AND A.ABSE_CD = '001'
				            AND B.ABSE_CD = '001'
				            AND A.STND_YEAR = F.STND_YEAR
				            AND A.RACER_NO = F.RACER_NO
				            AND B.RACER_NO = S.RACER_NO
				            AND F.STND_YEAR = S.STND_YEAR
				            AND F.TMS = S.TMS
				            AND F.DAY_ORD = S.DAY_ORD
				            AND F.RACE_NO = S.RACE_NO
				   GROUP BY F.STND_YEAR,
				            F.TMS,
				            F.DAY_ORD,
				            F.RACE_NO,
				            F.RACE_REG_NO,
				            F.RACER_NO,
				            S.RACE_REG_NO,
				            S.RACER_NO
				) VMR, TBEC_RACER_MASTER TRM
				WHERE VMR.F_RACER_NO = TRM.RACER_NO 
				GROUP BY VMR.F_REG_NO
				       , VMR.F_RACER_NO
				       , TRM.NM_KOR
				ORDER BY VMR.F_REG_NO  
		]]>
    </query>
    <query id="tbeb_organ_fb031" desc="코스별 연대율 조회" fetchSize="10">
        <![CDATA[
            SELECT /*  tbeb_organ_fb031 IWORK_SFR-008 경정 선수편성 메뉴 개선  정번8 까지 추가 수정.  */  
                     TRM.RACER_NO
                   , TRM.NM_KOR RACER_NM
                   , ROUND(SUM(WIN12_CNT) / SUM(RACE_CNT) * 100, 1) HIGH_RANK_RATIO
                   , SUM(RACE_CNT) RACE_CNT
                   , MIN(DECODE(RACE_REG_NO, 1, TRIM(TO_CHAR(WIN12_CNT / RACE_CNT * 100, '900.9') || '/' || RACE_CNT))) COURSE1
                   , MIN(DECODE(RACE_REG_NO, 2, TRIM(TO_CHAR(WIN12_CNT / RACE_CNT * 100, '900.9') || '/' || RACE_CNT))) COURSE2
                   , MIN(DECODE(RACE_REG_NO, 3, TRIM(TO_CHAR(WIN12_CNT / RACE_CNT * 100, '900.9') || '/' || RACE_CNT))) COURSE3
                   , MIN(DECODE(RACE_REG_NO, 4, TRIM(TO_CHAR(WIN12_CNT / RACE_CNT * 100, '900.9') || '/' || RACE_CNT))) COURSE4
                   , MIN(DECODE(RACE_REG_NO, 5, TRIM(TO_CHAR(WIN12_CNT / RACE_CNT * 100, '900.9') || '/' || RACE_CNT))) COURSE5
                   , MIN(DECODE(RACE_REG_NO, 6, TRIM(TO_CHAR(WIN12_CNT / RACE_CNT * 100, '900.9') || '/' || RACE_CNT))) COURSE6
                   , MIN(DECODE(RACE_REG_NO, 7, TRIM(TO_CHAR(WIN12_CNT / RACE_CNT * 100, '900.9') || '/' || RACE_CNT))) COURSE7
                   , MIN(DECODE(RACE_REG_NO, 8, TRIM(TO_CHAR(WIN12_CNT / RACE_CNT * 100, '900.9') || '/' || RACE_CNT))) COURSE8
              FROM   (
                      SELECT   RACER_NO
                      		 , RACE_REG_NO
                      		 , SUM(DECODE(RANK, 1, 1, 2, 1, 0)) WIN12_CNT
                      		 , COUNT(*) RACE_CNT
                        FROM   TBEB_ORGAN
                       WHERE   (STND_YEAR, MBR_CD, TMS) IN (SELECT   STND_YEAR
                                                                   , MBR_CD
                                                                   , TMS
                                                              FROM   TBEB_RACE_TMS
                                                             WHERE   STR_DT > (SELECT   TO_CHAR(ADD_MONTHS(TO_DATE(STR_DT, 'YYYYMMDD'), -6), 'YYYYMMDD')
                                                                                 FROM   TBEB_RACE_TMS
                                                                                WHERE   STND_YEAR = ?
                                                                                  AND   MBR_CD    = ?
                                                                                  AND   TMS       = ?)
                                                               AND   STR_DT < (SELECT   STR_DT
                                                                                 FROM   TBEB_RACE_TMS
                                                                                WHERE   STND_YEAR = ?
                                                                                  AND   MBR_CD    = ?
                                                                                  AND   TMS       = ?)
                                                           )
                         AND   RACER_NO                 IN (?, ?, ?, ?, ?, ?, ?, ?)
                         AND   ABSE_CD  <> '003'
                     GROUP BY  RACER_NO
                             , RACE_REG_NO
                     ) MON6
                   , TBEC_RACER_MASTER TRM
             WHERE   MON6.RACER_NO = TRM.RACER_NO
            GROUP BY TRM.RACER_NO
                   , TRM.NM_KOR
            ORDER BY DECODE(TRM.RACER_NO, ?, 1, ?, 2, ?, 3, ?, 4, ?, 5, ?, 6, ?, 7, ?, 8) 
		]]>
    </query>
    <query id="tbeb_organ_fb032" desc="코스별 진입변화통계 조회" fetchSize="10">
        <![CDATA[
            SELECT /*  tbeb_organ_fb032 IWORK_SFR-008 경정 선수편성 메뉴 개선  정번8 까지 추가 수정.  */  
                     TRM.RACER_NO
                   , TRM.NM_KOR RACER_NM
                   , CRS.RACE_REG_NO
                   , MIN(DECODE(CRS.ENTRY_COURSE, 1, TRIM(TO_CHAR(CRS.RACE_CNT / REG.REG_CNT * 100, '990.9') || '/' || CRS.RACE_CNT))) COURSE1
                   , MIN(DECODE(CRS.ENTRY_COURSE, 2, TRIM(TO_CHAR(CRS.RACE_CNT / REG.REG_CNT * 100, '990.9') || '/' || CRS.RACE_CNT))) COURSE2
                   , MIN(DECODE(CRS.ENTRY_COURSE, 3, TRIM(TO_CHAR(CRS.RACE_CNT / REG.REG_CNT * 100, '990.9') || '/' || CRS.RACE_CNT))) COURSE3
                   , MIN(DECODE(CRS.ENTRY_COURSE, 4, TRIM(TO_CHAR(CRS.RACE_CNT / REG.REG_CNT * 100, '990.9') || '/' || CRS.RACE_CNT))) COURSE4
                   , MIN(DECODE(CRS.ENTRY_COURSE, 5, TRIM(TO_CHAR(CRS.RACE_CNT / REG.REG_CNT * 100, '990.9') || '/' || CRS.RACE_CNT))) COURSE5
                   , MIN(DECODE(CRS.ENTRY_COURSE, 6, TRIM(TO_CHAR(CRS.RACE_CNT / REG.REG_CNT * 100, '990.9') || '/' || CRS.RACE_CNT))) COURSE6
                   , MIN(DECODE(CRS.ENTRY_COURSE, 7, TRIM(TO_CHAR(CRS.RACE_CNT / REG.REG_CNT * 100, '990.9') || '/' || CRS.RACE_CNT))) COURSE7
                   , MIN(DECODE(CRS.ENTRY_COURSE, 8, TRIM(TO_CHAR(CRS.RACE_CNT / REG.REG_CNT * 100, '990.9') || '/' || CRS.RACE_CNT))) COURSE8
              FROM   (
                      SELECT   RACER_NO
                      		 , RACE_REG_NO
                      		 , ENTRY_COURSE
                      		 , COUNT(*) RACE_CNT
                        FROM   TBEB_ORGAN
                       WHERE   STND_YEAR = ?
                         AND   MBR_CD = ?
                         AND   ABSE_CD     <> '003'
                         AND   IMMT_CLS_CD <> '003'
                         AND   RACER_NO    IN (?, ?, ?, ?, ?, ?, ?, ?)
                      GROUP BY RACER_NO
                             , RACE_REG_NO
                             , ENTRY_COURSE
                     ) CRS
                   , (
                      SELECT   RACER_NO
                      		 , RACE_REG_NO
                      		 , COUNT(*) REG_CNT
                        FROM   TBEB_ORGAN
                       WHERE   STND_YEAR = ?
                         AND   MBR_CD = ?
                         AND   ABSE_CD     <> '003'
                         AND   IMMT_CLS_CD <> '003'
                         AND   RACER_NO    IN (?, ?, ?, ?, ?, ?, ?, ?)
                      GROUP BY RACER_NO
                             , RACE_REG_NO
                     ) REG
                   , TBEC_RACER_MASTER TRM
             WHERE   CRS.RACER_NO    = TRM.RACER_NO 
               AND   CRS.RACER_NO    = REG.RACER_NO
               AND   CRS.RACE_REG_NO = REG.RACE_REG_NO
            GROUP BY TRM.RACER_NO
                   , TRM.NM_KOR
                   , CRS.RACE_REG_NO
            ORDER BY DECODE(TRM.RACER_NO, ?, 1, ?, 2, ?, 3, ?, 4, ?, 5, ?, 6, ?, 7, ?, 8) 
                   , TRM.RACER_NO 
                   , CRS.RACE_REG_NO
		]]>
    </query>

    <query id="tbeb_organ_ib001" desc="편성입력" fetchSize="10">
        <![CDATA[
			INSERT INTO TBEB_ORGAN /* tbeb_organ_ib001 편성입력  */
			(
			         STND_YEAR    -- 기준년도    
			       , MBR_CD       -- 경정장코드  
			       , TMS          -- 회차        
			       , DAY_ORD      -- 일차        
			       , RACE_NO      -- 경주번호    
			       , RACE_REG_NO  -- 정번        
			       , RACER_NO     -- 선수등록번호
			       , RACER_GRD_CD -- 선수등급코드
			       , MOT_NO       -- 모터번호    
			       , BOAT_NO      -- 보트번호    
			       , RACE_DAY     -- 경주일
			       , ABSE_CD      -- 결장코드
			       , IMMT_CLS_CD  -- 면채구분코드
			       , RMK          -- 비고
			       , INST_ID      -- 작성자ID
			       , INST_DTM     -- 작성일시
			       , UPDT_ID      -- 수정자ID
			       , UPDT_DTM     -- 수정일시
			       , ST_MTHD_CD   -- ST방식
			) VALUES (
			         ?            -- 기준년도    
			       , ?            -- 경정장코드  
			       , ?            -- 회차        
			       , ?            -- 일차        
			       , LPAD(?, 2, '0') -- 경주번호    
			       , ?            -- 정번        
			       , ?            -- 선수등록번호
			       , ?            -- 선수등급코드
			       , ?            -- 모터번호    
			       , ?            -- 보트번호  
			       , ?            -- 경주일
			       , NVL(?, '001') -- 결장코드
			       , '001'        -- 면책구분코드
			       , ?            -- 비고
			       , ?            -- 작성자ID    
			       , SYSDATE      -- 작성일시    
			       , ?            -- 수정자ID    
			       , SYSDATE      -- 수정일시    
			       , ?			  -- ST방식
			)
        ]]>
    </query> 
    <query id="tbeb_organ_ub001" desc="편성수정" fetchSize="10">
        <![CDATA[
			UPDATE TBEB_ORGAN SET	/* tbeb_organ_ub001 편성수정  */
			         RACER_NO  = ?         -- 선수등록번호
			       , RACER_GRD_CD = ?         -- 선수등급코드
			       , MOT_NO    = ?         -- 모터번호    
			       , BOAT_NO   = ?         -- 보트번호     
			       , RACE_DAY  = ?         -- 경주일   
			       , ABSE_CD   = NVL(?, '001') -- 결장코드
			       , RMK       = ?         -- 비고
			       , UPDT_ID   = ?         -- 수정자ID
			       , UPDT_DTM  = SYSDATE   -- 수정일시
			       , ST_MTHD_CD = ?        -- ST방식
			WHERE  STND_YEAR   = ?         -- 기준년도    
			AND    MBR_CD      = ?         -- 경정장코드  
			AND    TMS         = ?         -- 회차        
			AND    DAY_ORD     = ?         -- 일차        
			AND    RACE_NO     = LPAD(?, 2, '0')         -- 경주번호    
			AND    RACE_REG_NO = ?         -- 정번        
        ]]>
    </query> 
    <query id="tbeb_organ_ub002" desc="편성수정" fetchSize="10">
        <![CDATA[
/*        
			UPDATE TBEB_ORGAN SET
			         RACER_NO     = ?         -- 선수등록번호
			       , RACER_GRD_CD = ?         -- 선수등급코드
			       , UPDT_ID      = ?         -- 수정자ID
			       , UPDT_DTM  = SYSDATE   -- 수정일시
			WHERE  STND_YEAR   = ?         -- 기준년도    
			AND    MBR_CD      = ?         -- 경정장코드  
			AND    TMS         = ?         -- 회차        
			AND    DAY_ORD     > ?         -- 일차        
			AND    RACER_NO    = ?         -- 선수등록번호    
*/			
        ]]>
    </query> 
    <query id="tbeb_organ_ub003" desc="편성수정" fetchSize="10">
        <![CDATA[
			UPDATE /* tbeb_organ_ub003 */
			       TBEB_ORGAN SET
			         MOT_NO    = ?         -- 모터번호    
			       , UPDT_ID   = ?         -- 수정자ID
			       , UPDT_DTM  = SYSDATE   -- 수정일시
			WHERE  STND_YEAR   = ?         -- 기준년도    
			AND    MBR_CD      = ?         -- 경정장코드  
			AND    TMS         = ?         -- 회차        
			AND    DAY_ORD     > ?         -- 일차        
			AND    MOT_NO      = ?         -- 모터번호    
        ]]>
    </query> 
    <query id="tbeb_organ_ub004" desc="편성수정" fetchSize="10">
        <![CDATA[
			UPDATE /* tbeb_organ_ub004 */
			       TBEB_ORGAN SET
			         BOAT_NO   = ?         -- 보트번호     
			       , UPDT_ID   = ?         -- 수정자ID
			       , UPDT_DTM  = SYSDATE   -- 수정일시
			WHERE  STND_YEAR   = ?         -- 기준년도    
			AND    MBR_CD      = ?         -- 경정장코드  
			AND    TMS         = ?         -- 회차        
			AND    DAY_ORD     > ?         -- 일차        
			AND    BOAT_NO     = ?         -- 보트번호    
        ]]>
    </query> 
    
    <query id="tbeb_organ_ub005" desc="편성수정" fetchSize="10">
        <![CDATA[
			UPDATE /* tbeb_organ_ub005 */
			       TBEB_TEMP_ORGAN
		    SET
			         MOT_NO    = ?         -- 모터번호    
			       , UPDT_ID   = ?         -- 수정자ID
			       , UPDT_DTM  = SYSDATE   -- 수정일시
			WHERE  STND_YEAR   = ?         -- 기준년도    
			AND    MBR_CD      = ?         -- 경정장코드  
			AND    TMS         = ?         -- 회차        
			AND    TO_CHAR(DAY_ORD)||RACE_NO   >= ?||?         -- 일차||경주번호        
			AND    MOT_NO      = ?         -- 모터번호    
        ]]>
    </query> 
    <query id="tbeb_organ_ub006" desc="편성수정" fetchSize="10">
        <![CDATA[
			UPDATE /* tbeb_organ_ub006 */
			       TBEB_TEMP_ORGAN
			SET
			         BOAT_NO   = ?         -- 보트번호     
			       , UPDT_ID   = ?         -- 수정자ID
			       , UPDT_DTM  = SYSDATE   -- 수정일시
			WHERE  STND_YEAR   = ?         -- 기준년도    
			AND    MBR_CD      = ?         -- 경정장코드  
			AND    TMS         = ?         -- 회차        
			AND    TO_CHAR(DAY_ORD)||RACE_NO  >= ?||?         -- 일차||경주번호        
			AND    BOAT_NO     = ?         -- 보트번호    
        ]]>
    </query> 
    <query id="tbeb_organ_db001" desc="편성삭제" fetchSize="10">
        <![CDATA[
			DELETE FROM TBEB_RACER_RACE_ALLOC
			WHERE  STND_YEAR        = ?       -- 기준년도    
			AND    MBR_CD           = ?       -- 경정장코드    
			AND    TMS              = ?       -- 회차    
        ]]>
    </query> 
    <query id="tbeb_organ_fb033" desc="최근 선수 정번의 역전 유무 조회" fetchSize="10">
        <![CDATA[
			WITH TEMP_ORGAN AS (
			      SELECT TEMP.*,  /*  tbeb_organ_fb033 IWORK_SFR-008 경정 선수편성 메뉴개선. 과거 5회차 이내 선수들의 정번이 역전되지 않았을 시  */    
			             ROWNUM AS RACE_REG_NO
			      FROM  (
			          SELECT   ? AS STND_YEAR
			                 , ? AS TMS
			                 , ? AS DAY_ORD
			                 , ? AS RACE_NO
			                 , RACER_NO
			          FROM   TBEC_RACER_MASTER  TRM
			          WHERE  TRM.RACER_NO IN (?, ?, ?, ?, ?, ?, ?, ?)
			          ORDER BY DECODE(TRM.RACER_NO, ?, 1, ?, 2, ?, 3, ?, 4, ?, 5, ?, 6, ?, 7, ?, 8)
			      ) TEMP    
			),
			MERGE_ORGAN AS (
			    SELECT TOR.STND_YEAR, TOR.MBR_CD, TOR.TMS, TOR.DAY_ORD, TOR.RACE_NO, TOR.ABSE_CD, TOR.RACER_NO, TOR.RACE_REG_NO
			    FROM   TBEB_ORGAN TOR,
			           TBEB_RACE_DAY_ORD TRO
			    WHERE  TOR.STND_YEAR = TRO.STND_YEAR
			    AND    TOR.MBR_CD    = TRO.MBR_CD   
			    AND    TOR.TMS       = TRO.TMS
			    AND    TOR.DAY_ORD   = TRO.DAY_ORD           
			    AND   (TOR.STND_YEAR, TOR.MBR_CD, TOR.TMS) IN (SELECT STND_YEAR, MBR_CD, TMS
			                                                   FROM  (
	                                                                SELECT RANK() OVER (ORDER BY STND_YEAR DESC, MBR_CD DESC, TMS DESC) RNK
	                                                                      , T.*
	                                                                FROM   TBEB_RACE_TMS T
	                                                                WHERE  STND_YEAR||LPAD(TMS, 2, '0') <= ? ||LPAD( ? , 2, '0')  -- 현재 회차 포함
	                                                                AND    MBR_CD = '001'
			                                                   )
			                                                   WHERE  RNK <= (? + 1)
			                                                  ) -- 최근 5회차 이내 경주   
			    AND    TRO.ORGAN_STAT_CD = '002'  -- 편성 확정시                                                                                                              
			    UNION ALL
			    SELECT TOR.STND_YEAR, TOR.MBR_CD, TOR.TMS, TOR.DAY_ORD, TOR.RACE_NO, '001' AS ABSE_CD, TOR.RACER_NO, TOR.RACE_REG_NO
			    FROM   TBEB_TEMP_ORGAN TOR,
			           TBEB_RACE_DAY_ORD TRO
			    WHERE  TOR.STND_YEAR = TRO.STND_YEAR
				AND    TOR.MBR_CD    = TRO.MBR_CD   
				AND    TOR.TMS       = TRO.TMS
				AND    TOR.DAY_ORD   = TRO.DAY_ORD
				AND    TOR.STND_YEAR = ?
				AND    TOR.MBR_CD    = ?
				AND    TOR.TMS       = ?
			    AND    TOR.ORGAN_OWNER_ID = ?
			    AND    TOR.ORGAN_SEQ = ? 						
				AND    TRO.ORGAN_STAT_CD = '001'  -- 편성 미확정시                                                        
			)			
			SELECT *
			FROM  (
			      SELECT 
			             B.STND_YEAR, B.TMS, B.DAY_ORD, B.RACE_NO,
			             A.RACER_NO , 
			             D.RACER_NO AS RACER_NO_1,
			             A.RACE_REG_NO AS REG_NO_CUR1,
			             D.RACE_REG_NO AS REG_NO_CUR2,
			             B.RACE_REG_NO AS REG_NO_PAS1,
			             C.RACE_REG_NO AS REG_NO_PAS2,
			             CASE WHEN (A.RACE_REG_NO > D.RACE_REG_NO AND B.RACE_REG_NO > C.RACE_REG_NO) OR (A.RACE_REG_NO < D.RACE_REG_NO AND B.RACE_REG_NO < C.RACE_REG_NO) 
			                  THEN 'FALSE'  --'역전되지 않음' 
			                  ELSE 'TRUE'  --'역전됨' 
			             END ISREVERSED,
			             RANK() OVER (PARTITION BY A.RACER_NO, D.RACER_NO ORDER BY  B.STND_YEAR DESC, B.TMS DESC, B.DAY_ORD DESC, B.RACE_NO DESC) RNK
			      FROM  TEMP_ORGAN A,
			            TEMP_ORGAN D,
			            MERGE_ORGAN B,
			            MERGE_ORGAN C
			      WHERE A.RACER_NO = B.RACER_NO 
			      --AND   A.STND_YEAR || LPAD(A.TMS, 2, '0') || A.DAY_ORD || A.RACE_NO > B.STND_YEAR || LPAD(B.TMS, 2, '0') || B.DAY_ORD || B.RACE_NO  -- 검증대상 현경주 제외
			      AND   A.STND_YEAR || LPAD(A.TMS, 2, '0') || A.DAY_ORD > B.STND_YEAR || LPAD(B.TMS, 2, '0') || B.DAY_ORD  -- 검증대상 현재일차 제외
			      AND   B.STND_YEAR = C.STND_YEAR
			      AND   B.MBR_CD = C.MBR_CD
			      AND   B.TMS = C.TMS
			      AND   B.DAY_ORD = C.DAY_ORD
			      AND   B.RACE_NO = C.RACE_NO
			      AND   B.RACER_NO != C.RACER_NO
			      AND   C.RACER_NO = D.RACER_NO
			      AND   B.ABSE_CD = '001'
			      AND   C.ABSE_CD = '001'
			) MA
			WHERE MA.RNK = 1 -- 가장 최근 경주이면서
			AND   ISREVERSED = 'FALSE'  -- 역전되지 않은 경우
        ]]>
    </query> 
    
    <query id="tbeb_organ_fb034" desc="모터성적및기록조회" fetchSize="10">
    <![CDATA[
			SELECT /* tbeb_organ_fb034 모터성적및기록조회 */
			     SUBSTR(U1.MOT_NO, 6) MOT_NO 
				,U1.RUN_CNT
				,U1.RACE_DAY_CNT
				,U1.RACE_CNT
				,U1.RANK_1
				,U1.RANK_2
				,U1.RANK_3
				,U1.RANK_4
				,U1.RANK_5
				,U1.RANK_6
				,U1.WIN_RATIO
				,U1.HIGH_RANK_RATIO
				,U1.HIGH_3_RANK_RATIO
				,U1.AMU_RANK_SCR
				,U1.AVG_RANK_SCR
				,U2.LOW_INTOR_RUN_TM
				,U2.M_RACER_NO M_RACER_NO_LOW
				,U3.HIGH_INTOR_RUN_TM
				,U3.M_RACER_NO M_RACER_NO_HIGH
				,U1.AVG_INTRO_RUN_TM
				,U4.RACE_TM_12
				,U4.M_RACER_NO_12
				,U4.RACE_TM_18
				,U4.M_RACER_NO_18
				,U5.M_RACER_NO M_RACER_NO_TOT
			FROM (
				SELECT
					 MOT_NO
					,RUN_CNT
					,RACE_DAY_CNT
					,RACE_CNT
					,RANK_1
					,RANK_2
					,RANK_3
					,RANK_4
					,RANK_5
					,RANK_6
					,TRIM(TO_CHAR((RANK_1)/RACE_CNT*100, 990.9)) WIN_RATIO
					,TRIM(TO_CHAR((RANK_1 + RANK_2) / RACE_CNT * 100, 990.9)) HIGH_RANK_RATIO
					,TRIM(TO_CHAR((RANK_1 + RANK_2 + RANK_3) / RACE_CNT * 100, 990.9))	HIGH_3_RANK_RATIO
					,AMU_RANK_SCR
					,AVG_RANK_SCR
					,AVG_INTRO_RUN_TM
				FROM (
					SELECT
					         MOT_NO
					       , COUNT(DISTINCT(TOR.STND_YEAR || TOR.MBR_CD || TOR.TMS))                RUN_CNT
					       , COUNT(DISTINCT(TOR.STND_YEAR || TOR.MBR_CD || TOR.TMS || TOR.DAY_ORD)) RACE_DAY_CNT
					       , COUNT(*)                                              RACE_CNT
					       , SUM(DECODE(TOR.RANK, 1, 1, 0))                        RANK_1
					       , SUM(DECODE(TOR.RANK, 2, 1, 0))                        RANK_2
					       , SUM(DECODE(TOR.RANK, 3, 1, 0))                        RANK_3
					       , SUM(DECODE(TOR.RANK, 4, 1, 0))                        RANK_4
					       , SUM(DECODE(TOR.RANK, 5, 1, 0))                        RANK_5
					       , SUM(DECODE(TOR.RANK, 6, 1, 0))                        RANK_6
					       , SUM(TRS.RACE_SCR)                                     AMU_RANK_SCR
					       , TRIM(TO_CHAR(AVG(TRS.RACE_SCR), 90.99))               AVG_RANK_SCR
					       , TRIM(TO_CHAR(SUM(TOR.INTRO_RUN_TM)/SUM(1), 90.99)) AVG_INTRO_RUN_TM
					FROM     TBEB_ORGAN         TOR
					       , TBEB_RACE_TMS      TRT
					       , TBEB_RACE          TR
					       , TBEB_RANK_SCR      TRS
					WHERE  TOR .STND_YEAR      = TR  .STND_YEAR
					AND    TOR .MBR_CD         = TR  .MBR_CD
					AND    TOR .TMS            = TR  .TMS
					AND    TOR .DAY_ORD        = TR  .DAY_ORD
					AND    TOR .RACE_NO        = TR  .RACE_NO
					AND    TOR .STND_YEAR      = TRT .STND_YEAR
					AND    TOR .MBR_CD         = TRT .MBR_CD
					AND    TOR .TMS            = TRT .TMS
					AND    TOR .STND_YEAR      = TRS .STND_YEAR
					AND    TR  .RACE_DGRE_CD   = TRS .RACE_DGRE_CD
					AND    TOR .RANK           = TRS .RANK
					AND    TOR .ABSE_CD       <> '003'
					AND    TOR .IMMT_CLS_CD   <> '003'
					AND    TOR .MBR_CD         = ?
					AND    TOR .RACE_DAY       BETWEEN ? AND ?
					AND    TOR.ST_MTHD_CD = DECODE(?, '000', TOR.ST_MTHD_CD, ?)
					GROUP BY MOT_NO
				)
			) U1,
			(
				SELECT
					 T1.MOT_NO
					,T1.INTRO_RUN_TM LOW_INTOR_RUN_TM
					,RTRIM(REPLACE(XMLAGG(XMLELEMENT(A,T1.RACER_NO||'###') ORDER BY T1.RACER_NO).EXTRACT('//text()'),'###',CHR(10)),CHR(10)) M_RACER_NO
				FROM TBEB_ORGAN T1,
				(
					SELECT
						 MOT_NO
						,MAX(INTRO_RUN_TM) INTRO_RUN_TM
					FROM     TBEB_ORGAN
					WHERE 1=1
					AND ABSE_CD     <> '003'
					AND IMMT_CLS_CD <> '003'
					AND MBR_CD      = ?
					AND RACE_DAY    BETWEEN ? AND ?
					AND ST_MTHD_CD = DECODE(?, '000', ST_MTHD_CD, ?)
					GROUP BY MOT_NO
				) T2
				WHERE 1=1
				AND T1.ABSE_CD     <> '003'
				AND T1.IMMT_CLS_CD <> '003'
				AND T1.MBR_CD      = ?
				AND T1.RACE_DAY    BETWEEN ? AND ?
				AND T1.MOT_NO = T2.MOT_NO
				AND T1.INTRO_RUN_TM = T2.INTRO_RUN_TM
				AND T1.ST_MTHD_CD = DECODE(?, '000', T1.ST_MTHD_CD, ?)
				GROUP BY T1.MOT_NO, T1.INTRO_RUN_TM
			) U2,
			(
				SELECT
					 T1.MOT_NO
					,T1.INTRO_RUN_TM HIGH_INTOR_RUN_TM
					,RTRIM(REPLACE(XMLAGG(XMLELEMENT(A,T1.RACER_NO||'###') ORDER BY T1.RACER_NO).EXTRACT('//text()'),'###',CHR(10)),CHR(10)) M_RACER_NO
				FROM TBEB_ORGAN T1,
				(
					SELECT
						 MOT_NO
						,MIN(INTRO_RUN_TM) INTRO_RUN_TM
					FROM     TBEB_ORGAN
					WHERE 1=1
					AND ABSE_CD     <> '003'
					AND IMMT_CLS_CD <> '003'
					AND MBR_CD      = ?
					AND RACE_DAY    BETWEEN ? AND ?
					AND ST_MTHD_CD = DECODE(?, '000', ST_MTHD_CD, ?)
					GROUP BY MOT_NO
				) T2
				WHERE 1=1
				AND T1.ABSE_CD     <> '003'
				AND T1.IMMT_CLS_CD <> '003'
				AND T1.MBR_CD      = ?
				AND T1.RACE_DAY    BETWEEN ? AND ?
				AND T1.MOT_NO = T2.MOT_NO
				AND T1.INTRO_RUN_TM = T2.INTRO_RUN_TM
				AND T1.ST_MTHD_CD = DECODE(?, '000', T1.ST_MTHD_CD, ?)
				GROUP BY T1.MOT_NO, T1.INTRO_RUN_TM
			) U3,
			(
				SELECT
					 MOT_NO
					,MAX(DECODE(RACE_DIST, '1200', RACE_TM,    '')) RACE_TM_12
					,MAX(DECODE(RACE_DIST, '1800', RACE_TM,    '')) RACE_TM_18
					,MAX(DECODE(RACE_DIST, '1200', M_RACER_NO, '')) M_RACER_NO_12
					,MAX(DECODE(RACE_DIST, '1800', M_RACER_NO, '')) M_RACER_NO_18
				FROM (
					SELECT
						T1.MOT_NO, T2.RACE_DIST, T1.RACE_TM
						,RTRIM(REPLACE(XMLAGG(XMLELEMENT(A,T1.RACER_NO||'###') ORDER BY T1.RACER_NO).EXTRACT('//text()'),'###',CHR(10)),CHR(10)) M_RACER_NO
					FROM TBEB_ORGAN T1,
					(
						SELECT
							 MOT_NO
							,RACE_DIST
							,MIN(RACE_TM) RACE_TM
						FROM TBEB_ORGAN S1, TBEB_RACE S2
						WHERE 1=1
						AND S1.ABSE_CD     <> '003'
						AND S1.IMMT_CLS_CD <> '003'
						AND S1.MBR_CD      = ?
						AND S1.RACE_DAY    BETWEEN ? AND ?
						AND S1.STND_YEAR = S2.STND_YEAR
						AND S1.MBR_CD = S2.MBR_CD
						AND S1.TMS = S2.TMS
						AND S1.DAY_ORD = S2.DAY_ORD
						AND S1.RACE_NO = S2.RACE_NO
						AND S1.ST_MTHD_CD = DECODE(?, '000', S1.ST_MTHD_CD, ?)
						GROUP BY MOT_NO, RACE_DIST
					) T2
					WHERE 1=1
					AND T1.ABSE_CD     <> '003'
					AND T1.IMMT_CLS_CD <> '003'
					AND T1.MBR_CD      = ?
					AND T1.RACE_DAY    BETWEEN ? AND ?
					AND T1.MOT_NO = T2.MOT_NO(+)
					AND T1.RACE_TM = T2.RACE_TM(+)
					AND T1.ST_MTHD_CD = DECODE(?, '000', T1.ST_MTHD_CD, ?)
					GROUP BY T1.MOT_NO, T2.RACE_DIST, T1.RACE_TM
				) GROUP BY MOT_NO
			) U4,
			(
				SELECT
				MOT_NO
				,RTRIM(REPLACE(XMLAGG(XMLELEMENT(A,M_RACER_NO||'###') ORDER BY A1 DESC).EXTRACT('//text()'),'###',CHR(10)),CHR(10)) M_RACER_NO
				FROM (
					SELECT
					MOT_NO
					,A1
					,XMLAGG(XMLELEMENT(A,'['||A1||'/'||A2||'/'||A3||'/'||A4||'/'||A5||'/'||A6||'/'||A7||']') ORDER BY MOT_NO, A1 DESC, A2 DESC, A3 DESC).EXTRACT('//text()') M_RACER_NO
					FROM (
						SELECT
							 MOT_NO
							,TMS A1
							,DAY_ORD A2
							,RACE_NO A3
							,RACER_NO A4
							,BOAT_NO  A5
							,NVL(RANK, 0) A6
							,TO_CHAR(NVL(INTRO_RUN_TM, 0),'0.00') A7
						FROM     TBEB_ORGAN
						WHERE 1=1
						AND ABSE_CD     <> '003'
						AND IMMT_CLS_CD <> '003'
						AND MBR_CD      = ?
						AND RACE_DAY    BETWEEN ? AND ?
						AND ST_MTHD_CD = DECODE(?, '000', ST_MTHD_CD, ?)
					) GROUP BY MOT_NO, A1
				) GROUP BY MOT_NO
			) U5
			WHERE 1=1
			AND U1.MOT_NO = U2.MOT_NO
			AND U1.MOT_NO = U3.MOT_NO
			AND U1.MOT_NO = U4.MOT_NO
			AND U1.MOT_NO = U5.MOT_NO
	    ]]>
	</query> 

	<query id="tbeb_organ_fb035" desc="보트성적및기록조회" fetchSize="10">
	<![CDATA[
		SELECT /* tbeb_organ_fb035 보트성적및기록조회 */
		     SUBSTR(U1.BOAT_NO, 6) BOAT_NO
			,U1.RUN_CNT
			,U1.RACE_DAY_CNT
			,U1.RACE_CNT
			,U1.RANK_1
			,U1.RANK_2
			,U1.RANK_3
			,U1.RANK_4
			,U1.RANK_5
			,U1.RANK_6
			,U1.WIN_RATIO
			,U1.HIGH_RANK_RATIO
			,U1.HIGH_3_RANK_RATIO
			,U1.AMU_RANK_SCR
			,U1.AVG_RANK_SCR
			,U2.LOW_INTOR_RUN_TM
			,U2.M_RACER_NO M_RACER_NO_LOW
			,U3.HIGH_INTOR_RUN_TM
			,U3.M_RACER_NO M_RACER_NO_HIGH
			,U1.AVG_INTRO_RUN_TM
			,U4.RACE_TM_12
			,U4.M_RACER_NO_12
			,U4.RACE_TM_18
			,U4.M_RACER_NO_18
			,U5.M_RACER_NO M_RACER_NO_TOT
		FROM (
			SELECT
				 BOAT_NO
				,RUN_CNT
				,RACE_DAY_CNT
				,RACE_CNT
				,RANK_1
				,RANK_2
				,RANK_3
				,RANK_4
				,RANK_5
				,RANK_6
				,TRIM(TO_CHAR((RANK_1)/RACE_CNT*100, 990.9)) WIN_RATIO
				,TRIM(TO_CHAR((RANK_1 + RANK_2) / RACE_CNT * 100, 990.9)) HIGH_RANK_RATIO
				,TRIM(TO_CHAR((RANK_1 + RANK_2 + RANK_3) / RACE_CNT * 100, 990.9))	HIGH_3_RANK_RATIO
				,AMU_RANK_SCR
				,AVG_RANK_SCR
				,AVG_INTRO_RUN_TM
			FROM (
				SELECT
				         BOAT_NO
				       , COUNT(DISTINCT(TOR.STND_YEAR || TOR.MBR_CD || TOR.TMS))                RUN_CNT
				       , COUNT(DISTINCT(TOR.STND_YEAR || TOR.MBR_CD || TOR.TMS || TOR.DAY_ORD)) RACE_DAY_CNT
				       , COUNT(*)                                              RACE_CNT
				       , SUM(DECODE(TOR.RANK, 1, 1, 0))                        RANK_1
				       , SUM(DECODE(TOR.RANK, 2, 1, 0))                        RANK_2
				       , SUM(DECODE(TOR.RANK, 3, 1, 0))                        RANK_3
				       , SUM(DECODE(TOR.RANK, 4, 1, 0))                        RANK_4
				       , SUM(DECODE(TOR.RANK, 5, 1, 0))                        RANK_5
				       , SUM(DECODE(TOR.RANK, 6, 1, 0))                        RANK_6
				       , SUM(TRS.RACE_SCR)                                     AMU_RANK_SCR
				       , TRIM(TO_CHAR(AVG(TRS.RACE_SCR), 90.99))               AVG_RANK_SCR
				       , TRIM(TO_CHAR(SUM(TOR.INTRO_RUN_TM)/SUM(1), 90.99)) AVG_INTRO_RUN_TM
				FROM     TBEB_ORGAN         TOR
				       , TBEB_RACE_TMS      TRT
				       , TBEB_RACE          TR
				       , TBEB_RANK_SCR      TRS
				WHERE  TOR .STND_YEAR      = TR  .STND_YEAR
				AND    TOR .MBR_CD         = TR  .MBR_CD
				AND    TOR .TMS            = TR  .TMS
				AND    TOR .DAY_ORD        = TR  .DAY_ORD
				AND    TOR .RACE_NO        = TR  .RACE_NO
				AND    TOR .STND_YEAR      = TRT .STND_YEAR
				AND    TOR .MBR_CD         = TRT .MBR_CD
				AND    TOR .TMS            = TRT .TMS
				AND    TOR .STND_YEAR      = TRS .STND_YEAR
				AND    TR  .RACE_DGRE_CD   = TRS .RACE_DGRE_CD
				AND    TOR .RANK           = TRS .RANK
				AND    TOR .ABSE_CD       <> '003'
				AND    TOR .IMMT_CLS_CD   <> '003'
				AND    TOR .MBR_CD         = ?
				AND    TOR .RACE_DAY       BETWEEN ? AND ?
				AND    TOR.ST_MTHD_CD = DECODE(?, '000', TOR.ST_MTHD_CD, ?)
				GROUP BY BOAT_NO
			)
		) U1,
		(
			SELECT
				 T1.BOAT_NO
				,T1.INTRO_RUN_TM LOW_INTOR_RUN_TM
				,RTRIM(REPLACE(XMLAGG(XMLELEMENT(A,T1.RACER_NO||'###') ORDER BY T1.RACER_NO).EXTRACT('//text()'),'###',CHR(10)),CHR(10)) M_RACER_NO
			FROM TBEB_ORGAN T1,
			(
				SELECT
					 BOAT_NO
					,MAX(INTRO_RUN_TM) INTRO_RUN_TM
				FROM     TBEB_ORGAN
				WHERE 1=1
				AND ABSE_CD     <> '003'
				AND IMMT_CLS_CD <> '003'
				AND MBR_CD      = ?
				AND RACE_DAY    BETWEEN ? AND ?
				AND ST_MTHD_CD = DECODE(?, '000', ST_MTHD_CD, ?)
				GROUP BY BOAT_NO
			) T2
			WHERE 1=1
			AND T1.ABSE_CD     <> '003'
			AND T1.IMMT_CLS_CD <> '003'
			AND T1.MBR_CD      = ?
			AND T1.RACE_DAY    BETWEEN ? AND ?
			AND T1.BOAT_NO = T2.BOAT_NO
			AND T1.INTRO_RUN_TM = T2.INTRO_RUN_TM
			AND T1.ST_MTHD_CD = DECODE(?, '000', T1.ST_MTHD_CD, ?)
			GROUP BY T1.BOAT_NO, T1.INTRO_RUN_TM
		) U2,
		(
			SELECT
				 T1.BOAT_NO
				,T1.INTRO_RUN_TM HIGH_INTOR_RUN_TM
				,RTRIM(REPLACE(XMLAGG(XMLELEMENT(A,T1.RACER_NO||'###') ORDER BY T1.RACER_NO).EXTRACT('//text()'),'###',CHR(10)),CHR(10)) M_RACER_NO
			FROM TBEB_ORGAN T1,
			(
				SELECT
					 BOAT_NO
					,MIN(INTRO_RUN_TM) INTRO_RUN_TM
				FROM     TBEB_ORGAN
				WHERE 1=1
				AND ABSE_CD     <> '003'
				AND IMMT_CLS_CD <> '003'
				AND MBR_CD      = ?
				AND RACE_DAY    BETWEEN ? AND ?
				AND ST_MTHD_CD = DECODE(?, '000', ST_MTHD_CD, ?)		
				GROUP BY BOAT_NO
			) T2
			WHERE 1=1
			AND T1.ABSE_CD     <> '003'
			AND T1.IMMT_CLS_CD <> '003'
			AND T1.MBR_CD      = ?
			AND T1.RACE_DAY    BETWEEN ? AND ?
			AND T1.BOAT_NO = T2.BOAT_NO
			AND T1.INTRO_RUN_TM = T2.INTRO_RUN_TM
			AND T1.ST_MTHD_CD = DECODE(?, '000', T1.ST_MTHD_CD, ?)
			GROUP BY T1.BOAT_NO, T1.INTRO_RUN_TM
		) U3,
		(
			SELECT
				 BOAT_NO
				,MAX(DECODE(RACE_DIST, '1200', RACE_TM,    '')) RACE_TM_12
				,MAX(DECODE(RACE_DIST, '1800', RACE_TM,    '')) RACE_TM_18
				,MAX(DECODE(RACE_DIST, '1200', M_RACER_NO, '')) M_RACER_NO_12
				,MAX(DECODE(RACE_DIST, '1800', M_RACER_NO, '')) M_RACER_NO_18
			FROM (
				SELECT
					T1.BOAT_NO, T2.RACE_DIST, T1.RACE_TM
					,RTRIM(REPLACE(XMLAGG(XMLELEMENT(A,T1.RACER_NO||'###') ORDER BY T1.RACER_NO).EXTRACT('//text()'),'###',CHR(10)),CHR(10)) M_RACER_NO
				FROM TBEB_ORGAN T1,
				(
					SELECT
						 BOAT_NO
						,RACE_DIST
						,MIN(RACE_TM) RACE_TM
					FROM TBEB_ORGAN S1, TBEB_RACE S2
					WHERE 1=1
					AND S1.ABSE_CD     <> '003'
					AND S1.IMMT_CLS_CD <> '003'
					AND S1.MBR_CD      = ?
					AND S1.RACE_DAY    BETWEEN ? AND ?
					AND S1.STND_YEAR = S2.STND_YEAR
					AND S1.MBR_CD = S2.MBR_CD
					AND S1.TMS = S2.TMS
					AND S1.DAY_ORD = S2.DAY_ORD
					AND S1.RACE_NO = S2.RACE_NO
					AND S1.ST_MTHD_CD = DECODE(?, '000', S1.ST_MTHD_CD, ?)
					GROUP BY BOAT_NO, RACE_DIST
				) T2
				WHERE 1=1
				AND T1.ABSE_CD     <> '003'
				AND T1.IMMT_CLS_CD <> '003'
				AND T1.MBR_CD      = ?
				AND T1.RACE_DAY    BETWEEN ? AND ?
				AND T1.BOAT_NO = T2.BOAT_NO(+)
				AND T1.RACE_TM = T2.RACE_TM(+)
				AND T1.ST_MTHD_CD = DECODE(?, '000', T1.ST_MTHD_CD, ?)
				GROUP BY T1.BOAT_NO, T2.RACE_DIST, T1.RACE_TM
			) GROUP BY BOAT_NO
		) U4,
		(
			SELECT
			BOAT_NO
			,RTRIM(REPLACE(XMLAGG(XMLELEMENT(A,M_RACER_NO||'###') ORDER BY A1 DESC).EXTRACT('//text()'),'###',CHR(10)),CHR(10)) M_RACER_NO
			FROM (
				SELECT
				BOAT_NO
				,A1
				,XMLAGG(XMLELEMENT(A,'['||A1||'/'||A2||'/'||A3||'/'||A4||'/'||A5||'/'||A6||'/'||A7||']') ORDER BY BOAT_NO, A1 DESC, A2 DESC, A3 DESC).EXTRACT('//text()') M_RACER_NO
				FROM (
					SELECT
						 BOAT_NO
						,TMS A1
						,DAY_ORD A2
						,RACE_NO A3
						,RACER_NO A4
						,BOAT_NO  A5
						,NVL(RANK, 0) A6
						,TO_CHAR(NVL(INTRO_RUN_TM, 0),'0.00') A7
					FROM     TBEB_ORGAN
					WHERE 1=1
					AND ABSE_CD     <> '003'
					AND IMMT_CLS_CD <> '003'
					AND MBR_CD      = ?
					AND RACE_DAY    BETWEEN ? AND ?
					AND ST_MTHD_CD = DECODE(?, '000', ST_MTHD_CD, ?)
				) GROUP BY BOAT_NO, A1
			) GROUP BY BOAT_NO
		) U5
		WHERE 1=1
		AND U1.BOAT_NO = U2.BOAT_NO
		AND U1.BOAT_NO = U3.BOAT_NO
		AND U1.BOAT_NO = U4.BOAT_NO
		AND U1.BOAT_NO = U5.BOAT_NO

	]]>
	</query> 
    

      
</queryMap>