<?xml version="1.0" encoding="euc-kr"?>
<Window>
	<Form Height="576" Id="RBS9210" Left="8" OnLoadCompleted="fcFormLoadSetting" OnUnloadCompleted="fcFormUnloadProcess" PidAttrib="7" Title="매출발매비율조회" Top="8" Ver="1.0" Width="816" WorkArea="true">
		<Datasets>
			<Dataset DataSetType="Dataset" Id="dsYear">
				<Contents>
					<colinfo id="CD" size="256" summ="default" type="STRING"/>
					<colinfo id="CD_NM" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsListCnt">
				<Contents>
					<colinfo id="WTYPE" size="256" summ="default" type="STRING"/>
					<colinfo id="KK" size="256" summ="default" type="STRING"/>
					<colinfo id="KCYCLE" size="256" summ="default" type="STRING"/>
					<colinfo id="KBOAT" size="256" summ="default" type="STRING"/>
					<colinfo id="SU" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsGubun">
				<Contents>
					<colinfo id="CD" size="256" summ="default" type="STRING"/>
					<colinfo id="CD_NM" size="256" summ="default" type="STRING"/>
					<record>
						<CD></CD>
						<CD_NM>전체</CD_NM>
					</record>
					<record>
						<CD>001</CD>
						<CD_NM>경륜</CD_NM>
					</record>
					<record>
						<CD>003</CD>
						<CD_NM>경정</CD_NM>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsInComCd">
				<Contents>
					<colinfo id="DSNAME" size="20" summ="default" type="STRING"/>
					<colinfo id="CD_GRP_ID" size="6" summ="default" type="STRING"/>
					<colinfo id="QUERY_ID" size="256" summ="default" type="STRING"/>
					<colinfo id="TERM1" size="256" summ="default" type="STRING"/>
					<colinfo id="TERM2" size="256" summ="default" type="STRING"/>
					<colinfo id="TERM3" size="256" summ="default" type="STRING"/>
					<colinfo id="TERM4" size="256" summ="default" type="STRING"/>
					<colinfo id="TERM5" size="256" summ="default" type="STRING"/>
					<colinfo id="DESCRIPTION" size="256" summ="default" type="STRING"/>
					<colinfo id="ALL_YN" size="1" summ="default" type="STRING"/>
					<record>
						<ALL_YN></ALL_YN>
						<CD_GRP_ID></CD_GRP_ID>
						<DESCRIPTION>IP장비구분</DESCRIPTION>
						<DSNAME>dsBrncCd</DSNAME>
						<QUERY_ID>common_stay_brnc</QUERY_ID>
						<TERM1></TERM1>
						<TERM2></TERM2>
						<TERM3></TERM3>
						<TERM4></TERM4>
						<TERM5></TERM5>
					</record>
					<record>
						<ALL_YN></ALL_YN>
						<CD_GRP_ID></CD_GRP_ID>
						<DESCRIPTION>IP장비구분</DESCRIPTION>
						<DSNAME>dsCommCd</DSNAME>
						<QUERY_ID>common_stay_brnc</QUERY_ID>
						<TERM1></TERM1>
						<TERM2></TERM2>
						<TERM3></TERM3>
						<TERM4></TERM4>
						<TERM5></TERM5>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsCommCd" OnLoadCompleted="fcDsOnLoadCompleted">
				<Contents>
					<colinfo id="CD" size="256" summ="default" type="STRING"/>
					<colinfo id="CD_NM" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsBrncCd" OnLoadCompleted="fcDsOnLoadCompleted">
				<Contents></Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsListAmt">
				<Contents>
					<colinfo id="WTYPE" size="256" summ="default" type="STRING"/>
					<colinfo id="KK" size="256" summ="default" type="STRING"/>
					<colinfo id="KCYCLE" size="256" summ="default" type="STRING"/>
					<colinfo id="KBOAT" size="256" summ="default" type="STRING"/>
					<colinfo id="SU" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
		</Datasets>
		<Shape BKColor="user0" Bottom="61" Height="31" Id="Shape1" Left="8" LineColor="user6" LineKind="Vertical" Right="809" RoundHeight="10" RoundUnit="Pixel" RoundWidth="10" TabOrder="1" Top="30" Type="RoundRect" Width="801"></Shape>
		<Image Height="20" Id="imgFormTitle" ImageID="m_titleblet" Left="8" TabOrder="1" Top="2" Width="11"></Image>
		<Static Color="user4" Height="20" Id="stFormTitle" Left="19" Style="snis_m_title" TabOrder="1" Text="매출발매비율조회" VAlign="Middle" Width="430"></Static>
		<Div Height="20" Id="divBtnLst" Left="437" TabOrder="1" Text="Div0" Url="common::comButtonType.xml" Width="374">
			<Contents></Contents>
		</Div>
		<Static Border="None" Height="20" Id="Static10" Left="28" Style="snis_if_lable" TabOrder="5" Text="기간" Top="36" VAlign="Middle" Width="24"></Static>
		<Static Border="None" Height="20" Id="Static0" Left="276" Style="snis_if_lable" TabOrder="6" Text="구분" Top="36" VAlign="Middle" Width="24"></Static>
		<Combo Border="Flat" CodeColumn="CD" DataColumn="CD_NM" Height="21" Id="cboGubun" ImeMode="none" InnerDataset="dsGubun" Left="307" OnChanged="combo_OnChanged" ResetIndex="FIRST" Style="snis_if_input01" TabOrder="7" Top="34" Value="2011" Width="80">
			<Contents>
				<Record Data="&#32;" Default="true"/>
			</Contents>
		</Combo>
		<Tab Border="Flat" BorderColor="user3" Height="498" Id="Tab0" Left="8" OnChanged="Tab0_OnChanged" TabOrder="8" Top="70" Width="801">
			<Contents>
				<TabPage BorderColor="black" Height="474" Id="tab1" ImageID="m_tab_06" Left="2" TabOrder="10" Text="발매건수" Top="22" Width="797">
					<Grid AutoEnter="TRUE" AutoFitEndLine="Hide" BindDataset="dsListCnt" BKColor="user15" BkColor2="user16" BkSelColor="user17" BoldHead="true" Border="Flat" BorderColor="user22" Bottom="466" ColSizing="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="20" Height="458" Id="grdListCnt" InputPanel="FALSE" Left="5" LineColor="user18" OnHeadClick="fcGridSort" Right="790" SelColor="user19" Style="snis_grid" TabOrder="1" TabStop="true" Top="8" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="785">
						<contents>
							<format id="Default">
								<columns>
									<col width="170"/>
									<col width="70"/>
									<col width="90"/>
									<col width="90"/>
									<col width="90"/>
									<col width="90"/>
									<col width="90"/>
									<col width="90"/>
								</columns>
								<head>
									<cell col="0" colspan="2" display="text" edit="uppernum" font="굴림,9,Bold" rowspan="2" text="구분"/>
									<cell col="2" colspan="2" display="text" text="경륜"/>
									<cell col="4" colspan="2" display="text" text="경정"/>
									<cell col="6" colspan="2" display="text" text="계"/>
									<cell col="2" display="text" row="1" text="발매건수"/>
									<cell col="3" display="text" row="1" text="비율(%)"/>
									<cell col="4" display="text" row="1" text="발매건수"/>
									<cell col="5" display="text" row="1" text="비율(%)"/>
									<cell col="6" display="text" row="1" text="발매건수"/>
									<cell col="7" display="text" row="1" text="비율(%)"/>
								</head>
								<body>
									<cell align="right" bkcolor="expr:decode(kk,&#32;&apos;계&apos;,&#32;&apos;yellow&apos;,&#32;&apos;M&apos;,&#32;&apos;#78EAFF&apos;)" checklength="Byte" col="0" colid="WTYPE" display="text" imemode="english" limit="4" suppress="1" useime="false"/>
									<cell bkcolor="expr:decode(kk,&#32;&apos;계&apos;,&#32;&apos;yellow&apos;,&#32;&apos;M&apos;,&#32;&apos;#78EAFF&apos;)" col="1" colid="KK" display="text"/>
									<cell align="right" bkcolor="expr:decode(kk,&#32;&apos;계&apos;,&#32;&apos;yellow&apos;,&#32;&apos;M&apos;,&#32;&apos;#78EAFF&apos;)" checklength="Byte" col="2" colid="KCYCLE" display="number" imemode="english" limit="100" useime="false"/>
									<cell align="right" bkcolor="expr:decode(kk,&#32;&apos;계&apos;,&#32;&apos;yellow&apos;,&#32;&apos;M&apos;,&#32;&apos;#78EAFF&apos;)" checklength="Byte" col="3" colid="KCYCLE_RATE" display="number" limit="100" Mask="##.##"/>
									<cell align="right" bkcolor="expr:decode(kk,&#32;&apos;계&apos;,&#32;&apos;yellow&apos;,&#32;&apos;M&apos;,&#32;&apos;#78EAFF&apos;)" checklength="Byte" col="4" colid="KBOAT" display="number" limit="100"/>
									<cell align="right" bkcolor="expr:decode(kk,&#32;&apos;계&apos;,&#32;&apos;yellow&apos;,&#32;&apos;M&apos;,&#32;&apos;#78EAFF&apos;)" checklength="Byte" col="5" colid="KBOAT_RATE" display="number" Mask="##.##"/>
									<cell align="right" bkcolor="expr:decode(kk,&#32;&apos;계&apos;,&#32;&apos;yellow&apos;,&#32;&apos;M&apos;,&#32;&apos;#78EAFF&apos;)" checklength="Byte" col="6" colid="SU" display="number" limit="100"/>
									<cell align="right" bkcolor="expr:decode(kk,&#32;&apos;계&apos;,&#32;&apos;yellow&apos;,&#32;&apos;M&apos;,&#32;&apos;#78EAFF&apos;)" checklength="Byte" col="7" colid="SU_RATE" display="number" Mask="##.##"/>
								</body>
							</format>
						</contents>
					</Grid>
				</TabPage>
				<TabPage BorderColor="black" Height="474" Id="tab2" ImageID="m_tab_06" Left="2" TabOrder="4" Text="발매액" Top="22" Width="797">
					<Grid AutoEnter="TRUE" AutoFitEndLine="Hide" BindDataset="dsListAmt" BKColor="user15" BkColor2="user16" BkSelColor="user17" BoldHead="true" Border="Flat" BorderColor="user22" Bottom="466" ColSizing="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="20" Height="458" Id="grdListAmt" InputPanel="FALSE" Left="5" LineColor="user18" OnHeadClick="fcGridSort" Right="790" SelColor="user19" Style="snis_grid" TabOrder="1" TabStop="true" Top="8" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="785">
						<contents>
							<format id="Default">
								<columns>
									<col width="170"/>
									<col width="70"/>
									<col width="90"/>
									<col width="90"/>
									<col width="90"/>
									<col width="90"/>
									<col width="90"/>
									<col width="90"/>
								</columns>
								<head>
									<cell col="0" colspan="2" display="text" edit="uppernum" font="굴림,9,Bold" rowspan="2" text="구분"/>
									<cell col="2" colspan="2" display="text" text="경륜"/>
									<cell col="4" colspan="2" display="text" text="경정"/>
									<cell col="6" colspan="2" display="text" text="계"/>
									<cell col="2" display="text" row="1" text="발매액"/>
									<cell col="3" display="text" row="1" text="비율(%)"/>
									<cell col="4" display="text" row="1" text="발매액"/>
									<cell col="5" display="text" row="1" text="비율(%)"/>
									<cell col="6" display="text" row="1" text="발매액"/>
									<cell col="7" display="text" row="1" text="비율(%)"/>
								</head>
								<body>
									<cell align="right" bkcolor="expr:decode(kk,&#32;&apos;계&apos;,&#32;&apos;yellow&apos;,&#32;&apos;M&apos;,&#32;&apos;#78EAFF&apos;)" checklength="Byte" col="0" colid="WTYPE" display="text" imemode="english" limit="4" suppress="1" useime="false"/>
									<cell bkcolor="expr:decode(kk,&#32;&apos;계&apos;,&#32;&apos;yellow&apos;,&#32;&apos;M&apos;,&#32;&apos;#78EAFF&apos;)" col="1" colid="KK" display="text"/>
									<cell align="right" bkcolor="expr:decode(kk,&#32;&apos;계&apos;,&#32;&apos;yellow&apos;,&#32;&apos;M&apos;,&#32;&apos;#78EAFF&apos;)" checklength="Byte" col="2" colid="KCYCLE" display="number" imemode="english" limit="100" useime="false"/>
									<cell align="right" bkcolor="expr:decode(kk,&#32;&apos;계&apos;,&#32;&apos;yellow&apos;,&#32;&apos;M&apos;,&#32;&apos;#78EAFF&apos;)" checklength="Byte" col="3" colid="KCYCLE_RATE" display="number" limit="100" Mask="##.##"/>
									<cell align="right" bkcolor="expr:decode(kk,&#32;&apos;계&apos;,&#32;&apos;yellow&apos;,&#32;&apos;M&apos;,&#32;&apos;#78EAFF&apos;)" checklength="Byte" col="4" colid="KBOAT" display="number" limit="100"/>
									<cell align="right" bkcolor="expr:decode(kk,&#32;&apos;계&apos;,&#32;&apos;yellow&apos;,&#32;&apos;M&apos;,&#32;&apos;#78EAFF&apos;)" checklength="Byte" col="5" colid="KBOAT_RATE" display="number" Mask="##.##"/>
									<cell align="right" bkcolor="expr:decode(kk,&#32;&apos;계&apos;,&#32;&apos;yellow&apos;,&#32;&apos;M&apos;,&#32;&apos;#78EAFF&apos;)" checklength="Byte" col="6" colid="SU" display="number" limit="100"/>
									<cell align="right" bkcolor="expr:decode(kk,&#32;&apos;계&apos;,&#32;&apos;yellow&apos;,&#32;&apos;M&apos;,&#32;&apos;#78EAFF&apos;)" checklength="Byte" col="7" colid="SU_RATE" display="number" Mask="##.##"/>
								</body>
							</format>
						</contents>
					</Grid>
				</TabPage>
			</Contents>
		</Tab>
		<Calendar Border="Flat" Height="22" Id="calFromDt" Left="62" SaturdayTextColor="blue" Style="snis_if_input01" SundayTextColor="red" TabOrder="9" Top="34" Width="90"></Calendar>
		<Calendar Border="Flat" Height="22" Id="calToDt" Left="158" SaturdayTextColor="blue" Style="snis_if_input01" SundayTextColor="red" TabOrder="10" Top="34" Width="90"></Calendar>
		<Static Color="deeppink" Height="27" Id="Static1" Left="403" TabOrder="11" Text="발매액은&#32;환불액을&#32;포함" Top="40" Width="143"></Static>
	</Form>
	<Script><![CDATA[/***************************************************************************************************
*   Form Common Script                                                                             *
*     현재 총 100 컬럼임 되도록 100 컬럼 안으로 코딩을 하세요                                      *
123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 1234567890
***************************************************************************************************/

/***************************************************************************************************
*                                         공통 Script Include                                      *
***************************************************************************************************/
#include "lib::rbm_common_script.js";
#include "lib::rbm_app_script.js";

/***************************************************************************************************
*                                          화면 변수 선언부                                        *
***************************************************************************************************/
var sFormId       = this.GetForm().id;
var sBUTTONLIST   = 'FTFFTFT';                     // 공통기능정의(버튼순으로 T or F)
var sUSERAUTH     = '';                            // 사용자별 프로그램 사용 권한
var sFORMCAPTION  = '';                            // Form의 Title 정보
var sFORMLOCATION = '';                            // Form의 Location 정보
var sUSERLAVEL    = '';                            // Form의 사용  Level
var vREVOBJ       = Array(9);                      // 결과값 처리를 위한 오브젝트
var sGRDTIT       = "";                            // 그리드 제목
var sCUROBJ       ;                                // 현재 LOST FOCUS 오브젝트

var sMenuGrpNum     = "0";                         // 메뉴그룹의 갯수보관
var sMenuListNum    = "0";                         // 메뉴리스트의 갯수보관
var sMenuUpId       = "";
var sMenuUpNm       = "";
var sPAGENUM        = "20";

var gnGrpRow        = 0;
/***************************************************************************************************
*                                         공통 Event 처리 부분                                     *
***************************************************************************************************/
/*-------------------------------------------------------------------------------------------------+
>>  최초 화면 Load時 처리 할 사항
+-------------------------------------------------------------------------------------------------*/
function fcFormLoadSetting(obj) {
	sBUTTONLIST   = 'FTTFTFT';     // 초기화,조회,저장,삭제,엑셀,인쇄,닫기

	// 화면환경 설정
	sFORMCAPTION  = obj.Title;
	sFORMLOCATION = "";

	// 화면 정보 Display 및 Button 권한 설정
	fnc_FormLoadSetting(obj, sFORMCAPTION, sFORMLOCATION, sBUTTONLIST, sUSERAUTH);

	//공통코드 조회
	//fcd_GetComboDs(dsInComCd);
	
	// 년도 설정
	//fcSetYear();
	
	calFromDt.Value = substr(today(),0,4)+"0101";
	calToDt.Value = today();
	
	calFromDt.SetFocus();
	
	fcSearch(); // 그룹코드 조회
}

/*-------------------------------------------------------------------------------------------------+
>>  최초 화면 UNLoad時 처리 할 사항
+-------------------------------------------------------------------------------------------------*/
function fcFormUnloadProcess(obj) {
	// 자료 변경 여부를 체크하고자 하는 DataSet Object를 넘긴다.
	var sDataset = "dsList";
	if (   !fnc_FormUnloadCheck(sDataset  , sFormId) ) return false;
}

/*-------------------------------------------------------------------------------------------------+
>>  단축키 처리(Form KeyDown)
+-------------------------------------------------------------------------------------------------*/
function fcHotKey(obj,objSenderObj,nChar,bShift,bControl,bAlt,nLLParam,nHLParam) {

	// Return Key Press時 Next Component focus
	if ( nChar == ENTER_KEY ) {
		var oFocusComponent = GetNextComponent(true);
		oFocusComponent.setfocus();
		return;
	}

	// Control Key가 눌려져 있다면 단축키 처리
	// if (bControl) fnc_HotKey(this, nChar);
}

/***************************************************************************************************
*                                      공통 버튼 Event 처리 부분                                   *
***************************************************************************************************/
/*-------------------------------------------------------------------------------------------------+
>>  취소 버튼 클릭 時 처리
+-------------------------------------------------------------------------------------------------*/
function fcInit(obj) {
	dsListCnt.ClearData();
	dsListAmt.ClearData();
}

/*-------------------------------------------------------------------------------------------------+
>>  조회 버튼 클릭 時 처리
+-------------------------------------------------------------------------------------------------*/
function fcSearch(obj) {

	var sServiceName = "";
	var sInDataSet   = "";
	var sOutDataSet  = "";

	if (tab0.TabIndex == 0) {
		if(cboGubun.Value == '001'){
			sServiceName = "rbs9210-service:searchListCntCycle";
			sOutDataSet  = "dsListCnt=dsListCnt";
		}else if(cboGubun.Value == '003'){
			sServiceName = "rbs9210-service:searchListCntBoat";
			sOutDataSet  = "dsListCnt=dsListCnt";
		}else{
			sServiceName = "rbs9210-service:searchListCntAll";
			sOutDataSet  = "dsListCnt=dsListCnt";
		}
		
		//조회조건 : 
		fcd_AddParam("STR_DT",	calFromDt.Value);
		fcd_AddParam("END_DT",	calToDt.Value);
		fcd_AddParam("GUBUN", 	cboGubun.Value);
		
	} else if (tab0.TabIndex == 1) {
		if(cboGubun.Value == '001'){
			sServiceName = "rbs9210-service:searchListAmtCycle";
			sOutDataSet  = "dsListAmt=dsListAmt";
		}else if(cboGubun.Value == '003'){
			sServiceName = "rbs9210-service:searchListAmtBoat";
			sOutDataSet  = "dsListAmt=dsListAmt";
		}else{
			sServiceName = "rbs9210-service:searchListAmtAll";
			sOutDataSet  = "dsListAmt=dsListAmt";
		}	
		
		//조회조건 : 
		fcd_AddParam("STR_DT",	calFromDt.Value);
		fcd_AddParam("END_DT",	calToDt.Value);
		fcd_AddParam("GUBUN", 	cboGubun.Value);
		
	}
	
	fcd_SendTransaction(sServiceName, sInDataSet, sOutDataSet, "fcCallBack", true);
}


/*-------------------------------------------------------------------------------------------------+
>>  엑셀 버튼 클릭 時 처리
+-------------------------------------------------------------------------------------------------*/
function fcToExcel(obj) {

	var sExcelList = "tab0.tab1.grdListCnt:전자카드 종합관리(발매건수)";
	if (tab0.TabIndex == 1) {
		sExcelList = "tab0.tab2.grdListAmt:전자카드 종합관리(발매액)";
	}
	
	fcd_OpenExcelListExport(sExcelList);
}


/*-------------------------------------------------------------------------------------------------+
>>  화면 종료(닫기) 버튼 클릭 時 처리
+-------------------------------------------------------------------------------------------------*/
function fcEnd(obj) {
	// 화면 종료
	Close();
}

/***************************************************************************************************
*                                      공통 Function 처리 부분                                     *
***************************************************************************************************/
/*-------------------------------------------------------------------------------------------------+
>>  그리드 정렬
+-------------------------------------------------------------------------------------------------*/
function fcGridSort(obj,nCell,nX,nY) {
	// 특정 Head 클릭 시 해당 항목으로 Sort(만약 특정 컬럼을 누를때만 소트하고자 한다면 nCell로 조건)
	if ( nCell == 0 ) {
 		fnc_GridAllChk(obj);
	} else {
		fnc_GridSort(obj, object(obj.BindDataset), nCell);
	}
}

/*-------------------------------------------------------------------------------------------------+
>>  Help Popup Open
+-------------------------------------------------------------------------------------------------*/
function fcHelpDialoge(obj,nX,nY) {

}

/*-------------------------------------------------------------------------------------------------+
>>  그리드에서 팝업 처리
+-------------------------------------------------------------------------------------------------*/
function fcGrdOnExpandEdit(objGrd, nRow, nCell, strVal, nPivotIndex) {

}

/***************************************************************************************************
*                                      사용자 정의  처리 부분                                      *
***************************************************************************************************/
/*-------------------------------------------------------------------------------------------------+
>>  Transaction 후 처리 해야 할 내용!
+-------------------------------------------------------------------------------------------------*/
function fcCallBack(sServiceName, ErrorCode, ErrorMSG) {
	if ( !fnc_result(ErrorCode, ErrorMSG) ) return;

	// 그룹코드조회 완료 후
	if ( sServiceName == "rbs9210-service:searchListCntCycle" || sServiceName == "rbs9210-service:searchListCntAll") {
		if(dsListCnt.GetRowCount() > 0){
			
			//경륜 발매건수 데이터 추출
			var KCYCLE_MAN_SUM = dsListCnt.GetColumn(0, "KCYCLE");
			var KCYCLE_MAN_GONGDAN_SUM = dsListCnt.GetColumn(1, "KCYCLE");
			var KCYCLE_MAN_GYOCHA_SUM = dsListCnt.GetColumn(2, "KCYCLE");
			
			var KCYCLE_UNMAN_SUM = dsListCnt.GetColumn(3, "KCYCLE");
			var KCYCLE_UNMAN_GONGDAN_SUM = dsListCnt.GetColumn(4, "KCYCLE");
			var KCYCLE_UNMAN_GYOCHA_SUM = dsListCnt.GetColumn(5, "KCYCLE");
			
			var KCYCLE_GREENCARD_SUM = dsListCnt.GetColumn(6, "KCYCLE");
			var KCYCLE_GREENCARD_GONGDAN_SUM = dsListCnt.GetColumn(7, "KCYCLE");
			var KCYCLE_GREENCARD_GYOCHA_SUM = dsListCnt.GetColumn(8, "KCYCLE");
			
			var KCYCLE_MOBILE_SUM = dsListCnt.GetColumn(9, "KCYCLE");
			var KCYCLE_MOBILE_GONGDAN_SUM = dsListCnt.GetColumn(10, "KCYCLE");
			var KCYCLE_MOBILE_GYOCHA_SUM = dsListCnt.GetColumn(11, "KCYCLE");
			
			var KCYCLE_SUM = dsListCnt.GetColumn(12, "KCYCLE");
			var KCYCLE_GONGDAN_SUM = dsListCnt.GetColumn(13, "KCYCLE");
			var KCYCLE_GYOCHA_SUM = dsListCnt.GetColumn(14, "KCYCLE");
			
			//경륜 발매건수 비율 계산
			var KCYCLE_MAN_SUM_RATE = round(KCYCLE_MAN_SUM / KCYCLE_SUM * 100, 2);
			var KCYCLE_MAN_GONGDAN_RATE = round(KCYCLE_MAN_GONGDAN_SUM / KCYCLE_GONGDAN_SUM * 100, 2);
			var KCYCLE_MAN_GYOCHA_RATE = round(KCYCLE_MAN_GYOCHA_SUM / KCYCLE_GYOCHA_SUM * 100, 2);
			
			var KCYCLE_UNMAN_SUM_RATE = round(KCYCLE_UNMAN_SUM / KCYCLE_SUM * 100, 2);
			var KCYCLE_UNMAN_GONGDAN_RATE = round(KCYCLE_UNMAN_GONGDAN_SUM / KCYCLE_GONGDAN_SUM * 100, 2);
			var KCYCLE_UNMAN_GYOCHA_RATE = round(KCYCLE_UNMAN_GYOCHA_SUM / KCYCLE_GYOCHA_SUM * 100, 2);
			
			var KCYCLE_GREENCARD_SUM_RATE = round(KCYCLE_GREENCARD_SUM / KCYCLE_SUM * 100, 2);
			var KCYCLE_GREENCARD_GONGDAN_RATE = round(KCYCLE_GREENCARD_GONGDAN_SUM / KCYCLE_GONGDAN_SUM * 100, 2);
			var KCYCLE_GREENCARD_GYOCHA_RATE = round(KCYCLE_GREENCARD_GYOCHA_SUM / KCYCLE_GYOCHA_SUM * 100, 2);
			
			var KCYCLE_MOBILE_SUM_RATE = round(KCYCLE_MOBILE_SUM / KCYCLE_SUM * 100, 2);
			var KCYCLE_MOBILE_GONGDAN_RATE = round(KCYCLE_MOBILE_GONGDAN_SUM / KCYCLE_GONGDAN_SUM * 100, 2);
			var KCYCLE_MOBILE_GYOCHA_RATE = round(KCYCLE_MOBILE_GYOCHA_SUM / KCYCLE_GYOCHA_SUM * 100, 2);
			
			var KCYCLE_SGW_SUM_RATE = round((KCYCLE_GREENCARD_SUM + KCYCLE_MOBILE_SUM)/ KCYCLE_SUM * 100, 2);
			var KCYCLE_SGW_GONGDAN_RATE = round((KCYCLE_GREENCARD_GONGDAN_SUM +  KCYCLE_MOBILE_GONGDAN_SUM) / KCYCLE_GONGDAN_SUM * 100, 2);
			var KCYCLE_SGW_GYOCHA_RATE = round((KCYCLE_GREENCARD_GYOCHA_SUM + KCYCLE_MOBILE_GYOCHA_SUM)/ KCYCLE_GYOCHA_SUM * 100, 2);
			
			//경륜 발매건수 비율 입력
			dsListCnt.AddColumn("KCYCLE_RATE");
			dsListCnt.SetColumn(0, "KCYCLE_RATE", KCYCLE_MAN_SUM_RATE);
			dsListCnt.SetColumn(1, "KCYCLE_RATE", KCYCLE_MAN_GONGDAN_RATE);
			dsListCnt.SetColumn(2, "KCYCLE_RATE", KCYCLE_MAN_GYOCHA_RATE);
			
			dsListCnt.SetColumn(3, "KCYCLE_RATE", KCYCLE_UNMAN_SUM_RATE);
			dsListCnt.SetColumn(4, "KCYCLE_RATE", KCYCLE_UNMAN_GONGDAN_RATE);
			dsListCnt.SetColumn(5, "KCYCLE_RATE", KCYCLE_UNMAN_GYOCHA_RATE);
			
			dsListCnt.SetColumn(6, "KCYCLE_RATE", KCYCLE_GREENCARD_SUM_RATE);
			dsListCnt.SetColumn(7, "KCYCLE_RATE", KCYCLE_GREENCARD_GONGDAN_RATE);
			dsListCnt.SetColumn(8, "KCYCLE_RATE", KCYCLE_GREENCARD_GYOCHA_RATE);
			
			dsListCnt.SetColumn(9, "KCYCLE_RATE", KCYCLE_MOBILE_SUM_RATE);
			dsListCnt.SetColumn(10, "KCYCLE_RATE", KCYCLE_MOBILE_GONGDAN_RATE);
			dsListCnt.SetColumn(11, "KCYCLE_RATE", KCYCLE_MOBILE_GYOCHA_RATE);
						
			dsListCnt.SetColumn(15, "KCYCLE_RATE", KCYCLE_SGW_SUM_RATE);
			dsListCnt.SetColumn(16, "KCYCLE_RATE", KCYCLE_SGW_GONGDAN_RATE);
			dsListCnt.SetColumn(17, "KCYCLE_RATE", KCYCLE_SGW_GYOCHA_RATE);
			
			
			//경정 발매건수 데이터 추출
			var KBOAT_MAN_SUM = dsListCnt.GetColumn(0, "KBOAT");
			var KBOAT_MAN_GONGDAN_SUM = dsListCnt.GetColumn(1, "KBOAT");
			var KBOAT_MAN_GYOCHA_SUM = dsListCnt.GetColumn(2, "KBOAT");
			
			var KBOAT_UNMAN_SUM = dsListCnt.GetColumn(3, "KBOAT");
			var KBOAT_UNMAN_GONGDAN_SUM = dsListCnt.GetColumn(4, "KBOAT");
			var KBOAT_UNMAN_GYOCHA_SUM = dsListCnt.GetColumn(5, "KBOAT");
			
			var KBOAT_GREENCARD_SUM = dsListCnt.GetColumn(6, "KBOAT");
			var KBOAT_GREENCARD_GONGDAN_SUM = dsListCnt.GetColumn(7, "KBOAT");
			var KBOAT_GREENCARD_GYOCHA_SUM = dsListCnt.GetColumn(8, "KBOAT");
			
			var KBOAT_MOBILE_SUM = dsListCnt.GetColumn(9, "KBOAT");
			var KBOAT_MOBILE_GONGDAN_SUM = dsListCnt.GetColumn(10, "KBOAT");
			var KBOAT_MOBILE_GYOCHA_SUM = dsListCnt.GetColumn(11, "KBOAT");
			
			var KBOAT_SUM = dsListCnt.GetColumn(12, "KBOAT");
			var KBOAT_GONGDAN_SUM = dsListCnt.GetColumn(13, "KBOAT");
			var KBOAT_GYOCHA_SUM = dsListCnt.GetColumn(14, "KBOAT");
			
			//경정 발매건수 비율 계산
			var KBOAT_MAN_SUM_RATE = round(KBOAT_MAN_SUM / KBOAT_SUM * 100, 2);
			var KBOAT_MAN_GONGDAN_RATE = round(KBOAT_MAN_GONGDAN_SUM / KBOAT_GONGDAN_SUM * 100, 2);
			var KBOAT_MAN_GYOCHA_RATE = round(KBOAT_MAN_GYOCHA_SUM / KBOAT_GYOCHA_SUM * 100, 2);
			
			var KBOAT_UNMAN_SUM_RATE = round(KBOAT_UNMAN_SUM / KBOAT_SUM * 100, 2);
			var KBOAT_UNMAN_GONGDAN_RATE = round(KBOAT_UNMAN_GONGDAN_SUM / KBOAT_GONGDAN_SUM * 100, 2);
			var KBOAT_UNMAN_GYOCHA_RATE = round(KBOAT_UNMAN_GYOCHA_SUM / KBOAT_GYOCHA_SUM * 100, 2);
			
			var KBOAT_GREENCARD_SUM_RATE = round(KBOAT_GREENCARD_SUM / KBOAT_SUM * 100, 2);
			var KBOAT_GREENCARD_GONGDAN_RATE = round(KBOAT_GREENCARD_GONGDAN_SUM / KBOAT_GONGDAN_SUM * 100, 2);
			var KBOAT_GREENCARD_GYOCHA_RATE = round(KBOAT_GREENCARD_GYOCHA_SUM / KBOAT_GYOCHA_SUM * 100, 2);
			
			var KBOAT_MOBILE_SUM_RATE = round(KBOAT_MOBILE_SUM / KBOAT_SUM * 100, 2);
			var KBOAT_MOBILE_GONGDAN_RATE = round(KBOAT_MOBILE_GONGDAN_SUM / KBOAT_GONGDAN_SUM * 100, 2);
			var KBOAT_MOBILE_GYOCHA_RATE = round(KBOAT_MOBILE_GYOCHA_SUM / KBOAT_GYOCHA_SUM * 100, 2);
			
			var KBOAT_SGW_SUM_RATE = round((KBOAT_GREENCARD_SUM + KBOAT_MOBILE_SUM)/ KBOAT_SUM * 100, 2);
			var KBOAT_SGW_GONGDAN_RATE = round((KBOAT_GREENCARD_GONGDAN_SUM +  KBOAT_MOBILE_GONGDAN_SUM) / KBOAT_GONGDAN_SUM * 100, 2);
			var KBOAT_SGW_GYOCHA_RATE = round((KBOAT_GREENCARD_GYOCHA_SUM + KBOAT_MOBILE_GYOCHA_SUM)/ KBOAT_GYOCHA_SUM * 100, 2);
			
			//경정 발매건수 비율 입력
			dsListCnt.AddColumn("KBOAT_RATE");
			dsListCnt.SetColumn(0, "KBOAT_RATE", KBOAT_MAN_SUM_RATE);
			dsListCnt.SetColumn(1, "KBOAT_RATE", KBOAT_MAN_GONGDAN_RATE);
			dsListCnt.SetColumn(2, "KBOAT_RATE", KBOAT_MAN_GYOCHA_RATE);
			
			dsListCnt.SetColumn(3, "KBOAT_RATE", KBOAT_UNMAN_SUM_RATE);
			dsListCnt.SetColumn(4, "KBOAT_RATE", KBOAT_UNMAN_GONGDAN_RATE);
			dsListCnt.SetColumn(5, "KBOAT_RATE", KBOAT_UNMAN_GYOCHA_RATE);
			
			dsListCnt.SetColumn(6, "KBOAT_RATE", KBOAT_GREENCARD_SUM_RATE);
			dsListCnt.SetColumn(7, "KBOAT_RATE", KBOAT_GREENCARD_GONGDAN_RATE);
			dsListCnt.SetColumn(8, "KBOAT_RATE", KBOAT_GREENCARD_GYOCHA_RATE);
			
			dsListCnt.SetColumn(9, "KBOAT_RATE", KBOAT_MOBILE_SUM_RATE);
			dsListCnt.SetColumn(10, "KBOAT_RATE", KBOAT_MOBILE_GONGDAN_RATE);
			dsListCnt.SetColumn(11, "KBOAT_RATE", KBOAT_MOBILE_GYOCHA_RATE);
						
			dsListCnt.SetColumn(15, "KBOAT_RATE", KBOAT_SGW_SUM_RATE);
			dsListCnt.SetColumn(16, "KBOAT_RATE", KBOAT_SGW_GONGDAN_RATE);
			dsListCnt.SetColumn(17, "KBOAT_RATE", KBOAT_SGW_GYOCHA_RATE);
			
			
			//계 발매건수 데이터 추출
			var SU_MAN_SUM = dsListCnt.GetColumn(0, "SU");
			var SU_MAN_GONGDAN_SUM = dsListCnt.GetColumn(1, "SU");
			var SU_MAN_GYOCHA_SUM = dsListCnt.GetColumn(2, "SU");
			
			var SU_UNMAN_SUM = dsListCnt.GetColumn(3, "SU");
			var SU_UNMAN_GONGDAN_SUM = dsListCnt.GetColumn(4, "SU");
			var SU_UNMAN_GYOCHA_SUM = dsListCnt.GetColumn(5, "SU");
			
			var SU_GREENCARD_SUM = dsListCnt.GetColumn(6, "SU");
			var SU_GREENCARD_GONGDAN_SUM = dsListCnt.GetColumn(7, "SU");
			var SU_GREENCARD_GYOCHA_SUM = dsListCnt.GetColumn(8, "SU");
			
			var SU_MOBILE_SUM = dsListCnt.GetColumn(9, "SU");
			var SU_MOBILE_GONGDAN_SUM = dsListCnt.GetColumn(10, "SU");
			var SU_MOBILE_GYOCHA_SUM = dsListCnt.GetColumn(11, "SU");
			
			var SU_SUM = dsListCnt.GetColumn(12, "SU");
			var SU_GONGDAN_SUM = dsListCnt.GetColumn(13, "SU");
			var SU_GYOCHA_SUM = dsListCnt.GetColumn(14, "SU");
			
			//계 발매건수 비율 계산
			var SU_MAN_SUM_RATE = round(SU_MAN_SUM / SU_SUM * 100, 2);
			var SU_MAN_GONGDAN_RATE = round(SU_MAN_GONGDAN_SUM / SU_GONGDAN_SUM * 100, 2);
			var SU_MAN_GYOCHA_RATE = round(SU_MAN_GYOCHA_SUM / SU_GYOCHA_SUM * 100, 2);
			
			var SU_UNMAN_SUM_RATE = round(SU_UNMAN_SUM / SU_SUM * 100, 2);
			var SU_UNMAN_GONGDAN_RATE = round(SU_UNMAN_GONGDAN_SUM / SU_GONGDAN_SUM * 100, 2);
			var SU_UNMAN_GYOCHA_RATE = round(SU_UNMAN_GYOCHA_SUM / SU_GYOCHA_SUM * 100, 2);
			
			var SU_GREENCARD_SUM_RATE = round(SU_GREENCARD_SUM / SU_SUM * 100, 2);
			var SU_GREENCARD_GONGDAN_RATE = round(SU_GREENCARD_GONGDAN_SUM / SU_GONGDAN_SUM * 100, 2);
			var SU_GREENCARD_GYOCHA_RATE = round(SU_GREENCARD_GYOCHA_SUM / SU_GYOCHA_SUM * 100, 2);
			
			var SU_MOBILE_SUM_RATE = round(SU_MOBILE_SUM / SU_SUM * 100, 2);
			var SU_MOBILE_GONGDAN_RATE = round(SU_MOBILE_GONGDAN_SUM / SU_GONGDAN_SUM * 100, 2);
			var SU_MOBILE_GYOCHA_RATE = round(SU_MOBILE_GYOCHA_SUM / SU_GYOCHA_SUM * 100, 2);
			
			var SU_SGW_SUM_RATE = round((SU_GREENCARD_SUM + SU_MOBILE_SUM)/ SU_SUM * 100, 2);
			var SU_SGW_GONGDAN_RATE = round((SU_GREENCARD_GONGDAN_SUM +  SU_MOBILE_GONGDAN_SUM) / SU_GONGDAN_SUM * 100, 2);
			var SU_SGW_GYOCHA_RATE = round((SU_GREENCARD_GYOCHA_SUM + SU_MOBILE_GYOCHA_SUM)/ SU_GYOCHA_SUM * 100, 2);
			
			//계 발매건수 비율 입력
			dsListCnt.AddColumn("SU_RATE");
			dsListCnt.SetColumn(0, "SU_RATE", SU_MAN_SUM_RATE);
			dsListCnt.SetColumn(1, "SU_RATE", SU_MAN_GONGDAN_RATE);
			dsListCnt.SetColumn(2, "SU_RATE", SU_MAN_GYOCHA_RATE);
			
			dsListCnt.SetColumn(3, "SU_RATE", SU_UNMAN_SUM_RATE);
			dsListCnt.SetColumn(4, "SU_RATE", SU_UNMAN_GONGDAN_RATE);
			dsListCnt.SetColumn(5, "SU_RATE", SU_UNMAN_GYOCHA_RATE);
			
			dsListCnt.SetColumn(6, "SU_RATE", SU_GREENCARD_SUM_RATE);
			dsListCnt.SetColumn(7, "SU_RATE", SU_GREENCARD_GONGDAN_RATE);
			dsListCnt.SetColumn(8, "SU_RATE", SU_GREENCARD_GYOCHA_RATE);
			
			dsListCnt.SetColumn(9, "SU_RATE", SU_MOBILE_SUM_RATE);
			dsListCnt.SetColumn(10, "SU_RATE", SU_MOBILE_GONGDAN_RATE);
			dsListCnt.SetColumn(11, "SU_RATE", SU_MOBILE_GYOCHA_RATE);
						
			dsListCnt.SetColumn(15, "SU_RATE", SU_SGW_SUM_RATE);
			dsListCnt.SetColumn(16, "SU_RATE", SU_SGW_GONGDAN_RATE);
			dsListCnt.SetColumn(17, "SU_RATE", SU_SGW_GYOCHA_RATE);
			
		}
	}else if( sServiceName == "rbs9210-service:searchListAmtCycle" || sServiceName == "rbs9210-service:searchListAmtAll"){
		if(dsListAmt.GetRowCount() > 0){
			
			//경륜 발매액 데이터 추출
			var KCYCLE_MAN_SUM = dsListAmt.GetColumn(0, "KCYCLE");
			var KCYCLE_MAN_GONGDAN_SUM = dsListAmt.GetColumn(1, "KCYCLE");
			var KCYCLE_MAN_GYOCHA_SUM = dsListAmt.GetColumn(2, "KCYCLE");
			
			var KCYCLE_UNMAN_SUM = dsListAmt.GetColumn(3, "KCYCLE");
			var KCYCLE_UNMAN_GONGDAN_SUM = dsListAmt.GetColumn(4, "KCYCLE");
			var KCYCLE_UNMAN_GYOCHA_SUM = dsListAmt.GetColumn(5, "KCYCLE");
			
			var KCYCLE_GREENCARD_SUM = dsListAmt.GetColumn(6, "KCYCLE");
			var KCYCLE_GREENCARD_GONGDAN_SUM = dsListAmt.GetColumn(7, "KCYCLE");
			var KCYCLE_GREENCARD_GYOCHA_SUM = dsListAmt.GetColumn(8, "KCYCLE");
			
			var KCYCLE_MOBILE_SUM = dsListAmt.GetColumn(9, "KCYCLE");
			var KCYCLE_MOBILE_GONGDAN_SUM = dsListAmt.GetColumn(10, "KCYCLE");
			var KCYCLE_MOBILE_GYOCHA_SUM = dsListAmt.GetColumn(11, "KCYCLE");
			
			var KCYCLE_SUM = dsListAmt.GetColumn(12, "KCYCLE");
			var KCYCLE_GONGDAN_SUM = dsListAmt.GetColumn(13, "KCYCLE");
			var KCYCLE_GYOCHA_SUM = dsListAmt.GetColumn(14, "KCYCLE");
			
			//경륜 발매액 비율 계산
			var KCYCLE_MAN_SUM_RATE = round(KCYCLE_MAN_SUM / KCYCLE_SUM * 100, 2);
			var KCYCLE_MAN_GONGDAN_RATE = round(KCYCLE_MAN_GONGDAN_SUM / KCYCLE_GONGDAN_SUM * 100, 2);
			var KCYCLE_MAN_GYOCHA_RATE = round(KCYCLE_MAN_GYOCHA_SUM / KCYCLE_GYOCHA_SUM * 100, 2);
			
			var KCYCLE_UNMAN_SUM_RATE = round(KCYCLE_UNMAN_SUM / KCYCLE_SUM * 100, 2);
			var KCYCLE_UNMAN_GONGDAN_RATE = round(KCYCLE_UNMAN_GONGDAN_SUM / KCYCLE_GONGDAN_SUM * 100, 2);
			var KCYCLE_UNMAN_GYOCHA_RATE = round(KCYCLE_UNMAN_GYOCHA_SUM / KCYCLE_GYOCHA_SUM * 100, 2);
			
			var KCYCLE_GREENCARD_SUM_RATE = round(KCYCLE_GREENCARD_SUM / KCYCLE_SUM * 100, 2);
			var KCYCLE_GREENCARD_GONGDAN_RATE = round(KCYCLE_GREENCARD_GONGDAN_SUM / KCYCLE_GONGDAN_SUM * 100, 2);
			var KCYCLE_GREENCARD_GYOCHA_RATE = round(KCYCLE_GREENCARD_GYOCHA_SUM / KCYCLE_GYOCHA_SUM * 100, 2);
			
			var KCYCLE_MOBILE_SUM_RATE = round(KCYCLE_MOBILE_SUM / KCYCLE_SUM * 100, 2);
			var KCYCLE_MOBILE_GONGDAN_RATE = round(KCYCLE_MOBILE_GONGDAN_SUM / KCYCLE_GONGDAN_SUM * 100, 2);
			var KCYCLE_MOBILE_GYOCHA_RATE = round(KCYCLE_MOBILE_GYOCHA_SUM / KCYCLE_GYOCHA_SUM * 100, 2);
			
			var KCYCLE_SGW_SUM_RATE = round((KCYCLE_GREENCARD_SUM + KCYCLE_MOBILE_SUM)/ KCYCLE_SUM * 100, 2);
			var KCYCLE_SGW_GONGDAN_RATE = round((KCYCLE_GREENCARD_GONGDAN_SUM +  KCYCLE_MOBILE_GONGDAN_SUM) / KCYCLE_GONGDAN_SUM * 100, 2);
			var KCYCLE_SGW_GYOCHA_RATE = round((KCYCLE_GREENCARD_GYOCHA_SUM + KCYCLE_MOBILE_GYOCHA_SUM)/ KCYCLE_GYOCHA_SUM * 100, 2);
			
			//경륜 발매액 비율 입력
			dsListAmt.AddColumn("KCYCLE_RATE");
			dsListAmt.SetColumn(0, "KCYCLE_RATE", KCYCLE_MAN_SUM_RATE);
			dsListAmt.SetColumn(1, "KCYCLE_RATE", KCYCLE_MAN_GONGDAN_RATE);
			dsListAmt.SetColumn(2, "KCYCLE_RATE", KCYCLE_MAN_GYOCHA_RATE);
			
			dsListAmt.SetColumn(3, "KCYCLE_RATE", KCYCLE_UNMAN_SUM_RATE);
			dsListAmt.SetColumn(4, "KCYCLE_RATE", KCYCLE_UNMAN_GONGDAN_RATE);
			dsListAmt.SetColumn(5, "KCYCLE_RATE", KCYCLE_UNMAN_GYOCHA_RATE);
			
			dsListAmt.SetColumn(6, "KCYCLE_RATE", KCYCLE_GREENCARD_SUM_RATE);
			dsListAmt.SetColumn(7, "KCYCLE_RATE", KCYCLE_GREENCARD_GONGDAN_RATE);
			dsListAmt.SetColumn(8, "KCYCLE_RATE", KCYCLE_GREENCARD_GYOCHA_RATE);
			
			dsListAmt.SetColumn(9, "KCYCLE_RATE", KCYCLE_MOBILE_SUM_RATE);
			dsListAmt.SetColumn(10, "KCYCLE_RATE", KCYCLE_MOBILE_GONGDAN_RATE);
			dsListAmt.SetColumn(11, "KCYCLE_RATE", KCYCLE_MOBILE_GYOCHA_RATE);
						
			dsListAmt.SetColumn(15, "KCYCLE_RATE", KCYCLE_SGW_SUM_RATE);
			dsListAmt.SetColumn(16, "KCYCLE_RATE", KCYCLE_SGW_GONGDAN_RATE);
			dsListAmt.SetColumn(17, "KCYCLE_RATE", KCYCLE_SGW_GYOCHA_RATE);
			
			
			//경정 발매액 데이터 추출
			var KBOAT_MAN_SUM = dsListAmt.GetColumn(0, "KBOAT");
			var KBOAT_MAN_GONGDAN_SUM = dsListAmt.GetColumn(1, "KBOAT");
			var KBOAT_MAN_GYOCHA_SUM = dsListAmt.GetColumn(2, "KBOAT");
			
			var KBOAT_UNMAN_SUM = dsListAmt.GetColumn(3, "KBOAT");
			var KBOAT_UNMAN_GONGDAN_SUM = dsListAmt.GetColumn(4, "KBOAT");
			var KBOAT_UNMAN_GYOCHA_SUM = dsListAmt.GetColumn(5, "KBOAT");
			
			var KBOAT_GREENCARD_SUM = dsListAmt.GetColumn(6, "KBOAT");
			var KBOAT_GREENCARD_GONGDAN_SUM = dsListAmt.GetColumn(7, "KBOAT");
			var KBOAT_GREENCARD_GYOCHA_SUM = dsListAmt.GetColumn(8, "KBOAT");
			
			var KBOAT_MOBILE_SUM = dsListAmt.GetColumn(9, "KBOAT");
			var KBOAT_MOBILE_GONGDAN_SUM = dsListAmt.GetColumn(10, "KBOAT");
			var KBOAT_MOBILE_GYOCHA_SUM = dsListAmt.GetColumn(11, "KBOAT");
			
			var KBOAT_SUM = dsListAmt.GetColumn(12, "KBOAT");
			var KBOAT_GONGDAN_SUM = dsListAmt.GetColumn(13, "KBOAT");
			var KBOAT_GYOCHA_SUM = dsListAmt.GetColumn(14, "KBOAT");
			
			//경정 발매액 비율 계산
			var KBOAT_MAN_SUM_RATE = round(KBOAT_MAN_SUM / KBOAT_SUM * 100, 2);
			var KBOAT_MAN_GONGDAN_RATE = round(KBOAT_MAN_GONGDAN_SUM / KBOAT_GONGDAN_SUM * 100, 2);
			var KBOAT_MAN_GYOCHA_RATE = round(KBOAT_MAN_GYOCHA_SUM / KBOAT_GYOCHA_SUM * 100, 2);
			
			var KBOAT_UNMAN_SUM_RATE = round(KBOAT_UNMAN_SUM / KBOAT_SUM * 100, 2);
			var KBOAT_UNMAN_GONGDAN_RATE = round(KBOAT_UNMAN_GONGDAN_SUM / KBOAT_GONGDAN_SUM * 100, 2);
			var KBOAT_UNMAN_GYOCHA_RATE = round(KBOAT_UNMAN_GYOCHA_SUM / KBOAT_GYOCHA_SUM * 100, 2);
			
			var KBOAT_GREENCARD_SUM_RATE = round(KBOAT_GREENCARD_SUM / KBOAT_SUM * 100, 2);
			var KBOAT_GREENCARD_GONGDAN_RATE = round(KBOAT_GREENCARD_GONGDAN_SUM / KBOAT_GONGDAN_SUM * 100, 2);
			var KBOAT_GREENCARD_GYOCHA_RATE = round(KBOAT_GREENCARD_GYOCHA_SUM / KBOAT_GYOCHA_SUM * 100, 2);
			
			var KBOAT_MOBILE_SUM_RATE = round(KBOAT_MOBILE_SUM / KBOAT_SUM * 100, 2);
			var KBOAT_MOBILE_GONGDAN_RATE = round(KBOAT_MOBILE_GONGDAN_SUM / KBOAT_GONGDAN_SUM * 100, 2);
			var KBOAT_MOBILE_GYOCHA_RATE = round(KBOAT_MOBILE_GYOCHA_SUM / KBOAT_GYOCHA_SUM * 100, 2);
			
			var KBOAT_SGW_SUM_RATE = round((KBOAT_GREENCARD_SUM + KBOAT_MOBILE_SUM)/ KBOAT_SUM * 100, 2);
			var KBOAT_SGW_GONGDAN_RATE = round((KBOAT_GREENCARD_GONGDAN_SUM +  KBOAT_MOBILE_GONGDAN_SUM) / KBOAT_GONGDAN_SUM * 100, 2);
			var KBOAT_SGW_GYOCHA_RATE = round((KBOAT_GREENCARD_GYOCHA_SUM + KBOAT_MOBILE_GYOCHA_SUM)/ KBOAT_GYOCHA_SUM * 100, 2);
			
			//경정 발매액 비율 입력
			dsListAmt.AddColumn("KBOAT_RATE");
			dsListAmt.SetColumn(0, "KBOAT_RATE", KBOAT_MAN_SUM_RATE);
			dsListAmt.SetColumn(1, "KBOAT_RATE", KBOAT_MAN_GONGDAN_RATE);
			dsListAmt.SetColumn(2, "KBOAT_RATE", KBOAT_MAN_GYOCHA_RATE);
			
			dsListAmt.SetColumn(3, "KBOAT_RATE", KBOAT_UNMAN_SUM_RATE);
			dsListAmt.SetColumn(4, "KBOAT_RATE", KBOAT_UNMAN_GONGDAN_RATE);
			dsListAmt.SetColumn(5, "KBOAT_RATE", KBOAT_UNMAN_GYOCHA_RATE);
			
			dsListAmt.SetColumn(6, "KBOAT_RATE", KBOAT_GREENCARD_SUM_RATE);
			dsListAmt.SetColumn(7, "KBOAT_RATE", KBOAT_GREENCARD_GONGDAN_RATE);
			dsListAmt.SetColumn(8, "KBOAT_RATE", KBOAT_GREENCARD_GYOCHA_RATE);
			
			dsListAmt.SetColumn(9, "KBOAT_RATE", KBOAT_MOBILE_SUM_RATE);
			dsListAmt.SetColumn(10, "KBOAT_RATE", KBOAT_MOBILE_GONGDAN_RATE);
			dsListAmt.SetColumn(11, "KBOAT_RATE", KBOAT_MOBILE_GYOCHA_RATE);
						
			dsListAmt.SetColumn(15, "KBOAT_RATE", KBOAT_SGW_SUM_RATE);
			dsListAmt.SetColumn(16, "KBOAT_RATE", KBOAT_SGW_GONGDAN_RATE);
			dsListAmt.SetColumn(17, "KBOAT_RATE", KBOAT_SGW_GYOCHA_RATE);
			
			
			//계 발매액 데이터 추출
			var SU_MAN_SUM = dsListAmt.GetColumn(0, "SU");
			var SU_MAN_GONGDAN_SUM = dsListAmt.GetColumn(1, "SU");
			var SU_MAN_GYOCHA_SUM = dsListAmt.GetColumn(2, "SU");
			
			var SU_UNMAN_SUM = dsListAmt.GetColumn(3, "SU");
			var SU_UNMAN_GONGDAN_SUM = dsListAmt.GetColumn(4, "SU");
			var SU_UNMAN_GYOCHA_SUM = dsListAmt.GetColumn(5, "SU");
			
			var SU_GREENCARD_SUM = dsListAmt.GetColumn(6, "SU");
			var SU_GREENCARD_GONGDAN_SUM = dsListAmt.GetColumn(7, "SU");
			var SU_GREENCARD_GYOCHA_SUM = dsListAmt.GetColumn(8, "SU");
			
			var SU_MOBILE_SUM = dsListAmt.GetColumn(9, "SU");
			var SU_MOBILE_GONGDAN_SUM = dsListAmt.GetColumn(10, "SU");
			var SU_MOBILE_GYOCHA_SUM = dsListAmt.GetColumn(11, "SU");
			
			var SU_SUM = dsListAmt.GetColumn(12, "SU");
			var SU_GONGDAN_SUM = dsListAmt.GetColumn(13, "SU");
			var SU_GYOCHA_SUM = dsListAmt.GetColumn(14, "SU");
			
			//계 발매액 비율 계산
			var SU_MAN_SUM_RATE = round(SU_MAN_SUM / SU_SUM * 100, 2);
			var SU_MAN_GONGDAN_RATE = round(SU_MAN_GONGDAN_SUM / SU_GONGDAN_SUM * 100, 2);
			var SU_MAN_GYOCHA_RATE = round(SU_MAN_GYOCHA_SUM / SU_GYOCHA_SUM * 100, 2);
			
			var SU_UNMAN_SUM_RATE = round(SU_UNMAN_SUM / SU_SUM * 100, 2);
			var SU_UNMAN_GONGDAN_RATE = round(SU_UNMAN_GONGDAN_SUM / SU_GONGDAN_SUM * 100, 2);
			var SU_UNMAN_GYOCHA_RATE = round(SU_UNMAN_GYOCHA_SUM / SU_GYOCHA_SUM * 100, 2);
			
			var SU_GREENCARD_SUM_RATE = round(SU_GREENCARD_SUM / SU_SUM * 100, 2);
			var SU_GREENCARD_GONGDAN_RATE = round(SU_GREENCARD_GONGDAN_SUM / SU_GONGDAN_SUM * 100, 2);
			var SU_GREENCARD_GYOCHA_RATE = round(SU_GREENCARD_GYOCHA_SUM / SU_GYOCHA_SUM * 100, 2);
			
			var SU_MOBILE_SUM_RATE = round(SU_MOBILE_SUM / SU_SUM * 100, 2);
			var SU_MOBILE_GONGDAN_RATE = round(SU_MOBILE_GONGDAN_SUM / SU_GONGDAN_SUM * 100, 2);
			var SU_MOBILE_GYOCHA_RATE = round(SU_MOBILE_GYOCHA_SUM / SU_GYOCHA_SUM * 100, 2);
			
			var SU_SGW_SUM_RATE = round((SU_GREENCARD_SUM + SU_MOBILE_SUM)/ SU_SUM * 100, 2);
			var SU_SGW_GONGDAN_RATE = round((SU_GREENCARD_GONGDAN_SUM +  SU_MOBILE_GONGDAN_SUM) / SU_GONGDAN_SUM * 100, 2);
			var SU_SGW_GYOCHA_RATE = round((SU_GREENCARD_GYOCHA_SUM + SU_MOBILE_GYOCHA_SUM)/ SU_GYOCHA_SUM * 100, 2);
			
			//계 발매액 비율 입력
			dsListAmt.AddColumn("SU_RATE");
			dsListAmt.SetColumn(0, "SU_RATE", SU_MAN_SUM_RATE);
			dsListAmt.SetColumn(1, "SU_RATE", SU_MAN_GONGDAN_RATE);
			dsListAmt.SetColumn(2, "SU_RATE", SU_MAN_GYOCHA_RATE);
			
			dsListAmt.SetColumn(3, "SU_RATE", SU_UNMAN_SUM_RATE);
			dsListAmt.SetColumn(4, "SU_RATE", SU_UNMAN_GONGDAN_RATE);
			dsListAmt.SetColumn(5, "SU_RATE", SU_UNMAN_GYOCHA_RATE);
			
			dsListAmt.SetColumn(6, "SU_RATE", SU_GREENCARD_SUM_RATE);
			dsListAmt.SetColumn(7, "SU_RATE", SU_GREENCARD_GONGDAN_RATE);
			dsListAmt.SetColumn(8, "SU_RATE", SU_GREENCARD_GYOCHA_RATE);
			
			dsListAmt.SetColumn(9, "SU_RATE", SU_MOBILE_SUM_RATE);
			dsListAmt.SetColumn(10, "SU_RATE", SU_MOBILE_GONGDAN_RATE);
			dsListAmt.SetColumn(11, "SU_RATE", SU_MOBILE_GYOCHA_RATE);
						
			dsListAmt.SetColumn(15, "SU_RATE", SU_SGW_SUM_RATE);
			dsListAmt.SetColumn(16, "SU_RATE", SU_SGW_GONGDAN_RATE);
			dsListAmt.SetColumn(17, "SU_RATE", SU_SGW_GYOCHA_RATE);
			
		}
	}else if ( sServiceName == "rbs9210-service:searchListCntBoat") {
		if(dsListCnt.GetRowCount() > 0){
			
			//경정 발매건수 데이터 추출
			var KBOAT_MAN_SUM = dsListCnt.GetColumn(0, "KBOAT");
			var KBOAT_MAN_GONGDAN_SUM = dsListCnt.GetColumn(1, "KBOAT");
			
			var KBOAT_UNMAN_SUM = dsListCnt.GetColumn(2, "KBOAT");
			var KBOAT_UNMAN_GONGDAN_SUM = dsListCnt.GetColumn(3, "KBOAT");
			
			var KBOAT_GREENCARD_SUM = dsListCnt.GetColumn(4, "KBOAT");
			var KBOAT_GREENCARD_GONGDAN_SUM = dsListCnt.GetColumn(5, "KBOAT");
			
			var KBOAT_MOBILE_SUM = dsListCnt.GetColumn(6, "KBOAT");
			var KBOAT_MOBILE_GONGDAN_SUM = dsListCnt.GetColumn(7, "KBOAT");
			
			var KBOAT_SUM = dsListCnt.GetColumn(8, "KBOAT");
			var KBOAT_GONGDAN_SUM = dsListCnt.GetColumn(9, "KBOAT");
			
			//경정 발매건수 비율 계산
			var KBOAT_MAN_SUM_RATE = round(KBOAT_MAN_SUM / KBOAT_SUM * 100, 2);
			var KBOAT_MAN_GONGDAN_RATE = round(KBOAT_MAN_GONGDAN_SUM / KBOAT_GONGDAN_SUM * 100, 2);
			
			var KBOAT_UNMAN_SUM_RATE = round(KBOAT_UNMAN_SUM / KBOAT_SUM * 100, 2);
			var KBOAT_UNMAN_GONGDAN_RATE = round(KBOAT_UNMAN_GONGDAN_SUM / KBOAT_GONGDAN_SUM * 100, 2);
			
			var KBOAT_GREENCARD_SUM_RATE = round(KBOAT_GREENCARD_SUM / KBOAT_SUM * 100, 2);
			var KBOAT_GREENCARD_GONGDAN_RATE = round(KBOAT_GREENCARD_GONGDAN_SUM / KBOAT_GONGDAN_SUM * 100, 2);
			
			var KBOAT_MOBILE_SUM_RATE = round(KBOAT_MOBILE_SUM / KBOAT_SUM * 100, 2);
			var KBOAT_MOBILE_GONGDAN_RATE = round(KBOAT_MOBILE_GONGDAN_SUM / KBOAT_GONGDAN_SUM * 100, 2);
			
			var KBOAT_SGW_SUM_RATE = round((KBOAT_GREENCARD_SUM + KBOAT_MOBILE_SUM)/ KBOAT_SUM * 100, 2);
			var KBOAT_SGW_GONGDAN_RATE = round((KBOAT_GREENCARD_GONGDAN_SUM +  KBOAT_MOBILE_GONGDAN_SUM) / KBOAT_GONGDAN_SUM * 100, 2);
			
			//경정 발매건수 비율 입력
			dsListCnt.AddColumn("KBOAT_RATE");
			dsListCnt.SetColumn(0, "KBOAT_RATE", KBOAT_MAN_SUM_RATE);
			dsListCnt.SetColumn(1, "KBOAT_RATE", KBOAT_MAN_GONGDAN_RATE);
			
			dsListCnt.SetColumn(2, "KBOAT_RATE", KBOAT_UNMAN_SUM_RATE);
			dsListCnt.SetColumn(3, "KBOAT_RATE", KBOAT_UNMAN_GONGDAN_RATE);
			
			dsListCnt.SetColumn(4, "KBOAT_RATE", KBOAT_GREENCARD_SUM_RATE);
			dsListCnt.SetColumn(5, "KBOAT_RATE", KBOAT_GREENCARD_GONGDAN_RATE);
			
			dsListCnt.SetColumn(6, "KBOAT_RATE", KBOAT_MOBILE_SUM_RATE);
			dsListCnt.SetColumn(7, "KBOAT_RATE", KBOAT_MOBILE_GONGDAN_RATE);
						
			dsListCnt.SetColumn(10, "KBOAT_RATE", KBOAT_SGW_SUM_RATE);
			dsListCnt.SetColumn(11, "KBOAT_RATE", KBOAT_SGW_GONGDAN_RATE);
			
			
			//계 발매건수 데이터 추출
			var SU_MAN_SUM = dsListCnt.GetColumn(0, "SU");
			var SU_MAN_GONGDAN_SUM = dsListCnt.GetColumn(1, "SU");
			
			var SU_UNMAN_SUM = dsListCnt.GetColumn(2, "SU");
			var SU_UNMAN_GONGDAN_SUM = dsListCnt.GetColumn(3, "SU");
			
			var SU_GREENCARD_SUM = dsListCnt.GetColumn(4, "SU");
			var SU_GREENCARD_GONGDAN_SUM = dsListCnt.GetColumn(5, "SU");
			
			var SU_MOBILE_SUM = dsListCnt.GetColumn(6, "SU");
			var SU_MOBILE_GONGDAN_SUM = dsListCnt.GetColumn(7, "SU");
			
			var SU_SUM = dsListCnt.GetColumn(8, "SU");
			var SU_GONGDAN_SUM = dsListCnt.GetColumn(9, "SU");
			
			//계 발매건수 비율 계산
			var SU_MAN_SUM_RATE = round(SU_MAN_SUM / SU_SUM * 100, 2);
			var SU_MAN_GONGDAN_RATE = round(SU_MAN_GONGDAN_SUM / SU_GONGDAN_SUM * 100, 2);
			
			var SU_UNMAN_SUM_RATE = round(SU_UNMAN_SUM / SU_SUM * 100, 2);
			var SU_UNMAN_GONGDAN_RATE = round(SU_UNMAN_GONGDAN_SUM / SU_GONGDAN_SUM * 100, 2);
			
			var SU_GREENCARD_SUM_RATE = round(SU_GREENCARD_SUM / SU_SUM * 100, 2);
			var SU_GREENCARD_GONGDAN_RATE = round(SU_GREENCARD_GONGDAN_SUM / SU_GONGDAN_SUM * 100, 2);
			
			var SU_MOBILE_SUM_RATE = round(SU_MOBILE_SUM / SU_SUM * 100, 2);
			var SU_MOBILE_GONGDAN_RATE = round(SU_MOBILE_GONGDAN_SUM / SU_GONGDAN_SUM * 100, 2);
			
			var SU_SGW_SUM_RATE = round((SU_GREENCARD_SUM + SU_MOBILE_SUM)/ SU_SUM * 100, 2);
			var SU_SGW_GONGDAN_RATE = round((SU_GREENCARD_GONGDAN_SUM +  SU_MOBILE_GONGDAN_SUM) / SU_GONGDAN_SUM * 100, 2);
			
			//계 발매건수 비율 입력
			dsListCnt.AddColumn("SU_RATE");
			dsListCnt.SetColumn(0, "SU_RATE", SU_MAN_SUM_RATE);
			dsListCnt.SetColumn(1, "SU_RATE", SU_MAN_GONGDAN_RATE);
			
			dsListCnt.SetColumn(2, "SU_RATE", SU_UNMAN_SUM_RATE);
			dsListCnt.SetColumn(3, "SU_RATE", SU_UNMAN_GONGDAN_RATE);
			
			dsListCnt.SetColumn(4, "SU_RATE", SU_GREENCARD_SUM_RATE);
			dsListCnt.SetColumn(5, "SU_RATE", SU_GREENCARD_GONGDAN_RATE);
			
			dsListCnt.SetColumn(6, "SU_RATE", SU_MOBILE_SUM_RATE);
			dsListCnt.SetColumn(7, "SU_RATE", SU_MOBILE_GONGDAN_RATE);
						
			dsListCnt.SetColumn(10, "SU_RATE", SU_SGW_SUM_RATE);
			dsListCnt.SetColumn(11, "SU_RATE", SU_SGW_GONGDAN_RATE);
		}
	}else if( sServiceName == "rbs9210-service:searchListAmtBoat"){
		if(dsListAmt.GetRowCount() > 0){
			
			//경정 발매액 데이터 추출
			var KBOAT_MAN_SUM = dsListAmt.GetColumn(0, "KBOAT");
			var KBOAT_MAN_GONGDAN_SUM = dsListAmt.GetColumn(1, "KBOAT");
			
			var KBOAT_UNMAN_SUM = dsListAmt.GetColumn(2, "KBOAT");
			var KBOAT_UNMAN_GONGDAN_SUM = dsListAmt.GetColumn(3, "KBOAT");
			
			var KBOAT_GREENCARD_SUM = dsListAmt.GetColumn(4, "KBOAT");
			var KBOAT_GREENCARD_GONGDAN_SUM = dsListAmt.GetColumn(5, "KBOAT");
			
			var KBOAT_MOBILE_SUM = dsListAmt.GetColumn(6, "KBOAT");
			var KBOAT_MOBILE_GONGDAN_SUM = dsListAmt.GetColumn(7, "KBOAT");
			
			var KBOAT_SUM = dsListAmt.GetColumn(8, "KBOAT");
			var KBOAT_GONGDAN_SUM = dsListAmt.GetColumn(9, "KBOAT");
			
			//경정 발매액 비율 계산
			var KBOAT_MAN_SUM_RATE = round(KBOAT_MAN_SUM / KBOAT_SUM * 100, 2);
			var KBOAT_MAN_GONGDAN_RATE = round(KBOAT_MAN_GONGDAN_SUM / KBOAT_GONGDAN_SUM * 100, 2);
			
			var KBOAT_UNMAN_SUM_RATE = round(KBOAT_UNMAN_SUM / KBOAT_SUM * 100, 2);
			var KBOAT_UNMAN_GONGDAN_RATE = round(KBOAT_UNMAN_GONGDAN_SUM / KBOAT_GONGDAN_SUM * 100, 2);
			
			var KBOAT_GREENCARD_SUM_RATE = round(KBOAT_GREENCARD_SUM / KBOAT_SUM * 100, 2);
			var KBOAT_GREENCARD_GONGDAN_RATE = round(KBOAT_GREENCARD_GONGDAN_SUM / KBOAT_GONGDAN_SUM * 100, 2);
			
			var KBOAT_MOBILE_SUM_RATE = round(KBOAT_MOBILE_SUM / KBOAT_SUM * 100, 2);
			var KBOAT_MOBILE_GONGDAN_RATE = round(KBOAT_MOBILE_GONGDAN_SUM / KBOAT_GONGDAN_SUM * 100, 2);
			
			var KBOAT_SGW_SUM_RATE = round((KBOAT_GREENCARD_SUM + KBOAT_MOBILE_SUM)/ KBOAT_SUM * 100, 2);
			var KBOAT_SGW_GONGDAN_RATE = round((KBOAT_GREENCARD_GONGDAN_SUM +  KBOAT_MOBILE_GONGDAN_SUM) / KBOAT_GONGDAN_SUM * 100, 2);
			
			//경정 발매액 비율 입력
			dsListAmt.AddColumn("KBOAT_RATE");
			dsListAmt.SetColumn(0, "KBOAT_RATE", KBOAT_MAN_SUM_RATE);
			dsListAmt.SetColumn(1, "KBOAT_RATE", KBOAT_MAN_GONGDAN_RATE);
			
			dsListAmt.SetColumn(2, "KBOAT_RATE", KBOAT_UNMAN_SUM_RATE);
			dsListAmt.SetColumn(3, "KBOAT_RATE", KBOAT_UNMAN_GONGDAN_RATE);
			
			dsListAmt.SetColumn(4, "KBOAT_RATE", KBOAT_GREENCARD_SUM_RATE);
			dsListAmt.SetColumn(5, "KBOAT_RATE", KBOAT_GREENCARD_GONGDAN_RATE);
			
			dsListAmt.SetColumn(6, "KBOAT_RATE", KBOAT_MOBILE_SUM_RATE);
			dsListAmt.SetColumn(7, "KBOAT_RATE", KBOAT_MOBILE_GONGDAN_RATE);
						
			dsListAmt.SetColumn(10, "KBOAT_RATE", KBOAT_SGW_SUM_RATE);
			dsListAmt.SetColumn(11, "KBOAT_RATE", KBOAT_SGW_GONGDAN_RATE);
			
			
			//계 발매액 데이터 추출
			var SU_MAN_SUM = dsListAmt.GetColumn(0, "SU");
			var SU_MAN_GONGDAN_SUM = dsListAmt.GetColumn(1, "SU");
			
			var SU_UNMAN_SUM = dsListAmt.GetColumn(2, "SU");
			var SU_UNMAN_GONGDAN_SUM = dsListAmt.GetColumn(3, "SU");
			
			var SU_GREENCARD_SUM = dsListAmt.GetColumn(4, "SU");
			var SU_GREENCARD_GONGDAN_SUM = dsListAmt.GetColumn(5, "SU");
			
			var SU_MOBILE_SUM = dsListAmt.GetColumn(6, "SU");
			var SU_MOBILE_GONGDAN_SUM = dsListAmt.GetColumn(7, "SU");
			
			var SU_SUM = dsListAmt.GetColumn(8, "SU");
			var SU_GONGDAN_SUM = dsListAmt.GetColumn(9, "SU");
			
			//계 발매액 비율 계산
			var SU_MAN_SUM_RATE = round(SU_MAN_SUM / SU_SUM * 100, 2);
			var SU_MAN_GONGDAN_RATE = round(SU_MAN_GONGDAN_SUM / SU_GONGDAN_SUM * 100, 2);
			
			var SU_UNMAN_SUM_RATE = round(SU_UNMAN_SUM / SU_SUM * 100, 2);
			var SU_UNMAN_GONGDAN_RATE = round(SU_UNMAN_GONGDAN_SUM / SU_GONGDAN_SUM * 100, 2);
			
			var SU_GREENCARD_SUM_RATE = round(SU_GREENCARD_SUM / SU_SUM * 100, 2);
			var SU_GREENCARD_GONGDAN_RATE = round(SU_GREENCARD_GONGDAN_SUM / SU_GONGDAN_SUM * 100, 2);
			
			var SU_MOBILE_SUM_RATE = round(SU_MOBILE_SUM / SU_SUM * 100, 2);
			var SU_MOBILE_GONGDAN_RATE = round(SU_MOBILE_GONGDAN_SUM / SU_GONGDAN_SUM * 100, 2);
			
			var SU_SGW_SUM_RATE = round((SU_GREENCARD_SUM + SU_MOBILE_SUM)/ SU_SUM * 100, 2);
			var SU_SGW_GONGDAN_RATE = round((SU_GREENCARD_GONGDAN_SUM +  SU_MOBILE_GONGDAN_SUM) / SU_GONGDAN_SUM * 100, 2);
			
			//계 발매액 비율 입력
			dsListAmt.AddColumn("SU_RATE");
			dsListAmt.SetColumn(0, "SU_RATE", SU_MAN_SUM_RATE);
			dsListAmt.SetColumn(1, "SU_RATE", SU_MAN_GONGDAN_RATE);
			
			dsListAmt.SetColumn(2, "SU_RATE", SU_UNMAN_SUM_RATE);
			dsListAmt.SetColumn(3, "SU_RATE", SU_UNMAN_GONGDAN_RATE);
			
			dsListAmt.SetColumn(4, "SU_RATE", SU_GREENCARD_SUM_RATE);
			dsListAmt.SetColumn(5, "SU_RATE", SU_GREENCARD_GONGDAN_RATE);
			
			dsListAmt.SetColumn(6, "SU_RATE", SU_MOBILE_SUM_RATE);
			dsListAmt.SetColumn(7, "SU_RATE", SU_MOBILE_GONGDAN_RATE);
						
			dsListAmt.SetColumn(10, "SU_RATE", SU_SGW_SUM_RATE);
			dsListAmt.SetColumn(11, "SU_RATE", SU_SGW_GONGDAN_RATE);
		}
	}

}

function fcDsOnLoadCompleted(obj,nErrorCode,strErrorMsg,nReason)
{
	switch ( obj.id ) {
		
		case "dsBrncCd":

			dsBrncCd.InsertRow(0);
			dsBrncCd.SetColumn(0, "CD_NM", "전체");
			cboSearchBrncCd.index = 0;
			
			break;	
	
	}
}

/*-------------------------------------------------------------------------------------------------+
>>  활동년도 설정 2011 년~  
+-------------------------------------------------------------------------------------------------*/
function fcSetYear(){

	// 년도 셋팅
	var sCurYear  = ParseInt(fcd_GetSysdate("YYYY"));
	
	for(var i=sCurYear; i >= sCurYear - 5; i--){
		var nRow = dsYear.AddRow();
	
		dsYear.SetColumn(nRow,"CD"   ,i);
		dsYear.SetColumn(nRow,"CD_NM",i);	
	}
}

/*-------------------------------------------------------------------------------------------------+
>> Enter Key 이벤트시 조회되도록 한다.
+-------------------------------------------------------------------------------------------------*/
function fcEdOnKeyDown(obj,nChar,bShift,bCtrl, bAlt,LLParam,HLParam)
{
	if ( nChar == ENTER_KEY ) {		
		fcSearch();				
	}
}


function combo_OnChanged(obj,strCode,strText,nOldIndex,nNewIndex)
{
	fcSearch();
}

function Tab0_OnChanged(obj,nOldIndex,nNewindex)
{	
	fcSearch();
}
]]></Script>
</Window>