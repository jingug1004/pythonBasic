<?xml version="1.0" encoding="euc-kr"?>
<Window>
	<Form Height="440" Id="CRA" Left="8" OnKeyDown="fcHotKey" OnLoadCompleted="fcFormLoadSetting" OnUnloadCompleted="fcFormUnloadProcess" PidAttrib="7" Title="KSPO&#32;로그인" Top="8" Ver="1.0" Width="786" WorkArea="true">
		<Datasets>
			<Dataset DataSetType="Dataset" Id="dsOutUser">
				<Contents></Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutReportFilePath" OnLoadCompleted="dsOutReportFilePath_OnLoadCompleted">
				<Contents>
					<colinfo id="REPORT_FILE_PATH" size="100" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsDbStatus"></Dataset>
			<Dataset DataSetType="Dataset" Id="dsGrnCdSalesRate">
				<Contents>
					<colinfo id="PREP_AMT_CD" size="256" summ="default" type="STRING"/>
					<colinfo id="BUSI_YEAR" size="1" summ="default" type="STRING"/>
					<colinfo id="CONFIRM_TMS" size="256" summ="default" type="STRING"/>
					<colinfo id="ACC_BGN_CD" size="256" summ="default" type="STRING"/>
					<colinfo id="BUSI_NM" size="256" summ="default" type="STRING"/>
					<colinfo id="CONFIRM_AMT" size="256" summ="default" type="STRING"/>
					<colinfo id="DPRT_CD" size="256" summ="default" type="STRING"/>
					<colinfo id="MNG_ID" size="256" summ="default" type="STRING"/>
					<colinfo id="DPRT_NAME" size="256" summ="default" type="STRING"/>
					<colinfo id="MNG_NAME" size="256" summ="default" type="STRING"/>
					<colinfo id="BUSI_CNTNT_PRPS" size="256" summ="default" type="STRING"/>
					<colinfo id="BUSI_CNTNT_SMRY" size="256" summ="default" type="STRING"/>
					<colinfo id="CHK" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsInComCd">
				<Contents>
					<colinfo id="DSNAME" size="20" summ="default" type="STRING"/>
					<colinfo id="CD_GRP_ID" size="6" summ="default" type="STRING"/>
					<colinfo id="QUERY_ID" size="256" summ="default" type="STRING"/>
					<colinfo id="TERM1" size="256" summ="default" type="STRING"/>
					<colinfo id="TERM2" size="256" summ="default" type="STRING"/>
					<colinfo id="TERM3" size="256" summ="default" type="STRING"/>
					<colinfo id="TERM4" size="256" summ="default" type="STRING"/>
					<colinfo id="TERM5" size="256" summ="default" type="STRING"/>
					<colinfo id="DESCRIPTION" size="256" summ="default" type="STRING"/>
					<colinfo id="ALL_YN" size="1" summ="default" type="STRING"/>
					<record>
						<ALL_YN></ALL_YN>
						<CD_GRP_ID></CD_GRP_ID>
						<DESCRIPTION></DESCRIPTION>
						<DSNAME>dsYear</DSNAME>
						<QUERY_ID>rbs9050_s02</QUERY_ID>
						<TERM1></TERM1>
						<TERM2></TERM2>
						<TERM3></TERM3>
						<TERM4></TERM4>
						<TERM5></TERM5>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsYear">
				<Contents>
					<colinfo id="CD" size="256" summ="default" type="STRING"/>
					<colinfo id="CD_NM" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsGrpCd" OnColumnChanged="fcGrpCodeExistsCheck" OnRowPosChanged="dsGrpCd_OnRowPosChanged">
				<Contents>
					<colinfo id="GRP_CD" size="256" type="STRING"/>
					<colinfo id="GRP_NM" size="256" type="STRING"/>
					<colinfo id="RMK" size="256" type="STRING"/>
					<colinfo id="DEL_YN" size="256" type="STRING"/>
					<colinfo id="INST_ID" size="256" type="STRING"/>
					<colinfo id="INST_DTM" size="256" type="STRING"/>
					<colinfo id="UPDT_ID" size="256" type="STRING"/>
					<colinfo id="UPDT_DTM" size="256" type="STRING"/>
					<colinfo id="CHK" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsSpecCd" OnColumnChanged="fcSpecCodeExistsCheck">
				<Contents>
					<colinfo id="GRP_CD" size="256" summ="default" type="STRING"/>
					<colinfo id="CD" size="256" summ="default" type="STRING"/>
					<colinfo id="CD_NM" size="256" summ="default" type="STRING"/>
					<colinfo id="CD_NM2" size="256" summ="default" type="STRING"/>
					<colinfo id="CD_TERM1" size="256" summ="default" type="STRING"/>
					<colinfo id="CD_TERM2" size="256" summ="default" type="STRING"/>
					<colinfo id="CD_TERM3" size="256" summ="default" type="STRING"/>
					<colinfo id="CD_TERM4" size="256" summ="default" type="STRING"/>
					<colinfo id="CD_TERM5" size="256" summ="default" type="STRING"/>
					<colinfo id="ORD_NO" size="256" summ="default" type="STRING"/>
					<colinfo id="RMK" size="256" summ="default" type="STRING"/>
					<colinfo id="DEL_YN" size="256" summ="default" type="STRING"/>
					<colinfo id="INST_ID" size="256" summ="default" type="STRING"/>
					<colinfo id="INST_DT" size="256" summ="default" type="STRING"/>
					<colinfo id="UPDT_ID" size="256" summ="default" type="STRING"/>
					<colinfo id="UPDT_DT" size="256" summ="default" type="STRING"/>
					<colinfo id="GRPNM" size="256" summ="default" type="STRING"/>
					<colinfo id="CHK" size="256" summ="default" type="STRING"/>
					<colinfo id="YNSTATUS" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
		</Datasets>
		<Image Height="440" Id="Image0" ImageID="login_bg_rbm" OnLoadCompleted="fcFormLoadSetting" TabOrder="4" TabStop="FALSE" Width="786"></Image>
		<Edit BKColor="black" Border="Flat" BorderColor="#6b6b6b" Color="white" Font="굴림,9" Height="19" Id="edPswd" Left="264" LeftMargin="3" MaxLength="15" OnKeyDown="fcEdOnKeyDown" Password="TRUE" TabOrder="2" Top="304" Width="102"></Edit>
		<Edit BKColor="black" Border="Flat" BorderColor="#6b6b6b" Color="white" Font="굴림,9" Height="19" Id="edUserId" Left="158" LeftMargin="3" MaxLength="6" OnCharChanged="edUserId_OnCharChanged" OnKeyDown="fcEdOnKeyDown" TabOrder="1" Top="304" Width="102"></Edit>
		<Button ButtonStyle="TRUE" Color="user55" DisableColor="user56" Height="19" Id="btn_login" ImageID="log_btn_login" Left="376" LeftMargin="14" OnClick="fcSearch" TabOrder="3" Top="304" Width="60"></Button>
		<Button Height="11" Id="btn_close" ImageID="btn_login_close" Left="728" OnClick="fcCancel" TabOrder="5" TabStop="FALSE" Text="Button0" Top="9" Width="47"></Button>
	</Form>
	<Script><![CDATA[/***************************************************************************************************
*   Form Common Script                                                                             *
*     현재 총 100 컬럼임 되도록 100 컬럼 안으로 코딩을 하세요                                      *
123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 1234567890
***************************************************************************************************/

/***************************************************************************************************
*                                         공통 Script Include                                      *
***************************************************************************************************/
#include "lib::rbm_app_script.js";
#include "lib::rbm_common_script.js";
/***************************************************************************************************
*                                          화면 변수 선언부                                        *
***************************************************************************************************/
var bExitFlag = true;
var nPosX = (getDeviceInfo("CXScreen")-386)/2;
var nPosY = (getDeviceInfo("CYScreen")-152)/2;
var nFailPassCnt  = 0;
var bPawdEnc = "N";

/***************************************************************************************************
*                                         공통 Event 처리 부분                                     *
***************************************************************************************************/
/*-------------------------------------------------------------------------------------------------+
>>  01. 최초 화면 Load時 처리 할 사항
+-------------------------------------------------------------------------------------------------*/
function fcFormLoadSetting(obj){
    var sGlobalVal = getReg("GlobalVal");
    
    //setReg("GlobalVal",""); 
    
    var arr = Split(sGlobalVal, "|");
    
    var AutoMnID   = arr[0];
    var AutoUserID = arr[1];
    var AutoUserPW = arr[2];
    var EncUserPW  = arr[3];
   

    if(AutoUserID != null && trim(AutoUserID) != "" && AutoUserPW != null && trim(AutoUserPW) != "") {
        edUserId.Text = AutoUserID;
        edPswd.Text = AutoUserPW;
        if (EncUserPW == null) EncUserPW = "N";
        bPawdEnc = EncUserPW;
        fcSearch();
        
         return;
    }
    
    var sEno = GetReg("eNo","");

    // 레지스트리 정보
    edUserId.Text = sEno;         // 사번
    
	if (Length(sEno) == 5) {
        edPswd.SetFocus();
	}
	nFailPassCnt  = 0;
	
}
 
/*-------------------------------------------------------------------------------------------------+
>>  02. 화면 unLoad時 처리 할 사항
+-------------------------------------------------------------------------------------------------*/
function fcFormUnloadProcess(obj){
	if ( bExitFlag ) {	
        exit();
	}
}

/*-------------------------------------------------------------------------------------------------+
>>  03. 단축키 처리(Form KeyDown)
+-------------------------------------------------------------------------------------------------*/
function fcHotKey(obj,objSenderObj,nChar,bShift,bControl,bAlt,nLLParam,nHLParam) {
	//Return Key Press時 Next Component focus
		
	if(nChar == 113){
		fcSearch(btn_login, "Y");
	}
}

/***************************************************************************************************
*                                      공통 버튼 Event 처리 부분                                   *
***************************************************************************************************/
/*-------------------------------------------------------------------------------------------------+
>>  01. 닫기(close) 버튼 클릭 時 처리
+-------------------------------------------------------------------------------------------------*/
function fcCancel(obj) {	
	exit();          					//프로그램 종료
}

/*-------------------------------------------------------------------------------------------------+
>>  02. 조회 버튼 클릭 時 처리
+-------------------------------------------------------------------------------------------------*/
function fcSearchCheck(obj) {

	if( fnc_IsNull(edUserId.Text) ) {
			// 기수 누락
			alert('사용자 아이디를 입력하세요!');
			edUserId.SetFocus();
			return false;
	}
	if( fnc_IsNull(edPswd.Text) ) {
			// 기수 누락
			alert('비밀번호를 입력하세요!');
			edPswd.SetFocus();
			return false;
	}
	return true;
}

function fcSearch(obj) {
    if ( !fcSearchCheck(obj) ) return;

	var sServiceName = "common_login-service:searchUser";
    var sInDataSet   = "";
    var sOutDataSet  = "dsOutUser=dsOutUser dsDbStatus=dsDbStatus";
    
	var sUserIp = ext_GetIPAddress();
	if ( Pos(sUserIp,",") != -1) {
		sUserIp = mid(sUserIp, 1, Pos(sUserIp,",") -1);
	} else {
		sUserIp = Replace(Replace(sUserIp, "["), "]");
	}
//	Trace("LoginSNIS::PC_IP="+sUserIp);
	var sOSVer = fnc_GetOSVersionName(GetDeviceInfo("OSVERSION"));
	
    fcd_AddParam("USER_ID",  Trim(edUserId.Text));
    fcd_AddParam("PSWD",     Trim(edPswd.Text));
    fcd_AddParam("USER_IP",  Trim(sUserIp));
    fcd_AddParam("PSWD_ENC", bPawdEnc);
    fcd_AddParam("OS_VERSION", sOSVer);
    
	fcd_SendTransaction(sServiceName, sInDataSet, sOutDataSet, "fcCallBack", false);
}

function fcAutoSearch(AUTOUSERID) {
    var sServiceName = "common_login-service:searchUserAuto";
    var sInDataSet   = "";
    var sOutDataSet  = "dsOutUser=dsOutUser";
    
    fcd_AddParam("USER_ID", AUTOUSERID);    
	
	fcd_SendTransaction(sServiceName, sInDataSet, sOutDataSet, "fcCallBack", false); 
}


/** 
 * 로그인 오류 메세지창(popupDiv) 닫기
 */
function PopupDiv0_btn_confirm_OnClick(obj)
{
	PopupDiv0.ClosePopup();
}

//로그인 오류횟수 check용 정보 입력
function fcSaveLoginPswdChk(obj){
	var sServiceName = "common_login-service:saveLoginPswdChk";
    var sInDataSet   = "";
    var sOutDataSet  = "";
    
    fcd_AddParam("USER_ID",  Trim(edUserId.Text));
    
    fcd_SendTransaction(sServiceName, sInDataSet, sOutDataSet, "fcCallBack", false);
}

//로그인 오류횟수/시간 초기화
function fcSaveLoginPswdReset(obj){
	var sServiceName = "common_login-service:saveLoginPswdReset";
    var sInDataSet   = "";
    var sOutDataSet  = "";
    
    fcd_AddParam("USER_ID",  Trim(edUserId.Text));
    
    fcd_SendTransaction(sServiceName, sInDataSet, sOutDataSet, "fcCallBack", false);
}

//중복로그인 check용 정보 입력
function fcSaveDupChk(obj){
	var sServiceName = "common_login-service:saveLoginDupChk";
    var sInDataSet   = "";
    var sOutDataSet  = "";
    
    fcd_SendTransaction(sServiceName, sInDataSet, sOutDataSet, "fcCallBack", false);
}

/***************************************************************************************************
*                                      사용자 정의  처리 부분                                      *
***************************************************************************************************/
/*-------------------------------------------------------------------------------------------------+
>>  01. Transaction 후 처리 해야 할 내용!
+-------------------------------------------------------------------------------------------------*/
function fcCallBack(sServiceName, ErrorCode, ErrorMSG) {

	if ( !fnc_result(ErrorCode, ErrorMSG) ) return;
    InitSession(true);
	
	// 조회 후
	if ( sServiceName == "common_login-service:searchUser" ) {
        gdsDbStatus.copy(dsDbStatus);
        if ( dsOutUser.GetRowCount() == 0 ) {
       
            fnc_Message(SNIS_COM_0003, "N");
            edUserId.Text = "";
            edPswd.Text   = "";
            return;
        }
        
        //로그인 오류횟수 초기화
        if ( dsOutUser.GetColumn(dsOutUser.currow, "PSWD_CHK") == "5") {
			var loginTime = dsOutUser.GetColumn(dsOutUser.currow, "LOGIN_DT");
			var todayTime = substr(GetDate(),0,12);
			var difTime = toNumber(todayTime) - toNumber(loginTime);
			
			if(difTime < 30){
				fnc_Message(SNIS_COM_1063, "N");
				return;
			}
			else{
				//로그인 오류횟수,시간 초기화
				fcSaveLoginPswdReset();
			}
        }
        
        if ( dsOutUser.GetColumn(dsOutUser.currow, "ISVALID") != "T" ) {
          //if ( dsOutUser.GetColumn(dsOutUser.currow, "PSWD") != edPswd.Text ) {
            fnc_Message(SNIS_COM_0004, "N");
            edPswd.Text   = "";
            
            //로그인 오류횟수 check용 정보 입력
            fcSaveLoginPswdChk();
            
            nFailPassCnt ++;
            if (nFailPassCnt >= 3) exit();   
            return;       
        }
        
        // 암호 변경 대상인 경우
        if ( dsOutUser.GetColumn(dsOutUser.currow, "CHNG_PSWD") == "T" ) {
			var sGbn    = "003";
			var sUserId = dsOutUser.GetColumn(0,"USER_ID");

			var rtn = Open("common::comChngPswd.xml", "sGbn="+quote(sGbn)+" sUserId="+quote(sUserId), 130, 250, "Title=false");
			if (rtn == false) {
				exit();
			} else {
				edPswd.SetFocus();
				return;
			}
		}
		
		//로그인 오류횟수,시간 초기화
		fcSaveLoginPswdReset();
		
		// 중복로그인 체크
		//if (GBL_DUP_LOGIN_CHK == "Y") 
		   fcSaveDupChk(); 
		
		SetReg("eNo", edUserId.text);
        
		bExitFlag = false;
		gdsUser.Copy(dsOutUser);
		
		//if (GBL_DUP_LOGIN_CHK == "Y") CheckDupLogin();	//중복체크인 경우
		close();
	}
	
	if ( sServiceName == "common_login-service:searchUserAuto" ) {
        if ( dsOutUser.GetRowCount() == 0 ) {
       
            fnc_Message(SNIS_COM_0003, "N");
            edUserId.Text = "";
            edPswd.Text   = "";
            return;
        }
		
		//로그인 오류횟수 초기화
        if ( dsOutUser.GetColumn(dsOutUser.currow, "PSWD_CHK") == "5") {
			var loginTime = dsOutUser.GetColumn(dsOutUser.currow, "LOGIN_DT");
			var todayTime = substr(GetDate(),0,12);
			var difTime = toNumber(todayTime) - toNumber(loginTime);
			
			if(difTime < 30){
				fnc_Message(SNIS_COM_1063, "N");
				return;
			}
			else{
				//로그인 오류횟수,시간 초기화
				fcSaveLoginPswdReset();
			}
        }
        
        if ( dsOutUser.GetColumn(dsOutUser.currow, "ISVALID") != "T" ) {
          //if ( dsOutUser.GetColumn(dsOutUser.currow, "PSWD") != edPswd.Text ) {
            fnc_Message(SNIS_COM_0004, "N");
            edPswd.Text   = "";
            
            //로그인 오류횟수 check용 정보 입력
            fcSaveLoginPswdChk();
            
            nFailPassCnt ++;
            if (nFailPassCnt >= 3) exit();   
            return;       
        }
        
        //로그인 오류횟수,시간 초기화
		fcSaveLoginPswdReset();
		
		// 중복로그인 체크
		fcSaveDupChk(); 
        
        bExitFlag = false;
		gdsUser.Copy(dsOutUser);
		if (GBL_DUP_LOGIN_CHK == "Y") CheckDupLogin();	//중복체크인 경우
        close();
	}
	
	
}


/*-------------------------------------------------------------------------------------------------+
>>  03. 오류메시지 DisPlay 처리(Session이 참이 아닌 상태에서는 파업이 않됨)
+-------------------------------------------------------------------------------------------------*/
function fcMessage(sMessage){
	PopDivMessage.ta_msg.Text = sMessage;
	PopDivMessage.TrackPopup(nPosX,nPosY); 
}

/*-------------------------------------------------------------------------------------------------+
>>  03. 오류메시지 DisPlay 처리(Session이 참이 아닌 상태에서는 파업이 않됨)
+-------------------------------------------------------------------------------------------------*/
function fcPopupDivClose(obj){
	PopDivMessage.ClosePopup();
}


function fcEdOnKeyDown(obj,nChar,bShift,bCtrl, bAlt,LLParam,HLParam)
{
    if ( nChar == ENTER_KEY) {
        
        switch ( obj.id ) {
        	case "edUserId" : 
				edPswd.SetFocus();
			
				break;		
			case "edPswd" :
				fcSearch(obj);
				break;
	
		}
	}
}

function edUserId_OnCharChanged(obj,strPreText,strPostText)
{
    if (Length(edUserId.Text) == 5) {
        edPswd.SetFocus();
    }
}

function CheckDupLogin()
{
    var sServiceName = "common_login-service:checkDupLoginUser";
    var sInDataSet   = "";
    var sOutDataSet  = "";
    
    fcd_AddParam("USER_ID",  Trim(edUserId.Text));
	fcd_SendTransaction(sServiceName, sInDataSet, sOutDataSet, "fcCallBack", false); 
}]]></Script>
</Window>