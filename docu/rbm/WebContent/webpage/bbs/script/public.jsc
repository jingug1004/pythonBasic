// 통합 검색
function search_redirect()
{
    // 어느 검색을 선택하였는가?
    var menu  = document.searchForm.menu.value;
    // 직원조회라면..
    if ( menu == 'person' )
    {
        SearchPerson();
    }
    else
    {
    var docKey = document.searchForm.docKey.value;

    if( docKey == "" )
    {
        alert("검색할 내용을 입력하세요.");
        searchForm.docKey.focus();
        return ;
    }

    var targetPage = '';
    var topMenuId  = '';

    switch( document.searchForm.domain.selectedIndex )
    {
        // 전자결재 검색
        case 0:
            targetPage = "/UFWeb/sign/hwpsign/signdb_search.jsp";
            topMenuId = 'sign';
            break;
        // 지식관리 검색
        case 1:
            targetPage = "/UFWeb/kms/main/kmsMainfrm_search.jsp";
            topMenuId = 'kms';
            break;
        // 제안방 검색
        case 2:
            targetPage = "/UFWeb/kms/suggest/suggestdb_search.jsp";
            topMenuId = 'kms';
            break;
        // 전자우편 검색
        case 3:
            targetPage = "/UFWeb/mail/maildb_search.jsp";
            topMenuId = 'mail';
            break;
        // 게시판 검색
        case 4:
            targetPage = "/UFWeb/bbs/bbsdb_search.jsp";
            topMenuId = 'bbs';
            break;

        // 통합 기술 검색
        case 5:
            //var fileurl = "http://www.jugong.co.kr/web/info/main/search_page.asp?search="+ docKey +
            var fileurl = "http://www.jugong.co.kr/info/skill/search_page.asp?search="+ docKey +
                          "&chkbx=jsibang|gsibang|zichim|upche|jajae|";
            window.open( fileurl, 'srch', '' );
            return;
        // 전자도서관 검색
        case 6:
            //syber_search();
            return;
        case 7:
            window.open("http://kr.search.yahoo.com/bin/search?p="+docKey, 'srch', '' );
            return;
    }

    self.location.href = "/UFWeb/public/script/gateway.jsp?topMenuId="+topMenuId+
                         "&targetPage="+escape(targetPage)+"&docKey="+docKey;
    }
}

// 직원조회 목록 보기
function SearchPerson()
{
    var UserName = '';
    var UserID   = '';
    var UserJob  = '';
    var UserCar  = '';

    switch( document.searchForm.where.value )
    {
        case '1': UserName = document.searchForm.docKey.value; break;
        case '2': UserID   = document.searchForm.docKey.value; break;
        case '3': UserJob  = document.searchForm.docKey.value; break;
        case '4': UserCar  = document.searchForm.docKey.value; break;
    }

    searchWnd = window.open(
                 document.form1.sptSupportAddr.value+
                 '/UFWeb/support/msearch/srchMemberList.jsp?'+
                 'userName='+UserName+'&userId='+UserID+'&userJob='+UserJob+'&userCar='+UserCar,'srchWin',
                 'scrollbars=no,menubar=no,toolbar=no,resizable=yes,copyhistory=no,width=550,height=350,top=50,left=100' );

}
function goNotice(docYearmon, docNumber, bbsId )
{
    saveMenuHit('goNotice');
    
    if( bbsId == 'B0011350' )
        window.open( '/UFWeb/portal/bbsReadNews.jsp?docYearmon='+docYearmon+'&docNumber='+docNumber+'&bbsId='+bbsId, 'noticeView',
                     'top=50,left=100,menubar=no,toolbar=no,location=no,scrollbars=yes,resizable=yes,copyhistory=no,status=yes,width=940,height=650' );
    else
        window.open( '/UFWeb/portal/bbsRead.jsp?docYearmon='+docYearmon+'&docNumber='+docNumber+'&bbsId='+bbsId, 'noticeView',
                     'top=50,left=100,menubar=no,toolbar=no,location=no,scrollbars=yes,resizable=yes,copyhistory=no,status=yes,width=850,height=550' );
}

function goNoticeNew(docYearmon, docNumber, bbsId )
{
    document.getElementById(docYearmon+docNumber).className = "noticeRead";
    saveMenuHit('goNotice');
    
    if( bbsId == 'B0011350' )
        window.open( '/UFWeb/portal/bbsReadNews.jsp?docYearmon='+docYearmon+'&docNumber='+docNumber+'&bbsId='+bbsId, 'noticeView',
                     'top=50,left=100,menubar=no,toolbar=no,location=no,scrollbars=yes,resizable=yes,copyhistory=no,status=yes,width=940,height=650' );
    else
        window.open( '/UFWeb/portal/bbsRead.jsp?docYearmon='+docYearmon+'&docNumber='+docNumber+'&bbsId='+bbsId, 'noticeView',
                     'top=50,left=100,menubar=no,toolbar=no,location=no,scrollbars=yes,resizable=yes,copyhistory=no,status=yes,width=850,height=550' );
}




// 통합검색( 전문검색)
function detail_search97()
{
    window.open("/UFWeb/public/script/detail_search.html", "search97", "menubar=no,toolbar=yes,scrollbars=yes, status=yes,resizable=yes , top=1,left=50,width=650, height=500");

}


// 사용자 정보 조회 창 띄우기
function selectUser( user_id )
{
// 2011/10 update
//    showModalDialog( '/UFWeb/public/script/userView.jsp?user_id='+user_id, 'userView',
//                     'dialogWidth:700px;dialogHeight:430px;help:0;status:no;scroll:no' );
                     
    showModalDialog( '/UFWeb/support/msearch/memberInfo.jsp?user_id='+user_id, 'userView',
                     'dialogWidth:600px;dialogHeight:470px;help:0;status:no;scroll:auto' );
}



// 사용자 정보 조회 창 띄우기
function selectEveryUser( user_id )
{
    showModalDialog( '/UFWeb/public/script/everyUserView.jsp?user_id='+user_id, 'userView',
                     'dialogWidth:600px;dialogHeight:430px;help:0;status:no;scroll:no' );
}

// 달력창 띄우기(달력 하나)
function openCalendar()
{
    returnValue = showModalDialog( '/UFWeb/public/script/calendar.html', 'calendar',
                               'dialogWidth:210px;dialogHeight:242px;help:0;status:no;' );

    if( returnValue != null )
    {
        document.forms[1].resvDate.value = returnValue;
    }
}


// 달력창 띄우기(기간지정 : OO부터)
function openFromCalendar()
{
    returnValue = showModalDialog( '/UFWeb/public/script/calendar.html', 'calendar',
                               'dialogWidth:210px;dialogHeight:242px;help:0;status:no;' );

    if( returnValue != null )
    {
        document.forms[1].fromDate.value = returnValue;
    }
}


// 달력창 띄우기(기간지정 : OO까지)
function openUntilCalendar()
{
    returnValue = showModalDialog( '/UFWeb/public/script/calendar.html', 'calendar',
                               'dialogWidth:210px;dialogHeight:242px;help:0;status:no;' );

    if( returnValue != null )
        document.forms[1].untilDate.value = returnValue;
}


// 사용예
// 인쇄 미리 보기          window.ieExecWB(7)
// 페이지 설정             window.ieExecWB(8)
// 인쇄하기(대화상자 표시) window.ieExecWB(6)
// 인쇄 바로 하기"         window.ieExecWB(6, -1)
// 프린트 기능
function ieExecWB( nCmd, nParam )
{
    // 웹 브라우저 컨트롤 생성
    var WebBrowser = '<OBJECT ID="ctrBrowser" WIDTH=0 HEIGHT=0 CLASSID="CLSID:8856F961-340A-11D0-A96B-00C04FD705A2"></OBJECT>';

    // 웹 페이지에 객체 삽입
    document.body.insertAdjacentHTML('beforeEnd', WebBrowser);

    // if intOLEparam이 정의되어 있지 않으면 디폴트 값 설정
    if( ! nParam || nParam < -1 || nParam > 1 )
        nParam = 1;

    // ExexWB 메쏘드 실행
    ctrBrowser.ExecWB( nCmd, nParam );

    // 객체 해제.
    ctrBrowser.outerHTML = "";
}


// 사용예 ONKEYPRESS="return handleEnter(this, event)"
// 엔터시 폼
function handleEnter( field, event )
{
    // 브라우저 종류와 버전에 따른  키보드 이벤트 캡쳐
    var keyCode = event.keyCode ? event.keyCode :
                  event.which   ? event.which   : event.charCode;

    // 엔터 시 액션 처리
    if( keyCode == 13 )
    {
        var i;

        // 현재 문서의 폼 필드를 내비게이션...
        for( i=0; i<Field.form.elements.length; i++ )
        {
            if( field == field.form.elements[i] )
                break;
        }

        // 다음 폼 필드의 인덱스 구하기
        i = (i + 1) % field.form.elements.length;

        // 다음 폼 필드로 포커스 이동
        field.form.elements[i].focus();

        return false;
    }
    else
      return true;
}


// 목록에서 모든 check 박스를 check되도록 함
function checkAll_back()
{
    var thisForm = document.forms[1];
    if( thisForm.listChk == null )
        return;

    var Tcount = thisForm.listChk.length; //총 리스트 건수

    // 리스트가 1건일 경우,
    if( Tcount == null )
    {
        if( thisForm.listChk.checked == true )
            thisForm.listChk.checked = false;
        else
            thisForm.listChk.checked = true;
    }
    // 리스트가 여러 건일 경우,
    else
    {
        // 일단은 맨처음 건이 check가 되어 있으면 모두가 비check상태로,
        if( thisForm.listChk[0].checked == true )
        {
            for( var i=0; i<thisForm.listChk.length; i++ )
                thisForm.listChk[i].checked = false;
        }
        // 반대로 맨처음 건이 check가 되어 있지 않으면 모두 check상태로 돌려줌
        else
        {
            for( var i=0; i<thisForm.listChk.length; i++ )
                thisForm.listChk[i].checked = true;
        }
    }
}

//목록에서 모든 check 박스를 check되도록 함 이승환 추가 2003/12/04
function checkAll()
{   
    var thisForm = document.forms[1];

    if ( thisForm.listChk != null )
    {
        var Tcount = thisForm.listChk.length; //총 리스트 건수

        if( Tcount == null )
        {
            if(thisForm.CheckDel.checked == true) {
                thisForm.CheckDel.checked=true;
                thisForm.listChk.checked = true;
            }
            else {
                thisForm.CheckDel.checked=false;
                thisForm.listChk.checked = false;
            }
        }
        else
        {
            if(thisForm.CheckDel.checked == true) {
                thisForm.CheckDel.checked=true;
                for( var i=0; i<thisForm.listChk.length; i++ )
                    thisForm.listChk[i].checked = true;
            }
            else {
                thisForm.CheckDel.checked=false;
                for( var i=0; i<thisForm.listChk.length; i++ )
                    thisForm.listChk[i].checked = false;
            }
        }
    }
    else
    {
        alert("항목이 없습니다!");
    }
}


// 목록에서 check된 항목을 처리
function selChk(editMode, fileName)
{
    var thisForm = document.forms[1];

    if( thisForm.listChk == null )
        return;

    var Tcount   = thisForm.listChk.length;  //총 리스트 건수
    var totalCnt =  0;      // 체크된 총 항목 수


    if( Tcount == null && thisForm.listChk.checked == true )
    {
        totalCnt = 1;
    }
    else
    {
        for( var i=0; i<thisForm.listChk.length; i++ )
        {
            if( thisForm.listChk[i].checked == true )
                totalCnt++;
        }
    }

    if( totalCnt == 0 )
    {
        alert("선택된 항목이 없습니다. \n\n먼저 항목을 선택하여 주십시요.");
        return;
    }
    else
    {
        if( thisForm.totalCnt )
            thisForm.totalCnt.value = totalCnt;
        if (editMode == 'S') {
            if (confirm("삭제하시겠습니까?")) {
            } else {
                return;
            }
        }
        thisForm.editMode.value = editMode;
        thisForm.action         = fileName;
        //thisForm.method         = 'post';
        thisForm.target         = '_self';
        thisForm.submit();
    }
}


// 첨부 파일 선택 다이얼로그 열기
// input을 hidden으로 AttSubjects, AttachList로 두개삽입
function OpenAttachDialog()
{
    var thisForm = document.forms[1];

    // ActiveX control의 첨부 파일 선택 다이얼로그 호출
    if( ActiveFileMgr.OpenDialog() )
    {
        // 사용자가 선택한 첨부 파일 목록 추출
        attFilePaths = ActiveFileMgr.AttachLocalPathList.split(";");

        // 선택된 첨부 파일명을 select box에 표시
        for( i=0; i<attFilePaths.length-1; i++ )
            thisForm.AttachList.options[i].text = attFilePaths[i];

        for( ; i<20 ; i++ )
            thisForm.AttachList.options[i].text = '';

         // 파일명만 넘어간다.
        thisForm.AttSubjects.value = ActiveFileMgr.AttachSubjectList;
    }
}


// 문서 새로 작성하기(재작성)
function editBoxReWrite()
{
    var thisForm = document.forms[1];
    thisForm.reset();

    if( thisForm.bbsText != null )
        document.all.editBox.html = thisForm.bbsText.value;
    else if( thisForm.mailMessage != null )
        document.all.editBox.html = thisForm.mailMessage.value;

    //첨부파일목록 초기화
    if( thisForm.mailAttachList.options.length != 0 )
    {
        attFilePaths = ActiveFileMgr.AttachLocalPathList.split(";");

        for( i=0; i<attFilePaths.length-1; i++ )
            thisForm.mailAttachList.options[i].text = '';
    }
}


// 문서 새로 작성하기(재작성)
function reWrite()
{
    var thisForm = document.forms[1];
    thisForm.reset();
}


// 통합 메뉴 이동
function goMenu( topMenuId , subMenuId, thirdMenuId )
{
    var menu = '';
    if( topMenuId != null )
        menu += topMenuId;
    if( subMenuId != null )
        menu += '-'+subMenuId;
    if( thirdMenuId != null )
        menu += '-'+thirdMenuId;
    
    
    saveMenuHit(menu);
    
    
    var topMenuId1 = topMenuId;
    if( subMenuId == null )
        subMenuId = "";

    if( thirdMenuId == null )
        thirdMenuId = "";

    if(topMenuId == 'rule')
    {
      goOtherSystem('rule')
      return;
    }else if(topMenuId == 'book'){
      goOtherSystem('book')
      return;
    }else if(topMenuId == 'hunet'){
      goOtherSystem('hunet')
      return;
    }else if(topMenuId == 'ezwel'){
      goOtherSystem('ezwel')
      return;
    }else if(topMenuId == 'kit'){
      goOtherSystem('kit')
      return;
    }else if(topMenuId == 'equip'){
      goOtherSystem('equip')
      return;
    }else if(topMenuId == 'nojo'){
      goOtherSystem('nojo')
      return;
    }else if(topMenuId == 'ilban'){
      goOtherSystem('ilban')
      return;
    }else if(topMenuId == 'changeup'){
      goOtherSystem('changeup')
      return;
    }else if(topMenuId == 'sotoma'){
      goOtherSystem('sotoma')
      return;
    }else if(topMenuId == 'mydisk'){
      goOtherSystem('mydisk')
      return;
    }

    top.location.href = '/UFWeb/public/script/gateway.jsp?topMenuId='+topMenuId+'&subMenuId='+subMenuId+'&thirdMenuId='+thirdMenuId;
}
function goMenu_kosic( topMenuId , subMenuId, thirdMenuId )
{
  var topMenuId1 = topMenuId;
    if( subMenuId == null )
        subMenuId = "";

    if( thirdMenuId == null )
        thirdMenuId = "";

    if(topMenuId == 'rule')
    {
      goOtherSystem('rule')
      return;
    }else if(topMenuId == 'book'){
      goOtherSystem('book')
      return;
    }else if(topMenuId == 'hunet'){
      goOtherSystem('hunet')
      return;
    }else if(topMenuId == 'ezwel'){
      goOtherSystem('ezwel')
      return;
    }else if(topMenuId == 'kit'){
      goOtherSystem('kit')
      return;
    }else if(topMenuId == 'equip'){
      goOtherSystem('equip')
      return;
    }else if(topMenuId == 'nojo'){
      goOtherSystem('nojo')
      return;
    }else if(topMenuId == 'ilban'){
      goOtherSystem('ilban')
      return;
    }else if(topMenuId == 'changeup'){
      goOtherSystem('changeup')
      return;
    }else if(topMenuId == 'sotoma'){
      goOtherSystem('sotoma')
      return;
    }else if(topMenuId == 'mydisk'){
      goOtherSystem('mydisk')
      return;
    }
    if( topMenuId == 'sign' )
     self.location.href = 'http://group.korea-sports.com/UFWeb/public/script/gateway.jsp?topMenuId='+topMenuId+'&subMenuId='+subMenuId+'&thirdMenuId='+thirdMenuId;
    else
     parent.location.href = 'http://group.korea-sports.com/UFWeb/public/script/gateway.jsp?topMenuId='+topMenuId+'&subMenuId='+subMenuId+'&thirdMenuId='+thirdMenuId;
}



function goMenuK( userId,userName )
{  
    self.location.href = 'http://group.korea-sports.com/UFWeb/portal/autoLogin.jsp?userId='+userId+'&userName='+userName;
}

function goOtherSystem( sysname, subparam, thrdparam )
{
    var gatepage = '';
    var winname  = '';
    var winreswidth=window.screen.availWidth;
    var winresheight=window.screen.availHeight;

    switch( sysname )
    {
        //case 'rule'     : gatepage = "http://210.104.158.161/index.asp";           winname='rule';     break;
        //case 'rule'     : gatepage = "http://140.107.1.61/index.asp";           winname='rule';     break;
        case 'rule'     : gatepage = "http://140.107.1.63";           winname='rule';     break;
        //case 'rule'     : gatepage = "http://140.107.1.61/index.asp";           winname='rule';     break;
        case 'book'     : gatepage = "http://210.104.158.95/index.asp";            winname='book';     break;
        case 'hunet'    : gatepage = "http://sosfo.hunet.co.kr/Main/Index.aspx";   winname='hunet';    break;
        case 'ezwel'    : gatepage = "http://sosfo.ezwel.com/";                    winname='ezwel';    break;
        case 'kit'      : gatepage = "http://140.101.1.91/kit/index.php";          winname='kit';      break;
        case 'equip'    : gatepage = "http://140.107.1.53/";                       winname='equip';    break;
        //case 'nojo'     : gatepage = "http://www.sosfonojo.or.kr/";                winname='nojo';     break;
        case 'nojo'     : gatepage = "http://cafe.naver.com/sosfonojo";                winname='nojo';     break;
        case 'ilban'    : gatepage = "http://www.kspoilban.or.kr"; winname='ilban';    break;
        case 'mail'     : gatepage = "http://mail.kspo.or.kr/me/index.jsp";       winname='mail';     break;
        case 'changeup' : gatepage = "http://www.kspo.or.kr/changeup/index.htm";  winname='changeup'; break;
        //case 'sotoma'   : gatepage = "http://www.sotoma.net/index.htm";            winname='sotoma';   break;
        //case 'sotoma'   : gatepage = "http://210.104.158.214:8080/UFWeb/portal/test.jsp";  winname='sotoma';   break;
        case 'sotoma'   : gatepage = "http://jupiter.kspo.or.kr/UFWeb/portal/openSotoma.jsp";  winname='sotoma';   break;
        case 'mydisk'   : gatepage = "http://mydisk.kspo.or.kr/mydisk/webPort/loginpSosfo.php";  winname='mydisk';   break;
     }

    // 메일 읽기의 경우는 foldername 이라는 한글 파라미터 값을 get방식으로 넘기면 한글이 깨짐
    if( sysname == 'viewMail' )
    {
        window.open('', winname,
                    "toolbar=yes,location=yes,directories=yes,status=yes,height=800,width=1100,menubar=yes,scrollbars=yes,resizable=yes,top=0,left=0");

        // 받은 메일이 위치한 편지함명
        document.form1.fldNm.value = thrdparam;

        document.form1.target      = winname;
        document.form1.action      = gatepage;
        document.form1.method      = 'post';
        document.form1.submit();

    }else if(sysname == 'eis'){
        window.open(gatepage,'UbiReport','left=0, top=0, width=1016 height=699 toolbar=no,location=no,directories=no,status=no,menubar=no,resizable=no,copyhistory=no,scrollbar=no');
    }else{
        window.open(gatepage, winname,
                    "toolbar=yes,location=no,directories=yes,status=yes,height=800,width=1100,menubar=yes,scrollbars=yes,resizable=yes,top=0,left=0");
    }
}

// 업무시스템
function goWork( workType )
{
    var wndWidth  = screen.width;
    var wndHeight = screen.height;

    if( workType == 'bugeum' )
    {
        window.open('http://bugeum.kohom.co.kr', 'bugeum',
                    'menubar=yes,toolbar=yes,location=yes,scrollbars=auto,resizable=yes,status=yes,top=0,left=0,width='+wndWidth+',height='+wndHeight);
    }
    else if(workType == 'mis')
    {
        window.open('http://www.kohom.co.kr:8939', 'mis',
                    'menubar=yes,toolbar=yes,location=yes,scrollbars=auto,resizable=yes,status=yes,top=0,left=0,width='+wndWidth+',height='+wndHeight);

    }
}

// 자료취합 메뉴 이동
function goCollect( userSpecId )
{
    var wndWidth  = screen.width;
    var wndHeight = screen.height;

    if( userSpecId == null )
        userSpecId = "";

    window.open('http://192.168.1.14/jaryo/jsp/login/autoLogin.jsp?gwEmpCode='+userSpecId,'collect',
                'menubar=yes,toolbar=yes,location=yes,scrollbars=auto,resizable=yes,status=yes,top=0,left=0,width='+wndWidth+',height='+wndHeight);

}


// Html Help
function goHelp( flg )
{
    var str1 = "/WebHelp/junet_HelpMain.jsp?content="+flg;
   window.open(str1,"","toolbar=0,location=0,directories=0,status=yes,height=700,width=1010,menubar=0,scrollbars=auto,resizable=yes,top=10,left=0");
}


function goInfoSys2()
{
    /*
    var thisForm = document.forms[1];
    */

    window.open("http://login.jugong.co.kr/nls/intro/intro.jsp","infosys","toolbar=0,location=0,directories=0,titlebar=yes,status=no,menubar=0,width=1012,height=715,scrollbars=auto,resizable=no,top=0,left=0");
    //window.open("http://eam2.jugong.co.kr/nls/intro/intro.jsp","infosys","toolbar=0,location=0,directories=0,titlebar=yes,status=no,menubar=0,width=1012,height=715,scrollbars=auto,resizable=no,top=0,left=0");

}

function goInfoSys()
{
    window.open("/UFWeb/public/script/infoSystem_open.jsp","eamOpen","toolbar=0,location=0,directories=0,titlebar=no,status=no,menubar=0,width=50,height=50,resizable=no,top=2000,left=3000");
}
function goInfoSysTest(winName)
{
    window.open("/UFWeb/public/script/infoSystem_openTest.jsp",winName,"toolbar=0,location=0,directories=0,titlebar=no,status=no,menubar=0,width=1012,height=705,resizable=no,top=10,left=10");
}

function goKosic()
{
   //self.location.href = 'http://group.korea-sports.com/UFWeb/portal/portal.jsp';
   //
   self.location.href = 'http://group.korea-sports.com/UFWeb/portal/gateway4s2k.jsp';
}


// 페이지 이동
function RoutePage( pageNum )
{
    var thisForm = document.forms[1];

    // 현재 페이지에서 새창을 openWindow를 사용하여 연 후, 페이지 이동을 할 때 필요.
    if( thisForm.pageName != null )
        thisForm.action = thisForm.pageName.value;

    // 페이지 번호
    thisForm.pageNum.value =  pageNum;
    thisForm.method        = 'POST';
    thisForm.target        = '_self';
    thisForm.submit();
}


// HTML editor 초기화 상태 flag
var objBodyLoaded   = false;
var objEditorLoaded = false;

// html editor가 loading 완료 시 호출
function handleLoad()
{
    objBodyLoaded = true;
    if( objEditorLoaded == true )
        init();
}

// 첨부 파일 다운로드~ (파일이 하나인 경우)
function downloadAttFile( att_filepath )
{
    ActiveFileMgr.RecvFile( att_filepath );
}


// 첨부 파일 다운로드~ (파일이 둘이상인 경우)
function downloadAttDlg( docYearmon, docNumber )
{
    alert("기능이 아직 구현되지않았습니다.");
}



// 외부메일 띄우기
function goEmail( topMenu, subMenu )
{
    var wndWidth  = screen.width-10;
    var wndHeight = screen.height-180;

    window.open('/UFWeb/public/script/junet/emailGatewayFrom.jsp','mail',
                'menubar=yes,toolbar=yes,location=yes,scrollbars=auto,resizable=yes,status=yes,top=0,left=0,width='+wndWidth+',height='+wndHeight);
}

// 자료관 띄우기
function goEdms( topMenu, subMenu )
{
    self.location.href = "/UFWeb/public/script/junet/edmsGatewayFrom.jsp";
}

function hideElement( elmID, menuID )
{

    var ToolbarMenu = document.all( menuID+'TailMenu' );
    if( ToolbarMenu == null )
    {
        window.event.cancelBubble = true;
        return false;
    }

    var objLeft = 0;
    var objTop = 0;
    var objwidth = 0;
    var top    = ToolbarMenu.offsetTop;
    var left   = ToolbarMenu.offsetLeft;
    var width  = ToolbarMenu.offsetWidth;
    var height = ToolbarMenu.offsetHeight;

    for( i=0; i<document.all.tags(elmID).length; i++ )
    {
        obj = document.all.tags(elmID)[i];

        if( !obj || !obj.offsetParent )
            continue;

        // Find the element's offsetTop and offsetLeft relative to the BODY tag.
        objLeft   = obj.offsetLeft;
        objTop    = obj.offsetTop;
        objwidth  = obj.offsetWidth;
        objParent = obj.offsetParent;

        while( objParent.tagName.toUpperCase() != "BODY" )
        {
            objLeft  += objParent.offsetLeft;
            objTop   += objParent.offsetTop;
            objParent = objParent.offsetParent;
        }
        // Adjust the element's offsetTop relative to the dropdown menu
        if( ( ((objLeft < left) && (left < (objLeft + objwidth))) || ((objLeft < (left + width)) && (objLeft > left)) ) && ((top + height) > (objTop)) ) {
            if( obj.name != "domain" )
                obj.style.visibility = "hidden";
        }
    }
}

function showElement(elmID)
{
    for( i=0; i < document.all.tags(elmID).length; i++ )
    {
        obj = document.all.tags(elmID)[i];
        if( ! obj || ! obj.offsetParent )
            continue;
        obj.style.visibility = "";
    }
}


function logout()
{
    self.location.href = '/UFWeb/public/script/logout.jsp';
}

function goSosfo()
{
    self.location.href = 'http://jupiter.kspo.or.kr/UFWeb/portal/portal.jsp';
}

function goOld()
{
  window.open( 'http://intra.korea-sports.com','bbsView',
        'vscrollbars=yes,menubar=no,toolbar=no,resizable=yes,scrollbars=yes,copyhistory=no,width=1024,height=768,top=1,left=1');
}

// 넘어온 tag 객체 모두를 숨긴다.
function hideElementAll(elmID)
{
    for( i=0; i < document.all.tags(elmID).length; i++ )
    {
        obj = document.all.tags(elmID)[i];
        if( ! obj || ! obj.offsetParent )
            continue;
        obj.style.visibility = "hidden";
    }
}

// 정렬
function orderBy( attrname )
{
    var thisForm = document.forms[1];

    thisForm.orderByColumn.value = attrname;

    // 제목, 작성자 등을 클릭할 때마다 해당 정렬 기준이 바뀐다.
    if( thisForm.orderByDir.value == 'DESC' )
        thisForm.orderByDir.value = 'ASC';
    else
        thisForm.orderByDir.value = 'DESC';

    thisForm.action = thisForm.pageName.value;
    thisForm.method = 'POST';
    thisForm.target = '_self';
    thisForm.submit();
}

//검색 시 보여줄 해당 게시판 내용
function searchBbsView( yearmon, num )
{
    window.open( '/UFWeb/bbs/bbsView.jsp?docYearmon='+yearmon+'&docNumber='+num,'bbsView',
        'vscrollbars=yes,menubar=no,toolbar=no,resizable=no,scrollbars=yes,copyhistory=no,width=500,height=400,top=50,left=100');
}

// kms 메뉴 이동
function gokms(subMenuId)
{
    if( subMenuId == 'bp' )
        top.location.href = '/UFWeb/kms/bbsList.jsp';
    else if( subMenuId == 'propMng' )
        top.location.href = '/UFWeb/kms/propMng.jsp';
    else
        top.location.href = '/UFWeb/kms/kmsView.jsp?subMenuId='+subMenuId;
}

function goMail(subMenuId)
{
     top.location.href = '/UFWeb/mail/mailView.jsp';
}

function goKosicMail(subMenuId)
{
     top.location.href = 'http://group.korea-sports.com/UFWeb/mail/mailView.jsp';
}

// bsc 메뉴 이동
function goBsc()
{
      self.location.href = '/UFWeb/portal/bscView.jsp';
}


function openView( docYearmon, docNumber )  //칭찬릴레이 보기
{

   // var thisForm   = document.forms[0];
    var targetForm = parent.document.forms[1];
    var flag    ="check";

    targetForm.action = './praiseDocDb.jsp?docYearmon='+docYearmon+'&docNumber='+docNumber+'&flag='+flag;
    targetForm.target = '_self';
    targetForm.submit();
}

function openPortalView( docYearmon, docNumber )  //칭찬릴레이 포탈쪽에서 보기
{
   var flag = "check";

   self.location.href = '/UFWeb/sosfo/praise/praiseDocDb.jsp?docYearmon='+docYearmon+'&docNumber='+docNumber+'&flag='+flag;
}

/*------------------------------알림창(쪽지확인을 위한체크)------------------------------*/
 function requestChk()
 {
  try
  {
   if (window.XMLHttpRequest)
   {
    httpReq = new XMLHttpRequest();
   }
   else if (window.ActiveXObject)
   {
    httpReq = new ActiveXObject("Microsoft.XMLHTTP");
   }
  }
  catch (oErr)
  {
   alert(" createRequest = "+oErr);
  }

  httpReq.onreadystatechange = paperWin;
  httpReq.open("GET", "/UFWeb/portal/paperWin/revPaperNum.jsp", true);
  httpReq.send(null);
 }

 function paperWin()
 {
  try
  {
   if(httpReq.readState==1 || httpReq.readState==2 || httpReq.readState==3)
   {
   }
   else if(httpReq.readyState==4)
   {
    //alert(httpReq.status);
    if(httpReq.status==200)
    {
     var paperNum=httpReq.responseText;
     //alert(paperNum);
     if(Number(paperNum)>0)
     {
      if(window.navigator.userAgent.indexOf("MSIE 7") > -1) 
        {
        window.open("/UFWeb/portal/paperWin/paperView.jsp?ieVersion=ie7","paper","width=247 height=128");
      }
      else
      {
        window.open("/UFWeb/portal/paperWin/paperView.jsp","paper","width=247 height=128");
      }
      clearInterval(nn);
     }
    }
    else if(httpReq.status==500)
    {
     alert("error 500");
    }
    else if(httpReq.status==404)
    {
     alert("error 404");
    }
   }
  }
  catch (o)
  {
   //alert("fileStatus="+o);
  }
 }

/*------------------------------알림창(쪽지확인을 위한체크)------------------------------*/


//게시판 의견답글 열기 (추가:강미경)
function openOpiReply( opiSeq )
{

    opiSeq         = eval( opiSeq ) - 1;
    var flag       = "";

    switch( document.all.openFlag[opiSeq] )
    {

    case undefined:

        flag = document.all.openFlag.style.display;

        //크기조정
        document.all.openFlag.style.height = '100';

        if( flag == "block" )
        document.all.openFlag.style.display = "none";
        else
        document.all.openFlag.style.display = "block";


        break;

    default:

        flag = document.all.openFlag[opiSeq].style.display;


        //크기조정
        document.openFlag[opiSeq].style.height = '100';
        //document.getElementById('openReply').height = document.all.openFlag[opiSeq].document.body.scrollHeight;

        if( flag == "block" )
        document.all.openFlag[opiSeq].style.display = "none";
        else
        document.all.openFlag[opiSeq].style.display = "block";

        break;

    }
}


//게시판 의견답글 쓰기 (추가:강미경)
function opiReplyRegit( regitSeq )
{

    var thisForm     = document.forms[0];
    var targetForm   = parent.document.forms[1];

    if ( thisForm.OpiReplyText.value == '' )
    {
        alert("한줄답변내용을 입력하십시요");
        thisForm.OpiReplyText.value.focus();
        return;
    }

    targetForm.flag.value      = 'writeReply';
    targetForm.regitSeq.value      = regitSeq;
    targetForm.OpiReplyText.value  = thisForm.OpiReplyText.value;

    targetForm.target          = '_self';
    targetForm.method          = 'post';
    targetForm.action          = './bbsReplyDb.jsp';
    targetForm.submit();

}

//게시판 의견답글 삭제 (추가:강미경)
function opiReplyDel( opiSeq, opiSubseq, flag )
{

    var thisForm     = document.forms[0];
    var targetForm   = parent.document.forms[1];

    if( flag == 'deleteReply' )
    {
        if( confirm("삭제하시겠습니까?") )
            targetForm.action = './bbsReplyDb.jsp';
        else
            return;
    }

    targetForm.flag.value   = flag;
    targetForm.OpiSeq.value     = opiSeq;
    targetForm.OpiSubseq.value  = opiSubseq;

    targetForm.target       = '_self';
    targetForm.method       = 'post';
    targetForm.submit();

}

function openQNA()
{
 window.open( '/UFWeb/q&a/bbsQ&AList.jsp', 'openQNA',
              'vscrollbars=yes,menubar=no,toolbar=no,resizable=no,scrollbars=yes,copyhistory=no,width=850,height=550,top=50,left=100' );

}



String.prototype.trim = function()
{
  return this.replace(/(^\s*)|(\s*$)/gi, "");
}

String.prototype.replaceAll = function(str1, str2)
{
  var temp_str = "";

  if (this.trim() != "" && str1 != str2)
  {
    temp_str = this.trim();

    while (temp_str.indexOf(str1) > -1)
    {
      temp_str = temp_str.replace(str1, str2);
    }
  }

  return temp_str;
}


function getCookie(name) {
    var Found = false;
    var start, end;
    var i = 0 ;
    // cookie 문자열 전체를 검색
    while(i <= document.cookie.length) {
        start = i;
        end = start + name.length;
        // name과 동일한 문자가 있다면
        if(document.cookie.substring(start, end) == name) {
        Found = true;
        break;
        }
        i++;
        }
        // name 문자열을 cookie에서 찾았다면
        if(Found == true) {
        start = end + 1;
        end = document.cookie.indexOf(";", start);
        // 마지막 부분이라는 것을 의미(마지막에는 ";"가 없다)
        if(end < start)
        end = document.cookie.length;
        // name에 해당하는 value값을 추출하여 리턴한다.
        return document.cookie.substring(start, end);
        }
        // 찾지 못했다면
        return "";
}



function goIWhitePaper()
{
 window.open( 'http://www.kspo.or.kr/ebook/ibook/index.html', 'iWhitePaper',
              'vscrollbars=yes,menubar=no,toolbar=no,resizable=no,scrollbars=yes,copyhistory=no,width=850,height=550,top=50,left=100' );

}

function saveMenuHit( menu )
{
/*
    if( document.nullForm != null )
    {
        var thisForm     = document.nullForm;
    
        thisForm.action         = '/UFWeb/public/script/menuHit.jsp?menu='+menu;
        thisForm.target         = '_self';
        thisForm.method         = 'post';
        thisForm.submit();
        //history.back();
    }
*/
}

// sms 보내기 popup 추가 leejh 20080107
function goSms()
{
    saveMenuHit('sms');
    window.open("../phone/smsPhone.jsp", "sms",
                    "toolbar=no,location=no,directories=yes,status=yes,height=500,width=800,menubar=no,scrollbars=yes,resizable=yes,top=0,left=0");
}


// 입력박스에 날짜를 넣기 관련
function selectAllTextCalendar(name)
{
    name.value = name.value.replace(/\.|\-/g, "" );
    //name.value = name.value.replaceAll("/./g", "" );
    
    name.select();
}
// 날짜에 . 추가
function setCalendar(name, del)
{
    name.value = name.value.replace(/\.|\-/g, "" );
    
    if( name.value.length == 8 )
    {
        if( isDateFormat(name) )
        {
            name.value = name.value.substring(0,4) + del + name.value.substring(4,6) + del + name.value.substring(6,8);
            
        }
        else
        {
            alert("날짜 입력이 잘못되었습니다.(예: 20120101)");
            name.focus();
        }
    }
}


//컴포넌트의 값을 리턴한다.
//컴포넌트의 타입이 select-multiple일 경우에는 값배열을 리턴한다.
//obj: event 객체이거나 폼 구성요소
function getField(obj) {
    //viewObj(obj)
    if (typeof(obj.cancelBubble) != "undefined") {
        gIsEvent = true
        return obj.srcElement;
    }
    else {
        gIsEvent = false
        return obj
    }
}


//필드의 값을 얻어낸다.
function getValue(obj) {
    //viewObj(obj)

    var fld = getField(obj);
    //doSelection(fld);


    var myValue = null;
    switch (fld.type) {
        case "text" :
        case "password" :
        case "textarea" :
        case "file" :
        case "hidden" :
            myValue = fld.value;
            break;
        case "select-one" :
            myValue = fld.options[fld.selectedIndex].value;
            break;
        case "select-multiple" :
            dmbAlert("select-multiple 타입에 대한 getValue는 구현되어 있지 않습니다.\n필요하다면 기술지원팀에 말씀해주세요.")
            myValue = new Array();
            for (var idx=0; idx<fld.options.length; idx++) {
                if (fld.options[idx].selected) {
                    myValue += gDELIM + fld.options[idx].value;
                }
            }
            break;
        case "radio" :  case "checkbox" :
            if (fld.checked) {
                myValue = fld.value;
            }
            break;
    }



    return myValue;
}



// 날짜 체크
function isDateFormat(obj) {
    var fld = getField(obj)
    var input = getValue(fld)

    if (input == '') {
        return;
    }

    //update: 13월도 입력이 통과됨
    var re = /\b((19|20|99)\d{2})(1[0-2]|0?[1-9])(0?[1-9]|[12][0-9]|3[01])/

    if (!re.test(input)) {
        return false;
    }

    var year    = input.substring(0,4);
    var month   = input.substring(4,6);
    var day     = input.substring(6,8);

    var inMonths = new Array(31,28,31,30,31,30,31,31,30,31,30,31);

    var isDay ;
    isDay    = (month !=2 ) ? inMonths[month-1] : ((year%4 == 0 && year%100 !=0 || year%400 ==0) ? 29:28);

    if(month > 12 || month < 1 || day < 1 || day > isDay)
    {
        return false;
    }

    return true;
}


function getXMLHttpRequest()
{
    if( window.ActiveXObject)
    {
        try
        {
            return new ActiveXObject("MSXML2.XMLHTTP");
        }
        catch(e)
        {
            try
            {
                return new ActiveXObject("Microsoft.XMLHTTP");
            }
            catch(e1)
            {
                return null;
            }
        }
    }
    else if( window.XMLHttpRequest)
    {
        return new XMLHttpRequest();
    }

    return null;
}


// 첨부 파일 다운로드 (여러개)
function downloadAttFiles( att_paths )
{
    var thisForm = document.forms[0];
    //var nUserSvcGroup = thisForm.nUserSvcGroup.value;
    var alertMsg1   = "첨부된 파일이 없습니다";
    var alertMsg2   = "파일을 저장 하시려면 [확인] 버튼을 클릭하세요!";
    /*
    if(nUserSvcGroup == 1)
    {
        alertMsg1   = "There is no attached file";
        alertMsg2   = "Knowledge and Suggest does not save attachments.\nPlease click the [confirm] button when attempting to save the file.";  
    }
    */
    var splitValue = att_paths.split(';');
    
    if( splitValue == '' || splitValue.length-1 == 0 )
    {
        alert(alertMsg1);
    }
    else
    { 
        //if( confirm(alertMsg2) )    
            DoDownload( att_paths );
    }      
}

// 2006-12-17 7:53오전 일괄 다운로드 기능 추가 김남훈
function DoDownload(strServerFileList)
{
    var thisForm = document.forms[0];
    //var nUserSvcGroup = thisForm.nUserSvcGroup.value;
    var alertMsg1     = "파일매니저 업그레이드가 필요합니다.\n\nC:\\에 저장하시겠습니까?";
    var alertMsg2   = "성공적으로 저장하였습니다.(";
    var alertMsg3   = "건)\n\n저장 경로 : ";
    var alertMsg4   = "저장실패";
    
    /*
    if(nUserSvcGroup == 1)
    {
        alertMsg1       = "File manager upgrade is needed. Will you save at C:\\ ";
        alertMsg2   = "Successfully saved.(";
        alertMsg3   = "items)\n\n saved path : ";
        alertMsg4   = "Failure of saving.";
    }
    */
    
    var arrFileList = strServerFileList.split(";");
    var strFileList="";
    for(var nIndex=0; nIndex < arrFileList.length -1 ; nIndex++ )
    {
        strFileList += "<LOCALPATH>" + arrFileList[nIndex].get_fname("/").cut8Digit()    + ";";
    }
    
    var strLocalPath="c:";
    try{
        strLocalPath = ActiveFileMgr.GetSelectedFolder("");
        //alert(strLocalPath);
    }catch(e)
    {
        /*
        if(confirm(alertMsg1)==false)
            return;
        strLocalPath="c:";
        */
        alert('오류가 발생되었습니다. 다시 시도해 주십시오.');
        return;
    }
    
    
    // 폴더를 선택하지 않은 경우
    if( strLocalPath.trim() == "" ) return;
    
    
    var strDownPathList = strFileList.replace(/<LOCALPATH>/gi,strLocalPath+"\\");
    
    // 파일 중복여부 확인
    if( IsExistFile(strDownPathList) == false ) return;
    
    // 다운로드된 첨부 파일들을 ActiveFileMgr에 선택된 파일로 등록한다.
    ActiveFileMgr.AddFiles( strDownPathList, strDownPathList );
    
    // 서버 상의 첨부 파일들을 클라이언트로 다운로드 받는다.
    try{
        if(ActiveFileMgr.RecvFilesFromServer( strServerFileList, strDownPathList,true))
            //alert(alertMsg2 + (strDownPathList.split(";").length-1) +alertMsg3 + strLocalPath);
            alert(alertMsg2 + (strDownPathList.split(";").length-1) + '건)' );
        else
            alert(alertMsg4);
    }
    catch(e){
        if(ActiveFileMgr.RecvFilesFromServer( strServerFileList, strDownPathList))
            alert(alertMsg2 + (strDownPathList.split(";").length-1) + alertMsg3 + strLocalPath);
        else
            alert(alertMsg4);
    }
}

// 파일 중복 체크
function IsExistFile(strLocalPath)
{
    var thisForm = document.forms[0];
    //var nUserSvcGroup = thisForm.nUserSvcGroup.value;
    var alertMsg1   = "해당 경로에 다음 파일이 이미 존재합니다.\n\n파일경로 : ";
    var alertMsg2   = "덮어 쓰려면 확인을 누르세요.";
    /*
    if(nUserSvcGroup == 1)
    {
      alertMsg1 = "The following file already exists in the corresponding path. \n\n File Path : ";
      alertMsg2 = "Press enter the OK button if attempting to update. ";
    }
    */
        
    var arrLocalPath=strLocalPath.split(';');
    var strDupList ="";
    for(var idx=0; idx < arrLocalPath.length-1 ; idx++)
    {
        if( ActiveFileMgr.IsExistFile(arrLocalPath[idx]) == true )
            strDupList+= arrLocalPath[idx] + "\n\t ";
    }
    
    if( strDupList != "" )
        return confirm(alertMsg1 + strDupList + alertMsg2);
    
    return true;
    
}
// by kim nam hoon 2006-12-15 1:26오전 
String.prototype.cut8Digit = function()
{

    //condition One.
    // Check length
    if( this.length < 10 ) return this;
    
    //condition Two.
    if( this.substr(8,1) != "-" ) return this;

    var strCheck = this.substr(0,8);
    var nCheck   = parseInt(strCheck,16);

    if( isNaN(nCheck)== true ) return this;    
    if( nCheck < 0 ) return this;
    //if( nCheck > 4294967295 ) return this;
        
    return this.substr(9);
}

// by kim nam hoon 2006-12-15 1:26오전 
String.prototype.get_fname = function(seperator)
{
    var return_str="";
    
    try{
        var arrTemp    = this.split(seperator);
        var len=arrTemp.length;
        
        return_str = arrTemp[len-1];;
        
    }
    catch(e1)
    {
        return_str = this;
    }   
    return return_str;
}


// 첨부파일 일괄 저장
function saveAttFiles()
{
    var thisForm = document.forms[0];
    
    var att_paths = '';

    if( thisForm.listChk == null )
        return;

    var Tcount   = thisForm.listChk.length;  // 총 리스트 건수

    var totalCnt = 0;  // 체크된 총 항목 수

    if( ( Tcount == 'undefined' || Tcount == null || Tcount == ''  || Tcount == 'null' )
        && thisForm.listChk.checked == true )
    {
        totalCnt = 1;
        att_paths = thisForm.listChk.value+";";
    }
    else
    {
        for( var i=0; i<thisForm.listChk.length; i++ )
        {
            if( thisForm.listChk[i].checked == true )
            {
                totalCnt++;
                
                att_paths += thisForm.listChk[i].value + ";";
            }
        }
    }

    // 선택된 항목이 없으면 경고창
    if( totalCnt == 0 )
    {
        alert("선택된 항목이 없습니다. \n\n먼저 항목을 선택하여 주십시요.");
        return;
    }
    else
    {
        //alert(att_paths);
        downloadAttFiles(att_paths);
    }
}  

function smartFileDownload(docYearmon, docNumber, attSeqno, fileFlag) {
	var openPage = "http://jupiter.kspo.or.kr/UFWeb/app/smartEditor/smartFileDownload.jsp?docYearmon="+docYearmon+"&docNumber="+docNumber+"&attSeqno="+attSeqno+"&fileFlag="+fileFlag;
    var inputs ='<input type="hidden" name="filename" value="'+ openPage +'" />';
    jQuery('<form action="'+ openPage +'" method="post">'+inputs+'</form>').appendTo('body').submit().remove();                 
}
