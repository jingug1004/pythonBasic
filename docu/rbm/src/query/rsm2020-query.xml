<?xml version="1.0" encoding='EUC-KR'?>

<queryMap desc="RSM2020(경정개최결과)">

	<query id="rsm2020_s01" desc="경주일 정보" fetchSize="10">
        <![CDATA[
        	SELECT	/* rsm2020_s01 */
        		AA.MEET_CD,      -- 경륜장코드              
		        AA.STND_YEAR,    -- 기준년도    
		        AA.TMS,          -- 회차
		        AA.DAY_ORD,      -- 일차
		        TO_CHAR(TO_DATE(AA.RACE_DAY,'YYYYMMDD'),'YYYY-MM-DD') AS RACE_DAY, -- 경주일 
		        AA.RACE_YOIL,    -- 요일       
		        TO_CHAR(TO_DATE(AA.RACE_DAY,'YYYYMMDD'),'YYYY')||'년 '||AA.TMS||'회차 '||AA.DAY_ORD||'일차 ('|| TO_CHAR(TO_DATE(AA.RACE_DAY,'YYYYMMDD'),'YYYY-MM-DD')||') 경주 개최 결과'  
		        AS RACE_DAY_INFO  -- 경주일 정보                                                      
			 
			   FROM (        	
	           SELECT                              
				        MEET_CD,      -- 경륜장코드              
				        STND_YEAR,    -- 기준년도    
				        TMS,          -- 회차
				        DAY_ORD,      -- 일차
				        RACE_DAY,     -- 경주일          
				        RACE_YOIL,    -- 요일
				        DECODE(RACE_YOIL,'MON','월','TUE','화','WED','수','THE','목','FRI','금','SAT','토','SUN','일','일') AS RACE_YOIL_KOR, -- 요일 
				        TO_CHAR(TO_DATE(RACE_DAY,'YYYYMMDD'),'YYYY-MM-DD')||
				        ' ('||RACE_YOIL||') '||TMS||'회차 '||DAY_ORD||'일차'  
				        AS RACE_INFO  -- 경주 정보                                 
				 FROM                                
				        VW_SDL_INFO      -- 경주일 정보            
				 WHERE  1=1                             
				        AND MEET_CD = '003'		-- 경주 구분 코드 
					      AND STND_YEAR = ? 	-- 기준년도
					      AND TMS= ? 			-- 회차
					      AND DAY_ORD = ?       -- 일차
			)AA
				         
        ]]>
    </query>

	<query id="rsm2020_s02" desc="전년대비 비교" fetchSize="10">
        <![CDATA[
			SELECT	/* rsm2020_s02 */                                                                                         
			          MST.GBN       -- 매출총액 전년대비 구분                                                                       
			        , YEAR.DIV_TOTAL AS YEAR_TOTAL	--   전체누계                                        
			        , YEAR.REFUND    AS YEAR_REFUND -- 환불누계                                         
			        , TMS.D_1	-- 일요일                                                                               
			        , TMS.D_2   -- 월요일 (데이터 없음)                                                 
			        , TMS.D_3   -- 화요일                                                
			        , TMS.D_4   -- 수요일
			        , TMS.D_5   -- 목요일                                                                    
			        , TMS.D_6   -- 금요일  (데이터 없음)                                                
			        , TMS.D_7   -- 토요일 (데이터 없음)                                                                           
			        , TMS.TOTAL -- 당회차 합계                                                                             
			        , PRE.TOTAL AS PRE_TOTAL	-- 전회                                            
			        , NVL(TMS.TOTAL, 0) - NVL(PRE .TOTAL, 0) ADD_POOL	-- 증감                                       
			        , CASE WHEN (NVL(PRE.TOTAL, 0) = 0) AND (NVL(TMS.TOTAL, 0) = 0) THEN 0                  
			               WHEN NVL(PRE.TOTAL, 0) = 0                               THEN 100                
			               WHEN NVL(TMS.TOTAL, 0) = 0                               THEN -100              
			               ELSE ROUND((NVL(TMS.TOTAL, 0) - NVL(PRE.TOTAL, 0)) / NVL(PRE.TOTAL, 0) * 100, 2) 
			          END ADD_RATE	-- 증감율                                                                          
			 FROM                                                                                           
			          (                                                                                     
			             SELECT                                                                             
			                      ? STND_YEAR                                                      
			                    , '매출총액' GBN                                                            
			             FROM   DUAL                                                                        
			          ) MST                                                                                 
			        , (                                                                                     
			             SELECT                                                                             
			                      TMS.STND_YEAR                                                             
			                    , MIN(DECODE(TMS.D, 1, TMS.AMOUNT)) D_1                                     
			                    , MIN(DECODE(TMS.D, 2, TMS.AMOUNT)) D_2                                     
			                    , MIN(DECODE(TMS.D, 3, TMS.AMOUNT)) D_3                                     
			                    , MIN(DECODE(TMS.D, 4, TMS.AMOUNT)) D_4                                     
			                    , MIN(DECODE(TMS.D, 5, TMS.AMOUNT)) D_5                                     
			                    , MIN(DECODE(TMS.D, 6, TMS.AMOUNT)) D_6                                     
			                    , MIN(DECODE(TMS.D, 7, TMS.AMOUNT)) D_7                                     
			                    , SUM(TMS.AMOUNT)                   TOTAL                                   
			             FROM   (                                                                           
			                         SELECT                                                                 
			                                  TSP.STND_YEAR                                                 
			                                , TO_CHAR(TO_DATE(INFO.RACE_DAY, 'YYYYMMDD'), 'D') D            
			                                , SUM(TSP.POOL_TOTAL) AMOUNT                                    
			                         FROM     VW_SDL_INFO INFO                                              
			                                , VW_SDL_PT       TSP                                         
			                         WHERE  1=1
			                         AND    INFO.STND_YEAR = TSP.STND_YEAR                                  
			                         AND    INFO.MEET_CD    = TSP.MEET_CD                                   
			                         AND    INFO.TMS       = TSP.TMS                                        
			                         AND    INFO.DAY_ORD   = TSP.DAY_ORD                                    
			                         AND    TSP.STND_YEAR  = ?		-- 기준년도                                     
			                         AND    TSP.MEET_CD    = ?      -- 경주구분 코드                       
			                         AND    TSP.TMS        = ?      -- 회차                        
			                         GROUP BY                                                               
			                                  TSP.STND_YEAR                                                 
			                                , INFO.RACE_DAY                                                 
			                    ) TMS                                                                       
			             GROUP BY TMS.STND_YEAR                                                             
			          ) TMS                                                                                 
			        , (                                                                                     
			             SELECT                                                                             
			                      STND_YEAR                                                                 
			                    , SUM(TSP.DIV_TOTAL) DIV_TOTAL                                              
			                    , SUM(TSP.REFUND    ) REFUND                                                
			             FROM   VW_SDL_DT_SUM       TSP                                                       
			             WHERE  TSP.STND_YEAR  = ?                                                 
			             AND    TSP.MEET_CD    = ?                                                   
			             AND    TSP.TMS       <= ?                                                       
			             GROUP BY                                                                           
			                      STND_YEAR                                                                 
			          ) YEAR                                                                                
			        , (                                                                                     
			             SELECT                                                                             
			                      STND_YEAR                                                                 
			                    , TMS                                                                       
			                    , NVL(SUM(TSP.POOL_TOTAL), 0)  TOTAL                                        
			             FROM   VW_SDL_PT       TSP                                                       
			             WHERE  1=1
			             AND	TSP.STND_YEAR  = ?
			             AND    TSP.MEET_CD    = ?                                                   
			             AND    TSP.TMS        = ? - 1                                                   
			             GROUP BY                                                                           
			                      STND_YEAR                                                                 
			                    , TMS                                                                       
			          ) PRE                                                                                 
			 WHERE  1=1
			 AND   MST.STND_YEAR = TMS .STND_YEAR(+)                                                       
			 AND    MST.STND_YEAR = YEAR.STND_YEAR(+)                                                       
			 AND    MST.STND_YEAR = PRE .STND_YEAR(+)                                                       
			 UNION ALL                                                                                      
			 SELECT                                                                                         
			          MST.GBN                                                                               
			        , YEAR.DIV_TOTAL                   YEAR_TOTAL                                           
			        , YEAR.REFUND                      YEAR_REFUND                                          
			        , TMS.D_1                                                                               
			        , TMS.D_2                                                                               
			        , TMS.D_3                                                                               
			        , TMS.D_4                                                                               
			        , TMS.D_5                                                                               
			        , TMS.D_6                                                                               
			        , TMS.D_7                                                                               
			        , TMS.TOTAL                                                                             
			        , 0 PRE_TOTAL                                                                           
			        , NVL(PRE .TOTAL, 0) - NVL(TMS.TOTAL, 0) ADD_POOL                                       
			        , CASE WHEN (NVL(PRE.TOTAL, 0) = 0) AND (NVL(TMS.TOTAL, 0) = 0) THEN 0                  
			               WHEN NVL(PRE.TOTAL, 0) = 0                               THEN -100               
			               WHEN NVL(TMS.TOTAL, 0) = 0                                THEN 100               
			               ELSE ROUND((NVL(PRE.TOTAL, 0) - NVL(TMS.TOTAL, 0)) / NVL(TMS.TOTAL, 0) * 100, 2) 
			          END ADD_RATE                                                                          
			 FROM                                                                                           
			          (                                                                                     
			             SELECT                                                                             
			                      ? -1 STND_YEAR                                                    
			                    , '전년대비' GBN                                                            
			             FROM   DUAL                                                                        
			          ) MST                                                                                 
			        , (                                                                                     
			             SELECT                                                                             
			                      TMS.STND_YEAR                                                             
			                    , MIN(DECODE(TMS.D, 1, TMS.AMOUNT)) D_1                                     
			                    , MIN(DECODE(TMS.D, 2, TMS.AMOUNT)) D_2                                     
			                    , MIN(DECODE(TMS.D, 3, TMS.AMOUNT)) D_3                                     
			                    , MIN(DECODE(TMS.D, 4, TMS.AMOUNT)) D_4                                     
			                    , MIN(DECODE(TMS.D, 5, TMS.AMOUNT)) D_5                                     
			                    , MIN(DECODE(TMS.D, 6, TMS.AMOUNT)) D_6                                     
			                    , MIN(DECODE(TMS.D, 7, TMS.AMOUNT)) D_7                                     
			                    , SUM(TMS.AMOUNT)                   TOTAL                                   
			             FROM   (                                                                           
			                         SELECT                                                                 
			                                  TSP.STND_YEAR                                                 
			                                , TO_CHAR(TO_DATE(INFO.RACE_DAY, 'YYYYMMDD'), 'D') D            
			                                , SUM(TSP.POOL_TOTAL) AMOUNT                                    
			                         FROM     VW_SDL_INFO INFO                                              
			                                , VW_SDL_PT       TSP                                         
			                         WHERE  1=1
			                         AND 	INFO.STND_YEAR = TSP.STND_YEAR                                  
			                         AND    INFO.MEET_CD    = TSP.MEET_CD                                   
			                         AND    INFO.TMS       = TSP.TMS                                        
			                         AND    INFO.DAY_ORD   = TSP.DAY_ORD                                    
			                         AND    TSP.STND_YEAR  =  ? -1                                   
			                         AND    TSP.MEET_CD    = ?                                       
			                         AND    TSP.TMS        = ?                                           
			                         GROUP BY                                                               
			                                  TSP.STND_YEAR                                                 
			                                , INFO.RACE_DAY                                                 
			                    ) TMS                                                                       
			             GROUP BY TMS.STND_YEAR                                                             
			          ) TMS                                                                                 
			        , (                                                                                     
			             SELECT                                                                             
			                      STND_YEAR                                                                 
			                    , SUM(TSP.DIV_TOTAL) DIV_TOTAL                                              
			                    , SUM(TSP.REFUND    ) REFUND                                                
			             FROM   VW_SDL_DT_SUM       TSP                                                       
			             WHERE  1=1
			             AND	TSP.STND_YEAR  = ? -1                                               
			             AND    TSP.MEET_CD    = ?                                                   
			             AND    TSP.TMS       <= ?                                                       
			             GROUP BY                                                                           
			                      STND_YEAR                                                                 
			          ) YEAR                                                                                
			        , (                                                                                     
			             SELECT                                                                             
			                      STND_YEAR-1 STND_YEAR                                                     
			                    , TMS                                                                       
			                    , NVL(SUM(TSP.POOL_TOTAL), 0)  TOTAL                                        
			             FROM   VW_SDL_PT       TSP                                                       
			             WHERE  1=1
			             AND	TSP.STND_YEAR  = ?                                                 
			             AND    TSP.MEET_CD    = ?                                                   
			             AND    TSP.TMS        = ?                                                       
			             GROUP BY                                                                           
			                      STND_YEAR                                                                 
			                    , TMS                                                                       
			          ) PRE                                                                                 
			 WHERE  1=1
			 AND	MST.STND_YEAR = TMS.STND_YEAR(+)                                                        
			 AND    MST.STND_YEAR = YEAR.STND_YEAR(+)                                                       
			 AND    MST.STND_YEAR = PRE.STND_YEAR(+)                                                        
							         
        ]]>
    </query>
    
    
    
    <!--  경주별 매출현황  -->
    <query id="rsm2020_s03" desc="경주별 매출현황" fetchSize="10">
        <![CDATA[
        
         SELECT   /* rsm2020_s03 */                                                                                 
		     Z.RACE_NO,	-- 경주                                                                            
		     CASE                                                                                  
		         WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
		         FC_GET_RSLT_RANK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO)                
		     END RSLT_RANK,	-- 승자 번호                                                                        
		     R.RANK_1,		-- 입상선수 1                                                                             
		     R.RANK_2,		-- 입상선수 2                                                                             
		     R.RANK_3,		-- 입상선수 3                                                                             
		     CASE                                                                                  
		         WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
		         MRASYS.GET_RSLT_PAYOFF(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '001', NULL) 
		     END WIN,		-- 배당률 단승                                                                              
		     CASE                                                                                  
		         WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
		         MRASYS.GET_RSLT_PAYOFF(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '002', '1')  
		     END PLC,		-- 배당률 연승                                                                              
		     CASE                                                                                  
		         WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
		         MRASYS.GET_RSLT_PAYOFF(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '002', '2')  
		     END PLC2,		-- 배당률 연승                                                                             
		     CASE                                                                                  
		         WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
		         MRASYS.GET_RSLT_PAYOFF(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '004', NULL) 
		     END EX,		-- 배당률 복승
		     CASE                                                                                  
		         WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
		         MRASYS.GET_RSLT_PAYOFF(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '005', NULL) 
		     END QU,		-- 배당률 쌍승                                                                               
		     CASE                                                                                  
		         WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
		         MRASYS.GET_RSLT_PAYOFF(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '006', NULL) 
		     END TRI,		-- 배당률 삼복승
		     D.BONJANG_TOTAL,	-- 매출액 본장                                                                      
		     D.JIJUM_TOTAL,		-- 매출액 장외합계                                                                        
		     C.DIV_TOTAL,		-- 매출액 전체합계(실시간 자료로 변경)                                                                          
		     NVL(D.REFUND,0) REFUND,	-- 환불금액	                                                                            
		     NVL(B.B_DIV_TOTAL,0) AS B_DIV_TOTAL,				-- 전회대비 전회                                                                        
		     NVL2(D.DIV_TOTAL, NVL((C.DIV_TOTAL-B.B_DIV_TOTAL),0),0) AS PLUS_MINUS,	-- 전회대비  증감                                              
		     CASE                                                                                  
		         WHEN B.B_DIV_TOTAL<>0 AND NVL(D.DIV_TOTAL,0)<>0 THEN                                                        
		         ROUND((C.DIV_TOTAL-B.B_DIV_TOTAL)/B.B_DIV_TOTAL*100,2)                            
		         ELSE 0                                                                            
		     END RATE,			-- 전회대비  증감률
             NVL(YB.B_DIV_TOTAL,0) AS YB_DIV_TOTAL,                -- 전년동회 대비 전년                                                                        
             NVL2(D.DIV_TOTAL, NVL((C.DIV_TOTAL-YB.B_DIV_TOTAL),0),0) AS YB_PLUS_MINUS,    -- 전년동회 대비  증감                                              
             CASE                                                                                  
                 WHEN YB.B_DIV_TOTAL<>0 AND NVL(D.DIV_TOTAL,0)<>0 THEN                                                        
                 ROUND((C.DIV_TOTAL-YB.B_DIV_TOTAL)/YB.B_DIV_TOTAL*100,2)                            
                 ELSE 0                                                                            
             END YB_RATE,            -- 전년동회대비  증감률
		     SAME_PAYOFF_TOTAL,		-- 동착 존재 여부
		     SAME_PAYOFF_001, -- 단승 동착
			 SAME_PAYOFF_002, -- 연승 동착
			 SAME_PAYOFF_004, -- 쌍승 동착
			 SAME_PAYOFF_005, -- 복승 동착
			 SAME_PAYOFF_006 -- 삼복승 동착                                                                              
		 FROM   
		 	-- 매출액                                                                                                           
		     (   
		     	                                                          
		         SELECT                                                                            
		               D.MEET_CD,                                                                   
		               D.STND_YEAR,                                                                 
		               D.TMS,                                                                       
		               D.DAY_ORD,                                                                   
		               DECODE(D.RACE_NO,NULL,'TOTAL',D.RACE_NO) RACE_NO,                              
		               SUM(                                                                        
		                   CASE                                                                    
		                     WHEN D.SELL_CD='03' AND D.COMM_NO!='06' THEN D.DIV_TOTAL                                    
		                     ELSE 0                                                                
		                   END                                                                     
		               ) BONJANG_TOTAL,                                                            
		               SUM(                                                                        
		                   CASE                                                                    
		                     WHEN D.SELL_CD!='03' OR D.COMM_NO='06' THEN D.DIV_TOTAL                                     
		                   END                                                                     
		               ) JIJUM_TOTAL,                                                              
		               SUM(D.REFUND) REFUND,
		               SUM(D.DIV_TOTAL) AS DIV_TOTAL                                                         
		         FROM   VW_SDL_DT D                                                              
		         WHERE 1=1                                                                             
		             AND D.STND_YEAR(+)  = ?	-- 0:STND_YEAR
		             AND D.MEET_CD(+)    = ?	-- 1:MEET_CD
		             AND D.TMS(+)        = ?	-- 2:TMS
		             AND D.DAY_ORD(+)    = ?	-- 3:DAY_ORD
		         GROUP BY                                                                          
		               D.MEET_CD,                                                                   
		               D.STND_YEAR,                                                                 
		               D.TMS,                                                                       
		               D.DAY_ORD,                                                                   
		               ROLLUP(D.RACE_NO)                                                           
		     ) D,                                                                                  
		     (                                                                                     
		        SELECT                                                                             
		           P.MEET_CD,                                                                      
		           P.STND_YEAR,                                                                    
		           P.TMS,                                                                          
		           P.DAY_ORD,                                                                      
		           DECODE(P.RACE_NO,NULL,'TOTAL',P.RACE_NO) RACE_NO,                               
		           SUM(POOL_TOTAL) DIV_TOTAL                                                       
		        FROM                                                                               
		            VW_SDL_PT P                                                                  
		        WHERE 1=1                                                                              
		            AND P.STND_YEAR  = ?	-- 4:STND_YEAR
		            AND P.MEET_CD    = ?	-- 5:MEET_CD
		            AND P.TMS        = ?	-- 6:TMS
		            AND P.DAY_ORD    = ?	-- 7:DAY_ORD
		        GROUP BY                                                                           
		           P.MEET_CD,                                                                      
		           P.STND_YEAR,                                                                    
		           P.TMS,                                                                          
		           P.DAY_ORD,                                                                      
		           ROLLUP(P.RACE_NO)                                                               
		     ) C,                                                                                  
		     (                                                                                     
		         SELECT                                                                            
		               DECODE(RACE_NO,NULL,'TOTAL',RACE_NO) RACE_NO,                               
		               SUM(DIV_TOTAL) B_DIV_TOTAL                                                  
		         FROM   VW_SDL_DT                                                                
		         WHERE 	 (MEET_CD, STND_YEAR, TMS, DAY_ORD) IN (
                               SELECT MEET_CD, STND_YEAR, TMS, DAY_ORD
                                          FROM (
                                                      SELECT  MEET_CD, STND_YEAR, TMS, DAY_ORD, ROW_NUMBER() OVER (PARTITION BY MEET_CD ORDER BY STND_YEAR DESC, TMS DESC) AS RNUM
                                                      FROM   VW_SDL_INFO
                                                      WHERE  STND_YEAR||TRIM(TO_CHAR(TMS,'00'))||DAY_ORD <= ?||TRIM(TO_CHAR(?,'00'))||?			-- param8~
                                                      AND    MEET_CD   = ?
                                                      AND    RACE_YOIL = ?
                                                      AND    NVL('Y', 'N') = 'Y'
                                                      ORDER BY STND_YEAR DESC, TMS DESC
                                          )
                                          WHERE RNUM = 2
                              )
		         GROUP BY                                                                          
		               ROLLUP(RACE_NO)                                                             
		     ) B,                                                                                    
             (                                                                                     
                 SELECT                                                                            
                       DECODE(RACE_NO,NULL,'TOTAL',RACE_NO) RACE_NO,                               
                       SUM(DIV_TOTAL) B_DIV_TOTAL                                                  
                 FROM   TBES_SDL_DT                                                                
                 WHERE (MEET_CD, STND_YEAR, TMS, DAY_ORD) IN (
                               SELECT MEET_CD, STND_YEAR, TMS, DAY_ORD
                                          FROM (
                                                      SELECT  MEET_CD, STND_YEAR, TMS, DAY_ORD, ROW_NUMBER() OVER (PARTITION BY MEET_CD ORDER BY STND_YEAR DESC, TMS DESC) AS RNUM
                                                      FROM   VW_SDL_INFO
                                                      WHERE  STND_YEAR||TRIM(TO_CHAR(TMS,'00'))||DAY_ORD <= (? -1)||TRIM(TO_CHAR(?,'00'))||?		--param13~
                                                      AND    MEET_CD   = ?
                                                      AND    RACE_YOIL = ?
                                                      AND    NVL('Y', 'N') = 'Y'
                                                      ORDER BY STND_YEAR DESC, TMS DESC
                                          )
                                          WHERE RNUM = 1
                              )
                 GROUP BY                                                                          
                       ROLLUP(RACE_NO)                                                             
             ) YB,                                                                                   
		     (                                                                                     
		         SELECT                                                                            
		               RACE_NO                                                                     
		             , MIN(DECODE(RANK, '1', NM_KOR)) RANK_1                                       
		             , MIN(DECODE(RANK, '2', NM_KOR)) RANK_2                                       
		             , MIN(DECODE(RANK, '3', NM_KOR)) RANK_3                                       
		         FROM   (                                                                          
		                  SELECT                                                                   
		                           RACE_NO                                                         
		                         , RANK                                                            
		                         , SUBSTR(MAX(SYS_CONNECT_BY_PATH (NM_KOR, '/')), 2) NM_KOR        
		                  FROM   (                                                                 
		                              SELECT                                                       
		                                       TOR.RACE_NO                                         
		                                     , TOR.RACE_REG_NO                                     
		                                     , TOR.RACER_NO                                        
		                                     , TOR.RANK                                            
		                                     , TRM.NM_KOR                                          
		                                     , RANK() OVER (PARTITION BY TOR.RACE_NO               
		                                                               , TOR.RANK                  
		                                                        ORDER BY TOR.RACE_REG_NO) SEQ      
		                              FROM     MRASYS.TBEB_ORGAN        TOR                        
		                                     , MRASYS.TBEC_RACER_MASTER TRM                        
		                              WHERE 1=1                                                        
		                              
		                              AND    TOR.RACER_NO   = TRM.RACER_NO                         
		                              AND    TOR.STND_YEAR  = ?	-- 12:STND_YEAR
		                              AND    TOR.MBR_CD     = '001'                                
		                              AND    TOR.TMS        = ?	-- 13:TMS
		                              AND    TOR.DAY_ORD    = ?	-- 14:DAY_ORD
		                              AND    TOR.RANK BETWEEN 1                                    
		                                                  AND 3                                    
		                         )                                                                 
		                  START WITH SEQ = 1                                                       
		                  CONNECT BY PRIOR SEQ = SEQ - 1                                           
		                  AND PRIOR RACE_NO = RACE_NO AND RANK = RANK                              
		                  GROUP BY                                                                 
		                           RACE_NO                                                         
		                         , RANK                                                            
		              )                                                                            
		         GROUP BY RACE_NO                                                                  
		         UNION ALL                                                                         
		         SELECT 'TOTAL', '', '', '' FROM DUAL                                              
		     ) R, 
		     (   
		 		 -- 동착 확인용                                                                               
			     SELECT                                                                         
			        RACE_NO,
                   SUM(CASE 
                            WHEN POOL_CD = '001' AND RS_SEQ >= '2' THEN PAYOFF 
                            WHEN POOL_CD = '002' AND RS_SEQ >= '3' THEN PAYOFF 
                            WHEN POOL_CD = '004' AND RS_SEQ >= '2' THEN PAYOFF 
                            WHEN POOL_CD = '005' AND RS_SEQ >= '2' THEN PAYOFF 
                            WHEN POOL_CD = '006' AND RS_SEQ >= '2' THEN PAYOFF 
                   END) AS SAME_PAYOFF_TOTAL, -- 동착 존재 여부 확인
                                      
                   SUM(CASE WHEN POOL_CD = '001' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_001, -- 단승 동착
                   SUM(CASE WHEN POOL_CD = '002' AND RS_SEQ >= '3' THEN PAYOFF END) AS SAME_PAYOFF_002, -- 연승 동착
                   SUM(CASE WHEN POOL_CD = '004' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_004, -- 쌍승 동착
                   SUM(CASE WHEN POOL_CD = '005' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_005, -- 복승 동착
                   SUM(CASE WHEN POOL_CD = '006' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_006 -- 삼복승 동착 			                        
			    FROM TBES_SDL_RS                                                                
			    WHERE 1=1                                                                          
			        AND MEET_CD		= '003'		                                                            
			        AND STND_YEAR	= ?     -- 18:STND_YEAR 기준년도                                               
			        AND TMS			= ?     -- 19:TMS 회차                                                           
			        AND DAY_ORD		= ?     -- 20:DAY_ORD 일차                                                   
			    GROUP BY          
			    	RACE_NO                                                              

			 ) E,                                                                                  
		  (                                       
		 		SELECT DISTINCT RACE_NO           
		 		FROM MRASYS.TBEB_RACE_DOC D        
		 	   WHERE 1=1                          
		 	       AND D.STND_YEAR= ?	-- 15:STND_YEAR
		 	       AND D.TMS=?			-- 16:TMS
		  	       AND D.DAY_ORD=?		-- 17:DAY_ORD
--		  	   UNION SELECT 'TOTAL' FROM DUAL     
		 	) Z
		 	                                 
		 WHERE 1=1                                                                                    
		     AND C.RACE_NO(+)=Z.RACE_NO                                                                
		     AND B.RACE_NO(+)=Z.RACE_NO                                                             
             AND YB.RACE_NO(+)=Z.RACE_NO                                                              
		     AND R.RACE_NO(+)=Z.RACE_NO                                                            
		     AND D.RACE_NO(+)=Z.RACE_NO   
		     AND E.RACE_NO(+)=Z.RACE_NO                                                                                                                     
		 ORDER BY Z.RACE_NO                                                                        
			
			
        ]]>
    </query>
    
    
    
    <!--  입장인원 현황  -->
    <query id="rsm2020_s04" desc="입장인원 현황" fetchSize="10">
        <![CDATA[
         	SELECT /* rsm2020_s04 */
         			ROW_ORDER,
         			MANA_DESC, -- 설명
         			TOTAL        -- 전체누계
			       ,SUN_NUM     -- 일요일
			       ,TUE_NUM     -- 화요일
			       ,WEN_NUM     -- 수요일
			       ,THU_NUM     -- 목요일
			       ,TOT_PRSN_NUM,    -- 당회차 합계
			       
			       B_TOT_PRSN_NUM,          -- 전회
			       
			       CASE 
			             WHEN ROW_ORDER='2' THEN N_TOT_PRSN_NUM - TOT_PRSN_NUM
			             ELSE PRSN_NUM_MINUS
			       END PRSN_NUM_MINUS,          -- 증감
			       
				   ROUND(CASE 
			                WHEN TOT_PRSN_NUM = 0 THEN 0
			                WHEN ROW_ORDER='2' THEN (N_TOT_PRSN_NUM - TOT_PRSN_NUM)/TOT_PRSN_NUM*100
			                ELSE PER
			             END, 2) AS PER             -- 증감율
			 FROM
			(
			-- 입장인원
			SELECT '1' AS ROW_ORDER,
					'입장인원' AS MANA_DESC,
						A.TMS                                                               --경주번호
					    ,TOT_PRSN_NUM                     --총인원
					    ,MON_NUM 
			            ,TUE_NUM 
			            ,WEN_NUM 
			            ,THU_NUM 
			            ,FRI_NUM 
			            ,SAT_NUM 
			            ,SUN_NUM 
			            ,B_TOT_PRSN_NUM
			            ,(TOT_PRSN_NUM-B_TOT_PRSN_NUM) AS PRSN_NUM_MINUS
			            ,DECODE(B_TOT_PRSN_NUM,0,0,(TOT_PRSN_NUM-B_TOT_PRSN_NUM)/B_TOT_PRSN_NUM*100)  AS PER
			            ,TOTAL          
			
					FROM
					
					
					(
					
					 SELECT   MAX(TMS) TMS
					       ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
					       ,NVL(SUM(A.ENT_PRSN_NUM ),0)         TOT_PRSN_NUM                                                      --총인원
					       
					      
					      ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'2', A.ENT_PRSN_NUM,0 )) ,0) MON_NUM       --월요일
					      ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'3', A.ENT_PRSN_NUM,0 )) ,0) TUE_NUM       --화요일
					      ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'4', A.ENT_PRSN_NUM,0 )) ,0) WEN_NUM       --수요일
					      ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'5', A.ENT_PRSN_NUM,0 )) ,0) THU_NUM       --목요일
					      ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'6', A.ENT_PRSN_NUM,0 )) ,0) FRI_NUM       --금요일
					      ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'7', A.ENT_PRSN_NUM,0 )) ,0) SAT_NUM       --토요일
					      ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'1', A.ENT_PRSN_NUM,0 )) ,0) SUN_NUM       --일요일
					
					FROM
					    (SELECT
					         RACE_DT,ENT_PRSN_NUM
					        FROM 
					            VWRC_STAY_MANA_TSUM         --체류인원관리
					        WHERE 1 =1
					            AND SUBSTR(RACE_DT,0,4) =  ? -- 0:STND_YEAR 기준년도 '2011' 
					            AND MEET_CD = '003'			-- 경정 
					    )A
					  ,(
					    SELECT
					         MEET_CD
					        ,STND_YEAR
					        ,TMS
					        ,RACE_DAY
					    FROM  VW_SDL_INFO
					        WHERE 1=1
					        	AND STND_YEAR = ? -- 1:STND_YEAR 기준년도 '2011'
					            AND MEET_CD ='003'
					            AND TMS 	= ? -- 2:TMS 회차 '37'
					                        
					  )B
					WHERE  A.RACE_DT(+) = B.RACE_DAY
					GROUP BY B.TMS
					) A,
					
					-- 지난 회차
					(
					
					 SELECT   
					        MAX(TMS) TMS
					       ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
					       ,NVL(SUM(A.ENT_PRSN_NUM ),0)         B_TOT_PRSN_NUM  --총인원
					       
					FROM
					    (SELECT
					         RACE_DT,ENT_PRSN_NUM
					        FROM 
					            VWRC_STAY_MANA_TSUM         --체류인원관리
					        WHERE 1 =1
					            AND SUBSTR(RACE_DT,0,4) =  ? -- 3:STND_YEAR 기준년도 '2011'
					            AND MEET_CD = '003'			--  경정
					    )A
					  ,(
					    SELECT
					         MEET_CD
					        ,STND_YEAR
					        ,TMS
					        ,RACE_DAY
					    FROM  VW_SDL_INFO
					        WHERE 1=1
					        	AND STND_YEAR = ? 		-- 4:STND_YEAR 기준년도 '2011'
					            AND MEET_CD ='003'
					            AND TMS		= ? - 1 		-- 5:TMS 지난 회차 '36'
					                        
					  )B
					WHERE  A.RACE_DT(+) = B.RACE_DAY
					GROUP BY B.TMS
					) B,
					-- 전체 합계
					(
					
					 SELECT NVL(SUM(A.ENT_PRSN_NUM ),0)         TOTAL  --총인원
					       
					FROM
					    (SELECT
					         RACE_DT,ENT_PRSN_NUM
					        FROM 
					            VWRC_STAY_MANA_TSUM         --체류인원관리
					        WHERE 1 =1
					            AND SUBSTR(RACE_DT,0,4)	= ? -- 6:STND_YEAR 기준년도 '2011'
					            AND MEET_CD = '003'			
					    )A
					  ,(
					    SELECT
					         MEET_CD
					        ,STND_YEAR
					        ,TMS
					        ,RACE_DAY
					    FROM  VW_SDL_INFO
					        WHERE STND_YEAR = ? -- 7:STND_YEAR 기준년도 '2011' 
					            AND MEET_CD ='003'
					            AND TMS <= ?	-- 8:TMS 회차 '37'
					                        
					  )B
					WHERE  A.RACE_DT(+) = B.RACE_DAY
					)C
			UNION ALL 
			
			-- 전년대비
			SELECT '2' AS ROW_ORDER,
					'전년대비' AS MANA_DESC,
						A.TMS                                                               --경주번호
					    ,TOT_PRSN_NUM                     --총인원
					    ,MON_NUM 
			            ,TUE_NUM 
			            ,WEN_NUM 
			            ,THU_NUM 
			            ,FRI_NUM 
			            ,SAT_NUM 
			            ,SUN_NUM 
			            ,B_TOT_PRSN_NUM
			            ,(TOT_PRSN_NUM-B_TOT_PRSN_NUM) AS PRSN_NUM_MINUS
			            ,DECODE(B_TOT_PRSN_NUM,0,0,(TOT_PRSN_NUM-B_TOT_PRSN_NUM)/B_TOT_PRSN_NUM*100)  AS PER
			            ,TOT          
			
					FROM
					
					
					(
					
					 SELECT   MAX(TMS) TMS
					       ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
					       ,NVL(SUM(A.ENT_PRSN_NUM ),0)         TOT_PRSN_NUM                                                      --총인원
					       
					      
					      ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'2', A.ENT_PRSN_NUM,0 )) ,0) MON_NUM       --월요일
					      ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'3', A.ENT_PRSN_NUM,0 )) ,0) TUE_NUM       --화요일
					      ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'4', A.ENT_PRSN_NUM,0 )) ,0) WEN_NUM       --수요일
					      ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'5', A.ENT_PRSN_NUM,0 )) ,0) THU_NUM       --목요일
					      ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'6', A.ENT_PRSN_NUM,0 )) ,0) FRI_NUM       --금요일
					      ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'7', A.ENT_PRSN_NUM,0 )) ,0) SAT_NUM       --토요일
					      ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'1', A.ENT_PRSN_NUM,0 )) ,0) SUN_NUM       --일요일
					
					FROM
					    (SELECT
					         RACE_DT,ENT_PRSN_NUM
					        FROM 
					            TBRC_STAY_MANA         --체류인원관리 
					        WHERE 1 =1
					            AND SUBSTR(RACE_DT,0,4)	= ?- 1  -- 9:STND_YEAR 기준년도 '2011'
					            AND MEET_CD 			= '003' 	-- 경정
					    )A
					  ,(
					    SELECT
					         MEET_CD
					        ,STND_YEAR
					        ,TMS
					        ,RACE_DAY
					    FROM  VW_SDL_INFO
					        WHERE STND_YEAR = ? - 1  -- 10:STND_YEAR 기준년도 '2011'	
					            AND MEET_CD ='003'	-- 경정
					            AND TMS		= ?		 -- 11:TMS 회차 '37'
					                        
					  )B
					WHERE  A.RACE_DT(+) = B.RACE_DAY
					GROUP BY B.TMS
					) A,
					
					-- 지난 회차
					(
					
					 SELECT   
					        MAX(TMS) TMS
					       ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
					       ,NVL(SUM(A.ENT_PRSN_NUM ),0)         B_TOT_PRSN_NUM  --총인원
					       
					FROM
					    (SELECT
					         RACE_DT,ENT_PRSN_NUM
					        FROM 
					            VWRC_STAY_MANA_TSUM         --체류인원관리
					        WHERE 1 =1
					            AND SUBSTR(RACE_DT,0,4) = ? -1 -- 12:STND_YEAR 기준년도  '2011'
					            AND MEET_CD = '003'				-- 경정
					    )A
					  ,(
					    SELECT
					         MEET_CD
					        ,STND_YEAR
					        ,TMS
					        ,RACE_DAY
					    FROM  VW_SDL_INFO
					        WHERE STND_YEAR = ? - 1		-- 13:STND_YEAR 기준년도  '2011'
					            AND MEET_CD ='003'
					            AND TMS		= ? - 1 	-- 14:TMS 회차 36
					                        
					  )B
					WHERE  A.RACE_DT(+) = B.RACE_DAY
					GROUP BY B.TMS
					) B,
					-- 전체 합계
					(
					
					 SELECT NVL(SUM(A.ENT_PRSN_NUM ),0)         TOT  --총인원
					       
					FROM
					    (SELECT
					         RACE_DT,ENT_PRSN_NUM
					        FROM 
					            VWRC_STAY_MANA_TSUM         --체류인원관리
					        WHERE 1 =1
					            AND SUBSTR(RACE_DT,0,4)	=  ?-1 -- 15:STND_YEAR 기준년도 '2011'
					            AND MEET_CD = '003'
					    )A
					  ,(
					    SELECT
					         MEET_CD
					        ,STND_YEAR
					        ,TMS
					        ,RACE_DAY
					    FROM  VW_SDL_INFO
					        WHERE STND_YEAR = ? -1  -- 16:STND_YEAR 기준년도 '2011'
					            AND MEET_CD = '003'
					            AND TMS 	<= ? 	-- 17:TMS 회차 '37'
					                        
					  )B
					WHERE  A.RACE_DT(+) = B.RACE_DAY
					)C
			),
			(
			SELECT SUM(A.ENT_PRSN_NUM ) AS N_TOT_PRSN_NUM
                FROM 
                    VWRC_STAY_MANA_TSUM  A,       --체류인원관리
                    VW_SDL_INFO B
                WHERE 1 =1
                  AND A.RACE_DT(+) = B.RACE_DAY
                  AND B.STND_YEAR =  ? -- 18:STND_YEAR 기준년도 '2011' 
                  AND B.MEET_CD = '003'			-- 경정 
                  AND B.TMS 	= ? -- 19:TMS 회차 '37'
			)BB		
			ORDER BY MANA_DESC
							

        ]]>
    </query>
    
    


	<query id="rsm2020_s05" desc="장외 매출 현황" fetchSize="10">
        <![CDATA[
			 SELECT /* rsm2020_s05 */                                                                                     
		          DECODE(GROUPING(RACE_NO),0,RACE_NO,'TOTAL') RACE_NO	-- 경주 번호                               
		        , SUM(                                                                              
		              CASE                                                                          
		                 WHEN SELL_CD='01' AND COMM_NO='12' THEN NVL(DIV_TOTAL, 0)  
		              END                                                                           
		          ) DIV_01_07_02	-- 상봉                                                                    
		        , SUM(                                                                              
		              CASE                                                                          
		                 WHEN SELL_CD='01' AND COMM_NO='16' THEN NVL(DIV_TOTAL, 0)  
		              END                                                                           
		          ) DIV_01_07_06	-- 장안                                                                    
		        , SUM(                                                                              
		              CASE                                                                          
		                 WHEN SELL_CD='01' AND COMM_NO='22'  THEN NVL(DIV_TOTAL, 0)  
		              END                                                                           
		          ) DIV_01_07_12	-- 유성                                                                    
		        , SUM(                                                                              
		              CASE                                                                          
		                 WHEN SELL_CD='01' AND COMM_NO='20' THEN NVL(DIV_TOTAL, 0)  
		              END                                                                           
		          ) DIV_01_07_10	-- 길음                                                                    
		        , SUM(                                                                              
		              CASE                                                                          
		                 WHEN SELL_CD='01' AND COMM_NO='23' THEN NVL(DIV_TOTAL, 0)  
		              END                                                                           
		          ) DIV_01_07_13	-- 인천                                                                    
		        , SUM(                                                                              
		              CASE                                                                          
		                 WHEN SELL_CD='01' AND COMM_NO='24' THEN NVL(DIV_TOTAL, 0)  
		              END                                                                           
		          ) DIV_01_07_14	-- 시흥                                                                    
		        , SUM(                                                                              
		              CASE                                                                          
		                 WHEN SELL_CD='01' AND COMM_NO='13' THEN NVL(DIV_TOTAL, 0)  
		              END                                                                           
		          ) DIV_01_07_03	-- 일산                                                                    
		
		        , SUM(                                                                              
		              CASE                                                                          
		                 WHEN SELL_CD='01' AND COMM_NO='25'  THEN NVL(DIV_TOTAL, 0)  
		              END                                                                           
		          ) DIV_01_07_15	-- 논현                                                                    
		
		        , SUM(                                                                              
		              CASE                                                                          
		                 WHEN SELL_CD='01' AND COMM_NO='19' THEN NVL(DIV_TOTAL, 0)  
		              END                                                                           
		          ) DIV_01_07_09	-- 관악                                                                    
		
		        , SUM(                                                                              
		              CASE                                                                          
		                 WHEN SELL_CD='01' AND COMM_NO='14' THEN NVL(DIV_TOTAL, 0)  
		              END                                                                           
		          ) DIV_01_07_05	-- 분당                                                                    
		
		        , SUM(                                                                              
		              CASE                                                                          
		                 WHEN SELL_CD='01' AND COMM_NO='26' THEN NVL(DIV_TOTAL, 0)  
		              END                                                                           
		          ) DIV_01_07_16	-- 천안                                                                    
		        , SUM(                                                                              
		              CASE                                                                          
		                 WHEN SELL_CD='01' AND COMM_NO='27' THEN NVL(DIV_TOTAL, 0)  
		              END                                                                           
		          ) DIV_01_07_17	-- 올림픽공원                                                                    
		        , SUM(                                                                              
		              CASE                                                                          
		                 WHEN COMM_NO='06'  THEN NVL(DIV_TOTAL, 0)                                  
		                 ELSE 0                                                                     
		              END                                                                           
		          ) DIV_01_06_01	-- 계좌                                                                    
		        , SUM(                                                                              
		              CASE                                                                          
		                 WHEN SELL_CD='01' AND COMM_NO='28' THEN NVL(DIV_TOTAL, 0) 
		                 ELSE 0                                                                     
		              END                                                                           
		          ) DIV_01_07_18	-- 의정부                                                                                                                                        
		        , SUM(                                                                              
		              CASE                                                                          
		                 WHEN SUBSTR(MEET_CD,2,2)!=SELL_CD AND SELL_CD IN ('01','03') AND COMM_NO<'11' AND COMM_NO != '06' THEN NVL(DIV_TOTAL, 0)  
		                 ELSE 0                                                                     
		              END                                                                           
		          ) DIV_01_07_00	-- 공동활용본장                                                                                                                                        
		        , SUM(                                                                              
		              CASE                                                                          
		                 WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
		                 ELSE 0                                                                     
		              END                                                                           
		          ) DIV_04_07_01	-- 광복                                                                    
		        , SUM(                                                                              
		              CASE                                                                          
		                 WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='02' THEN NVL(DIV_TOTAL, 0)  
		                 ELSE 0                                                                     
		              END                                                                           
		          ) DIV_04_07_02	-- 서면   
		          
		        , SUM(                                                                              
                      CASE                                                                          
                         WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='03' THEN NVL(DIV_TOTAL, 0)  
                         ELSE 0                                                                     
                      END                                                                           
                  ) DIV_04_07_03    -- 부산본장                                                              
		        , SUM(                                                                              
		              CASE                                                                          
		                 WHEN SELL_CD='02' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
		                 ELSE 0                                                                     
		              END                                                                           
		          ) DIV_02_07_01	-- 창원본장         
		        , SUM(                                                                              
		              CASE                                                                          
		                 WHEN SELL_CD='02' AND COMM_NO='07' AND DIV_NO='02' THEN NVL(DIV_TOTAL, 0)  
		                 ELSE 0                                                                     
		              END                                                                           
		          ) DIV_02_07_02	-- 김해                                                                                                               
		        , SUM(                                                                              
		              CASE                                                                          
		                 WHEN  SUBSTR(MEET_CD,2,2)=SELL_CD AND COMM_NO < '11' AND COMM_NO!='06' THEN 0 
                         ELSE NVL(DIV_TOTAL, 0)                                                                        
		              END                                                                           
		          ) DIV_JIJUM		-- 장외합계                                                                    
		        , SUM(DIV_TOTAL) DIV_TOTAL                                                          
		 FROM   VW_SDL_DT                                                                         
		 WHERE   1=1                                                                                   
		         AND STND_YEAR  = ?                                                            
		         AND    MEET_CD = ?                                                       
		         AND    TMS     = ?                                                           
		         AND    DAY_ORD = ?
		 GROUP BY RACE_NO                                                                                   
		          -- ROLLUP(RACE_NO) -- 최종 레코드의  TOTAL, SUM 생성용                                                                         
		 ORDER BY RACE_NO                                                                                                                                   
							         
        ]]>
    </query>
    
    
    <query id="rsm2020_s06" desc="장외 전회 매출 현황" fetchSize="10">
        <![CDATA[
			  SELECT	/* rsm2020_s06 */                                                                                     
			        SUM(                                                                              
		              CASE                                                                          
		                 WHEN SELL_CD='01' AND COMM_NO='12' THEN NVL(DIV_TOTAL, 0)  
		              END                                                                           
			          ) DIV_01_07_02	-- 상봉                                                                    
			        , SUM(                                                                              
			              CASE                                                                          
			                 WHEN SELL_CD='01' AND COMM_NO='16' THEN NVL(DIV_TOTAL, 0)  
			              END                                                                           
			          ) DIV_01_07_06	-- 장안                                                                    
			        , SUM(                                                                              
			              CASE                                                                          
			                 WHEN SELL_CD='01' AND COMM_NO='22'  THEN NVL(DIV_TOTAL, 0)  
			              END                                                                           
			          ) DIV_01_07_12	-- 유성                                                                    
			        , SUM(                                                                              
			              CASE                                                                          
			                 WHEN SELL_CD='01' AND COMM_NO='20' THEN NVL(DIV_TOTAL, 0)  
			              END                                                                           
			          ) DIV_01_07_10	-- 길음                                                                    
			        , SUM(                                                                              
			              CASE                                                                          
			                 WHEN SELL_CD='01' AND COMM_NO='23' THEN NVL(DIV_TOTAL, 0)  
			              END                                                                           
			          ) DIV_01_07_13	-- 인천                                                                    
			        , SUM(                                                                              
			              CASE                                                                          
			                 WHEN SELL_CD='01' AND COMM_NO='24' THEN NVL(DIV_TOTAL, 0)  
			              END                                                                           
			          ) DIV_01_07_14	-- 시흥                                                                    
			        , SUM(                                                                              
			              CASE                                                                          
			                 WHEN SELL_CD='01' AND COMM_NO='13' THEN NVL(DIV_TOTAL, 0)  
			              END                                                                           
			          ) DIV_01_07_03	-- 일산                                                                    
			
			        , SUM(                                                                              
			              CASE                                                                          
			                 WHEN SELL_CD='01' AND COMM_NO='25'  THEN NVL(DIV_TOTAL, 0)  
			              END                                                                           
			          ) DIV_01_07_15	-- 논현                                                                    
			
			        , SUM(                                                                              
			              CASE                                                                          
			                 WHEN SELL_CD='01' AND COMM_NO='19' THEN NVL(DIV_TOTAL, 0)  
			              END                                                                           
			          ) DIV_01_07_09	-- 관악                                                                    
			
			        , SUM(                                                                              
			              CASE                                                                          
			                 WHEN SELL_CD='01' AND COMM_NO='14' THEN NVL(DIV_TOTAL, 0)  
			              END                                                                           
			          ) DIV_01_07_05	-- 분당                                                                    
			
			        , SUM(                                                                              
			              CASE                                                                          
			                 WHEN SELL_CD='01' AND COMM_NO='26' THEN NVL(DIV_TOTAL, 0)  
			              END                                                                           
			          ) DIV_01_07_16	-- 천안                                                                    
			        , SUM(                                                                              
			              CASE                                                                          
			                 WHEN SELL_CD='01' AND COMM_NO='27' THEN NVL(DIV_TOTAL, 0)  
			              END                                                                           
			          ) DIV_01_07_17	-- 올림픽공원                                                                    
			        , SUM(                                                                              
			              CASE                                                                          
			                 WHEN SELL_CD='01' AND COMM_NO='28' THEN NVL(DIV_TOTAL, 0) 
			                 ELSE 0                                                                     
			              END                                                                           
			          ) DIV_01_07_18	-- 의정부                                                                                                                                        
				    , SUM(                                                                              
				              CASE                                                                          
				                 WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
				                 ELSE 0                                                                     
				              END                                                                           
				          ) DIV_04_07_01	-- 광복                                                                    
				    ,SUM(                                                                              
			              CASE                                                                          
			                 WHEN SUBSTR(MEET_CD,2,2)!=SELL_CD AND SELL_CD IN ('01','03') AND COMM_NO<'11' AND COMM_NO != '06' THEN NVL(DIV_TOTAL, 0)  
			                 ELSE 0                                                                     
			              END                                                                           
			          ) DIV_01_07_00	-- 공동활용본장                                                                                                                                        
			       	, SUM(                                                                              
			              CASE                                                                          
			                 WHEN COMM_NO='06'  THEN NVL(DIV_TOTAL, 0)                                  
			                 ELSE 0                                                                     
			              END                                                                           
			          ) DIV_01_06_01	-- 계좌                                                                    
			        ,  SUM(                                                                              
			              CASE                                                                          
			                 WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='02' THEN NVL(DIV_TOTAL, 0)  
			                 ELSE 0                                                                     
			              END                                                                           
			          ) DIV_04_07_02	-- 서면
			          
			        , SUM(                                                                              
                          CASE                                                                          
                             WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='03' THEN NVL(DIV_TOTAL, 0)  
                             ELSE 0                                                                     
                          END                                                                           
                      ) DIV_04_07_03    -- 부산본장   
                    , SUM(                                                                              
			              CASE                                                                          
			                 WHEN SELL_CD='02' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
			                 ELSE 0                                                                     
			              END                                                                           
			          ) DIV_02_07_01	-- 창원본장                                                                           
			        , SUM(                                                                              
			              CASE                                                                          
			                 WHEN SELL_CD='02' AND COMM_NO='07' AND DIV_NO='02' THEN NVL(DIV_TOTAL, 0)  
			                 ELSE 0                                                                     
			              END                                                                           
			          ) DIV_02_07_02	-- 김해                                                                     
			
			        , SUM(                                                                              
		              CASE                                                                          
		                 WHEN  SUBSTR(MEET_CD,2,2)=SELL_CD AND COMM_NO < '11' AND COMM_NO!='06' THEN 0 
                         ELSE NVL(DIV_TOTAL, 0)                                                                        
		              END                                                                           
			          ) DIV_JIJUM		-- 장외합계                                                                    
			        , SUM(DIV_TOTAL) DIV_TOTAL                                                          
			 FROM   VW_SDL_DT_SUM                                                                         
			 WHERE 1=1        
			 AND (MEET_CD, STND_YEAR, TMS, DAY_ORD) IN 
			     (
			      SELECT MEET_CD, STND_YEAR, TMS, ?                                                                             
		          FROM (
                        SELECT /*+ index_desc (vw_sdl_info ix_vw_sdl_info1) */
                               MEET_CD, STND_YEAR, TMS, ROW_NUMBER() OVER (PARTITION BY MEET_CD ORDER BY STND_YEAR DESC, TMS DESC) AS RNUM 
                        FROM   VW_SDL_INFO
                        WHERE  MEET_CD = ?
                        AND    STND_YEAR||TRIM(TO_CHAR(TMS,'00')) <= ?||TRIM(TO_CHAR(?,'00'))  
                        GROUP  BY MEET_CD, STND_YEAR, TMS
                       )
                  WHERE RNUM = 2                   
                  )    
        ]]>
    </query>
    
    
    <query id="rsm2020_s07" desc="장외 입장인원 현황" fetchSize="10">
        <![CDATA[
            SELECT  /* rsm2020_s07 */
            		'0~'||BB.RACE_NO||'R' AS RACE_DESC,
            		DECODE(LEV,1,'인원','점유율') AS MANA_DESC,
				    DECODE(LEV,1,INWON_12,DECODE(INWON_TOTAL,0,0,ROUND(INWON_12/INWON_TOTAL*100,2))) AS INWON_12, -- 상봉       
				    DECODE(LEV,1,INWON_13,DECODE(INWON_TOTAL,0,0,ROUND(INWON_13/INWON_TOTAL*100,2))) AS INWON_13, -- 일산       
				    DECODE(LEV,1,INWON_14,DECODE(INWON_TOTAL,0,0,ROUND(INWON_14/INWON_TOTAL*100,2))) AS INWON_14, -- 분당       
				    DECODE(LEV,1,INWON_15,DECODE(INWON_TOTAL,0,0,ROUND(INWON_15/INWON_TOTAL*100,2))) AS INWON_15, -- 동대문       
				    DECODE(LEV,1,INWON_16,DECODE(INWON_TOTAL,0,0,ROUND(INWON_16/INWON_TOTAL*100,2))) AS INWON_16, -- 장안       
				    DECODE(LEV,1,INWON_18,DECODE(INWON_TOTAL,0,0,ROUND(INWON_18/INWON_TOTAL*100,2))) AS INWON_18, -- 부천       
				    DECODE(LEV,1,INWON_19,DECODE(INWON_TOTAL,0,0,ROUND(INWON_19/INWON_TOTAL*100,2))) AS INWON_19, -- 관악       
				    DECODE(LEV,1,INWON_20,DECODE(INWON_TOTAL,0,0,ROUND(INWON_20/INWON_TOTAL*100,2))) AS INWON_20, -- 성북       
				    DECODE(LEV,1,INWON_21,DECODE(INWON_TOTAL,0,0,ROUND(INWON_21/INWON_TOTAL*100,2))) AS INWON_21, -- 영등포       
				    DECODE(LEV,1,INWON_22,DECODE(INWON_TOTAL,0,0,ROUND(INWON_22/INWON_TOTAL*100,2))) AS INWON_22, -- 대전      
				    DECODE(LEV,1,INWON_23,DECODE(INWON_TOTAL,0,0,ROUND(INWON_23/INWON_TOTAL*100,2))) AS INWON_23, -- 인천       
				    DECODE(LEV,1,INWON_24,DECODE(INWON_TOTAL,0,0,ROUND(INWON_24/INWON_TOTAL*100,2))) AS INWON_24, -- 시흥       
				    DECODE(LEV,1,INWON_25,DECODE(INWON_TOTAL,0,0,ROUND(INWON_25/INWON_TOTAL*100,2))) AS INWON_25, -- 강남       
				    DECODE(LEV,1,INWON_26,DECODE(INWON_TOTAL,0,0,ROUND(INWON_26/INWON_TOTAL*100,2))) AS INWON_26, -- 천안       
				    DECODE(LEV,1,INWON_27,DECODE(INWON_TOTAL,0,0,ROUND(INWON_27/INWON_TOTAL*100,2))) AS INWON_27, -- 올림픽     
				    DECODE(LEV,1,INWON_28,DECODE(INWON_TOTAL,0,0,ROUND(INWON_28/INWON_TOTAL*100,2))) AS INWON_28, -- 의정부     
				    DECODE(LEV,1,INWON_00,DECODE(INWON_TOTAL,0,0,ROUND(INWON_00/INWON_TOTAL*100,2))) AS INWON_00, -- 경륜본장     
				    DECODE(LEV,1,INWON_100,DECODE(INWON_TOTAL,0,0,ROUND(INWON_100/INWON_TOTAL*100,2))) AS INWON_100, -- 광복
				    DECODE(LEV,1,INWON_101,DECODE(INWON_TOTAL,0,0,ROUND(INWON_101/INWON_TOTAL*100,2))) AS INWON_101, -- 서면
				    DECODE(LEV,1,INWON_102,DECODE(INWON_TOTAL,0,0,ROUND(INWON_102/INWON_TOTAL*100,2))) AS INWON_102, -- 김해
				    DECODE(LEV,1,INWON_103,DECODE(INWON_TOTAL,0,0,ROUND(INWON_103/INWON_TOTAL*100,2))) AS INWON_103, -- 김해
				    DECODE(LEV,1,INWON_SUM,DECODE(INWON_TOTAL,0,0,ROUND(INWON_SUM/INWON_TOTAL*100,2))) AS INWON_TOTAL -- 전체
		     FROM
		    (
			            SELECT 
						    SUM(CASE WHEN BRNC_CD='12' THEN INWON END) AS INWON_12, -- 상봉
						    SUM(CASE WHEN BRNC_CD='13' THEN INWON END) AS INWON_13, -- 일산
						    SUM(CASE WHEN BRNC_CD='14' THEN INWON END) AS INWON_14, -- 분당
						    SUM(CASE WHEN BRNC_CD='15' THEN INWON END) AS INWON_15, -- 동대문
						    SUM(CASE WHEN BRNC_CD='16' THEN INWON END) AS INWON_16, -- 장안
						    SUM(CASE WHEN BRNC_CD='18' THEN INWON END) AS INWON_18, -- 부천
						    SUM(CASE WHEN BRNC_CD='19' THEN INWON END) AS INWON_19, -- 관악
						    SUM(CASE WHEN BRNC_CD='20' THEN INWON END) AS INWON_20, -- 길음
						    SUM(CASE WHEN BRNC_CD='21' THEN INWON END) AS INWON_21, -- 영등포
						    SUM(CASE WHEN BRNC_CD='22' THEN INWON END) AS INWON_22, -- 유성
						    SUM(CASE WHEN BRNC_CD='23' THEN INWON END) AS INWON_23, -- 인천
						    SUM(CASE WHEN BRNC_CD='24' THEN INWON END) AS INWON_24, -- 시흥
						    SUM(CASE WHEN BRNC_CD='25' THEN INWON END) AS INWON_25, -- 논현
						    SUM(CASE WHEN BRNC_CD='26' THEN INWON END) AS INWON_26, -- 천안
						    SUM(CASE WHEN BRNC_CD='27' THEN INWON END) AS INWON_27, -- 올림픽
						    SUM(CASE WHEN BRNC_CD='28' THEN INWON END) AS INWON_28, -- 의정부
						    SUM(CASE WHEN BRNC_CD='00' THEN INWON END) AS INWON_00, -- 경륜본장
						    SUM(CASE WHEN BRNC_CD='100' THEN INWON END) AS INWON_100, -- 광복
						    SUM(CASE WHEN BRNC_CD='101' THEN INWON END) AS INWON_101, -- 서면
						    SUM(CASE WHEN BRNC_CD='102' THEN INWON END) AS INWON_102, -- 김해
						    SUM(NVL(CASE WHEN BRNC_CD='103' THEN INWON END,0)) AS INWON_103, -- 부산본장(금정)
						    SUM(NVL(CASE WHEN BRNC_CD='104' THEN INWON END,0)) AS INWON_104, -- 창원본장
						    SUM(INWON) AS INWON_TOTAL,
						    SUM(CASE WHEN BRNC_CD IN ('12','13','14','15','16','18','19','20',
						                              '21','22','23','24','25','26','27','28',
						                              '00','100','101','102','103','104') THEN INWON 
						             ELSE 0 END) AS INWON_SUM -- 합계
						 FROM
						(
						SELECT C.CD_NM,	-- 지점                                      
								 	   E.BRNC_CD,                                      
								     	SUM( E.ENT_PRSN_NUM) INWON	-- 인원	                                       
									 FROM                                                   
									 	VW_SDL_INFO R       -- 경주일 정보                       
									 	,VWRC_STAY_MANA_TSUM E,	-- 체류인원관리                      
									 	TBRK_SPEC_CD C                      
									 WHERE  1=1
									    AND R.MEET_CD		= ? -- 0:MEET_CD '003'
										AND R.STND_YEAR(+)	= ? -- 1:STND_YEAR '2009'
									  	AND R.TMS(+) 		= ? -- 2:TMS '2'
									  	AND R.DAY_ORD(+)	= ? -- 3:DAY_ORD '2'
									 	AND E.MEET_CD='003'                        
									 	AND E.RACE_DT=R.RACE_DAY                 
									 	AND C.GRP_CD IN ('018','032')                      
									 	AND C.CD=E.BRNC_CD                
									 	-- AND E.BRNC_CD<>'098'                   
									 GROUP BY E.BRNC_CD,C.CD_NM	         
									 ORDER BY E.BRNC_CD
						)A
				 )AA,
    		(
    		 SELECT                                                                   
    		         MAX(RACE_NO)  AS RACE_NO
    		         
    		  FROM   (                                                                 
    		              SELECT                                                       
    		                       TOR.RACE_NO                                         
    		                     , TOR.RACE_REG_NO                                     
    		                     , TOR.RACER_NO                                        
    		                     , TOR.RANK                                            
    		                     , TRM.NM_KOR                                          
    		                     , RANK() OVER (PARTITION BY TOR.RACE_NO               
    		                                               , TOR.RANK                  
    		                                        ORDER BY TOR.RACE_REG_NO) SEQ      
    		              FROM     MRASYS.TBEB_ORGAN        TOR                        
    		                     , MRASYS.TBEC_RACER_MASTER TRM                        
    		              WHERE 1=1                                                        
    		              
    		              AND    TOR.RACER_NO   = TRM.RACER_NO                         
    		              AND    TOR.STND_YEAR  = ?	-- 4:STND_YEAR 
    		              AND    TOR.MBR_CD     = '001'                                
    		              AND    TOR.TMS        = ?	-- 5:TMS
    		              
    		              AND    TOR.RANK BETWEEN 1                                    
    		                                  AND 3                                    
    		         )                                                                 
    		  START WITH SEQ = 1                                                       
    		  CONNECT BY PRIOR SEQ = SEQ - 1                                           
    		  AND PRIOR RACE_NO = RACE_NO AND RANK = RANK                           
    		)BB , (SELECT LEVEL LEV FROM DUAL CONNECT BY LEVEL <=2 ) DU			                              
        ]]>
    </query>
    
    
    <!--  특이사항  -->
    <query id="rsm2020_s08" desc="특이사항" fetchSize="10">
        <![CDATA[
             SELECT /* rsm2020_s08 */                                      
			      STND_YEAR,		-- 기준년도                                
			      TMS,          	-- 회차         
			      DAY_ORD,			-- 일차
			      SPEC_DESC			-- 기타 내용
			 FROM TBRD_RACE_SPEC_DESC	-- 기타            
			 WHERE 1=1
			      AND STND_YEAR	= ? -- 0:STND_YEAR 기준년도                      
			      AND TMS		= ?	-- 1:TMS 회차
			      AND DAY_ORD	= ?	-- 2:DAY_ORD 일차  
			      AND MEET_CD   = ? -- 3:MEET_CD 시행
                             
        ]]>
    </query>
    
    
    
    
    <query id="rsm2020_s09" desc=" 년도별 가까운 회차" fetchSize="10">
        <![CDATA[
			SELECT /* rsm2020_s09 */
			        TMS,					-- 회차
			        TMS||'회' AS TMS_DESC,	-- 회차 표현
				    NVL(MAX(TMS) OVER(),0) AS MAX_TMS -- 최근 회차
			FROM VW_SDL_INFO
			WHERE 1=1
			  AND MEET_CD   = ?
			  AND STND_YEAR = ?
			GROUP BY TMS			  
			ORDER BY TMS DESC			  
        ]]>
    </query>   
    
    <query id="rsm2020_s10" desc="경정 년도별 가까운 회차별 일차" fetchSize="10">
        <![CDATA[
			SELECT /* rsm2020_s10 */
				  DAY_ORD,	                          -- 일차
				  DAY_ORD||'일차' AS DAY_DESC,	      -- 일차 표현
				  MAX(DAY_ORD) OVER() AS MAX_DAY_ORD, -- 최근 일차
				  MAX(RACE_DAY) OVER() AS RACE_DAY,   -- 최근 날짜
                  RACE_YOIL
			  FROM VW_SDL_INFO A
			 WHERE 1=1
			   AND MEET_CD      = ? -- 1:MEET_CD '003'                                                                          
	    	   AND A.STND_YEAR 	= ? -- 2:STND_YEAR '2011'                                                                      
	    	   AND A.TMS 		= ? -- 3:TMS '2'
	    	 GROUP BY DAY_ORD, RACE_DAY, RACE_YOIL
	    	 ORDER BY A.DAY_ORD 
        ]]>
    </query>
    
    
    <!--  입장인원 회차별, 일차별  -->
    <query id="rsm2020_s11" desc="입장인원 회차별, 일차별" fetchSize="10">
        <![CDATA[
        
	        SELECT /* rsm2020_s11 */
	        	'0~'||BB.RACE_NO||'R' AS RACE_DESC,
		        DECODE(LEV,1,'인원','점유율') AS MANA_DESC,
		        CASE 
		            WHEN LEV='2' AND IN_PRSN_NUM > 0 AND TOT_PRSN_NUM > 0 THEN ROUND(IN_PRSN_NUM / TOT_PRSN_NUM *100,2)	-- 본장 점유율
		            ELSE IN_PRSN_NUM
		       END AS IN_PRSN_NUM, -- 본장
		       CASE 
		            WHEN LEV='2' AND BRNC_PRSN_NUM > 0 AND TOT_PRSN_NUM > 0 THEN ROUND(BRNC_PRSN_NUM / TOT_PRSN_NUM *100,2)	-- 지점 점유율
		            ELSE BRNC_PRSN_NUM
		       END AS BRNC_PRSN_NUM, -- 지점
		       CASE 
		            WHEN LEV='2' AND TOT_PRSN_NUM > 0 THEN ROUND(TOT_PRSN_NUM / TOT_PRSN_NUM *100,2)	-- 전체
		            ELSE TOT_PRSN_NUM
		       END AS TOT_PRSN_NUM, -- 전체
		       CASE 
		            WHEN LEV='1' THEN B_TOT_PRSN_NUM
		       END AS B_TOT_PRSN_NUM, -- 전회차 합계
		       CASE 
		            WHEN LEV='1' THEN MINUS_PRSN_NUM
		       END AS MINUS_PRSN_NUM, -- 증감
		       CASE 
--		            WHEN LEV='1' THEN PER_PRSN_NUM
					WHEN LEV='1' AND TOT_PRSN_NUM>0 AND B_TOT_PRSN_NUM >0 THEN ROUND((TOT_PRSN_NUM - B_TOT_PRSN_NUM) / B_TOT_PRSN_NUM*100,2)
		       END AS PER_PRSN_NUM -- 증감율
		FROM
		(
		     SELECT DU.LEV,
		            SUM(CASE WHEN R.TMS =DU.TMS AND BRNC_CD = '98' THEN E.ENT_PRSN_NUM END) AS IN_PRSN_NUM,	-- 본장
			     	SUM(CASE WHEN R.TMS =DU.TMS AND BRNC_CD <> '98' THEN E.ENT_PRSN_NUM END) AS BRNC_PRSN_NUM,	-- 지점
			     	SUM(CASE WHEN R.TMS =DU.TMS THEN E.ENT_PRSN_NUM END) AS TOT_PRSN_NUM,	-- 전체
			     	SUM(CASE WHEN R.TMS =DU.B_TMS THEN E.ENT_PRSN_NUM END) AS B_TOT_PRSN_NUM,    -- 전회차 전체
			     	(SUM(CASE WHEN R.TMS =DU.TMS THEN E.ENT_PRSN_NUM END) - SUM(CASE WHEN R.TMS =DU.B_TMS THEN E.ENT_PRSN_NUM END)) AS MINUS_PRSN_NUM	-- 증감
			     	
				 FROM                                                   
				 	TBRC_STAY_MANA E,	-- 체류인원관리                      
				 	TBRK_SPEC_CD C,
				 	VW_SDL_INFO R,       -- 경주일 정보                                             
				 	(SELECT LEVEL AS LEV, ? AS TMS,(? - 1) AS B_TMS FROM DUAL CONNECT BY LEVEL<=2) DU -- 0:TMS 회차 , 5:TMS 회차		 	
				 WHERE  1=1				
				   AND E.BRNC_CD	= C.CD
				   AND E.RACE_DT	= R.RACE_DAY                 
				   AND C.GRP_CD		IN ('018','032')    
				   AND R.MEET_CD	= '003'   
				   AND R.STND_YEAR	= ?		-- 2:STND_YEAR 기준년도
				   AND R.TMS IN (?,? - 1)	-- 3:TMS 회차 , 4:TMS 회차 
				   AND R.DAY_ORD = ?        -- DAY_ORD		 	
				 GROUP BY DU.LEV
		)AA,
		(
		    SELECT                                                                   
		         MAX(RACE_NO)  AS RACE_NO
		      FROM   (                                                                 
		                  SELECT                                                       
		                           TOR.RACE_NO                                         
		                         , TOR.RACE_REG_NO                                     
		                         , TOR.RACER_NO                                        
		                         , TOR.RANK                                            
		                         , TRM.NM_KOR                                          
		                         , RANK() OVER (PARTITION BY TOR.RACE_NO               
		                                                   , TOR.RANK                  
		                                            ORDER BY TOR.RACE_REG_NO) SEQ      
		                  FROM     MRASYS.TBEB_ORGAN        TOR                        
		                         , MRASYS.TBEC_RACER_MASTER TRM                        
		                  WHERE 1=1                                                        
		                  
		                  AND    TOR.RACER_NO   = TRM.RACER_NO                         
		                  AND    TOR.STND_YEAR  = ?		-- 5:STND_YEAR 
		                  AND    TOR.MBR_CD     = '001'                                
		                  AND    TOR.TMS        = ?		-- 6:TMS
		                  
		                  AND    TOR.RANK BETWEEN 1                                    
		                                      AND 3                                    
		             )                                                                 
		      START WITH SEQ = 1                                                       
		      CONNECT BY PRIOR SEQ = SEQ - 1                                           
		      AND PRIOR RACE_NO = RACE_NO AND RANK = RANK     
		)BB
		ORDER BY AA.LEV
	

        ]]>
    </query>
    
    
    <query id="rsm2020_s12" desc="화요경정 매출액 조회" fetchSize="10">
        <![CDATA[
			SELECT /* rsm2020_s12 */
			       I.RACE_NO||'경주' AS RACE_NO,
	               ROW_NUM AS GBN,
	               GBN_DESC AS GBN_DESC,
	               SUM(DIV_TOTAL) AS TOT
	        FROM VW_SDL_DT P,
	            (
	                SELECT ROWNUM AS ROW_NUM, A.*
	                FROM   (
	
	                    SELECT MEET_CD, STND_YEAR, TMS, DAY_ORD, RACE_NO,
	                           SUBSTR(STND_YEAR,3,2)||'년 '||TMS||'회 '||DAY_ORD||'일차' AS GBN_DESC
	                    FROM (
	                            SELECT '003' AS MEET_CD, STND_YEAR, TMS, DAY_ORD, RACE_NO
	                            FROM MRASYS.TBEB_RACE
	                            WHERE MBR_CD = '001' 
	                             AND  (STND_YEAR,TMS,DAY_ORD) IN (
	                                    SELECT  STND_YEAR, TMS, DAY_ORD
	                                    FROM  VW_SDL_INFO
	                                    WHERE MEET_CD = '003'
	                                    AND    RACE_YOIL = 'TUE'
	                                    AND   stnd_year BETWEEN TO_CHAR(SYSDATE,'YYYY') -1 AND TO_CHAR(SYSDATE,'YYYY') 
	                            )
	                    )
	                    WHERE   STND_YEAR||TO_CHAR(TMS,'99')||DAY_ORD <= ?||TO_CHAR(TO_NUMBER(?),'99')||?
	                    ORDER BY 1,2,3,4,5
	                    ) A
	            ) I
	        WHERE P.MEET_CD(+)    = I.MEET_CD
	          AND P.STND_YEAR(+)  = I.STND_YEAR
	          AND P.TMS(+)        = I.TMS
	          AND P.DAY_ORD(+)    = I.DAY_ORD
	          AND P.RACE_NO(+)    = I.RACE_NO
	        GROUP BY ROW_NUM, I.RACE_NO, GBN_DESC		
	        ORDER BY 2		  
        ]]>
    </query>   
    
    
    <query id="rsm2020_s13" desc="화요경정 매출액 조회" fetchSize="10">
        <![CDATA[
			SELECT /* rsm2020_s13 */
 				    MEET_CD, STND_YEAR, TMS, DAY_ORD
             FROM (
                      SELECT  MEET_CD, STND_YEAR, TMS, DAY_ORD, ROW_NUMBER() OVER (PARTITION BY MEET_CD ORDER BY STND_YEAR DESC, TMS DESC) AS RNUM
                      FROM   VW_SDL_INFO
                      WHERE  STND_YEAR||TRIM(TO_CHAR(TMS,'00'))||DAY_ORD <= ?||TRIM(TO_CHAR(?,'00'))||?            -- param0~
                      AND    MEET_CD   = ?
                      AND    RACE_YOIL = ?
                      ORDER BY STND_YEAR DESC, TMS DESC
                   )
             WHERE RNUM = 2
             UNION ALL
 			 SELECT MEET_CD, STND_YEAR, TMS, DAY_ORD
             FROM (
                      SELECT  MEET_CD, STND_YEAR, TMS, DAY_ORD, ROW_NUMBER() OVER (PARTITION BY MEET_CD ORDER BY STND_YEAR DESC, TMS DESC) AS RNUM
                      FROM   VW_SDL_INFO
                      WHERE  STND_YEAR||TRIM(TO_CHAR(TMS,'00'))||DAY_ORD <= (? -1)||TRIM(TO_CHAR(?,'00'))||?        --param5~
                      AND    MEET_CD   = ?
                      AND    RACE_YOIL = ?
                      ORDER BY STND_YEAR DESC, TMS DESC
                   )
             WHERE RNUM = 1                                            
        ]]>
    </query>   
    
    <query id="rsm2020_s14" desc="매출목표액 대비" fetchSize="10">
        <![CDATA[
			SELECT /* rsm2020_s14 */
				YEAR_GOAL, DAY_GOAL, TOTAL, TOTAL-DAY_GOAL AS PLUS_MINUS
			FROM (
				SELECT
					ROUND(SUM(DIV_TOTAL)/1000,0) TOTAL,
					FC_CODE_NM('163', STND_YEAR||MEET_CD)*1000 YEAR_GOAL,
					FC_CODE_CDTERM3('163', STND_YEAR||MEET_CD)*1000 DAY_GOAL
				FROM TBES_SDL_DT
				WHERE 1=1
				AND STND_YEAR = ?
				AND TMS = ?
				AND DAY_ORD = ?
				AND MEET_CD = ?
				GROUP BY STND_YEAR, MEET_CD
			)
        ]]>
    </query>  
    
    
    
    	<!-- 오늘 경주일 경우  -->
	<query id="rsm2020_s02Today" desc="전년대비 비교" fetchSize="10">
        <![CDATA[
			SELECT	/* rsm2020_s02Today */                                                                                         
			          MST.GBN       -- 매출총액 전년대비 구분                                                                       
			        , YEAR.DIV_TOTAL AS YEAR_TOTAL	--   전체누계                                        
			        , YEAR.REFUND    AS YEAR_REFUND -- 환불누계                                         
			        , TMS.D_1	-- 일요일                                                                               
			        , TMS.D_2   -- 월요일 (데이터 없음)                                                 
			        , TMS.D_3   -- 화요일                                                
			        , TMS.D_4   -- 수요일
			        , TMS.D_5   -- 목요일                                                                    
			        , TMS.D_6   -- 금요일  (데이터 없음)                                                
			        , TMS.D_7   -- 토요일 (데이터 없음)                                                                           
			        , TMS.TOTAL -- 당회차 합계                                                                             
			        , PRE.TOTAL AS PRE_TOTAL	-- 전회                                            
			        , NVL(TMS.TOTAL, 0) - NVL(PRE .TOTAL, 0) ADD_POOL	-- 증감                                       
			        , CASE WHEN (NVL(PRE.TOTAL, 0) = 0) AND (NVL(TMS.TOTAL, 0) = 0) THEN 0                  
			               WHEN NVL(PRE.TOTAL, 0) = 0                               THEN 100                
			               WHEN NVL(TMS.TOTAL, 0) = 0                                THEN -100              
			               ELSE ROUND((NVL(TMS.TOTAL, 0) - NVL(PRE.TOTAL, 0)) / NVL(PRE.TOTAL, 0) * 100, 2) 
			          END ADD_RATE	-- 증감율                                                                          
			 FROM                                                                                           
			          (                                                                                     
			             SELECT                                                                             
			                      ? STND_YEAR                                                      
			                    , '매출총액' GBN                                                            
			             FROM   DUAL                                                                        
			          ) MST                                                                                 
			        , (                                                                                     
			             SELECT                                                                             
			                      TMS.STND_YEAR                                                             
			                    , MIN(DECODE(TMS.D, 1, TMS.AMOUNT)) D_1                                     
			                    , MIN(DECODE(TMS.D, 2, TMS.AMOUNT)) D_2                                     
			                    , MIN(DECODE(TMS.D, 3, TMS.AMOUNT)) D_3                                     
			                    , MIN(DECODE(TMS.D, 4, TMS.AMOUNT)) D_4                                     
			                    , MIN(DECODE(TMS.D, 5, TMS.AMOUNT)) D_5                                     
			                    , MIN(DECODE(TMS.D, 6, TMS.AMOUNT)) D_6                                     
			                    , MIN(DECODE(TMS.D, 7, TMS.AMOUNT)) D_7                                     
			                    , SUM(TMS.AMOUNT)                   TOTAL                                   
			             FROM   (                                                                           
			                         SELECT                                                                 
			                                  TSP.STND_YEAR                                                 
			                                , TO_CHAR(TO_DATE(INFO.RACE_DAY, 'YYYYMMDD'), 'D') D            
			                                , SUM(TSP.POOL_TOTAL) AMOUNT                                    
			                         FROM     VW_SDL_INFO INFO                                              
			                                , TBES_SDL_PT       TSP                                         
			                         WHERE  1=1
			                         AND    INFO.STND_YEAR = TSP.STND_YEAR                                  
			                         AND    INFO.MEET_CD    = TSP.MEET_CD                                   
			                         AND    INFO.TMS       = TSP.TMS                                        
			                         AND    INFO.DAY_ORD   = TSP.DAY_ORD                                    
			                         AND    TSP.STND_YEAR  = ?		-- 기준년도                                     
			                         AND    TSP.MEET_CD    = ?      -- 경주구분 코드                       
			                         AND    TSP.TMS        = ?      -- 회차                        
			                         GROUP BY                                                               
			                                  TSP.STND_YEAR                                                 
			                                , INFO.RACE_DAY                                                 
			                    ) TMS                                                                       
			             GROUP BY TMS.STND_YEAR                                                             
			          ) TMS     -- 당회차                                                                            
			        , (                                                                                     
			             SELECT                                                                             
			                      STND_YEAR                                                                 
			                    , SUM(TSP.DIV_TOTAL) DIV_TOTAL                                              
			                    , SUM(TSP.REFUND    ) REFUND                                                
			             FROM   TBES_SDL_DT_SUM       TSP                                                       
			             WHERE  TSP.STND_YEAR  = ?                                                 
			             AND    TSP.MEET_CD    = ?                                                   
			             AND    TSP.TMS       <= ?                                                       
			             GROUP BY                                                                           
			                      STND_YEAR                                                                 
			          ) YEAR     -- 당해년도 누계                                                                           
			        , (                                                                                     
			             SELECT                                                                             
			                      STND_YEAR                                                                 
			                    , TMS                                                                       
			                    , NVL(SUM(TSP.POOL_TOTAL), 0)  TOTAL                                        
			             FROM   TBES_SDL_PT       TSP                                                       
			             WHERE  1=1
			             AND	TSP.STND_YEAR  = ?
			             AND    TSP.MEET_CD    = ?                                                   
			             AND    TSP.TMS        = ? - 1                                                   
			             GROUP BY                                                                           
			                      STND_YEAR                                                                 
			                    , TMS                                                                       
			          ) PRE    -- 전회차                                                                             
			 WHERE  1=1
			 AND   MST.STND_YEAR = TMS .STND_YEAR(+)                                                       
			 AND    MST.STND_YEAR = YEAR.STND_YEAR(+)                                                       
			 AND    MST.STND_YEAR = PRE .STND_YEAR(+)                                                       
			 UNION ALL                                                                                      
			 SELECT                                                                                         
			          MST.GBN                                                                               
			        , YEAR.DIV_TOTAL                   YEAR_TOTAL                                           
			        , YEAR.REFUND                      YEAR_REFUND                                          
			        , TMS.D_1                                                                               
			        , TMS.D_2                                                                               
			        , TMS.D_3                                                                               
			        , TMS.D_4                                                                               
			        , TMS.D_5                                                                               
			        , TMS.D_6                                                                               
			        , TMS.D_7                                                                               
			        , TMS.TOTAL                                                                             
			        , 0 PRE_TOTAL                                                                           
			        , NVL(PRE .TOTAL, 0) - NVL(TMS.TOTAL, 0) ADD_POOL                                       
			        , CASE WHEN (NVL(PRE.TOTAL, 0) = 0) AND (NVL(TMS.TOTAL, 0) = 0) THEN 0                  
			               WHEN NVL(PRE.TOTAL, 0) = 0                               THEN -100               
			               WHEN NVL(TMS.TOTAL, 0) = 0                                THEN 100               
			               ELSE ROUND((NVL(PRE.TOTAL, 0) - NVL(TMS.TOTAL, 0)) / NVL(TMS.TOTAL, 0) * 100, 2) 
			          END ADD_RATE                                                                          
			 FROM                                                                                           
			          (                                                                                     
			             SELECT                                                                             
			                      ? -1 STND_YEAR                                                    
			                    , '전년대비' GBN                                                            
			             FROM   DUAL                                                                        
			          ) MST                                                                                 
			        , (                                                                                     
			             SELECT                                                                             
			                      TMS.STND_YEAR                                                             
			                    , MIN(DECODE(TMS.D, 1, TMS.AMOUNT)) D_1                                     
			                    , MIN(DECODE(TMS.D, 2, TMS.AMOUNT)) D_2                                     
			                    , MIN(DECODE(TMS.D, 3, TMS.AMOUNT)) D_3                                     
			                    , MIN(DECODE(TMS.D, 4, TMS.AMOUNT)) D_4                                     
			                    , MIN(DECODE(TMS.D, 5, TMS.AMOUNT)) D_5                                     
			                    , MIN(DECODE(TMS.D, 6, TMS.AMOUNT)) D_6                                     
			                    , MIN(DECODE(TMS.D, 7, TMS.AMOUNT)) D_7                                     
			                    , SUM(TMS.AMOUNT)                   TOTAL                                   
			             FROM   (                                                                           
			                         SELECT                                                                 
			                                  TSP.STND_YEAR                                                 
			                                , TO_CHAR(TO_DATE(INFO.RACE_DAY, 'YYYYMMDD'), 'D') D            
			                                , SUM(TSP.POOL_TOTAL) AMOUNT                                    
			                         FROM     VW_SDL_INFO INFO                                              
			                                , TBES_SDL_PT       TSP                                         
			                         WHERE  1=1
			                         AND 	INFO.STND_YEAR = TSP.STND_YEAR                                  
			                         AND    INFO.MEET_CD    = TSP.MEET_CD                                   
			                         AND    INFO.TMS       = TSP.TMS                                        
			                         AND    INFO.DAY_ORD   = TSP.DAY_ORD                                    
			                         AND    TSP.STND_YEAR  =  ? -1                                   
			                         AND    TSP.MEET_CD    = ?                                       
			                         AND    TSP.TMS        = ?                                           
			                         GROUP BY                                                               
			                                  TSP.STND_YEAR                                                 
			                                , INFO.RACE_DAY                                                 
			                    ) TMS                                                                       
			             GROUP BY TMS.STND_YEAR                                                             
			          ) TMS     -- 전년도 동회차                                                                            
			        , (                                                                                     
			             SELECT                                                                             
			                      STND_YEAR                                                                 
			                    , SUM(TSP.DIV_TOTAL) DIV_TOTAL                                              
			                    , SUM(TSP.REFUND    ) REFUND                                                
			             FROM   TBES_SDL_DT_SUM       TSP                                                       
			             WHERE  1=1
			             AND	TSP.STND_YEAR  = ? -1                                               
			             AND    TSP.MEET_CD    = ?                                                   
			             AND    TSP.TMS       <= ?                                                       
			             GROUP BY                                                                           
			                      STND_YEAR                                                                 
			          ) YEAR    -- 전년도 누계                                                                            
			        , (                                                                                     
			             SELECT                                                                             
			                      STND_YEAR-1 STND_YEAR                                                     
			                    , TMS                                                                       
			                    , NVL(SUM(TSP.POOL_TOTAL), 0)  TOTAL                                        
			             FROM   TBES_SDL_PT       TSP                                                       
			             WHERE  1=1
			             AND	TSP.STND_YEAR  = ?                                                 
			             AND    TSP.MEET_CD    = ?                                                   
			             AND    TSP.TMS        = ?                                                       
			             GROUP BY                                                                           
			                      STND_YEAR                                                                 
			                    , TMS                                                                       
			          ) PRE    -- 당회차                                                                             
			 WHERE  1=1
			 AND	MST.STND_YEAR = TMS.STND_YEAR(+)                                                        
			 AND    MST.STND_YEAR = YEAR.STND_YEAR(+)                                                       
			 AND    MST.STND_YEAR = PRE.STND_YEAR(+)                                                        
							         
        ]]>
    </query>
    

    <!--  경주별 매출현황  -->
    <query id="rsm2020_s03Today" desc="경주별 매출현황" fetchSize="10">
        <![CDATA[
        
         SELECT   /* rsm2020_s03Today */                                                                                 
		     Z.RACE_NO,	-- 경주                                                                            
		     CASE                                                                                  
		         WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
		         FC_GET_RSLT_RANK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO)                
		     END RSLT_RANK,	-- 승자 번호                                                                        
		     R.RANK_1,		-- 입상선수 1                                                                             
		     R.RANK_2,		-- 입상선수 2                                                                             
		     R.RANK_3,		-- 입상선수 3                                                                             
		     CASE                                                                                  
		         WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
		         MRASYS.GET_RSLT_PAYOFF(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '001', NULL) 
		     END WIN,		-- 배당률 단승                                                                              
		     CASE                                                                                  
		         WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
		         MRASYS.GET_RSLT_PAYOFF(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '002', '1')  
		     END PLC,		-- 배당률 연승                                                                              
		     CASE                                                                                  
		         WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
		         MRASYS.GET_RSLT_PAYOFF(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '002', '2')  
		     END PLC2,		-- 배당률 연승                                                                             
		     CASE                                                                                  
		         WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
		         MRASYS.GET_RSLT_PAYOFF(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '004', NULL) 
		     END EX,		-- 배당률 복승
		     CASE                                                                                  
		         WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
		         MRASYS.GET_RSLT_PAYOFF(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '005', NULL) 
		     END QU,		-- 배당률 쌍승                                                                               
		     CASE                                                                                  
		         WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
		         MRASYS.GET_RSLT_PAYOFF(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '006', NULL) 
		     END TRI,		-- 배당률 삼복승
		     D.BONJANG_TOTAL,	-- 매출액 본장                                                                      
		     D.JIJUM_TOTAL,		-- 매출액 장외합계                                                                        
		     C.DIV_TOTAL,		-- 매출액 전체합계 (실시간 자료로 변경)                                                                          
		     NVL(D.REFUND,0) REFUND,	-- 환불금액	                                                                            
		     NVL(B.B_DIV_TOTAL,0) AS B_DIV_TOTAL,				-- 전회대비 전회                                                                        
		     NVL2(D.DIV_TOTAL, NVL((C.DIV_TOTAL-B.B_DIV_TOTAL),0),0) AS PLUS_MINUS,	-- 전회대비  증감                                              
		     CASE                                                                                  
		         WHEN B.B_DIV_TOTAL<>0 AND NVL(D.DIV_TOTAL,0)<>0 THEN                                                        
		         ROUND((C.DIV_TOTAL-B.B_DIV_TOTAL)/B.B_DIV_TOTAL*100,2)                            
		         ELSE 0                                                                            
		     END RATE,			-- 전회대비  증감률
             NVL(YB.B_DIV_TOTAL,0) AS YB_DIV_TOTAL,                -- 전년동회 대비 전년                                                                        
             NVL2(D.DIV_TOTAL, NVL((C.DIV_TOTAL-YB.B_DIV_TOTAL),0),0) AS YB_PLUS_MINUS,    -- 전년동회 대비  증감                                              
             CASE                                                                                  
                 WHEN YB.B_DIV_TOTAL<>0 AND NVL(D.DIV_TOTAL,0)<>0 THEN                                                        
                 ROUND((C.DIV_TOTAL-YB.B_DIV_TOTAL)/YB.B_DIV_TOTAL*100,2)                            
                 ELSE 0                                                                            
             END YB_RATE,            -- 전년동회대비  증감률
		     SAME_PAYOFF_TOTAL,		-- 동착 존재 여부
		     SAME_PAYOFF_001, -- 단승 동착
			 SAME_PAYOFF_002, -- 연승 동착
			 SAME_PAYOFF_004, -- 쌍승 동착
			 SAME_PAYOFF_005, -- 복승 동착
			 SAME_PAYOFF_006 -- 삼복승 동착                                                                                                                                                            
		 FROM   
		 	-- 매출액                                                                                                           
		     (   
		     	                                                          
		         SELECT                                                                            
		               D.MEET_CD,                                                                   
		               D.STND_YEAR,                                                                 
		               D.TMS,                                                                       
		               D.DAY_ORD,                                                                   
		               DECODE(D.RACE_NO,NULL,'TOTAL',D.RACE_NO) RACE_NO,                              
		               SUM(                                                                        
		                   CASE                                                                    
		                     WHEN D.SELL_CD='03' AND D.COMM_NO!='06' THEN D.DIV_TOTAL                                    
		                     ELSE 0                                                                
		                   END                                                                     
		               ) BONJANG_TOTAL,                                                            
		               SUM(                                                                        
		                   CASE                                                                    
		                     WHEN D.SELL_CD!='03' OR D.COMM_NO='06' THEN D.DIV_TOTAL                                     
		                   END                                                                     
		               ) JIJUM_TOTAL,                                                              
		               SUM(D.REFUND) REFUND,
		               SUM(D.DIV_TOTAL) AS DIV_TOTAL                                                         
		         FROM   TBES_SDL_DT D                                                              
		         WHERE 1=1                                                                             
		             AND D.STND_YEAR(+)  = ?
		             AND D.MEET_CD(+)    = ?
		             AND D.TMS(+)        = ?
		             AND D.DAY_ORD(+)    = ?
		         GROUP BY                                                                          
		               D.MEET_CD,                                                                   
		               D.STND_YEAR,                                                                 
		               D.TMS,                                                                       
		               D.DAY_ORD,                                                                   
		               ROLLUP(D.RACE_NO)                                                           
		     ) D,                                                                                  
		     (                                                                                     
		        SELECT                                                                             
		           P.MEET_CD,                                                                      
		           P.STND_YEAR,                                                                    
		           P.TMS,                                                                          
		           P.DAY_ORD,                                                                      
		           DECODE(P.RACE_NO,NULL,'TOTAL',P.RACE_NO) RACE_NO,                               
		           SUM(POOL_TOTAL) DIV_TOTAL                                                       
		        FROM                                                                               
		            TBES_SDL_PT P                                                                  
		        WHERE 1=1                                                                              
		            AND P.STND_YEAR  = ?
		            AND P.MEET_CD    = ?
		            AND P.TMS        = ?
		            AND P.DAY_ORD    = ?
		        GROUP BY                                                                           
		           P.MEET_CD,                                                                      
		           P.STND_YEAR,                                                                    
		           P.TMS,                                                                          
		           P.DAY_ORD,                                                                      
		           ROLLUP(P.RACE_NO)                                                               
		     ) C,                                                                                  
		     (                                                                                     
		         SELECT                                                                            
		               DECODE(RACE_NO,NULL,'TOTAL',RACE_NO) RACE_NO,                               
		               SUM(DIV_TOTAL) B_DIV_TOTAL                                                  
		         FROM   TBES_SDL_DT                                                                
		         WHERE  (MEET_CD, STND_YEAR, TMS, DAY_ORD) IN (
                               SELECT MEET_CD, STND_YEAR, TMS, DAY_ORD
                                          FROM (
                                                      SELECT  MEET_CD, STND_YEAR, TMS, DAY_ORD, ROW_NUMBER() OVER (PARTITION BY MEET_CD ORDER BY STND_YEAR DESC, TMS DESC) AS RNUM
                                                      FROM   VW_SDL_INFO
                                                      WHERE  STND_YEAR||TRIM(TO_CHAR(TMS,'00'))||DAY_ORD <= ?||TRIM(TO_CHAR(?,'00'))||?			-- param8~
                                                      AND    MEET_CD   = ?
                                                      AND    RACE_YOIL = ?
                                                      ORDER BY STND_YEAR DESC, TMS DESC
                                          )
                                          WHERE RNUM = 2
                              )
		         GROUP BY                                                                          
		               ROLLUP(RACE_NO)                                                             
		     ) B,                                                                                     
             (                                                                                     
                 SELECT                                                                            
                       DECODE(RACE_NO,NULL,'TOTAL',RACE_NO) RACE_NO,                               
                       SUM(DIV_TOTAL) B_DIV_TOTAL                                                  
                 FROM   TBES_SDL_DT                                                                
                 WHERE (MEET_CD, STND_YEAR, TMS, DAY_ORD) IN (
                               SELECT MEET_CD, STND_YEAR, TMS, DAY_ORD
                                          FROM (
                                                      SELECT  MEET_CD, STND_YEAR, TMS, DAY_ORD, ROW_NUMBER() OVER (PARTITION BY MEET_CD ORDER BY STND_YEAR DESC, TMS DESC) AS RNUM
                                                      FROM   VW_SDL_INFO
                                                      WHERE  STND_YEAR||TRIM(TO_CHAR(TMS,'00'))||DAY_ORD <= (? -1)||TRIM(TO_CHAR(?,'00'))||?		--param13~
                                                      AND    MEET_CD   = ?
                                                      AND    RACE_YOIL = ?
                                                      ORDER BY STND_YEAR DESC, TMS DESC
                                          )
                                          WHERE RNUM = 1
                              )
                 GROUP BY                                                                          
                       ROLLUP(RACE_NO)                                                             
             ) YB,                                                                                 
		     (                                                                                     
		         SELECT                                                                            
		               RACE_NO                                                                     
		             , MIN(DECODE(RANK, '1', NM_KOR)) RANK_1                                       
		             , MIN(DECODE(RANK, '2', NM_KOR)) RANK_2                                       
		             , MIN(DECODE(RANK, '3', NM_KOR)) RANK_3                                       
		         FROM   (                                                                          
		                  SELECT                                                                   
		                           RACE_NO                                                         
		                         , RANK                                                            
		                         , SUBSTR(MAX(SYS_CONNECT_BY_PATH (NM_KOR, '/')), 2) NM_KOR        
		                  FROM   (                                                                 
		                              SELECT                                                       
		                                       TOR.RACE_NO                                         
		                                     , TOR.RACE_REG_NO                                     
		                                     , TOR.RACER_NO                                        
		                                     , TOR.RANK                                            
		                                     , TRM.NM_KOR                                          
		                                     , RANK() OVER (PARTITION BY TOR.RACE_NO               
		                                                               , TOR.RANK                  
		                                                        ORDER BY TOR.RACE_REG_NO) SEQ      
		                              FROM     MRASYS.TBEB_ORGAN        TOR                        
		                                     , MRASYS.TBEC_RACER_MASTER TRM                        
		                              WHERE 1=1                                                        
		                              AND    TOR.RACER_NO   = TRM.RACER_NO                         
		                              AND    TOR.STND_YEAR  = ?
		                              AND    TOR.MBR_CD     = '001'                                
		                              AND    TOR.TMS        = ?
		                              AND    TOR.DAY_ORD    = ?
		                              AND    TOR.RANK BETWEEN 1                                    
		                                                  AND 3                                    
		                         )                                                                 
		                  START WITH SEQ = 1                                                       
		                  CONNECT BY PRIOR SEQ = SEQ - 1                                           
		                  AND PRIOR RACE_NO = RACE_NO AND RANK = RANK                              
		                  GROUP BY                                                                 
		                           RACE_NO                                                         
		                         , RANK                                                            
		              )                                                                            
		         GROUP BY RACE_NO                                                                  
		         UNION ALL                                                                         
		         SELECT 'TOTAL', '', '', '' FROM DUAL                                              
		     ) R, 
		     (   
		 		 -- 동착 확인용                                                                               
			     SELECT                                                                         
			        RACE_NO,
                   SUM(CASE 
                            WHEN POOL_CD = '001' AND RS_SEQ >= '2' THEN PAYOFF 
                            WHEN POOL_CD = '002' AND RS_SEQ >= '3' THEN PAYOFF 
                            WHEN POOL_CD = '004' AND RS_SEQ >= '2' THEN PAYOFF 
                            WHEN POOL_CD = '005' AND RS_SEQ >= '2' THEN PAYOFF 
                            WHEN POOL_CD = '006' AND RS_SEQ >= '2' THEN PAYOFF 
                   END) AS SAME_PAYOFF_TOTAL, -- 동착 존재 여부 확인
                                      
                   SUM(CASE WHEN POOL_CD = '001' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_001, -- 단승 동착
                   SUM(CASE WHEN POOL_CD = '002' AND RS_SEQ >= '3' THEN PAYOFF END) AS SAME_PAYOFF_002, -- 연승 동착
                   SUM(CASE WHEN POOL_CD = '004' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_004, -- 쌍승 동착
                   SUM(CASE WHEN POOL_CD = '005' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_005, -- 복승 동착
                   SUM(CASE WHEN POOL_CD = '006' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_006 -- 삼복승 동착 			                        
			    FROM TBES_SDL_RS                                                                
			    WHERE 1=1                                                                          
			        AND MEET_CD		= '003'		                                                            
			        AND STND_YEAR	= ?     -- 18:STND_YEAR 기준년도                                               
			        AND TMS			= ?     -- 19:TMS 회차                                                           
			        AND DAY_ORD		= ?     -- 20:DAY_ORD 일차                                                   
			    GROUP BY          
			    	RACE_NO                                                              

			 ) E,                                                                                  
		 (                                       
		 		SELECT DISTINCT RACE_NO           
		 		FROM MRASYS.TBEB_RACE_DOC D        
		 	   WHERE 1=1                          
		 	       AND D.STND_YEAR = ?
		 	       AND D.TMS       = ?
		  	       AND D.DAY_ORD   = ?
--		  	   UNION SELECT 'TOTAL' FROM DUAL     
		 	) Z                                   
		 WHERE 1=1                                                                                    
		     AND C.RACE_NO(+)=Z.RACE_NO                                                                
		     AND B.RACE_NO(+)=Z.RACE_NO                                                              
             AND YB.RACE_NO(+)=Z.RACE_NO                                                             
		     AND R.RACE_NO(+)=Z.RACE_NO                                                            
		     AND D.RACE_NO(+)=Z.RACE_NO
		     AND E.RACE_NO(+)=Z.RACE_NO                                                            
		 ORDER BY Z.RACE_NO                                                                        
			
			
        ]]>
    </query>

	<query id="rsm2020_s05Today" desc="장외 매출 현황" fetchSize="10">
        <![CDATA[
			 SELECT /* rsm2020_s05Today */                                                                                     
		          DECODE(GROUPING(RACE_NO),0,RACE_NO,'TOTAL') RACE_NO	-- 경주 번호                               
		        , SUM(                                                                              
		              CASE                                                                          
		                 WHEN SELL_CD='01' AND COMM_NO='12' THEN NVL(DIV_TOTAL, 0)  
		              END                                                                           
		          ) DIV_01_07_02	-- 상봉                                                                    
		        , SUM(                                                                              
		              CASE                                                                          
		                 WHEN SELL_CD='01' AND COMM_NO='16' THEN NVL(DIV_TOTAL, 0)  
		              END                                                                           
		          ) DIV_01_07_06	-- 장안                                                                    
		        , SUM(                                                                              
		              CASE                                                                          
		                 WHEN SELL_CD='01' AND COMM_NO='22'  THEN NVL(DIV_TOTAL, 0)  
		              END                                                                           
		          ) DIV_01_07_12	-- 유성                                                                    
		        , SUM(                                                                              
		              CASE                                                                          
		                 WHEN SELL_CD='01' AND COMM_NO='20' THEN NVL(DIV_TOTAL, 0)  
		              END                                                                           
		          ) DIV_01_07_10	-- 길음                                                                    
		        , SUM(                                                                              
		              CASE                                                                          
		                 WHEN SELL_CD='01' AND COMM_NO='23' THEN NVL(DIV_TOTAL, 0)  
		              END                                                                           
		          ) DIV_01_07_13	-- 인천                                                                    
		        , SUM(                                                                              
		              CASE                                                                          
		                 WHEN SELL_CD='01' AND COMM_NO='24' THEN NVL(DIV_TOTAL, 0)  
		              END                                                                           
		          ) DIV_01_07_14	-- 시흥                                                                    
		        , SUM(                                                                              
		              CASE                                                                          
		                 WHEN SELL_CD='01' AND COMM_NO='13' THEN NVL(DIV_TOTAL, 0)  
		              END                                                                           
		          ) DIV_01_07_03	-- 일산                                                                    
		
		        , SUM(                                                                              
		              CASE                                                                          
		                 WHEN SELL_CD='01' AND COMM_NO='25'  THEN NVL(DIV_TOTAL, 0)  
		              END                                                                           
		          ) DIV_01_07_15	-- 논현                                                                    
		
		        , SUM(                                                                              
		              CASE                                                                          
		                 WHEN SELL_CD='01' AND COMM_NO='19' THEN NVL(DIV_TOTAL, 0)  
		              END                                                                           
		          ) DIV_01_07_09	-- 관악                                                                    
		
		        , SUM(                                                                              
		              CASE                                                                          
		                 WHEN SELL_CD='01' AND COMM_NO='14' THEN NVL(DIV_TOTAL, 0)  
		              END                                                                           
		          ) DIV_01_07_05	-- 분당                                                                    
		
		        , SUM(                                                                              
		              CASE                                                                          
		                 WHEN SELL_CD='01' AND COMM_NO='26' THEN NVL(DIV_TOTAL, 0)  
		              END                                                                           
		          ) DIV_01_07_16	-- 천안                                                                    
		        , SUM(                                                                              
		              CASE                                                                          
		                 WHEN SELL_CD='01' AND COMM_NO='27' THEN NVL(DIV_TOTAL, 0)  
		              END                                                                           
		          ) DIV_01_07_17	-- 올림픽공원                                                                    
		        , SUM(                                                                              
		              CASE                                                                          
		                 WHEN SELL_CD='01' AND COMM_NO='28' THEN NVL(DIV_TOTAL, 0) 
		                 ELSE 0                                                                     
		              END                                                                           
		          ) DIV_01_07_18	-- 의정부                                                                                                                                        
		        , SUM(                                                                              
		              CASE                                                                          
		                 WHEN SUBSTR(MEET_CD,2,2)!=SELL_CD AND SELL_CD IN ('01','03') AND COMM_NO<'11' AND COMM_NO != '06' THEN NVL(DIV_TOTAL, 0)  
		                 ELSE 0                                                                     
		              END                                                                           
		          ) DIV_01_07_00	-- 공동활용본장                                                                                                                                        
		        , SUM(                                                                              
		              CASE                                                                          
		                 WHEN COMM_NO='06'  THEN NVL(DIV_TOTAL, 0)                                  
		                 ELSE 0                                                                     
		              END                                                                           
		          ) DIV_01_06_01	-- 계좌                                                                    
		        , SUM(                                                                              
		              CASE                                                                          
		                 WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
		                 ELSE 0                                                                     
		              END                                                                           
		          ) DIV_04_07_01	-- 광복                                                                    
		        , SUM(                                                                              
		              CASE                                                                          
		                 WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='02' THEN NVL(DIV_TOTAL, 0)  
		                 ELSE 0                                                                     
		              END                                                                           
		          ) DIV_04_07_02	-- 서면 
		        , SUM(                                                                              
                      CASE                                                                          
                         WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='03' THEN NVL(DIV_TOTAL, 0)  
                         ELSE 0                                                                     
                      END                                                                           
                  ) DIV_04_07_03    -- 부산본장                                                                 
		        , SUM(                                                                              
		              CASE                                                                          
		                 WHEN SELL_CD='02' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
		                 ELSE 0                                                                     
		              END                                                                           
		          ) DIV_02_07_01	-- 창원본장         
		        , SUM(                                                                              
		              CASE                                                                          
		                 WHEN SELL_CD='02' AND COMM_NO='07' AND DIV_NO='02' THEN NVL(DIV_TOTAL, 0)  
		                 ELSE 0                                                                     
		              END                                                                           
		          ) DIV_02_07_02	-- 김해                                                                 
		        , SUM(                                                                              
		              CASE                                                                          
		                 WHEN  SUBSTR(MEET_CD,2,2)=SELL_CD AND COMM_NO < '11' AND COMM_NO!='06' THEN 0 
                         ELSE NVL(DIV_TOTAL, 0)                                                                        
		              END                                                                           
		          ) DIV_JIJUM		-- 장외합계                                                                    
		        , SUM(DIV_TOTAL) DIV_TOTAL                                                          
		 FROM   TBES_SDL_DT                                                                         
		 WHERE   1=1                                                                                   
		         AND STND_YEAR  = ?                                                            
		         AND    MEET_CD    = ?                                                       
		         AND    TMS        = ?                                                           
		         AND    DAY_ORD    = ?                                                       
		
		 GROUP BY RACE_NO                                                                                   
		          -- ROLLUP(RACE_NO) -- 최종 레코드의  TOTAL, SUM 생성용                                                                         
		 ORDER BY RACE_NO                                                                                                                                   
							         
        ]]>
    </query>

    <query id="rsm2020_s06Today" desc="장외 전회 매출 현황" fetchSize="10">
        <![CDATA[
			  SELECT	/* rsm2020_s06Today */                                                                                     
			        SUM(                                                                              
		              CASE                                                                          
		                 WHEN SELL_CD='01' AND COMM_NO='12' THEN NVL(DIV_TOTAL, 0)  
		              END                                                                           
			          ) DIV_01_07_02	-- 상봉                                                                    
			        , SUM(                                                                              
			              CASE                                                                          
			                 WHEN SELL_CD='01' AND COMM_NO='16' THEN NVL(DIV_TOTAL, 0)  
			              END                                                                           
			          ) DIV_01_07_06	-- 장안                                                                    
			        , SUM(                                                                              
			              CASE                                                                          
			                 WHEN SELL_CD='01' AND COMM_NO='22'  THEN NVL(DIV_TOTAL, 0)  
			              END                                                                           
			          ) DIV_01_07_12	-- 유성                                                                    
			        , SUM(                                                                              
			              CASE                                                                          
			                 WHEN SELL_CD='01' AND COMM_NO='20' THEN NVL(DIV_TOTAL, 0)  
			              END                                                                           
			          ) DIV_01_07_10	-- 길음                                                                    
			        , SUM(                                                                              
			              CASE                                                                          
			                 WHEN SELL_CD='01' AND COMM_NO='23' THEN NVL(DIV_TOTAL, 0)  
			              END                                                                           
			          ) DIV_01_07_13	-- 인천                                                                    
			        , SUM(                                                                              
			              CASE                                                                          
			                 WHEN SELL_CD='01' AND COMM_NO='24' THEN NVL(DIV_TOTAL, 0)  
			              END                                                                           
			          ) DIV_01_07_14	-- 시흥                                                                    
			        , SUM(                                                                              
			              CASE                                                                          
			                 WHEN SELL_CD='01' AND COMM_NO='13' THEN NVL(DIV_TOTAL, 0)  
			              END                                                                           
			          ) DIV_01_07_03	-- 일산                                                                    
			
			        , SUM(                                                                              
			              CASE                                                                          
			                 WHEN SELL_CD='01' AND COMM_NO='25'  THEN NVL(DIV_TOTAL, 0)  
			              END                                                                           
			          ) DIV_01_07_15	-- 논현                                                                    
			
			        , SUM(                                                                              
			              CASE                                                                          
			                 WHEN SELL_CD='01' AND COMM_NO='19' THEN NVL(DIV_TOTAL, 0)  
			              END                                                                           
			          ) DIV_01_07_09	-- 관악                                                                    
			
			        , SUM(                                                                              
			              CASE                                                                          
			                 WHEN SELL_CD='01' AND COMM_NO='14' THEN NVL(DIV_TOTAL, 0)  
			              END                                                                           
			          ) DIV_01_07_05	-- 분당                                                                    
			
			        , SUM(                                                                              
			              CASE                                                                          
			                 WHEN SELL_CD='01' AND COMM_NO='26' THEN NVL(DIV_TOTAL, 0)  
			              END                                                                           
			          ) DIV_01_07_16	-- 천안                                                                    
			        , SUM(                                                                              
			              CASE                                                                          
			                 WHEN SELL_CD='01' AND COMM_NO='27' THEN NVL(DIV_TOTAL, 0)  
			              END                                                                           
			          ) DIV_01_07_17	-- 올림픽공원                                                                    
			        , SUM(                                                                              
			              CASE                                                                          
			                 WHEN SELL_CD='01' AND COMM_NO='28' THEN NVL(DIV_TOTAL, 0) 
			                 ELSE 0                                                                     
			              END                                                                           
			          ) DIV_01_07_18	-- 의정부                                                                                                                                        
			        , SUM(                                                                              
		              CASE                                                                          
		                 WHEN SUBSTR(MEET_CD,2,2)!=SELL_CD AND SELL_CD IN ('01','03') AND COMM_NO<'11' AND COMM_NO != '06' THEN NVL(DIV_TOTAL, 0)  
		                 ELSE 0                                                                     
		              END                                                                           
			          ) DIV_01_07_00	-- 공동활용본장                                                                                                                                        
			        , SUM(                                                                              
			              CASE                                                                          
			                 WHEN COMM_NO='06'  THEN NVL(DIV_TOTAL, 0)                                  
			                 ELSE 0                                                                     
			              END                                                                           
			          ) DIV_01_06_01	-- 계좌                                                                    
			        , SUM(                                                                              
			              CASE                                                                          
			                 WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
			                 ELSE 0                                                                     
			              END                                                                           
			          ) DIV_04_07_01	-- 광복                                                                    
			        , SUM(                                                                              
			              CASE                                                                          
			                 WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='02' THEN NVL(DIV_TOTAL, 0)  
			                 ELSE 0                                                                     
			              END                                                                           
			          ) DIV_04_07_02	-- 서면 
			       , SUM(                                                                              
                          CASE                                                                          
                             WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='03' THEN NVL(DIV_TOTAL, 0)  
                             ELSE 0                                                                     
                          END                                                                           
                      ) DIV_04_07_03    -- 부산본장                                                                
			        , SUM(                                                                              
		              CASE                                                                          
		                 WHEN SELL_CD='02' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
		                 ELSE 0                                                                     
		              END                                                                           
			          ) DIV_02_07_01	-- 창원본장         
			        , SUM(                                                                              
			              CASE                                                                          
			                 WHEN SELL_CD='02' AND COMM_NO='07' AND DIV_NO='02' THEN NVL(DIV_TOTAL, 0)  
			                 ELSE 0                                                                     
			              END                                                                           
			          ) DIV_02_07_02	-- 김해                                                                 
			        , SUM(                                                                              
		              CASE                                                                          
		                 WHEN  SUBSTR(MEET_CD,2,2)=SELL_CD AND COMM_NO < '11' AND COMM_NO!='06' THEN 0 
                         ELSE NVL(DIV_TOTAL, 0)                                                                        
		              END                                                                           
			          ) DIV_JIJUM		-- 장외합계                                                                    
			        , SUM(DIV_TOTAL) DIV_TOTAL                                                          
			 FROM   VW_SDL_DT_SUM                                                                         
			 WHERE  1=1       
			 AND (MEET_CD, STND_YEAR, TMS, DAY_ORD) IN 
			     (
			      SELECT MEET_CD, STND_YEAR, TMS, ?                                                                             
		          FROM (
                        SELECT /*+ index_desc (vw_sdl_info ix_vw_sdl_info1) */
                               MEET_CD, STND_YEAR, TMS, ROW_NUMBER() OVER (PARTITION BY MEET_CD ORDER BY STND_YEAR DESC, TMS DESC) AS RNUM 
                        FROM   VW_SDL_INFO
                        WHERE  MEET_CD = ?
                        AND    STND_YEAR||TRIM(TO_CHAR(TMS,'00')) <= ?||TRIM(TO_CHAR(?,'00'))  
                        GROUP  BY MEET_CD, STND_YEAR, TMS
                       )
                  WHERE RNUM = 2                   
                  )                                                                                                                                                                                    
							         
        ]]>
    </query>    
    
    <query id="rsm2020_s12Today" desc="화요경정 매출액 조회" fetchSize="10">
        <![CDATA[
			SELECT /* rsm2020_s12Today */
			       I.RACE_NO||'경주' AS RACE_NO,
	               ROW_NUM AS GBN,
	               GBN_DESC AS GBN_DESC,
	               SUM(DIV_TOTAL) AS TOT
	        FROM TBES_SDL_DT P,
	            (
	                SELECT ROWNUM AS ROW_NUM, A.*
	                FROM   (
	
	                    SELECT MEET_CD, STND_YEAR, TMS, DAY_ORD, RACE_NO,
	                           SUBSTR(STND_YEAR,3,2)||'년 '||TMS||'회 '||DAY_ORD||'일차' AS GBN_DESC
	                    FROM (
	                            SELECT '003' AS MEET_CD, STND_YEAR, TMS, DAY_ORD, RACE_NO
	                            FROM MRASYS.TBEB_RACE
	                            WHERE MBR_CD = '001' 
	                             AND  (STND_YEAR,TMS,DAY_ORD) IN (
	                                    SELECT  STND_YEAR, TMS, DAY_ORD
	                                    FROM  VW_SDL_INFO
	                                    WHERE MEET_CD = '003'
	                                    AND    RACE_YOIL = 'TUE'
	                                    AND   stnd_year BETWEEN TO_CHAR(SYSDATE,'YYYY') -1 AND TO_CHAR(SYSDATE,'YYYY') 
	                            )
	                    )
	                    WHERE   STND_YEAR||TO_CHAR(TMS,'99')||DAY_ORD <= ?||TO_CHAR(TO_NUMBER(?),'99')||?
	                    ORDER BY 1,2,3,4,5
	                    ) A
	            ) I
	        WHERE P.MEET_CD(+)    = I.MEET_CD
	          AND P.STND_YEAR(+)  = I.STND_YEAR
	          AND P.TMS(+)        = I.TMS
	          AND P.DAY_ORD(+)    = I.DAY_ORD
	          AND P.RACE_NO(+)    = I.RACE_NO
	        GROUP BY ROW_NUM, I.RACE_NO, GBN_DESC		
	        ORDER BY 2		  
        ]]>
    </query>   
    
    
    
</queryMap>