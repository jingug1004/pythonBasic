<?xml version="1.0" encoding='EUC-KR'?>
<queryMap desc="LOGIN"> 
    <query id="tbrk_user_login" desc="조회" fetchSize="10">
        <![CDATA[
           SELECT  /* tbrk_user_login */
			         USER_ID     -- 사용자ID         
			       , USER_NM     -- 사용자명         
			       , PSWD        -- 비밀번호         
			       , NULL AS DUTY_GRP_CD -- 업무그룹코드     
			       , DEPT_CD     -- 부서코드
			       , DEPT_NM	   -- 부서이름
			       , TEAM_CD	   -- 팀코드
			       , TEAM_NM	   -- 팀이름
			       , FLOC		   -- 직위코드
			       , FGRADE	   -- 직위         
			       , TEL_NO      -- 전화번호         
			       , HP_NO       -- 휴대폰번호       
			       , NULL AS STR_DT      -- 유효기간 시작일자
			       , NULL AS END_DT      -- 유효기간 종료일자
			       , INST_ID     -- 작성자ID         
			       , INST_DT AS INST_DTM    -- 작성일시         
			       , UPDT_ID     -- 수정자ID         
			       , UPDT_DT AS UPDT_DTM    -- 수정일시
			       , PSWD_CHK
			       , LOGIN_DT         
			FROM   TBRK_USER
			WHERE  USER_ID = ?
        ]]>
    </query>
    
    <query id="tbrk_nm_login" desc="조회" fetchSize="10">
        <![CDATA[
        WITH MN_LOGIN AS ( /* tbrk_nm_login */
            SELECT   
                     T1.MN_ID -- 메뉴아이디
                   , MN_NM          -- 메뉴명
                   , ORD_NO         -- 순서번호
                   , UP_MN_ID       -- 상위메뉴ID
                   , PROGRAM_ID AS SCRN_ID       -- 화면ID
                   , (SELECT  UP_MN_ID  FROM  TBRK_MN WHERE  MN_ID = T1.UP_MN_ID) TOP_MENU_ID
                   , DECODE((SELECT  UP_MN_ID  FROM  TBRK_MN WHERE  MN_ID = T1.UP_MN_ID),
                                'R000000', '', 
                                (SELECT MN_NM||' > ' FROM TBRK_MN WHERE MN_ID = 
                                        (SELECT  UP_MN_ID  FROM  TBRK_MN WHERE  MN_ID = T1.UP_MN_ID)))
                     ||(SELECT  MN_NM  FROM  TBRK_MN WHERE  MN_ID = T1.UP_MN_ID)
                     ||' > '||
                     (SELECT  MN_NM  FROM  TBRK_MN WHERE  MN_ID = T1.MN_ID)
                     AS MN_PATH		--메뉴PATH
                   , URL            -- 메뉴URL
                   , RMK            -- 비고
                   , SRCH_YN      -- 조회여부
                   , INPT_YN      -- 입력여부
                   , APRO_YN      -- 승인여부
                   , LVL          -- 메뉴 레벨
                   , RN
                   , MN_AUTH_RMK  -- 메뉴권한의 추가필드
            FROM     (
                        SELECT 
                               TM.* ,LEVEL - 1 AS LVL, ROWNUM AS RN          
                        FROM   TBRK_MN TM
                        START  WITH TM.MN_ID ='R000000'
                        CONNECT BY PRIOR  TM.MN_ID =  TM.UP_MN_ID
                        ORDER SIBLINGS BY UP_MN_ID, TO_NUMBER(MN_LEVEL)
                     ) T1
                   , (
					  SELECT *
						FROM (	
								SELECT
								      MN_ID
								     ,MAX(SRCH_YN) SRCH_YN
								     ,MAX(INPT_YN) INPT_YN
								     ,MAX(APRO_YN) APRO_YN
								     ,MAX(RMK) AS MN_AUTH_RMK
								FROM(
								    SELECT
								          MN_ID
								         ,'T' SRCH_YN      -- 조회여부
								         ,DECODE(BASE_INST_YN, 'Y', 'T', 'F') INPT_YN
								         ,'F' APRO_YN
								         ,NULL RMK
								    FROM  TBRK_MN TM
								    WHERE BASE_SRCH_YN ='Y'
								     AND 'NORM' = (          -- NORN: 일반사용자/임시사용자,  ESTM:평가사용자
	                                          DECODE((SELECT MAX(GBN) FROM TBRK_USER WHERE USER_ID = ?),'002','TEMP','003','ESTM','NORM')
	                                 )
								    UNION ALL
								    SELECT 
								             MN_ID
								           , DECODE(SRCH_YN, 'Y', 'T', 'F') SRCH_YN      -- 조회여부       
								           , DECODE(INPT_YN, 'Y', 'T', 'F') INPT_YN      -- 입력여부                                      
								           , DECODE(APRO_YN, 'Y', 'T', 'F') APRO_YN      -- 승인여부
								           , A.RMK
								    FROM   TBRK_MN_AUTH_HIST A
								           ,TBRK_AUTH_APLY_DEPT B
								           ,TBRK_USER C
								    WHERE  A.USER_ID = ?
								       AND A.SRCH_YN = 'Y'
								       AND A.USER_ID  = B.USER_ID
								       AND B.AUTH_GBN = '001'
								       AND B.USER_ID = C.USER_ID
								       AND B.TEAM_CD = C.TEAM_CD
	                                   AND TO_CHAR(SYSDATE, 'YYYYMMDDHH24MI') BETWEEN STR_DT_TM AND END_DT_TM
								    ORDER BY MN_ID
								) A
								GROUP BY MN_ID
								ORDER BY MN_ID
							)	
					  WHERE MN_ID NOT IN( SELECT MN_ID 
                                         FROM TBRK_MN 
                                        WHERE PERSONAL_DATA_MN = 'Y' 
                                          AND MN_ID NOT IN (SELECT MN_ID 
                                                              FROM TBRK_MN_AUTH_HIST 
                                                             WHERE USER_ID = ? 
                                                               AND PERSONAL_YN = 'Y'  
                                                               AND PERSONAL_AUTH_CHK='Y'
                                                               AND TO_CHAR(SYSDATE, 'YYYYMMDDHH24MI') BETWEEN STR_DT_TM AND END_DT_TM 
                                                               AND PERSONAL_MN_IP LIKE '%' || ? || '%'
                                                           )
                                      ) 	
							
                      ) T2
            WHERE  T1.MN_ID = T2.MN_ID(+)
            ORDER BY RN
            )
            SELECT *
            FROM   MN_LOGIN
            WHERE  MN_ID IN (
                     SELECT UP_MN_ID FROM MN_LOGIN WHERE SRCH_YN ='T' GROUP BY UP_MN_ID
                     UNION
                     SELECT TOP_MENU_ID FROM MN_LOGIN WHERE SRCH_YN ='T' GROUP BY TOP_MENU_ID
                     )
            OR     SRCH_YN IS NOT NULL
            ORDER BY RN    
        ]]>
    </query>
    
    
    <query id="tbrk_top_login" desc="조회" fetchSize="10">
        <![CDATA[
        WITH MN_LOGIN AS ( /* tbrk_top_login */ 	
            SELECT   T1.MN_ID -- 메뉴아이디
                   , MN_NM          -- 메뉴명
                   , ORD_NO         -- 순서번호
                   , UP_MN_ID       -- 상위메뉴ID
                   , PROGRAM_ID AS SCRN_ID       -- 화면ID   
                   , (SELECT  UP_MN_ID  FROM  TBRK_MN WHERE  MN_ID = T1.UP_MN_ID) TOP_MENU_ID                
                   , DECODE((SELECT  UP_MN_ID  FROM  TBRK_MN WHERE  MN_ID = T1.UP_MN_ID),
                                'R000000', '', 
                                (SELECT MN_NM||' > ' FROM TBRK_MN WHERE MN_ID = 
                                        (SELECT  UP_MN_ID  FROM  TBRK_MN WHERE  MN_ID = T1.UP_MN_ID)))
                     ||(SELECT  MN_NM  FROM  TBRK_MN WHERE  MN_ID = T1.UP_MN_ID)
                     ||' > '||
                     (SELECT  MN_NM  FROM  TBRK_MN WHERE  MN_ID = T1.MN_ID)
                     AS MN_PATH		--메뉴PATH
                   , URL            -- 메뉴URL
                   , RMK            -- 비고
                   , SRCH_YN      -- 조회여부
                   , INPT_YN      -- 입력여부                   
                   , APRO_YN      -- 승인여부
                   , LVL          -- 메뉴 레벨                   
                   , RN
                   , MN_AUTH_RMK  -- 메뉴권한의 추가항목
            FROM     (
                        SELECT 
                               TM.* ,LEVEL - 1 AS LVL,ROWNUM AS RN        
                        FROM   TBRK_MN TM
                        START  WITH TM.MN_ID ='R000000'
                        CONNECT BY PRIOR  TM.MN_ID =  TM.UP_MN_ID                                    
                        ORDER SIBLINGS BY UP_MN_ID, TO_NUMBER(MN_LEVEL)
                     ) T1
                   , (
					  SELECT *
					    FROM (
								SELECT
								      MN_ID
								     ,MAX(SRCH_YN) SRCH_YN
								     ,MAX(INPT_YN) INPT_YN
								     ,MAX(APRO_YN) APRO_YN
								     ,MAX(RMK) AS MN_AUTH_RMK
								FROM(
								    SELECT
								         MN_ID
								        ,'T' SRCH_YN      -- 조회여부
	                                    ,DECODE(BASE_INST_YN, 'Y', 'T', 'F') INPT_YN
								        ,'F' APRO_YN
								        ,NULL AS RMK
								    FROM TBRK_MN TM
	                                WHERE BASE_SRCH_YN ='Y'
								          AND 'NORM' = (          -- NORN: 일반사용자/임시사용자,  ESTM:평가사용자
	                                            DECODE((SELECT MAX(GBN) FROM TBRK_USER WHERE USER_ID = ?),'002','TEMP','003','ESTM','NORM')
	                                      )
								    UNION ALL
								    SELECT 
								             MN_ID
								           , DECODE(SRCH_YN, 'Y', 'T', 'F') SRCH_YN      -- 조회여부       
								           , DECODE(INPT_YN, 'Y', 'T', 'F') INPT_YN      -- 입력여부                                      
								           , DECODE(APRO_YN, 'Y', 'T', 'F') APRO_YN      -- 승인여부
								           , RMK
								    FROM   TBRK_MN_AUTH_HIST A
								           ,TBRK_AUTH_APLY_DEPT B
								           ,TBRK_USER C
								    WHERE  A.USER_ID = ?
								        AND A.SRCH_YN = 'Y'
								        AND A.USER_ID  = B.USER_ID
								        AND B.AUTH_GBN = '001'
								        AND B.USER_ID = C.USER_ID
								        AND B.TEAM_CD = C.TEAM_CD
	                                   AND TO_CHAR(SYSDATE, 'YYYYMMDDHH24MI') BETWEEN STR_DT_TM AND END_DT_TM
								    ORDER BY MN_ID
								) A
								GROUP BY MN_ID
								ORDER BY MN_ID
							)
						WHERE MN_ID NOT IN( SELECT MN_ID 
                                         FROM TBRK_MN 
                                        WHERE PERSONAL_DATA_MN = 'Y' 
                                          AND MN_ID NOT IN (SELECT MN_ID 
                                                              FROM TBRK_MN_AUTH_HIST 
                                                             WHERE USER_ID = ?
                                                               AND PERSONAL_YN = 'Y'  
                                                               AND PERSONAL_AUTH_CHK='Y'
                                                               AND TO_CHAR(SYSDATE, 'YYYYMMDDHH24MI') BETWEEN STR_DT_TM AND END_DT_TM 
                                                               AND PERSONAL_MN_IP LIKE '%' || ? || '%'
                                                           )
                                      ) 		
                      ) T2
            WHERE  T1.MN_ID = T2.MN_ID(+)
            ORDER BY RN
            )             
            SELECT *
            FROM   MN_LOGIN
            WHERE  LVL = '1'
            AND    MN_ID IN (SELECT TOP_MENU_ID 
                             FROM   MN_LOGIN 
                             WHERE  SRCH_YN = 'T' 
                             GROUP BY TOP_MENU_ID)
            ORDER BY RN      
        ]]>
    </query>
    
	<query id="tbrk_user_login_view" desc="조회" fetchSize="10">

        <![CDATA[

			SELECT   /*tbrk_user_login_view*/
		             DISTINCT A.USER_ID     -- 사용자ID        
		           , A.USER_NM     -- 사용자명         
		           , A.PSWD        -- 비밀번호         
		           , A.ASSO_CD     -- 업무그룹코드     
		           , A.DEPT_CD     -- 부서코드
		           , A.DEPT_NM	   -- 부서이름
		           , A.TEAM_CD	   -- 팀코드
		           , A.TEAM_NM	   -- 팀이름
		           , A.FLOC		   -- 직위코드
		           , A.FGRADE	   -- 직위         
		           , A.TEL_NO      -- 전화번호         
		           , (SELECT '003' FROM TBRK_SPEC_CD WHERE GRP_CD = '090' AND CD = A.TEAM_CD) AS CRA_CD
		           , 'F' ISVALID
		           , A.BRNC_CD    -- 지점코드
		           , A.HP_NO      -- 이동전화번호 
		           , A.TEAM_DETL_CD   -- 평가 부서코드 
		           , (SELECT TEAM_CD FROM TBRK_AUTH_APLY_DEPT C 
		                  WHERE  C.AUTH_GBN = '001'
		                      AND C.USER_ID = A.USER_ID) AUTH_TEAM_CD
		           , '0' AS LOG_SEQ
		           , GBN AS GBN
		           ,'F' AS CHNG_PSWD
		           , NULL AS LOG_SEQ
		           , A.PSWD_CHK
		           , A.LOGIN_DT
		    FROM   TBRK_USER      A		
		    WHERE  A.USER_ID = NVL(?, A.USER_ID)
 
        ]]>

    </query>     
    
	<query id="tbrk_user_login_view_other_org" desc="조회" fetchSize="10">
        <![CDATA[
          SELECT    /* tbrk_user_login_view_other_org */
                    USER_SPEC_ID AS USER_ID,
                    USER_PASSWORD AS PSWD,
                    USER_NAME AS USER_NM,
                    USER_EMAIL_ID||'@kspo.or.kr' USER_EMAIL,
                    USER_TEL AS TEL_NO,
                    NULL AS CRA_CD, 
                    'F' ISVALID,
                    USER_CELL_TEL AS HP_NO,
                    USER_TITLE_NAME AS FLOC,
                    USER_TODO_NAME AS FGRADE,
                    COALESCE(
                            (SELECT CD
                              FROM TBRK_SPEC_CD
                             WHERE GRP_CD   = '018'
                               AND CD_TERM2 = A.GROUP_ID
                            ),
                            (SELECT CD_TERM1
                              FROM TBRK_SPEC_CD
                              WHERE CD = A.GROUP_ID
                                AND GRP_CD   = '090'),
                            '00'
                         ) AS BRNC_CD,
                    C.ASSO_CD||'0000' AS ASSO_CD,
                    A.DOC_GROUP_ID AS DEPT_CD,
                    A.GROUP_ID AS TEAM_CD,
                    A.GROUP_SPEC_ID AS TEAM_DETL_CD,
                    C.ASSO_NAME,
                    B.DOC_GROUP_NAME AS DEPT_NM,
                    B.GROUP_NAME AS TEAM_NM,
                    (SELECT TEAM_CD FROM TBRK_AUTH_APLY_DEPT C 
                          WHERE  C.AUTH_GBN = '001'
                              AND C.USER_ID = A.USER_ID) AUTH_TEAM_CD,
                    '0' AS LOG_SEQ,
                    '005' AS GBN,
                    'F' AS CHNG_PSWD
		           , NULL AS LOG_SEQ
            FROM    HDPORTAL.V_USER_INFO@JUPITERLINK A,
                    HDPORTAL.V_GROUP@JUPITERLINK B,
                    (
                    SELECT  SUBSTR(GROUP_ID, 1, 4) ASSO_CD,
                            GROUP_NAME ASSO_NAME
                      FROM  HDPORTAL.V_GROUP@JUPITERLINK
                     WHERE  GROUP_ID LIKE '%0000') C
            WHERE A.GROUP_ID        = B.GROUP_ID
              AND A.ADD_POS_SEQNO   = '0'
              AND A.DOC_GROUP_ID    = B.DOC_GROUP_ID
              AND B.GROUP_ID     LIKE C.ASSO_CD||'%'
              AND A.GROUP_ID     LIKE 'GA1%'
              AND A.USER_SPEC_ID = ?
        ]]>

    </query>     


	<query id="tbrk_user_login_view_get_id" desc="조회" fetchSize="10">
        <![CDATA[
          
			SELECT   /*tbrk_user_login_view_get_id*/
		             A.USER_ID     -- 사용자ID         
		    FROM   TBRK_USER      A		
		    WHERE  A.USER_NM = NVL(?, A.USER_ID) --사용자 이름
		    ORDER BY A.USER_ID
 
        ]]>

    </query>         
    <query id="user_trace_key" desc="사용자 접속정보용 SQ 조회" fetchSize="10">
        <![CDATA[  
			 SELECT  /* user_trace_key */
			        SQ_TBRK_USER_TRACE.NEXTVAL AS LOG_SEQ
			  FROM  DUAL
              ]]>
    </query>    
        
    <query id="last_login_time" desc="최종접속일시 조회" fetchSize="10">
        <![CDATA[  
			 SELECT /* last_login_time */
			        LOGIN_DT, PC_IP
             FROM (
                    SELECT /* last_login_time */ LOG_SEQ,
                           ROW_NUMBER() OVER(ORDER BY LOG_SEQ DESC) RN, 
                           TO_CHAR(LOGIN_DT, 'YYYY-MM-DD HH24:MI') AS LOGIN_DT,
                           PC_IP
                    FROM   TBRK_USER_TRACE
                    WHERE  ENO = ?
                   )
             WHERE RN = 2             
              ]]>
    </query>    
        
    <query id="emp_user_res_no" desc="최종접속일시 조회" fetchSize="10">
        <![CDATA[  
			SELECT /* emp_user_res_no */
			       FC_DEC(RES_NO) AS RES_NO
			FROM   TBRF_EV_EMP
			WHERE  (ESTM_YEAR, ESTM_NUM) IN 
			            (SELECT ESTM_YEAR, ESTM_NUM
			             FROM   TBRF_EV_MASTER
			             WHERE  ESTM_OPN_YN = 'Y'
			             AND    ESTM_END_YN = 'N')
			AND   EMP_NO = ?			
			ORDER BY ESTM_YEAR DESC, ESTM_NUM DESC
              ]]>
    </query>    
        
    <query id="user_trace_insert" desc="사용자 접속정보 저장" fetchSize="10">
        <![CDATA[  
			 INSERT  /* user_trace_insert */
			         INTO TBRK_USER_TRACE (
			      LOG_SEQ,
			      ENO,
			      PC_IP,
			      OS_VER,
			      LOGIN_DT)
			  VALUES (
			       ?,
			       ?,
			       ?,
			       ?,
			       SYSDATE
			      )  
              ]]>
    </query>        
    
    <query id="user_trace_update" desc="사용자 접속정보 추가 저장" fetchSize="10">
        <![CDATA[  
			UPDATE TBRK_USER_TRACE /* user_trace_update */ 
			SET    NAVI_PATH = NAVI_PATH ||'|'||?
			WHERE  LOG_SEQ = ?
              ]]>
    </query>        
    
    <query id="user_trace_finish" desc="사용자 접속정보 추가 저장" fetchSize="10">
        <![CDATA[  
			UPDATE TBRK_USER_TRACE /* user_trace_finish */ 
			SET    LOGOUT_DT = TO_DATE(?, 'YYYYMMDDHH24MISS')
			WHERE  LOG_SEQ = ?
			 AND   LOGOUT_DT IS NULL
              ]]>
    </query>        
    
    <query id="user_trace_finish_sysdate" desc="사용자 접속정보 추가 저장" fetchSize="10">
        <![CDATA[  
			UPDATE TBRK_USER_TRACE /* user_trace_finish */ 
			SET    LOGOUT_DT = SYSDATE
			WHERE  LOG_SEQ = ?
			 AND   LOGOUT_DT IS NULL
              ]]>
    </query>        
        
    <query id="user_login_chk_save" desc="중복로그인 확인용 기록 저장" fetchSize="10">
        <![CDATA[
            MERGE /* user_login_chk_save */
                  INTO  TBRK_LOGIN_DUP_CHK DST
            USING (
                    SELECT  ? AS USER_ID
                           ,? AS SESSION_ID
                    FROM    DUAL
                   ) SRC
            ON    (                      
                    DST.USER_ID = SRC.USER_ID
                  )
            WHEN MATCHED THEN
                UPDATE SET  
                    DST.SESSION_ID  = SRC.SESSION_ID
            WHEN NOT MATCHED THEN
                INSERT (
                        USER_ID
                       ,SESSION_ID   
                   ) VALUES (
                        SRC.USER_ID
                       ,SRC.SESSION_ID
                   )
        ]]>
    </query>
    
    <query id="user_login_check" desc="중복로그인 확인용 기록 조회" fetchSize="10">
       <![CDATA[
	       	SELECT		SESSION_ID
	       	FROM		TBRK_LOGIN_DUP_CHK
	       	WHERE		USER_ID		= ?
       ]]>
   </query>  
    <query id="personal_access_insert" desc="개인정보 접속이력 저장" fetchSize="10">
        <![CDATA[  
			 INSERT  /* personal_access_insert */
			         INTO TBRK_PSNL_ACCESS (
			      LOG_SEQ,
			      SEQ_NO,
			      FORM_ID,
			      ACCESS_DT,
			      JOB_TYPE,
			      ACTION,
			      PARAM)
			  VALUES (
			       ?,
			       (SELECT NVL(MAX(SEQ_NO),0)+1 FROM TBRK_PSNL_ACCESS WHERE LOG_SEQ = ?),
			       ?,
			       SYSDATE,
			       ?,
			       ?,
			       ?
			      )  
              ]]>
    </query>        
    
    <query id="personal_mn_access_insert" desc="개인정보처리메뉴 접속이력 저장" fetchSize="10">
        <![CDATA[  
			 INSERT  /* personal_mn_access_insert */
			         INTO TBRK_PERSONAL_MN_ACCESS (
			      LOG_SEQ,
			      SEQ_NO,
			      FORM_ID,
			      ACCESS_DT,
			      JOB_TYPE,
			      ACTION,
			      PARAM,
				  USER_IP,
				  USER_ID
			      )
			  VALUES (
			       ?,
			       (SELECT NVL(MAX(SEQ_NO),0)+1 FROM TBRK_PERSONAL_MN_ACCESS WHERE LOG_SEQ = ?),
			       ?,
			       SYSDATE,
			       ?,
			       ?,
			       ?,
			       ?,
			       ?
			      )  
              ]]>
    </query>  
    
    <query id="tbrk_user_loginchk_view" desc="조회" fetchSize="10">
        <![CDATA[
			SELECT PSWD_CHK    
				   , LOGIN_DT  
			  FROM TBRK_USER
			 WHERE USER_ID = ?
        ]]>
    </query>  
    
    <query id="user_login_pswd_chk_save" desc="로그인 비밀번호 오류 수 저장" fetchSize="10">
        <![CDATA[
			UPDATE TBRK_USER 
			SET    PSWD_CHK	= (SELECT CASE WHEN PSWD_CHK IS NULL THEN '1' ELSE TO_CHAR(TO_NUMBER(PSWD_CHK)+1) END AS PSWD_CHK 
			                     FROM TBRK_USER 
			                    WHERE USER_ID = ? ),
			       LOGIN_DT = TO_CHAR(SYSDATE, 'YYYYMMDDHH24MI')
			WHERE  USER_ID = ?
        ]]>
    </query>
    
    <query id="user_login_pswd_reset_save" desc="로그인 비밀번호 오류 초기화" fetchSize="10">
        <![CDATA[  
			UPDATE TBRK_USER 
			SET    PSWD_CHK	= '0',
			       LOGIN_DT = ''
			WHERE  USER_ID = ?
              ]]>
    </query>  
    
    
</queryMap>