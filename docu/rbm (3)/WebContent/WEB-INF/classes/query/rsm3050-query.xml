<?xml version="1.0" encoding='EUC-KR'?>

<queryMap desc="RSM3050(지점별 매출액)">
    <query id="rsm3050_s01" desc="지점별 매출액(전체, 회차별)" fetchSize="10">
        <![CDATA[
                SELECT   /* rsm3050_s01 */                                                                                                              
			        MEET_CD,		-- 경륜구분 코드
			        STND_YEAR,		-- 기준년도
			        TMS, 					-- 회차           
			        SUM(DIV_TOTAL) DIV_TOTAL,													-- 매출총계
				    SUM(CASE WHEN MEET_CD||SELL_CD IN ('00101','00201','00303','00401') AND COMM_NO IN ('01','02','03','04','08') THEN DIV_TOTAL END) BONGJANG, -- 0:MEET_CD 경주 구분 코드
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '11' THEN DIV_TOTAL END) JANG01,	-- 수원
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '12' THEN DIV_TOTAL END) JANG02,	-- 상봉
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '13' THEN DIV_TOTAL END) JANG03,	-- 일산
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '15' THEN DIV_TOTAL END) JANG04,	-- 동대문
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '14' THEN DIV_TOTAL END) JANG05,	-- 분당
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '16' THEN DIV_TOTAL END) JANG06,	-- 장안
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '17' THEN DIV_TOTAL END) JANG07,	-- 산본
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '18' THEN DIV_TOTAL END) JANG08,	-- 부천
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '19' THEN DIV_TOTAL END) JANG09,	-- 관악
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '20' THEN DIV_TOTAL END) JANG10,	-- 길음
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '21' THEN DIV_TOTAL END) JANG11,	-- 당산
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '22' THEN DIV_TOTAL END) JANG12,	-- 유성
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '23' THEN DIV_TOTAL END) JANG13,	-- 인천
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '24' THEN DIV_TOTAL END) JANG14,	-- 시흥
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '25' THEN DIV_TOTAL END) JANG15,	-- 논현
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '26' THEN DIV_TOTAL END) JANG16,	-- 천안
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '27' THEN DIV_TOTAL END) JANG17,	-- 올림픽
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '28' THEN DIV_TOTAL END) JANG18,	-- 의정부
			        SUM(CASE WHEN MEET_CD||SELL_CD IN ('00103','00203','00301','00403') AND COMM_NO IN ('01','02','03','04','08') THEN DIV_TOTAL END) JANG99, -- 공동활용본장
			        SUM(CASE WHEN MEET_CD||SELL_CD IN ('00101','00201','00303','00401') AND COMM_NO = '06' AND DIV_NO = '00' THEN DIV_TOTAL END) GYEJWA00,	-- 계좌(본장)
					SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '06' AND DIV_NO = '01' THEN DIV_TOTAL END) GYEJWA01,		-- 계좌(수원)
					SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '06' AND DIV_NO = '02' THEN DIV_TOTAL END) GYEJWA02,		-- 계좌(상봉)
					SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '06' AND DIV_NO = '03' THEN DIV_TOTAL END) GYEJWA03,		-- 계좌(일산)
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '06' AND DIV_NO = '04' THEN DIV_TOTAL END) GYEJWA04,		-- 계좌(동대문)
					SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '06' AND DIV_NO = '05' THEN DIV_TOTAL END) GYEJWA05,		-- 계좌(분당)
					SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '06' AND DIV_NO = '06' THEN DIV_TOTAL END) GYEJWA06,		-- 계좌(장안)			        
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '06' AND DIV_NO = '07' THEN DIV_TOTAL END) GYEJWA07,		-- 계좌(산본)
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '06' AND DIV_NO = '08' THEN DIV_TOTAL END) GYEJWA08,		-- 계좌(부천)
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '06' AND DIV_NO = '09' THEN DIV_TOTAL END) GYEJWA09,		-- 계좌(관악)
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '06' AND DIV_NO = '10' THEN DIV_TOTAL END) GYEJWA10,		-- 계좌(성북)
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '06' AND DIV_NO = '11' THEN DIV_TOTAL END) GYEJWA11,		-- 계좌(영등포)
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '06' AND DIV_NO = '12' THEN DIV_TOTAL END) GYEJWA12,		-- 계좌(유성)
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '06' AND DIV_NO = '13' THEN DIV_TOTAL END) GYEJWA13,		-- 계좌(인천)
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '06' AND DIV_NO = '14' THEN DIV_TOTAL END) GYEJWA14,		-- 계좌(시흥)
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '06' AND DIV_NO = '15' THEN DIV_TOTAL END) GYEJWA15,		-- 계좌(강남)
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '06' AND DIV_NO = '16' THEN DIV_TOTAL END) GYEJWA16,		-- 계좌(천안)
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '06' AND DIV_NO = '17' THEN DIV_TOTAL END) GYEJWA17,		-- 계좌(올팍)
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '06' AND DIV_NO = '18' THEN DIV_TOTAL END) GYEJWA18,		-- 계좌(의정부)
			        SUM(CASE WHEN MEET_CD||SELL_CD IN ('00103','00203','00301','00403') AND COMM_NO = '06' AND DIV_NO = '00' THEN DIV_TOTAL END) GYEJWA99,	-- 계좌(공동활용본장)
                    SUM(CASE WHEN SELL_CD NOT IN('01','03') THEN DIV_TOTAL END) GYOCHA,                    -- 교차                           
                    SUM(CASE WHEN SELL_CD = '02' THEN DIV_TOTAL END) GYOCHA02,                    -- 교차(창원)                           
                    SUM(CASE WHEN SELL_CD = '04' THEN DIV_TOTAL END) GYOCHA04                    -- 교차(부산)                           
			    FROM 
                    (
                        SELECT
                            B.MEET_CD
                            , B.STND_YEAR
                            , B.TMS
                            , A.SELL_CD
                            , A.COMM_NO
                            , A.DIV_NO
                            , SUM(DIV_TOTAL) DIV_TOTAL
                        FROM     
                            VW_SDL_DT_SUM A, -- 지점                                                                                
			                VW_SDL_INFO B   -- 경주일 정보                                                                                 
			            WHERE 1 = 1                                                                                        
			            AND B.MEET_CD = ?		-- 1:MEET_CD 경주 구분 코드                                                                       
			            AND B.RACE_DAY >= ?  	-- 2:RACE_DAY_ST 검색 기간 시작일                                                                   
			            AND B.RACE_DAY <= ?     -- 3:RACE_DAY_END 검색 기간 종료일                                                            
			            --AND B.STND_YEAR = SUBSTR( ?,1,4)   -- 4:RACE_DAY_ST 검색 기준년도
                        AND A.SELL_CD IN ('01','03')                        
			            AND A.MEET_CD = B.MEET_CD                                                        
			            AND A.STND_YEAR = B.STND_YEAR                                                    
			            AND A.TMS = B.TMS                                                                
			            AND A.DAY_ORD = B.DAY_ORD                                                        	    
            			-- 경륜,경정,교차,지점별 쿼리 분기
                        GROUP BY B.MEET_CD, B.STND_YEAR, B.TMS, A.SELL_CD, A.COMM_NO, A.DIV_NO
			            -- , ROLLUP(B.TMS) -- 최종 레코드의  TOTAL, SUM 생성용
                       UNION ALL
                       SELECT
                            B.MEET_CD
                            , B.STND_YEAR
                            , B.TMS
                            , A.SELL_CD
                            , A.SELL_CD AS COMM_NO
                            , A.SELL_CD AS DIV_NO
                            , SUM(NET_AMT) DIV_TOTAL
                        FROM     
                            VW_PC_PAYOFFS A, -- 지점                                                                                
                            VW_SDL_INFO B   -- 경주일 정보                                                                                 
                        WHERE 1 = 1                                                                                        
			            AND B.MEET_CD = ?		-- 1:MEET_CD 경주 구분 코드                                                                       
			            AND B.RACE_DAY >= ?  	-- 2:RACE_DAY_ST 검색 기간 시작일                                                                   
			            AND B.RACE_DAY <= ?     -- 3:RACE_DAY_END 검색 기간 종료일                                                            
			            --AND B.STND_YEAR = SUBSTR( ?,1,4)   -- 4:RACE_DAY_ST 검색 기준년도
                        AND A.SELL_CD NOT IN ('01','03')                        
                        AND A.MEET_CD = B.MEET_CD                                                        
                        AND A.STND_YEAR = B.STND_YEAR                                                    
                        AND A.TMS = B.TMS                                                                
                        AND A.DAY_ORD = B.DAY_ORD                                                                
                        -- 경륜,경정,교차,지점별 쿼리 분기
                        GROUP BY B.MEET_CD, B.STND_YEAR, B.TMS, A.SELL_CD
			            
                    )
               GROUP BY MEET_CD, STND_YEAR, TMS
               ORDER BY MEET_CD, STND_YEAR, TO_NUMBER(TMS)
        ]]>
    </query>
    
    <query id="rsm3050_s02" desc="지점별 매출액(전체, 월별)" fetchSize="10">
        <![CDATA[
                SELECT   /* rsm3050_s02 */                                                                                                              
                    MEET_CD,        -- 경륜구분 코드
                    STND_YEAR,        -- 기준년도
                    TO_NUMBER(TMS) AS TMS,                     -- 월별           
                    SUM(DIV_TOTAL) DIV_TOTAL,                                                    -- 매출총계
                    SUM(CASE WHEN MEET_CD||SELL_CD IN ('00101','00201','00303','00401') AND COMM_NO IN ('01','02','03','04','08') THEN DIV_TOTAL END) BONGJANG, -- 0:MEET_CD 경주 구분 코드
                    SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '11' THEN DIV_TOTAL END) JANG01,    -- 수원
                    SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '12' THEN DIV_TOTAL END) JANG02,    -- 상봉
                    SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '13' THEN DIV_TOTAL END) JANG03,    -- 일산
                    SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '15' THEN DIV_TOTAL END) JANG04,    -- 동대문
                    SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '14' THEN DIV_TOTAL END) JANG05,    -- 분당
                    SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '16' THEN DIV_TOTAL END) JANG06,    -- 장안
                    SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '17' THEN DIV_TOTAL END) JANG07,    -- 산본
                    SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '18' THEN DIV_TOTAL END) JANG08,    -- 부천
                    SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '19' THEN DIV_TOTAL END) JANG09,    -- 관악
                    SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '20' THEN DIV_TOTAL END) JANG10,    -- 길음
                    SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '21' THEN DIV_TOTAL END) JANG11,    -- 당산
                    SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '22' THEN DIV_TOTAL END) JANG12,    -- 유성
                    SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '23' THEN DIV_TOTAL END) JANG13,    -- 인천
                    SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '24' THEN DIV_TOTAL END) JANG14,    -- 시흥
                    SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '25' THEN DIV_TOTAL END) JANG15,    -- 논현
                    SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '26' THEN DIV_TOTAL END) JANG16,    -- 천안
                    SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '27' THEN DIV_TOTAL END) JANG17,    -- 올림픽
                    SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '28' THEN DIV_TOTAL END) JANG18,    -- 의정부
                    SUM(CASE WHEN MEET_CD||SELL_CD IN ('00103','00203','00301','00403') AND COMM_NO IN ('01','02','03','04','08') THEN DIV_TOTAL END) JANG99, -- 공동활용본장
                    SUM(CASE WHEN MEET_CD||SELL_CD IN ('00101','00201','00303','00401') AND COMM_NO = '06' AND DIV_NO = '00' THEN DIV_TOTAL END) GYEJWA00,    -- 계좌(본장)
					SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '06' AND DIV_NO = '01' THEN DIV_TOTAL END) GYEJWA01,		-- 계좌(수원)
					SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '06' AND DIV_NO = '02' THEN DIV_TOTAL END) GYEJWA02,		-- 계좌(상봉)
					SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '06' AND DIV_NO = '03' THEN DIV_TOTAL END) GYEJWA03,		-- 계좌(일산)
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '06' AND DIV_NO = '04' THEN DIV_TOTAL END) GYEJWA04,		-- 계좌(동대문)
					SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '06' AND DIV_NO = '05' THEN DIV_TOTAL END) GYEJWA05,		-- 계좌(분당)
					SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '06' AND DIV_NO = '06' THEN DIV_TOTAL END) GYEJWA06,		-- 계좌(장안)			        
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '06' AND DIV_NO = '07' THEN DIV_TOTAL END) GYEJWA07,		-- 계좌(산본)
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '06' AND DIV_NO = '08' THEN DIV_TOTAL END) GYEJWA08,		-- 계좌(부천)
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '06' AND DIV_NO = '09' THEN DIV_TOTAL END) GYEJWA09,		-- 계좌(관악)
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '06' AND DIV_NO = '10' THEN DIV_TOTAL END) GYEJWA10,		-- 계좌(성북)
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '06' AND DIV_NO = '11' THEN DIV_TOTAL END) GYEJWA11,		-- 계좌(영등포)
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '06' AND DIV_NO = '12' THEN DIV_TOTAL END) GYEJWA12,		-- 계좌(유성)
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '06' AND DIV_NO = '13' THEN DIV_TOTAL END) GYEJWA13,		-- 계좌(인천)
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '06' AND DIV_NO = '14' THEN DIV_TOTAL END) GYEJWA14,		-- 계좌(시흥)
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '06' AND DIV_NO = '15' THEN DIV_TOTAL END) GYEJWA15,		-- 계좌(강남)
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '06' AND DIV_NO = '16' THEN DIV_TOTAL END) GYEJWA16,		-- 계좌(천안)
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '06' AND DIV_NO = '17' THEN DIV_TOTAL END) GYEJWA17,		-- 계좌(올팍)
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '06' AND DIV_NO = '18' THEN DIV_TOTAL END) GYEJWA18,		-- 계좌(의정부)
                    SUM(CASE WHEN MEET_CD||SELL_CD IN ('00103','00203','00301','00403') AND COMM_NO = '06' AND DIV_NO = '00' THEN DIV_TOTAL END) GYEJWA99,    -- 계좌(공동활용본장)
                    SUM(CASE WHEN SELL_CD NOT IN('01','03') THEN DIV_TOTAL END) GYOCHA,                    -- 교차                           
                    SUM(CASE WHEN SELL_CD = '02' THEN DIV_TOTAL END) GYOCHA02,                    -- 교차(창원)                           
                    SUM(CASE WHEN SELL_CD = '04' THEN DIV_TOTAL END) GYOCHA04                    -- 교차(부산)                           
                FROM 
                    (
                        SELECT
                            B.MEET_CD
                            , B.STND_YEAR
                            , SUBSTR(B.RACE_DAY,5,2) AS TMS
                            , A.SELL_CD
                            , A.COMM_NO
                            , A.DIV_NO
                            , SUM(DIV_TOTAL) DIV_TOTAL
                        FROM     
                            VW_SDL_DT_SUM A, -- 지점                                                                                
                            VW_SDL_INFO B   -- 경주일 정보                                                                                 
                        WHERE 1 = 1                                                                                        
                        AND B.MEET_CD = ?        -- 1:MEET_CD 경주 구분 코드                                                                       
                        AND B.RACE_DAY >= ?      -- 2:RACE_DAY_ST 검색 기간 시작일                                                                   
                        AND B.RACE_DAY <= ?     -- 3:RACE_DAY_END 검색 기간 종료일                                                            
                        --AND B.STND_YEAR = SUBSTR( ?,1,4)   -- 4:RACE_DAY_ST 검색 기준년도
                        AND A.SELL_CD IN ('01','03')                        
                        AND A.MEET_CD = B.MEET_CD                                                        
                        AND A.STND_YEAR = B.STND_YEAR                                                    
                        AND A.TMS = B.TMS                                                                
                        AND A.DAY_ORD = B.DAY_ORD                                                                
                        -- 경륜,경정,교차,지점별 쿼리 분기
                        GROUP BY B.MEET_CD, B.STND_YEAR, SUBSTR(B.RACE_DAY,5,2), A.SELL_CD, A.COMM_NO, A.DIV_NO
                        -- , ROLLUP(B.TMS) -- 최종 레코드의  TOTAL, SUM 생성용
                       UNION ALL
                       SELECT
                            B.MEET_CD
                            , B.STND_YEAR
                            , SUBSTR(B.RACE_DAY,5,2) AS TMS
                            , A.SELL_CD
                            , A.SELL_CD AS COMM_NO
                            , A.SELL_CD AS DIV_NO
                            , SUM(NET_AMT) DIV_TOTAL
                        FROM     
                            VW_PC_PAYOFFS A, -- 지점                                                                                
                            VW_SDL_INFO B   -- 경주일 정보                                                                                 
                        WHERE 1 = 1                                                                                        
                        AND B.MEET_CD = ?        -- 1:MEET_CD 경주 구분 코드                                                                       
                        AND B.RACE_DAY >= ?      -- 2:RACE_DAY_ST 검색 기간 시작일                                                                   
                        AND B.RACE_DAY <= ?     -- 3:RACE_DAY_END 검색 기간 종료일                                                            
                        --AND B.STND_YEAR = SUBSTR( ?,1,4)   -- 4:RACE_DAY_ST 검색 기준년도
                        AND A.SELL_CD NOT IN ('01','03')                        
                        AND A.MEET_CD = B.MEET_CD                                                        
                        AND A.STND_YEAR = B.STND_YEAR                                                    
                        AND A.TMS = B.TMS                                                                
                        AND A.DAY_ORD = B.DAY_ORD                                                                
                        -- 경륜,경정,교차,지점별 쿼리 분기
                        GROUP BY B.MEET_CD, B.STND_YEAR, SUBSTR(B.RACE_DAY,5,2), A.SELL_CD
                        
                    )
               GROUP BY MEET_CD, STND_YEAR, TMS
               ORDER BY MEET_CD, STND_YEAR, TMS
        ]]>
    </query>
    
    <query id="rsm3050_s03" desc="지점별 매출액(전체, 회차별)-그린카드 합산" fetchSize="10">
        <![CDATA[
                SELECT   /* rsm3050_s03 */                                                                                                              
			        MEET_CD,		-- 경륜구분 코드
			        STND_YEAR,		-- 기준년도
			        TMS, 					-- 회차           
			        SUM(DIV_TOTAL) DIV_TOTAL,													-- 매출총계
				    SUM(CASE WHEN MEET_CD||SELL_CD IN ('00101','00201','00303','00401') AND COMM_NO IN ('01','02','03','04','08') THEN DIV_TOTAL END) BONGJANG, -- 0:MEET_CD 경주 구분 코드
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '11' THEN DIV_TOTAL END) JANG01,	-- 수원
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '12' THEN DIV_TOTAL END) JANG02,	-- 상봉
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '13' THEN DIV_TOTAL END) JANG03,	-- 일산
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '15' THEN DIV_TOTAL END) JANG04,	-- 동대문
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '14' THEN DIV_TOTAL END) JANG05,	-- 분당
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '16' THEN DIV_TOTAL END) JANG06,	-- 장안
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '17' THEN DIV_TOTAL END) JANG07,	-- 산본
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '18' THEN DIV_TOTAL END) JANG08,	-- 부천
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '19' THEN DIV_TOTAL END) JANG09,	-- 관악
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '20' THEN DIV_TOTAL END) JANG10,	-- 길음
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '21' THEN DIV_TOTAL END) JANG11,	-- 당산
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '22' THEN DIV_TOTAL END) JANG12,	-- 유성
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '23' THEN DIV_TOTAL END) JANG13,	-- 인천
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '24' THEN DIV_TOTAL END) JANG14,	-- 시흥
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '25' THEN DIV_TOTAL END) JANG15,	-- 논현
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '26' THEN DIV_TOTAL END) JANG16,	-- 천안
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '27' THEN DIV_TOTAL END) JANG17,	-- 올림픽
			        SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '28' THEN DIV_TOTAL END) JANG18,	-- 의정부
			        SUM(CASE WHEN MEET_CD||SELL_CD IN ('00103','00203','00301','00403') AND COMM_NO IN ('01','02','03','04','08') THEN DIV_TOTAL END) JANG99, -- 본장공동활용
                    SUM(CASE WHEN SELL_CD NOT IN('01','03') THEN DIV_TOTAL END) GYOCHA,                    -- 교차                           
                    SUM(CASE WHEN SELL_CD = '02' THEN DIV_TOTAL END) GYOCHA02,                    -- 교차(창원)                           
                    SUM(CASE WHEN SELL_CD = '04' THEN DIV_TOTAL END) GYOCHA04                    -- 교차(부산)                           
			    FROM 
                    (
                        SELECT
                            B.MEET_CD
                            , B.STND_YEAR
                            , B.TMS
                            , A.SELL_CD
                            , A.COMM_NO
                            , A.DIV_NO
                            , SUM(DIV_TOTAL) DIV_TOTAL
                        FROM     
                            VW_SDL_DT_SUM_GSUM A, -- 지점                                                                                
			                VW_SDL_INFO B   -- 경주일 정보                                                                                 
			            WHERE 1 = 1                                                                                        
			            AND B.MEET_CD = ?		-- 1:MEET_CD 경주 구분 코드                                                                       
			            AND B.RACE_DAY >= ?  	-- 2:RACE_DAY_ST 검색 기간 시작일                                                                   
			            AND B.RACE_DAY <= ?     -- 3:RACE_DAY_END 검색 기간 종료일                                                            
			            --AND B.STND_YEAR = SUBSTR( ?,1,4)   -- 4:RACE_DAY_ST 검색 기준년도
                        AND A.SELL_CD IN ('01','03')                        
			            AND A.MEET_CD = B.MEET_CD                                                        
			            AND A.STND_YEAR = B.STND_YEAR                                                    
			            AND A.TMS = B.TMS                                                                
			            AND A.DAY_ORD = B.DAY_ORD                                                        	    
            			-- 경륜,경정,교차,지점별 쿼리 분기
                        GROUP BY B.MEET_CD, B.STND_YEAR, B.TMS, A.SELL_CD, A.COMM_NO, A.DIV_NO
			            -- , ROLLUP(B.TMS) -- 최종 레코드의  TOTAL, SUM 생성용
                       UNION ALL
                       SELECT
                            B.MEET_CD
                            , B.STND_YEAR
                            , B.TMS
                            , A.SELL_CD
                            , A.SELL_CD AS COMM_NO
                            , A.SELL_CD AS DIV_NO
                            , SUM(NET_AMT) DIV_TOTAL
                        FROM     
                            VW_PC_PAYOFFS A, -- 지점                                                                                
                            VW_SDL_INFO B   -- 경주일 정보                                                                                 
                        WHERE 1 = 1                                                                                        
			            AND B.MEET_CD = ?		-- 1:MEET_CD 경주 구분 코드                                                                       
			            AND B.RACE_DAY >= ?  	-- 2:RACE_DAY_ST 검색 기간 시작일                                                                   
			            AND B.RACE_DAY <= ?     -- 3:RACE_DAY_END 검색 기간 종료일                                                            
			            --AND B.STND_YEAR = SUBSTR( ?,1,4)   -- 4:RACE_DAY_ST 검색 기준년도
                        AND A.SELL_CD NOT IN ('01','03')                        
                        AND A.MEET_CD = B.MEET_CD                                                        
                        AND A.STND_YEAR = B.STND_YEAR                                                    
                        AND A.TMS = B.TMS                                                                
                        AND A.DAY_ORD = B.DAY_ORD                                                                
                        -- 경륜,경정,교차,지점별 쿼리 분기
                        GROUP BY B.MEET_CD, B.STND_YEAR, B.TMS, A.SELL_CD
			            
                    )
               GROUP BY MEET_CD, STND_YEAR, TMS
               ORDER BY MEET_CD, STND_YEAR, TO_NUMBER(TMS)
        ]]>
    </query>
    
    <query id="rsm3050_s04" desc="지점별 매출액(전체, 월별)-그린카드 합산" fetchSize="10">
        <![CDATA[
                SELECT   /* rsm3050_s04 */                                                                                                              
                    MEET_CD,        -- 경륜구분 코드
                    STND_YEAR,        -- 기준년도
                    TO_NUMBER(TMS) AS TMS,                     -- 월별           
                    SUM(DIV_TOTAL) DIV_TOTAL,                                                    -- 매출총계
                    SUM(CASE WHEN MEET_CD||SELL_CD IN ('00101','00201','00303','00401') AND COMM_NO IN ('01','02','03','04','08') THEN DIV_TOTAL END) BONGJANG, -- 0:MEET_CD 경주 구분 코드
                    SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '11' THEN DIV_TOTAL END) JANG01,    -- 수원
                    SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '12' THEN DIV_TOTAL END) JANG02,    -- 상봉
                    SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '13' THEN DIV_TOTAL END) JANG03,    -- 일산
                    SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '15' THEN DIV_TOTAL END) JANG04,    -- 동대문
                    SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '14' THEN DIV_TOTAL END) JANG05,    -- 분당
                    SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '16' THEN DIV_TOTAL END) JANG06,    -- 장안
                    SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '17' THEN DIV_TOTAL END) JANG07,    -- 산본
                    SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '18' THEN DIV_TOTAL END) JANG08,    -- 부천
                    SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '19' THEN DIV_TOTAL END) JANG09,    -- 관악
                    SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '20' THEN DIV_TOTAL END) JANG10,    -- 길음
                    SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '21' THEN DIV_TOTAL END) JANG11,    -- 당산
                    SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '22' THEN DIV_TOTAL END) JANG12,    -- 유성
                    SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '23' THEN DIV_TOTAL END) JANG13,    -- 인천
                    SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '24' THEN DIV_TOTAL END) JANG14,    -- 시흥
                    SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '25' THEN DIV_TOTAL END) JANG15,    -- 논현
                    SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '26' THEN DIV_TOTAL END) JANG16,    -- 천안
                    SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '27' THEN DIV_TOTAL END) JANG17,    -- 올림픽
                    SUM(CASE WHEN SELL_CD = '01' AND COMM_NO = '28' THEN DIV_TOTAL END) JANG18,    -- 의정부
                    SUM(CASE WHEN MEET_CD||SELL_CD IN ('00103','00203','00301','00403') AND COMM_NO IN ('01','02','03','04','08') THEN DIV_TOTAL END) JANG99, -- 공동활용 본장
                    SUM(CASE WHEN SELL_CD NOT IN('01','03') THEN DIV_TOTAL END) GYOCHA,                    -- 교차                           
                    SUM(CASE WHEN SELL_CD = '02' THEN DIV_TOTAL END) GYOCHA02,                    -- 교차(창원)                           
                    SUM(CASE WHEN SELL_CD = '04' THEN DIV_TOTAL END) GYOCHA04                    -- 교차(부산)                           
                FROM 
                    (
                        SELECT
                            B.MEET_CD
                            , B.STND_YEAR
                            , SUBSTR(B.RACE_DAY,5,2) AS TMS
                            , A.SELL_CD
                            , A.COMM_NO
                            , A.DIV_NO
                            , SUM(DIV_TOTAL) DIV_TOTAL
                        FROM     
                            VW_SDL_DT_SUM_GSUM A, -- 지점                                                                                
                            VW_SDL_INFO B   -- 경주일 정보                                                                                 
                        WHERE 1 = 1                                                                                        
                        AND B.MEET_CD = ?        -- 1:MEET_CD 경주 구분 코드                                                                       
                        AND B.RACE_DAY >= ?      -- 2:RACE_DAY_ST 검색 기간 시작일                                                                   
                        AND B.RACE_DAY <= ?     -- 3:RACE_DAY_END 검색 기간 종료일                                                            
                        --AND B.STND_YEAR = SUBSTR( ?,1,4)   -- 4:RACE_DAY_ST 검색 기준년도
                        AND A.SELL_CD IN ('01','03')                        
                        AND A.MEET_CD = B.MEET_CD                                                        
                        AND A.STND_YEAR = B.STND_YEAR                                                    
                        AND A.TMS = B.TMS                                                                
                        AND A.DAY_ORD = B.DAY_ORD                                                                
                        -- 경륜,경정,교차,지점별 쿼리 분기
                        GROUP BY B.MEET_CD, B.STND_YEAR, SUBSTR(B.RACE_DAY,5,2), A.SELL_CD, A.COMM_NO, A.DIV_NO
                        -- , ROLLUP(B.TMS) -- 최종 레코드의  TOTAL, SUM 생성용
                       
                       UNION ALL
                       SELECT
                            B.MEET_CD
                            , B.STND_YEAR
                            , SUBSTR(B.RACE_DAY,5,2) AS TMS
                            , A.SELL_CD
                            , A.SELL_CD AS COMM_NO
                            , A.SELL_CD AS DIV_NO
                            , SUM(NET_AMT) DIV_TOTAL
                        FROM     
                            VW_PC_PAYOFFS A, -- 지점                                                                                
                            VW_SDL_INFO B   -- 경주일 정보                                                                                 
                        WHERE 1 = 1                                                                                        
                        AND B.MEET_CD = ?        -- 1:MEET_CD 경주 구분 코드                                                                       
                        AND B.RACE_DAY >= ?      -- 2:RACE_DAY_ST 검색 기간 시작일                                                                   
                        AND B.RACE_DAY <= ?     -- 3:RACE_DAY_END 검색 기간 종료일                                                            
                        --AND B.STND_YEAR = SUBSTR( ?,1,4)   -- 4:RACE_DAY_ST 검색 기준년도
                        AND A.SELL_CD NOT IN ('01','03')                        
                        AND A.MEET_CD = B.MEET_CD                                                        
                        AND A.STND_YEAR = B.STND_YEAR                                                    
                        AND A.TMS = B.TMS                                                                
                        AND A.DAY_ORD = B.DAY_ORD                                                                
                        -- 경륜,경정,교차,지점별 쿼리 분기
                        GROUP BY B.MEET_CD, B.STND_YEAR, SUBSTR(B.RACE_DAY,5,2), A.SELL_CD
                        
                    )
               GROUP BY MEET_CD, STND_YEAR, TMS
               ORDER BY MEET_CD, STND_YEAR, TMS
        ]]>
    </query>
    

</queryMap>