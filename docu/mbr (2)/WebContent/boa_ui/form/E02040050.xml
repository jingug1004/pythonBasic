<?xml version="1.0" encoding="euc-kr"?>
<Window>
	<Form Height="856" Id="E02040050" Left="8" OnKeyDown="fcHotKey" OnLoadCompleted="fcFormLoadSetting" OnUnloadCompleted="fcFormUnloadProcess" PidAttrib="7" Title="편성결과" Top="8" Ver="1.0" Width="1270" WorkArea="true">
		<Datasets>
			<Dataset DataSetType="Dataset" Id="dsInComCd">
				<Contents>
					<colinfo id="DSNAME" size="20" type="STRING"/>
					<colinfo id="CD_GRP_ID" size="6" type="STRING"/>
					<colinfo id="QUERY_ID" size="256" type="STRING"/>
					<colinfo id="DESCRIPTION" size="256" type="STRING"/>
					<colinfo id="ALL_YN" size="1" type="STRING"/>
					<record>
						<ALL_YN></ALL_YN>
						<CD_GRP_ID>E00006</CD_GRP_ID>
						<DESCRIPTION>경정장코드</DESCRIPTION>
						<DSNAME>dsOutSMbr</DSNAME>
						<QUERY_ID></QUERY_ID>
					</record>
					<record>
						<ALL_YN></ALL_YN>
						<CD_GRP_ID>E00119</CD_GRP_ID>
						<DESCRIPTION>편성상태코드</DESCRIPTION>
						<DSNAME>dsOutSOrganStat</DSNAME>
						<QUERY_ID></QUERY_ID>
					</record>
					<record>
						<ALL_YN></ALL_YN>
						<CD_GRP_ID>E00110</CD_GRP_ID>
						<DESCRIPTION>결장코드</DESCRIPTION>
						<DSNAME>dsOutAbse</DSNAME>
						<QUERY_ID></QUERY_ID>
					</record>
					<record>
						<ALL_YN></ALL_YN>
						<CD_GRP_ID></CD_GRP_ID>
						<DESCRIPTION>경주간격</DESCRIPTION>
						<DSNAME>dsOutSRaceGap</DSNAME>
						<QUERY_ID>tbeb_race_gap_fb001</QUERY_ID>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutSStndYear">
				<Contents>
					<colinfo id="STND_YEAR" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutSMbr">
				<Contents>
					<colinfo id="GRP_CD" size="256" type="STRING"/>
					<colinfo id="GRP_NM" size="256" type="STRING"/>
					<colinfo id="CD" size="256" type="STRING"/>
					<colinfo id="CD_NM" size="256" type="STRING"/>
					<colinfo id="RMK" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutSRaceTms">
				<Contents>
					<colinfo id="Tms" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutSDayOrd">
				<Contents>
					<colinfo id="DAY_ORD" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutRacer"></Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutRaceTemp">
				<Contents>
					<colinfo id="STND_YEAR" size="256" type="STRING"/>
					<colinfo id="MBR_CD" size="256" type="STRING"/>
					<colinfo id="TMS" size="256" type="STRING"/>
					<colinfo id="DAY_ORD" size="256" type="STRING"/>
					<colinfo id="RACE_NO" size="256" type="STRING"/>
					<colinfo id="RACE_REG_NO" size="256" type="STRING"/>
					<colinfo id="RACER_NO" size="256" type="STRING"/>
					<colinfo id="RACER_GRD_CD" size="256" type="STRING"/>
					<colinfo id="NM_KOR" size="256" type="STRING"/>
					<colinfo id="RACER_STAT_CD" size="256" type="STRING"/>
					<colinfo id="FAVOR_COURSE_CD" size="256" type="STRING"/>
					<colinfo id="EMAIL_ADDR" size="256" type="STRING"/>
					<colinfo id="RACER_PERIO_NO" size="256" type="STRING"/>
					<colinfo id="NATV_PLAC_CD" size="256" type="STRING"/>
					<colinfo id="NATY_UNIV" size="256" type="STRING"/>
					<colinfo id="TRRAS_RACER_RANK" size="256" type="STRING"/>
					<colinfo id="TRRAS_TMS_6_AMU_RANK_SCR" size="256" type="STRING"/>
					<colinfo id="TRRAS_TMS_6_AVG_RANK_SCR" size="256" type="STRING"/>
					<colinfo id="TRRAS_TMS_6_AMU_ACDNT_SCR" size="256" type="STRING"/>
					<colinfo id="TRRAS_TMS_6_AVG_ACDNT_SCR" size="256" type="STRING"/>
					<colinfo id="TRRAS_TMS_6_AVG_SCR" size="256" type="STRING"/>
					<colinfo id="TRRAS_TMS_6_WIN_RATIO" size="256" type="STRING"/>
					<colinfo id="TRRAS_TMS_6_HIGH_RANK_RATIO" size="256" type="STRING"/>
					<colinfo id="TRRAS_TMS_6_HIGH_3_RANK_RATIO" size="256" type="STRING"/>
					<colinfo id="TRRAS_TMS_6_AVG_STRT_TM" size="256" type="STRING"/>
					<colinfo id="TRRAS_TMS_8_RANK_ORD" size="256" type="STRING"/>
					<colinfo id="TRRAS_TMS_6_RACE_CNT" size="256" type="STRING"/>
					<colinfo id="TRRAS_TMS_6_RANK_1" size="256" type="STRING"/>
					<colinfo id="TRRAS_TMS_6_RANK_2" size="256" type="STRING"/>
					<colinfo id="TRRAS_TMS_6_RANK_3" size="256" type="STRING"/>
					<colinfo id="TRRAS_AMU_RANK_SCR" size="256" type="STRING"/>
					<colinfo id="TRRAS_AVG_RANK_SCR" size="256" type="STRING"/>
					<colinfo id="TRRAS_AMU_ACDNT_SCR" size="256" type="STRING"/>
					<colinfo id="TRRAS_AVG_ACDNT_SCR" size="256" type="STRING"/>
					<colinfo id="TRRAS_BF_QURT_ACDNT_SCR" size="256" type="STRING"/>
					<colinfo id="TRRAS_AF_QURT_ACDNT_SCR" size="256" type="STRING"/>
					<colinfo id="TRRAS_AVG_SCR" size="256" type="STRING"/>
					<colinfo id="TRRAS_WIN_RATIO" size="256" type="STRING"/>
					<colinfo id="TRRAS_HIGH_RANK_RATIO" size="256" type="STRING"/>
					<colinfo id="TRRAS_HIGH_3_RANK_RATIO" size="256" type="STRING"/>
					<colinfo id="TRRAS_AVG_STRT_TM" size="256" type="STRING"/>
					<colinfo id="TRRAS_RUN_CNT" size="256" type="STRING"/>
					<colinfo id="TRRAS_RACE_DT_CNT" size="256" type="STRING"/>
					<colinfo id="TRRAS_RACE_CNT" size="256" type="STRING"/>
					<colinfo id="TRRAS_TOT_RACE_CNT" size="256" type="STRING"/>
					<colinfo id="TRRAS_BF_RACE_CNT" size="256" type="STRING"/>
					<colinfo id="TRRAS_AF_RACE_CNT" size="256" type="STRING"/>
					<colinfo id="TRRAS_RANK_1_CNT" size="256" type="STRING"/>
					<colinfo id="TRRAS_RANK_2_CNT" size="256" type="STRING"/>
					<colinfo id="TRRAS_RANK_3_CNT" size="256" type="STRING"/>
					<colinfo id="TRRAS_RANK_4_CNT" size="256" type="STRING"/>
					<colinfo id="TRRAS_RANK_5_CNT" size="256" type="STRING"/>
					<colinfo id="TRRAS_RANK_6_CNT" size="256" type="STRING"/>
					<colinfo id="TRRAS_RANK_ETC_CNT" size="256" type="STRING"/>
					<colinfo id="TRRAS_DGRE_JUDG_F_CNT" size="256" type="STRING"/>
					<colinfo id="TRRAS_DGRE_JUDG_L_CNT" size="256" type="STRING"/>
					<colinfo id="TRRAS_F_CNT" size="256" type="STRING"/>
					<colinfo id="TRRAS_L_CNT" size="256" type="STRING"/>
					<colinfo id="TRRAS_ABSE_CNT" size="256" type="STRING"/>
					<colinfo id="TRRAS_RACE_ESC_1_CNT" size="256" type="STRING"/>
					<colinfo id="TRRAS_RACE_ESC_2_CNT" size="256" type="STRING"/>
					<colinfo id="TRRAS_FOUL_ELIM_CNT" size="256" type="STRING"/>
					<colinfo id="TRRAS_ELIM_CNT" size="256" type="STRING"/>
					<colinfo id="TRRAS_FOUL_WARN_CNT" size="256" type="STRING"/>
					<colinfo id="TRRAS_WARN_CNT" size="256" type="STRING"/>
					<colinfo id="TRRAS_ATTEN_CNT" size="256" type="STRING"/>
					<colinfo id="TRRAS_BF_TMS" size="256" type="STRING"/>
					<colinfo id="TRRAS_BF_BF_TMS" size="256" type="STRING"/>
					<colinfo id="TRRAS_BF_BF_BF_TMS" size="256" type="STRING"/>
					<colinfo id="TRRAS_BF_MBR_CD" size="256" type="STRING"/>
					<colinfo id="TRRAS_BF_BF_MBR_CD" size="256" type="STRING"/>
					<colinfo id="TRRAS_BF_BF_BF_MBR_CD" size="256" type="STRING"/>
					<colinfo id="TMRAS_RUN_CNT" size="256" type="STRING"/>
					<colinfo id="TMRAS_RACE_CNT" size="256" type="STRING"/>
					<colinfo id="TMRAS_RACE_DT_CNT" size="256" type="STRING"/>
					<colinfo id="TMRAS_RANK_1_CNT" size="256" type="STRING"/>
					<colinfo id="TMRAS_RANK_2_CNT" size="256" type="STRING"/>
					<colinfo id="TMRAS_RANK_3_CNT" size="256" type="STRING"/>
					<colinfo id="TMRAS_RANK_4_CNT" size="256" type="STRING"/>
					<colinfo id="TMRAS_RANK_5_CNT" size="256" type="STRING"/>
					<colinfo id="TMRAS_RANK_6_CNT" size="256" type="STRING"/>
					<colinfo id="TMRAS_ACCU_RANK_SCR" size="256" type="STRING"/>
					<colinfo id="TMRAS_AVG_RANK_SCR" size="256" type="STRING"/>
					<colinfo id="TMRAS_WIN_RATIO" size="256" type="STRING"/>
					<colinfo id="TMRAS_HIGH_RANK_RATIO" size="256" type="STRING"/>
					<colinfo id="TMRAS_HIGH_3_RANK_RATIO" size="256" type="STRING"/>
					<colinfo id="TMRAS_TMS_3_ITRDT_RUN_TM" size="256" type="STRING"/>
					<colinfo id="TMRAS_AVG_ITRDT_RUN_TM" size="256" type="STRING"/>
					<colinfo id="TMRAS_MAX_ITRDT_RUN_TM" size="256" type="STRING"/>
					<colinfo id="TMRAS_MIN_ITRDT_RUN_TM" size="256" type="STRING"/>
					<colinfo id="TMRAS_ITRDT_RUN_TM_DVTN" size="256" type="STRING"/>
					<colinfo id="TBRAS_RUN_CNT" size="256" type="STRING"/>
					<colinfo id="TBRAS_RACE_CNT" size="256" type="STRING"/>
					<colinfo id="TBRAS_RACE_DT_CNT" size="256" type="STRING"/>
					<colinfo id="TBRAS_RANK_1_CNT" size="256" type="STRING"/>
					<colinfo id="TBRAS_RANK_2_CNT" size="256" type="STRING"/>
					<colinfo id="TBRAS_RANK_3_CNT" size="256" type="STRING"/>
					<colinfo id="TBRAS_RANK_4_CNT" size="256" type="STRING"/>
					<colinfo id="TBRAS_RANK_5_CNT" size="256" type="STRING"/>
					<colinfo id="TBRAS_RANK_6_CNT" size="256" type="STRING"/>
					<colinfo id="TBRAS_ACCU_RANK_SCR" size="256" type="STRING"/>
					<colinfo id="TBRAS_AVG_RANK_SCR" size="256" type="STRING"/>
					<colinfo id="TBRAS_WIN_RATIO" size="256" type="STRING"/>
					<colinfo id="TBRAS_HIGH_RANK_RATIO" size="256" type="STRING"/>
					<colinfo id="TBRAS_HIGH_3_RANK_RATIO" size="256" type="STRING"/>
					<colinfo id="TBRAS_TMS_3_ITRDT_RUN_TM" size="256" type="STRING"/>
					<colinfo id="TBRAS_AVG_ITRDT_RUN_TM" size="256" type="STRING"/>
					<colinfo id="TBRAS_MAX_ITRDT_RUN_TM" size="256" type="STRING"/>
					<colinfo id="TBRAS_MIN_ITRDT_RUN_TM" size="256" type="STRING"/>
					<colinfo id="TBRAS_ITRDT_RUN_TM_DVTN" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutArrangeCurrRow"></Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutSOrganStat">
				<Contents>
					<colinfo id="GRP_CD" size="256" type="STRING"/>
					<colinfo id="GRP_NM" size="256" type="STRING"/>
					<colinfo id="CD" size="256" type="STRING"/>
					<colinfo id="CD_NM" size="256" type="STRING"/>
					<colinfo id="RMK" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutAbse">
				<Contents>
					<colinfo id="GRP_CD" size="256" type="STRING"/>
					<colinfo id="GRP_NM" size="256" type="STRING"/>
					<colinfo id="CD" size="256" type="STRING"/>
					<colinfo id="CD_NM" size="256" type="STRING"/>
					<colinfo id="RMK" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutFile">
				<Contents>
					<colinfo id="FILE_NAME" size="256" type="STRING"/>
					<colinfo id="FILE_URL" size="256" type="STRING"/>
					<colinfo id="PROG_BAR" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutSRace">
				<Contents>
					<colinfo id="Tms" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutSRaceGap">
				<Contents>
					<colinfo id="RACE_NO" size="256" type="STRING"/>
					<colinfo id="STR_RACE_NO" size="256" type="STRING"/>
					<colinfo id="END_RACE_NO" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutRace">
				<Contents>
					<colinfo id="RACE_NO" size="256" type="STRING"/>
					<colinfo id="RACE_REG_NO" size="256" type="STRING"/>
					<colinfo id="RACER_NO" size="256" type="STRING"/>
					<colinfo id="RACER_GRD_CD" size="256" type="STRING"/>
					<colinfo id="MOT_NO" size="256" type="STRING"/>
					<colinfo id="BOAT_NO" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutExcelExport"></Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutExcelImport"></Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutLastUpdate">
				<Contents>
					<colinfo id="LAST_ID" size="256" type="STRING"/>
					<colinfo id="LAST_NM" size="256" type="STRING"/>
					<colinfo id="LAST_DTM" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Editable="True" Id="dsOutTempOrgan">
				<Contents>
					<colinfo id="STND_YEAR" size="256" type="STRING"/>
					<colinfo id="MBR_CD" size="256" type="STRING"/>
					<colinfo id="TMS" size="256" type="STRING"/>
					<colinfo id="DAY_ORD" size="256" type="STRING"/>
					<colinfo id="ORGAN_NM" size="256" type="STRING"/>
					<colinfo id="ORGAN_TYPE" size="256" type="STRING"/>
					<colinfo id="ORGAN_OWNER_ID" size="256" type="STRING"/>
					<colinfo id="ORGAN_SEQ" size="256" type="STRING"/>
				</Contents>
			</Dataset>
		</Datasets>
		<Div Enable="FALSE" Height="20" Id="divBtnLst" Left="934" TabOrder="32" Text="Div0" Top="6" Url="common::comButtonType.xml" Visible="FALSE" Width="330">
			<Contents></Contents>
		</Div>
		<Static Height="22" Id="stFormTitle" Left="32" Style="snis_m_title" TabOrder="1" Text="조회조건" Top="8" VAlign="Middle" Width="132"></Static>
		<Shape BKColor="user0" Bottom="32" Height="28" Id="Shape0" Left="98" LineColor="user1" Right="635" RoundHeight="5" RoundUnit="Pixel" RoundWidth="5" TabOrder="2" Top="4" Type="RoundRect" Width="537"></Shape>
		<Static Align="Right" Height="20" Id="Static1" Left="289" Style="snis_if_lable" TabOrder="6" Text="회차" Top="8" VAlign="Middle" Width="36"></Static>
		<Div BKColor="user0" Height="22" Id="divSearch" Left="583" TabOrder="9" Text="Div0" Top="8" Url="common::comButtonSearch.xml" Width="50">
			<Contents></Contents>
		</Div>
		<Combo Border="Flat" CodeColumn="Tms" DataColumn="Tms" Height="20" Id="cboSRaceTms" InnerDataset="dsOutSRaceTms" Left="326" OnChanged="cboSRaceTms_OnChanged" Style="snis_if_input01" TabOrder="8" Top="7" Width="45"></Combo>
		<Combo Border="Flat" CodeColumn="CD" DataColumn="CD_NM" Height="20" Id="cboSMbr" InnerDataset="dsOutSMbr" Left="229" OnChanged="cboSStndYear_OnChanged" Style="snis_if_input01" TabOrder="11" Top="7" Width="70"></Combo>
		<Combo Border="Flat" BorderColor="user1" CodeColumn="STND_YEAR" DataColumn="STND_YEAR" Height="20" Id="cboSStndYear" InnerDataset="dsOutSStndYear" Left="129" OnChanged="cboSStndYear_OnChanged" Style="snis_m_input01" TabOrder="7" Top="7" Width="62"></Combo>
		<Image Height="20" Id="imgFormTitle" ImageID="m_titleblet" Left="8" TabOrder="3" Top="8" Width="17"></Image>
		<Button Align="Left" ButtonStyle="TRUE" Height="20" Id="btnRacerView" ImageID="btn_txt_02" Left="963" LeftMargin="15" OnClick="btnRacerView_OnClick" Style="snis_btn" TabOrder="4" Text="선수" Top="6" Transparent="TRUE" Width="50"></Button>
		<Static Align="Right" Height="20" Id="Static6" Left="101" Style="snis_if_lable" TabOrder="5" Text="년도" Top="8" VAlign="Middle" Width="28"></Static>
		<Static Align="Right" Height="20" Id="Static0" Left="192" Style="snis_if_lable" TabOrder="10" Text="경정장" Top="8" VAlign="Middle" Width="36"></Static>
		<Static Align="Right" Height="20" Id="Static4" Left="362" Style="snis_if_lable" TabOrder="12" Text="일차" Top="8" VAlign="Middle" Width="36"></Static>
		<Combo Border="Flat" CodeColumn="DAY_ORD" DataColumn="DAY_ORD" Height="20" Id="cboSDayOrd" InnerDataset="dsOutSDayOrd" Left="399" OnChanged="cboSDayOrd_OnChanged" Style="snis_if_input01" TabOrder="13" Top="7" Width="40"></Combo>
		<Button Align="Left" ButtonStyle="TRUE" Height="20" Id="btnBoatChng" ImageID="btn_txt_04" Left="683" LeftMargin="15" OnClick="btnBoatChng_OnClick" Style="snis_btn" TabOrder="16" Text="보트변경" Top="6" Transparent="TRUE" Width="74"></Button>
		<Button Align="Left" ButtonStyle="TRUE" Height="20" Id="btnMotChng" ImageID="btn_txt_04" Left="759" LeftMargin="15" OnClick="btnMotChng_OnClick" Style="snis_btn" TabOrder="15" Text="모터변경" Top="6" Transparent="TRUE" Width="74"></Button>
		<Button Align="Left" ButtonStyle="TRUE" Height="20" Id="btnRacerChng" ImageID="btn_txt_04" Left="835" LeftMargin="15" OnClick="btnRacerChng_OnClick" Style="snis_btn" TabOrder="14" Text="선수변경" Top="6" Transparent="TRUE" Width="74"></Button>
		<Combo BindDataset="dsOutSDayOrd" Border="Flat" CodeColumn="CD" Column="ORGAN_STAT_CD" DataColumn="CD_NM" Enable="FALSE" Height="20" Id="cboSOrganStat" InnerDataset="dsOutSOrganStat" Left="439" Style="snis_if_input01" TabOrder="17" Top="7" Width="65"></Combo>
		<Button Align="Left" ButtonStyle="TRUE" Height="20" Id="btnConfirm" ImageID="btn_txt_02" Left="1015" LeftMargin="15" OnClick="fcSave" Style="snis_btn" TabOrder="18" Text="확정" Top="6" Transparent="TRUE" Width="50"></Button>
		<Button Align="Left" ButtonStyle="TRUE" Height="20" Id="btnCancel" ImageID="btn_txt_02" Left="911" LeftMargin="15" OnClick="btnCancel_OnClick" Style="snis_btn" TabOrder="19" Text="취소" Top="6" Transparent="TRUE" Width="50"></Button>
		<Button Cursor="HAND" Height="20" Id="btnSave" ImageID="btn_Save" Left="1155" OnClick="fcSave" TabOrder="20" Text="저장" Top="6" Transparent="TRUE" Width="50"></Button>
		<Button Cursor="HAND" Height="20" Id="btnEnd" ImageID="btn_close" Left="1215" OnClick="fcEnd" TabOrder="22" Text="종료" Top="6" Transparent="TRUE" Width="50"></Button>
		<Button Align="Left" ButtonStyle="TRUE" Height="20" Id="btnExcelDownload" ImageID="grid_down" Left="638" LeftMargin="15" OnClick="btnExcelDownload_OnClick" Style="snis_btn" TabOrder="23" Top="6" Transparent="TRUE" Width="20"></Button>
		<Button Align="Left" ButtonStyle="TRUE" Height="20" Id="btnExcelUpload" ImageID="grid_up" Left="660" LeftMargin="15" OnClick="btnExcelUpload_OnClick" Style="snis_btn" TabOrder="24" Top="6" Transparent="TRUE" Width="20"></Button>
		<Checkbox Height="21" Id="chkAll" Left="9" OnClick="chkAll_OnClick" TabOrder="25" Top="23" Value="FALSE" Width="12"></Checkbox>
		<Static Height="19" Id="Static2" Left="26" TabOrder="26" Text="전체경주" Top="26" Width="70"></Static>
		<Static Color="user21" Height="13" Id="Static3" Left="15" TabOrder="27" Text="최종수정" Top="832" Width="60"></Static>
		<Edit BindDataset="dsOutLastUpdate" Column="LAST_NM" Height="21" Id="Edit0" Left="77" Readonly="TRUE" TabOrder="28" Top="827" Width="67"></Edit>
		<Edit BindDataset="dsOutLastUpdate" Column="LAST_DTM" Height="21" Id="Edit1" Left="149" Readonly="TRUE" TabOrder="29" Top="827" Width="139"></Edit>
		<Combo Border="Flat" CodeColumn="ORGAN_NM" DataColumn="ORGAN_NM" Editable="TRUE" Height="20" Id="cboTempOrgan" InnerDataset="dsOutTempOrgan" Left="503" OnChanged="cboTempOrgan_OnChanged" Style="snis_if_input01" TabOrder="30" Top="7" Width="80"></Combo>
		<Button Align="Left" ButtonStyle="TRUE" Height="20" Id="btnTempToOrganSave" ImageID="btn_txt_05" Left="1067" LeftMargin="15" OnClick="fcSave" Style="snis_btn" TabOrder="31" Text="미확정저장" Top="6" Transparent="TRUE" Width="86"></Button>
		<Image Height="20" Id="ImgSpace" ImageID="m_vline" Left="1203" TabOrder="21" Top="6" Width="12"></Image>
	</Form>
	<Script><![CDATA[/***************************************************************************************************
*   Form Common Script                                                                             *
*     현재 총 100 컬럼임 되도록 100 컬럼 안으로 코딩을 하세요                                      *
123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 1234567890
***************************************************************************************************/

/***************************************************************************************************
*                                         공통 Script Include                                      *
***************************************************************************************************/
#include "lib::boa_common_script.js";
#include "lib::boa_app_script.js";

/***************************************************************************************************
*                                          화면 변수 선언부                                        *
***************************************************************************************************/
var sFormId       = 'E02040050';
var sBUTTONLIST   = 'TTFFFT';                          //공통기능정의(버튼순으로 T or F)
var sUSERAUTH     = '';                                //사용자별 프로그램 사용 권한
var sFORMCAPTION  = '';                                //Form의 Title 정보
var sFORMLOCATION = '';                                //Form의 Location 정보
var sUSERLAVEL    = '';                                //Form의 사용  Level
var vREVOBJ       = Array(9);                          //결과값 처리를 위한 오브젝트 
var sGRDTIT       = "";                                //그리드 제목
var sCUROBJ       ;                                    //현재 LOST FOCUS 오브젝트

var oLastDs       = null;
var oLastDsRow    = 0;

var sgFileName    = "";
var sgChangeType  = "";

var maxRegNo      = 6;
var sSaveDayOrd = "";		// 저장일차
var sSaveType = "";		// 확정, 미확정저장, 저장								
var sOrganType = "";    // 저장편성타입 - NEW, REAL, TEMP
var sOrganId = ""; 		// NEW, TEMP 편성의 소유자정보

var sModifyStatCd = "000";

/***************************************************************************************************
*                                         공통 Event 처리 부분                                     *
***************************************************************************************************/
/*-------------------------------------------------------------------------------------------------+
>>  최초 화면 Load時 처리 할 사항
+-------------------------------------------------------------------------------------------------*/
function fcFormLoadSetting(obj) {
	//화면환경 설정
	sFORMCAPTION  = obj.Title;
	sFORMLOCATION = "";

	//화면 정보 Display 및 Button 권한 설정
	sBUTTONLIST   = 'T' + sInpt + 'FFFT';
	if ( sInpt == "T" ) {
        btnSave.Visible        = true;
        btnConfirm.Visible     = true;
	} else {
        btnSave.Visible        = false;
        btnConfirm.Visible     = false;
	}
	
	fnc_FormLoadSetting(obj, sFORMCAPTION, sFORMLOCATION, sBUTTONLIST, sUSERAUTH);
	
	//초기 화면 BK Color설정 
	fnc_SetBKColor(this);

    //년도조회
    fce_SetStndYear(dsOutSStndYear, toInteger(fce_GetSysdate("YYYY")));
    cboSStndYear.Index = 0;

    // 현재 회차 조회
    fce_GetCurTms();

	//공통코드 조회
	fce_GetComboDs(dsInComCd);
	
	// 화면 초기화
	fcSetRacerDataset();
}

/*-------------------------------------------------------------------------------------------------+
>>  최초 화면 Load時 처리 할 사항
+-------------------------------------------------------------------------------------------------*/
function fcFormUnloadProcess(obj) {
	//자료 변경 여부를 체크하고자 하는  DataSet Object를 넘긴다.
	var sDataset = "";
    for( var i = 1; i <= dsOutSRace.GetRowCount(); i++ ) {
        sDataset += "dsOutRace_" + i + "|";
    }

	if ( !fnc_FormUnloadCheck(sDataset , sFormId) ) return false;
}

/*-------------------------------------------------------------------------------------------------+
>>  단축키 처리(Form KeyDown)
+-------------------------------------------------------------------------------------------------*/
function fcHotKey(obj,objSenderObj,nChar,bShift,bControl,bAlt,nLLParam,nHLParam) {

	//Return Key Press時 Next Component focus
	if ( nChar == 13 ) {
		var oFocusComponent = GetNextComponent(true);
		oFocusComponent.setfocus();
		return;
	}

	//Control Key가 눌려져 있다면 단축키 처리
	//if (bControl) fnc_HotKey(this, nChar);
}

/***************************************************************************************************
*                                      공통 버튼 Event 처리 부분                                   *
***************************************************************************************************/
/*-------------------------------------------------------------------------------------------------+
>>  취소 버튼 클릭 時 처리
+-------------------------------------------------------------------------------------------------*/
function fcInit(obj) {
    dsOutRacer.ClearData();
    for( var i = 1; i <= dsOutSRace.GetRowCount(); i++ ) {
        var dsObj = object("dsOutRace_" + i);
        dsObj.ClearData();
    }
    for( var i = 1; i <= dsOutSRace.GetRowCount(); i++ ) {
        object("mskRace" + i).Value = "";
    }
    oLastDs       = dsOutRace_1;
    //dsOutRaceInfo.ClearData();
    //dsOutStndRaceCnt.ClearData();
}


/*-------------------------------------------------------------------------------------------------+
>>  조회 버튼 클릭 時 처리
+-------------------------------------------------------------------------------------------------*/
function fcSearchCheck(obj) {
	fcInit(obj);
	
    var nTmsRow        = fnc_GetExistValue(dsOutSRaceTms, "TMS", cboSRaceTms.Value);  // 
    var sState         = dsOutSRaceTms.GetColumn(nTmsRow, "RACE_TMS_STAT_CD");           // 해당 회차 상태
	
    if ( sState < "020" ) {
		fnc_Message(SNIS_BOA_B008, "N", "장비배정작업");
		return false;
    }

	return true;
}

function fcSearch(obj) {
    if ( !fcSearchCheck(obj) ) return;
    sModifyStatCd = "000";

	var sServiceName = "e02040050-service:searchRace";
    var sInDataSet   = "";
    var sOutDataSet  = "dsOutRacer=dsOutRacer ";
    /*
    sOutDataSet += "dsOutRace_1=dsOutRace_1 ";
    sOutDataSet += "dsOutRace_2=dsOutRace_2 ";
    sOutDataSet += "dsOutRace_3=dsOutRace_3 ";
    sOutDataSet += "dsOutRace_4=dsOutRace_4 ";
    sOutDataSet += "dsOutRace_5=dsOutRace_5 ";
    sOutDataSet += "dsOutRace_6=dsOutRace_6 ";
    sOutDataSet += "dsOutRace_7=dsOutRace_7 ";
    sOutDataSet += "dsOutRace_8=dsOutRace_8 ";
    sOutDataSet += "dsOutRace_9=dsOutRace_9 ";
    sOutDataSet += "dsOutRace_10=dsOutRace_10 ";
    sOutDataSet += "dsOutRace_11=dsOutRace_11 ";
    sOutDataSet += "dsOutRace_12=dsOutRace_12 ";
    sOutDataSet += "dsOutRace_13=dsOutRace_13 ";
    sOutDataSet += "dsOutRace_14=dsOutRace_14 ";
    sOutDataSet += "dsOutRace_15=dsOutRace_15 ";
    if(dsOutSRace.GetRowCount()>=16) sOutDataSet += "dsOutRace_16=dsOutRace_16 ";
    if(dsOutSRace.GetRowCount()>=17) sOutDataSet += "dsOutRace_17=dsOutRace_17 ";
    if(dsOutSRace.GetRowCount()>=18) sOutDataSet += "dsOutRace_18=dsOutRace_18 ";
	*/
	/* 경주수 변경에 영향받지 않도록 수정. 2015.02.08. sdhong */
    for ( var i = 1; i <= dsOutSRace.GetRowCount(); i++ ) {
		sOutDataSet	+= "dsOutRace_" + i + "=dsOutRace_" + i + " ";
    }

    sOutDataSet += "dsOutLastUpdate=dsOutLastUpdate ";		//최종수정자 정보
    
	fce_AddParam(Trim("STND_YEAR"), cboSStndYear.Value);
	fce_AddParam(Trim("MBR_CD   "), cboSMbr.Value     );
	fce_AddParam(Trim("TMS      "), cboSRaceTms.Value );
	fce_AddParam(Trim("DAY_ORD  "), cboSDayOrd.Value  );
	fce_AddParam(Trim("ORGAN_TYPE"), dsOutTempOrgan.GetColumn(cboTempOrgan.Index, "ORGAN_TYPE") );   
	 
    if(dsOutTempOrgan.GetColumn(cboTempOrgan.Index, "ORGAN_TYPE")=="TEMP" ||
		dsOutTempOrgan.GetColumn(cboTempOrgan.Index, "ORGAN_TYPE")=="NEW"
		){
		var tempOrganInfo = Split(dsOutTempOrgan.GetColumn(cboTempOrgan.Index, "ORGAN_SEQ"), "-");

		fce_AddParam(Trim("ORGAN_OWNER_ID"), tempOrganInfo[0]);
		fce_AddParam(Trim("ORGAN_SEQ"),  tempOrganInfo[1]);
		
		//trace("tempOrganInfo[0]::: " + tempOrganInfo[0]);
		//trace("tempOrganInfo[1]::: " + tempOrganInfo[1]);
	}	 

	fce_SendTransaction(sServiceName, sInDataSet, sOutDataSet, "fcCallBack");
}


/*-------------------------------------------------------------------------------------------------+
>>  변경선수및장비 조회
+-------------------------------------------------------------------------------------------------*/
function fcSearchCurrRowCheck(obj) {
	
	return true;
}

function fcSearchCurrRow(obj) {
    if ( !fcSearchCurrRowCheck(obj) ) return;

	var sServiceName = "e02040010-service:searchArrangeCurrRow";
    var sInDataSet   = "";
    var sOutDataSet  = "dsOutArrangeCurrRow=dsOutArrangeCurrRow ";
    
	fce_AddParam(Trim("STND_YEAR"), oLastDs.GetColumn(oLastDs.currow, "STND_YEAR"));
	fce_AddParam(Trim("MBR_CD   "), oLastDs.GetColumn(oLastDs.currow, "MBR_CD"   ));
	fce_AddParam(Trim("TMS      "), oLastDs.GetColumn(oLastDs.currow, "TMS"      ));
	fce_AddParam(Trim("RACER_NO "), oLastDs.GetColumn(oLastDs.currow, "RACER_NO" ));
	fce_AddParam(Trim("MOT_NO   "), oLastDs.GetColumn(oLastDs.currow, "MOT_NO"   ));
	fce_AddParam(Trim("BOAT_NO  "), oLastDs.GetColumn(oLastDs.currow, "BOAT_NO"  ));

	fce_SendTransaction(sServiceName, sInDataSet, sOutDataSet, "fcCallBack");
}


/*-------------------------------------------------------------------------------------------------+
>>  저장 버튼 클릭 時 처리
+-------------------------------------------------------------------------------------------------*/
function fcSaveCheck(obj) {

    var dsName  = "dsOutRace_";
    var grdName = "grdRace_";
    
    // 편성확정시
    if ( obj.id == "btnConfirm" ) {
        if ( !fnc_Message(SNIS_BOA_B006, "Y") ) {
            return false;
        }
    } else if ( obj.id == "btnTempToOrganSave" ) {
        if ( !fnc_Message(SNIS_BOA_B016, "Y") ) {
            return false;
        }
    } else if ( obj.id == "btnSave" ) {
        if ( !fnc_message("저장 하시겠습니까?", "Y") ) {
            return false;
        }    
    }
    
    // 경주간격 Check전 기준정보가 있는지 체크
    if(dsOutSRace.GetRowCount() > dsOutSRaceGap.GetRowCount()){		
    
		fnc_Message(SNIS_BOA_B017, "N");
		
		var sArg  = " Arg_sStndYear=" + quote(cboSStndYear.Value);
			sArg += " Arg_sMbrCd="    + quote(cboSMbr.Value     );
			sArg += " Arg_sTms="      + quote(cboSRaceTms.Value );
			sArg += " Arg_sDayOrd="   + quote(cboSDayOrd.Value  );
	
		var asReturn = Dialog("form::E02040048.xml", sArg, 700, 360, "");
	
		if ( asReturn == false ) return;
		
		return false;
    }  
    

    for ( var i = 1; i <= dsOutSRace.GetRowCount(); i++ ) {
        var objDs  = object(dsName  + i);
        var objGrd = object(grdName + i);
        
        oDataSet          = objDs;
        sMandatoryColID   = "RACER_NO|MOT_NO|BOAT_NO";
        sMandatoryColName = "선수|모터번호|보트번호";
        oGrid             = objGrd;
//        if ( fnc_GetMandatoryViolateRow(oDataSet, sMandatoryColID, sMandatoryColName, oGrid) > -1 ) {
//            return false;
//        }
    }

    dsOutRace.ClearData();
    var nRow = 0;
    for ( var i = 1; i <= dsOutSRace.GetRowCount(); i++ ) {
        var objDs  = object(dsName  + i);
        for ( var j = 0; j < objDs.GetRowCount(); j++ ) {
            dsOutRace.AddRow();
            dsOutRace.SetColumn(nRow, "RACE_NO"     , i);
            dsOutRace.SetColumn(nRow, "RACE_REG_NO" , objDs.GetColumn(j, "RACE_REG_NO"));
            dsOutRace.SetColumn(nRow, "RACER_NO"    , objDs.GetColumn(j, "RACER_NO"   ));
            nRow++;
        }
    }

    var nRacerNo   = 0;
    var sRacerNo   = "";
    var nStrRaceNo = 0;
    var nEndRaceNo = 0;
    var nLocRaceNo = 0;
    var sRaceNo    = "";

    // 경주간격 Check
    for ( var i = 1; i <= dsOutSRace.GetRowCount(); i++ ) {
        var objDs = object(dsName + i);
        sRaceNo = i;
        if ( i < 10 ) sRaceNo = "0" + i;
        
        for ( var j = 0; j <= objDs.GetRowCount(); j++ ) {
            if ( fnc_IsNull(objDs.GetColumn(j, "RACER_NO")) ) continue;
            if ( fnc_IsNull(objDs.GetColumn(j, "ETC_RACE")) ) continue;
            
            // 경주간견 조회
            nRow = fnc_GetExistValue(dsOutSRaceGap, "RACE_NO", sRaceNo);
            if ( nRow < 0 ) continue;
            nStrRaceNo = toInteger(dsOutSRaceGap.GetColumn(nRow, "STR_RACE_NO"));
            nEndRaceNo = toInteger(dsOutSRaceGap.GetColumn(nRow, "END_RACE_NO"));
            
            // 선수 리스트에서 조회
            sRacerNo = objDs.GetColumn(j, "RACER_NO");
            
            nRow = fnc_GetExistValue(dsOutRace, "RACER_NO", sRacerNo);
            
            if ( toInteger(dsOutRace.GetColumn(nRow, "RACE_NO"    )) == toInteger(objDs.GetColumn(j, "RACE_NO"    )) 
              && toInteger(dsOutRace.GetColumn(nRow, "RACE_REG_NO")) == toInteger(objDs.GetColumn(j, "RACE_REG_NO"))  ) {
                nRow = fnc_GetExistValue(dsOutRace, "RACER_NO", sRacerNo, nRow + 1);
            }
            if ( nRow < 0 ) continue;
            
            nLocRaceNo = toInteger(dsOutRace.GetColumn(nRow, "RACE_NO"));
            
            if ( nStrRaceNo <= nLocRaceNo && nEndRaceNo >= nLocRaceNo ) {
                var sMessage = objDs.GetColumn(j, "NM_KOR") + "선수는 " + toInteger(sRaceNo) + "경주와 " 
                                                                          + nLocRaceNo         + "경주에 배정되어있습니다."
                             + "\n계속하시겠습니까?";
                if ( fnc_message(sMessage, "Y") ) {
                    break;
                } else {
                    return false;
                }
            }
        }
    }

	return true;
}

function fcSave(obj) {
    if ( !fcSaveCheck(obj) ) return;
    

	var sServiceName = "e02040050-service:saveRace";
	/*
    var sInDataSet   = "dsOutRace_1=dsOutRace_1:u "
                     + "dsOutRace_2=dsOutRace_2:u "
                     + "dsOutRace_3=dsOutRace_3:u "
                     + "dsOutRace_4=dsOutRace_4:u "
                     + "dsOutRace_5=dsOutRace_5:u "
                     + "dsOutRace_6=dsOutRace_6:u "
                     + "dsOutRace_7=dsOutRace_7:u "
                     + "dsOutRace_8=dsOutRace_8:u "
                     + "dsOutRace_9=dsOutRace_9:u "
                     + "dsOutRace_10=dsOutRace_10:u "
                     + "dsOutRace_11=dsOutRace_11:u "
                     + "dsOutRace_12=dsOutRace_12:u "
                     + "dsOutRace_13=dsOutRace_13:u "
                     + "dsOutRace_14=dsOutRace_14:u "
                     + "dsOutRace_15=dsOutRace_15:u ";
                     
	if(dsOutSRace.GetRowCount()>=16) sInDataSet += "dsOutRace_16=dsOutRace_16:u ";
    if(dsOutSRace.GetRowCount()>=17) sInDataSet += "dsOutRace_17=dsOutRace_17:u ";
    if(dsOutSRace.GetRowCount()>=18) sInDataSet += "dsOutRace_18=dsOutRace_18:u ";
    */
    /* 경주수 변경에 영향받지 않도록 수정. 2015.02.08. sdhong */
    var sInDataSet   = "";
    for ( var i = 1; i <= dsOutSRace.GetRowCount(); i++ ) {
		sInDataSet	+= "dsOutRace_" + i + "=dsOutRace_" + i + ":u ";
    }
                         
    var sOutDataSet  = "";
    
	fce_AddParam(Trim("STND_YEAR"), cboSStndYear.Value);
	fce_AddParam(Trim("MBR_CD   "), cboSMbr.Value     );
	fce_AddParam(Trim("TMS      "), cboSRaceTms.Value );
	fce_AddParam(Trim("DAY_ORD  "), cboSDayOrd.Value  );
	fce_AddParam(Trim("RACE_DAY "), dsOutSDayOrd.GetColumn(dsOutSDayOrd.row, "RACE_DAY") );
	fce_AddParam(Trim("ORGAN_TYPE"), dsOutTempOrgan.GetColumn(cboTempOrgan.Index, "ORGAN_TYPE") );    
                 
    if ( obj.id == "btnConfirm" ) {	// 편성확정
    
        fce_AddParam(Trim("ORGAN_STAT_CD"), "002");
        var nRow = fnc_GetExistValue(dsOutSDayOrd, "DAY_ORD", cboSDayOrd.Value);
        dsOutSDayOrd.SetColumn(nRow, "ORGAN_STAT_CD", "002");
        fce_AddParam(Trim("SAVE_TYPE"),  "CONFIRM");
        
    } else if ( obj.id == "btnTempToOrganSave" ) {	// 편성미확정저장
		/*
		sInDataSet   = "dsOutRace_1=dsOutRace_1:a "
						 + "dsOutRace_2=dsOutRace_2:a "
						 + "dsOutRace_3=dsOutRace_3:a "
						 + "dsOutRace_4=dsOutRace_4:a "
						 + "dsOutRace_5=dsOutRace_5:a "
						 + "dsOutRace_6=dsOutRace_6:a "
						 + "dsOutRace_7=dsOutRace_7:a "
						 + "dsOutRace_8=dsOutRace_8:a "
						 + "dsOutRace_9=dsOutRace_9:a "
						 + "dsOutRace_10=dsOutRace_10:a "
						 + "dsOutRace_11=dsOutRace_11:a "
						 + "dsOutRace_12=dsOutRace_12:a ";
						 + "dsOutRace_13=dsOutRace_13:a "
						 + "dsOutRace_14=dsOutRace_14:a "
						 + "dsOutRace_15=dsOutRace_15:a ";
						 
		if(dsOutSRace.GetRowCount()>=16) sInDataSet += "dsOutRace_16=dsOutRace_16:a ";
		if(dsOutSRace.GetRowCount()>=17) sInDataSet += "dsOutRace_17=dsOutRace_17:a ";
		if(dsOutSRace.GetRowCount()>=18) sInDataSet += "dsOutRace_18=dsOutRace_18:a ";
		*/
		/* 경주수 변경에 영향받지 않도록 수정. 2015.02.08. sdhong */
        sInDataSet   = "";
		for ( var i = 1; i <= dsOutSRace.GetRowCount(); i++ ) {
			sInDataSet	+= "dsOutRace_" + i + "=dsOutRace_" + i + ":a ";
		}
 
        fce_AddParam(Trim("ORGAN_STAT_CD"), "001");
        fce_AddParam(Trim("SAVE_TYPE"),  "SAVE_TO_ORGAN");
        
        // 덮어쓰기 표시처리
        // var objDs;
        // for ( var i = 1; i <= dsOutSRace.GetRowCount(); i++ ) {
			// objDs = object("dsOutRace_" + i);
            // for ( var j = 0; j < toInteger(dsOutSRace.GetColumn(i-1, "RACE_REG_NO_CNT")); j++ ) {
				// if ( fnc_IsNull(objDs.GetColumn(j, "RACER_NO")) ) objDs.SetColumn(j, "RACER_NO", "");
				// objDs.SetColumn(j, "RACER_NO", objDs.GetColumn(j, "RACER_NO"));
            // }
        // }     
        
    } else if ( obj.id == "btnSave" ) {	//저장
		fce_AddParam(Trim("ORGAN_STAT_CD"), "001");
		fce_AddParam(Trim("SAVE_TYPE"),  "SAVE");
		if (sModifyStatCd == "001") sModifyStatCd = "002";
    }
    
    if(dsOutTempOrgan.GetColumn(cboTempOrgan.Index, "ORGAN_TYPE")=="TEMP" ||
		dsOutTempOrgan.GetColumn(cboTempOrgan.Index, "ORGAN_TYPE")=="NEW"
		){
		var tempOrganInfo = Split(dsOutTempOrgan.GetColumn(cboTempOrgan.Index, "ORGAN_SEQ"), "-");

		fce_AddParam(Trim("ORGAN_OWNER_ID"), tempOrganInfo[0]);
		fce_AddParam(Trim("ORGAN_SEQ"),  tempOrganInfo[1]);
	}
	
	sSaveDayOrd = cboSDayOrd.Value ;
	sSaveType = obj.id;		// 확정(btnConfirm), 미확정저장(btnTempToOrganSave), 저장(btnSave)								
	sOrganType = dsOutTempOrgan.GetColumn(cboTempOrgan.Index, "ORGAN_TYPE");    // 저장편성타입 - NEW, REAL, TEMP
	sOrganId = dsOutTempOrgan.GetColumn(cboTempOrgan.Index, "ORGAN_SEQ"); 		// NEW, TEMP 편성의 소유자정보	
    
	fce_SendTransaction(sServiceName, sInDataSet, sOutDataSet, "fcCallBack");
}

/*-------------------------------------------------------------------------------------------------+
>>  엑셀 버튼 클릭 時 처리
+-------------------------------------------------------------------------------------------------*/
function fcToExcel(obj) {

}

/*-------------------------------------------------------------------------------------------------+
>>  인쇄 버튼 클릭 時 처리
+-------------------------------------------------------------------------------------------------*/
function fcPrint(obj) {

}

/*-------------------------------------------------------------------------------------------------+
>>  화면 종료(닫기) 버튼 클릭 時 처리
+-------------------------------------------------------------------------------------------------*/
function fcEnd(obj) {
	//화면 종료
	Close();	
}

/*-------------------------------------------------------------------------------------------------+
>>  행추가 버튼 클릭 時 처리
+-------------------------------------------------------------------------------------------------*/
function fcAddRow(obj) {
	
}

/*-------------------------------------------------------------------------------------------------+
>>  행삭제 버튼 클릭 時 처리
+-------------------------------------------------------------------------------------------------*/
function fcDelRow(obj) {

}

/***************************************************************************************************
*                                      공통 Function 처리 부분                                     *
***************************************************************************************************/
/*-------------------------------------------------------------------------------------------------+
>>  Text Box가 Focus를 받을 때
+-------------------------------------------------------------------------------------------------*/
function fcEditFocus(obj) {
	fnc_EditFocus(obj);
}

/*-------------------------------------------------------------------------------------------------+
>>  그리드 정렬
+-------------------------------------------------------------------------------------------------*/
function fcGridSort(obj,nCell,nX,nY) {
	//특정 Head 클릭 시 해당 항목으로 Sort(만약 특정 컬럼을 누를때만 소트하고자 한다면 nCell로 조건)
	fnc_GridSort(obj, object(obj.BindDataset), nCell);	
}

/*-------------------------------------------------------------------------------------------------+
>>  Help Popup Open
+-------------------------------------------------------------------------------------------------*/
function fcHelpDialoge(obj,nX,nY) {

}

/*-------------------------------------------------------------------------------------------------+
>>  그리드에서 팝업 처리 
+-------------------------------------------------------------------------------------------------*/
function fcGrdOnExpandEdit(objGrd, nRow, nCell, strVal, nPivotIndex){
	
}

/***************************************************************************************************
*                                      사용자 정의  처리 부분                                      *
***************************************************************************************************/
/*-------------------------------------------------------------------------------------------------+
>>  Transaction 후 처리 해야 할 내용!
+-------------------------------------------------------------------------------------------------*/
function fcCallBack(sServiceName, ErrorCode, ErrorMSG) {

	if ( !fnc_Result(ErrorCode, ErrorMSG) ) return;
	
	// 공통코드 조회시
	if ( sServiceName == "common-service:searchCode" ) {
        cboSMbr.Index = 0;
        cboSMbr.Value = fce_GetUserInfo("MBR_CD");

        fce_GetRaceTms(cboSStndYear.Value, cboSMbr.Value, "", "dsOutSRaceTms");
		return;
	}

	// 회차 리스트 조회시
	if ( sServiceName == "common_race-service:searchRaceTms" ) {
        cboSRaceTms.Index = 0;
        if ( cboSStndYear.Value == fce_GetCurRaceInfo("STND_YEAR") ) {
            var nIndexRow = fnc_GetExistValue(dsOutSRaceTms, "TMS", fce_GetCurRaceInfo("TMS"));
            if ( nIndexRow > -1 ) cboSRaceTms.Index = nIndexRow;
        }

        fce_GetRaceDayOrd(cboSStndYear.Value, cboSMbr.Value, cboSRaceTms.Value, "dsOutSDayOrd");
		return;
	}

	// 일차 리스트 조회시
	if ( sServiceName == "common_race-service:searchRaceDayOrd" ) {
        cboSDayOrd.Index = 0;
        if ( cboSStndYear.Value == fce_GetCurRaceInfo("STND_YEAR") 
         && cboSRaceTms.Value == fce_GetCurRaceInfo("TMS") ) {
            var nIndexRow = fnc_GetExistValue(dsOutSDayOrd, "DAY_ORD", fce_GetCurRaceInfo("DAY_ORD"));
            if ( nIndexRow > -1 ) cboSDayOrd.Index = nIndexRow;
        }
        
		// 저장 후 재조회시 처리
		if(sSaveType!=""){
			cboSDayOrd.Index = fnc_GetExistValue(dsOutSDayOrd, "DAY_ORD", sSaveDayOrd);
		}
        
        cboSDayOrd_OnChanged();
		return;
	}

	// 경주 리스트 조회시
	if ( sServiceName == "common_race-service:searchRace" ) {
	
		// 가편성 목록 조회
		fcSearchTempOrganList();
		
		for(var i = 0; i < dsOutSRace.GetRowCount(); i++){
			if(maxRegNo < toInteger(dsOutSRace.GetColumn(i, "RACE_REG_NO_CNT"))) maxRegNo = toInteger(dsOutSRace.GetColumn(i, "RACE_REG_NO_CNT"));
		}	

		// 저장 후 재조회시 제외
		if(sSaveType==""){
			fcSetOrganComponents();
		}
		
		

		return;
	}

	// 조회 후
	if ( sServiceName == "e02040050-service:searchRace" ) {

		var objDs = "";
        for ( var i = 1; i <= dsOutSRace.GetRowCount(); i++ ) {
			objDs = object("dsOutRace_" + i);
            for ( var j = 0; j < toInteger(dsOutSRace.GetColumn(i-1, "RACE_REG_NO_CNT")); j++ ) {
				if ( fnc_IsNull(objDs.GetColumn(j, "RACER_NO")) ) continue;
                fcGetEtcRace(object("dsOutRace_" + i), j);
            }
        }
     
        for ( var i = 1; i <= dsOutSRace.GetRowCount(); i++ ) {
            ComputeAvgScr(i);
        }

        if ( dsOutRacer.GetRowCount() > 0 ) {
            dsOutRacer.Sort("RACER_NO");
        }
        
		return;
	}
	
	// 가편성 목록 조회 후
	if ( sServiceName == "e02040040-service:searchTempOrgan" ) {
	
		var nRow = fnc_GetExistValue(dsOutSOrganStat, "CD", cboSOrganStat.Value);	
		if ( dsOutSOrganStat.GetColumn(nRow, "CD") == "002" ) {
			dsOutTempOrgan.DeleteRow(0);  // 신규삭제
		}
		
		// 저장 후 재조회시 처리
		if(sSaveType!=""){
				
			if(sOrganType=="NEW" && sSaveType=="btnSave"){
				cboTempOrgan.Index = fnc_GetExistValue(dsOutTempOrgan, "ORGAN_SEQ", sOrganId);
			}
			if(sOrganType=="REAL" && sSaveType=="btnConfirm"){
				cboTempOrgan.Index = fnc_GetExistValue(dsOutTempOrgan, "ORGAN_TYPE", "REAL");
			}
			if(sOrganType=="TEMP" && sSaveType=="btnTempToOrganSave"){
				cboTempOrgan.Index = fnc_GetExistValue(dsOutTempOrgan, "ORGAN_TYPE", "REAL");
			}	
						
		}else if(cboTempOrgan.Index==-1){
			cboTempOrgan.Index = 0;
		}
		
		cboTempOrgan_OnChanged();
		return;
	}
		

	// 변경 선수 조회 후
	if ( sServiceName == "e02040010-service:searchArrangeCurrRow" ) {
        var nRaceNo = toInteger(substr(oLastDs.Id, length("dsOutRace_")));
        var sColumn = "";
        if ( sgChangeType == "RACER" ) {
            sColumn = "ORG_RACER_NO";
        } else if ( sgChangeType == "MOT" ) {
            sColumn = "ORG_MOT_NO";
        } else if ( sgChangeType == "BOAT" ) {
            sColumn = "ORG_BOAT_NO";
        }

        var sValue  = oLastDs.GetColumn(oLastDs.currow, sColumn);
        fcChangeEquip(nRaceNo, sColumn, sValue);
		return;
	}

	// 저장 후
	if ( sServiceName == "e02040050-service:saveRace" ) {
		/*
        for ( var i = 1; i <= dsOutSRace.GetRowCount(); i++ ) {
            var objDs = object("dsOutRace_" + i);
            if (objDs.getRowCount() < toInteger(dsOutSRace.GetColumn(i, "RACE_REG_NO_CNT")) ) {
                for ( var j = objDs.getRowCount(); j < toInteger(dsOutSRace.GetColumn(i, "RACE_REG_NO_CNT")); j++ ) {
                    objDs.Addrow();
                    objDs.SetColumn(j, "RACE_REG_NO", (j + 1));
                }
            }
        }*/
	
		var objDs = "";
        for ( var i = 1; i <= dsOutSRace.GetRowCount(); i++ ) {
			objDs = object("dsOutRace_" + i);
            for ( var j = 0; j < toInteger(dsOutSRace.GetColumn(i-1, "RACE_REG_NO_CNT")); j++ ) {
				if ( fnc_IsNull(objDs.GetColumn(j, "RACER_NO")) ) continue;
                fcGetEtcRace(object("dsOutRace_" + i), j);
            }
        }
     
        for ( var i = 1; i <= dsOutSRace.GetRowCount(); i++ ) {
            ComputeAvgScr(i);
        }

        if ( dsOutRacer.GetRowCount() > 0 ) {
            dsOutRacer.Sort("RACER_NO");
        }
        
        fce_GetRaceDayOrd(cboSStndYear.Value, cboSMbr.Value, cboSRaceTms.Value, "dsOutSDayOrd");
        
		return;
	}
	
	//오류가 없이 정상 처리되었다면...
	fcPostProcess(sServiceName);
}

/*-------------------------------------------------------------------------------------------------+
>>  Transaction 후 Post Process!
+-------------------------------------------------------------------------------------------------*/
function fcPostProcess(sServiceName) {

}

/*-------------------------------------------------------------------------------------------------+
>>  코드나 명 입력 후 Lost Focus 시 해당 정보 Display
+-------------------------------------------------------------------------------------------------*/
function fcCodeNameDisplay(obj) {

}

/*-------------------------------------------------------------------------------------------------+
>>  회차 변경시 일차 조회
+-------------------------------------------------------------------------------------------------*/
function cboSRaceTms_OnChanged(obj,strCode,strText,nOldIndex,nNewIndex)
{
	fce_GetRaceDayOrd(cboSStndYear.Value, cboSMbr.Value, cboSRaceTms.Value, "dsOutSDayOrd");
}

/*-------------------------------------------------------------------------------------------------+
>>  선수리스트 보기 버튼 클릭
+-------------------------------------------------------------------------------------------------*/
function btnRacerView_OnClick(obj)
{
    var nCount = global.AllWindows.count;

	for ( var i = 0; i < nCount; i++ ) {
		if ( global.AllWindows[i].id == "E02040051" ) {
            global.AllWindows[i].SetFocus();
            return;
		}
	}

	Open("form::E02040051.xml", , 300, 300, "WinLevel=-1 TaskBar=true", 100, 100);
}

/*-------------------------------------------------------------------------------------------------+
>>  경주 Grid확장/축소 보기 
+-------------------------------------------------------------------------------------------------*/
function fcUpDownRace(obj)
{
    var objName = "btnExtendRace";
	var sRaceNo = substr(obj.Id, length(objName));
	var nStart  = toInteger(sRaceNo) % 5;
	if ( nStart == 0 ) nStart = 5;
	
    var addWidth = 840;
    if(dsOutSRace.GetRowCount()>15) addWidth = 1260;
    
    var bVisible = false;
    if ( Object("btnExtendRace" + sRaceNo).imageID == "grid_up" ) bVisible = true;
    
    for ( var i = nStart; i <= dsOutSRace.GetRowCount(); i+=5 ) {
        var grdName = Object("grdRace_" + i);
        var spName  = Object("spRace"  + i);
        var stName  = Object("stRace"  + i);
        var mskName = Object("mskRace" + i);
        var btnReln = Object("btnReln" + i);
        var btnName = Object("btnExtendRace" + i);

        var nLeft   = 6;
        if ( toInteger(i) >  5 ) {
            nLeft   = 426;
        }
        if ( toInteger(i) > 10 ) {
            nLeft   = 846;
        }
        if ( toInteger(i) > 15 ) {
            nLeft   = 1266;
        }

        if ( sRaceNo == i ) {
            if ( grdName.width > 415 ) {
                for ( var j = 1; j < grdName.GetColCount(); j++ ) {
                    if ( j > 7 ) {
                        grdName.SetColProp(j, "Width", 0);
                    }
                }
                grdName.width   = grdName.width - addWidth;
                grdName.Left    = nLeft;
                grdName.AutoFit = true;

                btnName.imageID = "grid_down";
                stName.color    = "#0000FF";
                
            } else {
                grdName.width   = grdName.width + addWidth;
				grdName.Left    = 6;
                grdName.AutoFit = false;
                for ( var j = 1; j < grdName.GetColCount(); j++ ) {
                    grdName.SetColProp(j, "Width", 70);
                }

                btnName.imageID = "grid_up";
                stName.color    = "#FF0000";
            }
            grdName.Visible = true;
            continue;
        }

        grdName.Visible = bVisible;
        grdName.Left    = nLeft;
        btnName.imageID = "grid_down";
        stName.color    = "#0000FF";
        if ( grdName.width > 415 ) {
            grdName.width = 415;

            for ( var j = 1; j < grdName.GetColCount(); j++ ) {
                if ( j > 7 ) {
                    grdName.SetColProp(j, "Width", 0);
                }
            }
            grdName.AutoFit = true;
        }
    }
}

/*-------------------------------------------------------------------------------------------------+
>>  각 경주 선수 드롭시
+-------------------------------------------------------------------------------------------------*/
function fcRacerDrop(obj,objDragObj,objDataObj,nPosX,nPosY,varKeyState,nRow,nCell)
{
    var objName       = "grdRace_";
	var sTargetRaceNo = substr(obj.Id, length(objName));
    var objTargetDs   = Object("dsOutRace_" + sTargetRaceNo);

	if ( objDataObj.GetData("CF_TEXT") == "grdRacer" ) // MultiLine Grid 에서 온경우
	{
        if ( nRow < 0 ) return;
        MoveRacerAllocation(objTargetDs, nRow, dsOutRacer, dsOutRacer.currow);
        objTargetDs.row = nRow;

        oLastDs       = objTargetDs;
        oLastDsRow    = nRow;
        
        ComputeAvgScr(sTargetRaceNo);
        fcGetEtcRace(objTargetDs, nRow);
        return;
	}
    
	var sSourceRaceNo = substr(objDataObj.GetData("CF_TEXT"), length(objName));
    var objSourceDs   = Object("dsOutRace_" + sSourceRaceNo);

    if ( nRow < 0 ) {
        oLastDs       = objTargetDs;
        oLastDsRow    = objSourceDs.currow;

        dsOutRacer.AddRow();
        fcGetEtcRaceClear(oLastDs, oLastDsRow);
        MoveRacerAllocation(dsOutRacer, dsOutRacer.currow, oLastDs, oLastDsRow);
        ComputeAvgScr(sTargetRaceNo);

    } else {
        dsOutRaceTemp.Copy(objTargetDs);
        dsOutRaceTemp.ClearData();
        dsOutRaceTemp.AddRow();
        
        MoveRacerAllocation(dsOutRaceTemp, dsOutRaceTemp.currow, objTargetDs, nRow);
        MoveRacerAllocation(objTargetDs, nRow, objSourceDs, objSourceDs.currow);
        MoveRacerAllocation(objSourceDs, objSourceDs.currow, dsOutRaceTemp, dsOutRaceTemp.currow);

        ComputeAvgScr(sSourceRaceNo);
        ComputeAvgScr(sTargetRaceNo);

        oLastDs         = objTargetDs;
        oLastDsRow      = nRow;
        objTargetDs.row = nRow;
        
        fcGetEtcRace(objTargetDs, nRow);
        fcGetEtcRace(objSourceDs, objSourceDs.currow);
    }
}

/*-------------------------------------------------------------------------------------------------+
>>  각 경주 선수 드레그
+-------------------------------------------------------------------------------------------------*/
function fcRacerDrag(obj,objDragObj,objDataObj,nPosX,nPosY,varKeyState,nRow,nCell)
{
    var dataObj = CreateDataObject();
	dataObj.SetData("CF_TEXT", obj.ID);
	
	if ( obj.IsAboveSel() ) return dataObj;	
}

/*-------------------------------------------------------------------------------------------------+
>>  각 경주 선택시 최종 그리드 
+-------------------------------------------------------------------------------------------------*/
function fcGrdRace_OnCellClick(obj,nRow,nCell,nX,nY,nPivotIndex)
{
    oLastDs       = object(obj.BindDataset);
    if ( nRow < 0 ) nRow = 0;
    oLastDsRow    = nRow;
    
    var sColumnNm = obj.GetCellProp("body", nCell, "ColId");
    if ( sColumnNm == "ABSE_CD" ) {
        btnBoatChng.SetFocus();
        setFocus(obj, nRow, nCell);
    }
    if ( sColumnNm == "RMK" ) {
        btnBoatChng.SetFocus();
        setFocus(obj, nRow, nCell);
    }
}

/*-------------------------------------------------------------------------------------------------+
>>  경주선수 Double Click 경주선수 삭제, 선수 리스트에 추가
+-------------------------------------------------------------------------------------------------*/
function fcGrdRace_OnCellDblClick(obj,nRow,nCell,nX,nY,nPivotIndex)
{
    oLastDs       = object(obj.BindDataset);
    oLastDsRow    = nRow;

    var sRacerNo = oLastDs.getColumn(nRow, "RACER_NO");
    if ( fnc_IsNull(sRacerNo) ) return;
    
    dsOutRacer.AddRow();
    fcGetEtcRaceClear(oLastDs, oLastDsRow);
    MoveRacerAllocation(dsOutRacer, dsOutRacer.currow, oLastDs, oLastDsRow);
    ComputeAvgScr(toInteger(substr(oLastDs.Id, length("dsOutRace_"))));
}

/*-------------------------------------------------------------------------------------------------+
>>  선수 리스트 Double Click시 각 경주에 해당 선수 등록
+-------------------------------------------------------------------------------------------------*/
function fcGrdRaceAddRacer(obj,nRow,nCell,nX,nY,nPivotIndex)
{
    var sRacerNo = object(obj.BindDataset).getColumn(nRow, "RACER_NO");
    if ( fnc_IsNull(sRacerNo) ) return;
    
    if ( !fnc_IsNull(oLastDs.GetColumn(oLastDsRow, "RACER_NO")) ) return;
    
    oLastDs.row = oLastDsRow;
    MoveRacerAllocation(oLastDs, oLastDsRow, dsOutRacer, nRow);
    ComputeAvgScr(toInteger(substr(oLastDs.Id, length("dsOutRace_"))));
    fcGetEtcRace(oLastDs, oLastDsRow);
    
    if ( oLastDsRow == oLastDs.GetRowCount() - 1 ) {
        var objName       = "dsOutRace_";
        var sTargetRaceNo = substr(oLastDs.Id, length(objName));
        
        if ( toInteger(sTargetRaceNo) == dsOutSRace.GetRowCount()) {
            sTargetRaceNo = "1";
        } else {
            sTargetRaceNo = toInteger(sTargetRaceNo) + 1;
        }
        
        oLastDs = object("dsOutRace_" + sTargetRaceNo);
        oLastDsRow = -1;
    }
    
    oLastDsRow++;
}

/*-------------------------------------------------------------------------------------------------+
>>  선수 배정 ButtonClick시 
+-------------------------------------------------------------------------------------------------*/
function SetRacerAllocation(obj, sType)
{
    var nCount   = 0;
    var nRow     = fnc_GetExistValue(dsOutSDayOrd, "DAY_ORD", cboSDayOrd.Value);
    var nRaceCnt = toInteger(dsOutSDayOrd.GetColumn(nRow, "RACE_CNT"));
    


    var nCnt = 0;
    if ( sType == "1" ) {
        while(true) {
            if (dsOutRacer.GetRowCount() == 0)break;
            var sRacerNo = dsOutRacer.getColumn(0, "RACER_NO");
            if ( fnc_IsNull(sRacerNo) ) break;
    
            if ( fnc_IsNull(oLastDs.GetColumn(oLastDsRow, "RACER_NO")) ) {
                oLastDs.row = oLastDsRow;
                MoveRacerAllocation(oLastDs, oLastDsRow, dsOutRacer, 0);
            }
            
            if ( oLastDsRow == oLastDs.GetRowCount() - 1 ) {
                var objName       = "dsOutRace_";
                var sTargetRaceNo = substr(oLastDs.Id, length(objName));
                
                if ( toInteger(sTargetRaceNo) == dsOutSRace.GetRowCount() ) {
                    sTargetRaceNo = "1";
                } else {
                    sTargetRaceNo = toInteger(sTargetRaceNo) + 1;
                }
                
                oLastDs = object("dsOutRace_" + sTargetRaceNo);
                oLastDsRow = -1;
            }
            
            oLastDsRow++;
            nCnt++;
        }
    } else {
        while(true) {
            if ( dsOutRacer.GetRowCount() == 0 ) break;
            var sRacerNo = dsOutRacer.getColumn(0, "RACER_NO");
            if ( fnc_IsNull(sRacerNo) ) break;
    
            if ( fnc_IsNull(oLastDs.GetColumn(oLastDsRow, "RACER_NO")) ) {
                oLastDs.row = oLastDsRow;
                MoveRacerAllocation(oLastDs, oLastDsRow, dsOutRacer, 0);
            }
            
            var objName       = "dsOutRace_";
            var sTargetRaceNo = toInteger(substr(oLastDs.Id, length(objName)));
            
            if ( nRaceCnt == sTargetRaceNo ) {
                sTargetRaceNo = "1";
                if ( oLastDsRow == oLastDs.GetRowCount() - 1 ) {
                    oLastDsRow = 0;
                } else {
                    oLastDsRow++;
                }
            } else {
                sTargetRaceNo = toInteger(sTargetRaceNo) + 1;
            }
            
            oLastDs = object("dsOutRace_" + sTargetRaceNo);
            nCnt++;
        }
    }
	
	for ( var i = 1; i <= dsOutSRace.GetRowCount(); i++ ) {
		for ( var j = 0; j < toInteger(dsOutSRace.GetColumn(i-1, "RACE_REG_NO_CNT")); j++ ) {
			fcGetEtcRace(object("dsOutRace_" + i), j);
		}
	}
            
    for ( var i = 1; i <= dsOutSRace.GetRowCount(); i++ ) {
        ComputeAvgScr(i);
    }
}

/*-------------------------------------------------------------------------------------------------+
>>  선수 변경 Process
+-------------------------------------------------------------------------------------------------*/
function MoveRacerAllocation(objTarget, nRowTarget, objSource, nRowSource)
{
    for ( var i = 0; i < objSource.GetColCount(); i++ ) {
        var sColumnID = objSource.GetColID(i);
        if ( sColumnID == "RACE_REG_NO" ) continue;
        objTarget.SetColumn(nRowTarget, sColumnID, objSource.GetColumn(nRowSource, sColumnID));
        objSource.SetColumn(nRowSource, sColumnID, "");
    }
    
    if ( objSource.ID == "dsOutRacer" || objSource.ID == "dsOutRaceTemp") objSource.DeleteRow(nRowSource);
}

/*-------------------------------------------------------------------------------------------------+
>>  선수 변경
+-------------------------------------------------------------------------------------------------*/
function btnRacerChng_OnClick(obj)
{
	if ( oLastDs.GetRowCount() == 0 ) {
        return;
	}
	
	var sRaceNo = substr(oLastDs.ID, length("dsOutRace_"));
	if ( Length(sRaceNo) == 1 ) sRaceNo = "0" + sRaceNo;
	var sArg = " Arg_sStndYear=" + quote(oLastDs.GetColumn(oLastDs.currow, "STND_YEAR"))
	         + " Arg_sMbrCd="    + quote(oLastDs.GetColumn(oLastDs.currow, "MBR_CD"   ))
	         + " Arg_sTms="      + quote(oLastDs.GetColumn(oLastDs.currow, "TMS"      ))
	         + " Arg_sDayOrd="   + quote(cboSDayOrd.Value                              )
	         + " Arg_sRaceNo="   + quote(sRaceNo                                       )
	         + " Arg_sRacerNo="  + quote(oLastDs.GetColumn(oLastDs.currow, "RACER_NO" ))
	         + " Arg_sRacerRsn=" + quote(oLastDs.GetColumn(oLastDs.currow, "RACER_RSN"));

    var bReturn = Dialog("form::E02040011.xml", sArg, 700, 360, "");
    
    if ( bReturn == false || fnc_Isnull(bReturn) ) return;
    sgChangeType = "RACER";
    fcChange(bReturn);
/*
    oLastDs.SetColumn(oLastDs.currow, "RACER_NO" , bReturn[0]);
    oLastDs.SetColumn(oLastDs.currow, "RACER_RSN", bReturn[1]);
*/
    fcSearchCurrRow();
}

/*-------------------------------------------------------------------------------------------------+
>>  모터 변경
+-------------------------------------------------------------------------------------------------*/
function btnMotChng_OnClick(obj)
{
	if ( oLastDs.GetRowCount() == 0 ) {
        return;
	}
	if (sModifyStatCd == "002") {
		fnc_message("모터/보트 변경 작업이후에는 다시 조회후 추가 변경이 가능합니다.","N");
		return;
	}
	
	var sRaceNo = substr(oLastDs.ID, length("dsOutRace_"));
	if ( Length(sRaceNo) == 1 ) sRaceNo = "0" + sRaceNo;
	var sArg = " Arg_sStndYear="  + quote(oLastDs.GetColumn(oLastDs.currow, "STND_YEAR"  ))
	         + " Arg_sMbrCd="     + quote(oLastDs.GetColumn(oLastDs.currow, "MBR_CD"     ))
	         + " Arg_sTms="       + quote(oLastDs.GetColumn(oLastDs.currow, "TMS"        ))
	         + " Arg_sDayOrd="    + quote(cboSDayOrd.Value                                )
	         + " Arg_sRaceNo="    + quote(sRaceNo                                         )
	         + " Arg_sRacerNo="   + quote(oLastDs.GetColumn(oLastDs.currow, "RACER_NO"   ))
	         + " Arg_sNmKor="     + quote(oLastDs.GetColumn(oLastDs.currow, "NM_KOR"     ))
	         + " Arg_sRaceRegNo=" + quote(oLastDs.GetColumn(oLastDs.currow, "RACE_REG_NO"))
	         + " Arg_sMotNo="     + quote(oLastDs.GetColumn(oLastDs.currow, "MOT_NO"     ))
	         + " Arg_sEquipRsn="  + quote(oLastDs.GetColumn(oLastDs.currow, "MOT_RSN"    ));
	
    var bReturn = Dialog("form::E02040012.xml", sArg, 700, 360, "");
    
    if ( bReturn == false || fnc_Isnull(bReturn) ) return;
    sModifyStatCd = "001";
    sgChangeType = "MOT";
    fcChange(bReturn);
/*
    oLastDs.SetColumn(oLastDs.currow, "VIEW_MOT_NO" , substr(bReturn[0], 5, 3));
    oLastDs.SetColumn(oLastDs.currow, "MOT_NO" , bReturn[0]);
    oLastDs.SetColumn(oLastDs.currow, "MOT_RSN", bReturn[1]);
*/
    fcSearchCurrRow();
}

/*-------------------------------------------------------------------------------------------------+
>>  보트 변경
+-------------------------------------------------------------------------------------------------*/
function btnBoatChng_OnClick(obj)
{
	if ( oLastDs.GetRowCount() == 0 ) {
        return;
	}
	if (sModifyStatCd == "002") {
		fnc_message("모터/보트 변경 작업이후에는 다시 조회후 추가 변경이 가능합니다.","N");
		return;
	}
	
	var sRaceNo = substr(oLastDs.ID, length("dsOutRace_"));
	if ( Length(sRaceNo) == 1 ) sRaceNo = "0" + sRaceNo;
	var sArg = " Arg_sStndYear="  + quote(oLastDs.GetColumn(oLastDs.currow, "STND_YEAR"  ))
	         + " Arg_sMbrCd="     + quote(oLastDs.GetColumn(oLastDs.currow, "MBR_CD"     ))
	         + " Arg_sTms="       + quote(oLastDs.GetColumn(oLastDs.currow, "TMS"        ))
	         + " Arg_sDayOrd="    + quote(cboSDayOrd.Value                                )
	         + " Arg_sRaceNo="    + quote(sRaceNo                                         )
	         + " Arg_sRacerNo="   + quote(oLastDs.GetColumn(oLastDs.currow, "RACER_NO"   ))
	         + " Arg_sNmKor="     + quote(oLastDs.GetColumn(oLastDs.currow, "NM_KOR"     ))
	         + " Arg_sRaceRegNo=" + quote(oLastDs.GetColumn(oLastDs.currow, "RACE_REG_NO"))
	         + " Arg_sBoatNo="    + quote(oLastDs.GetColumn(oLastDs.currow, "BOAT_NO"    ))
	         + " Arg_sEquipRsn="  + quote(oLastDs.GetColumn(oLastDs.currow, "BOAT_RSN"   ));

    var bReturn = Dialog("form::E02040012.xml", sArg, 700, 360, "");
    if ( bReturn == false || fnc_Isnull(bReturn) ) return;
    sModifyStatCd = "001";
    sgChangeType = "BOAT";
    fcChange(bReturn);
    /*
    oLastDs.SetColumn(oLastDs.currow, "VIEW_BOAT_NO" , substr(bReturn[0], 5, 3));
    oLastDs.SetColumn(oLastDs.currow, "BOAT_NO" , bReturn[0]);
    oLastDs.SetColumn(oLastDs.currow, "BOAT_RSN", bReturn[1]);
    */
    fcSearchCurrRow();
}

/*-------------------------------------------------------------------------------------------------+
>>  년도 변경시
+-------------------------------------------------------------------------------------------------*/
function cboSStndYear_OnChanged(obj,strCode,strText,nOldIndex,nNewIndex)
{
    fce_GetRaceTms(cboSStndYear.Value, cboSMbr.Value, "", "dsOutSRaceTms");
}

/*-------------------------------------------------------------------------------------------------+
>>  Grid생성
+-------------------------------------------------------------------------------------------------*/
function CreateGrid(nGridNo, bVisible) {
    
    var sContents = "";
    sContents += '      <contents>';
    sContents += fcGetColumn(nGridNo) + fcGetHead(nGridNo) + fcGetBody(nGridNo);
    sContents += '      </contents>';

    var nHeight = 130;
    var nWidth  = 415;
    var nLeft = (Truncate((nGridNo - 1) / 5) * (nWidth  +  5)) +  6;
    var nTop  = (        ((nGridNo - 1) % 5) * (nHeight + 28)) + 64;

    if ( bVisible == null ) bVisible = true;
    
	sGridType = 'AutoFit="TRUE"            '
	          + 'AutoEnter="TRUE"          '
	          + 'AutoFitEndLine="Hide"     '
	          + 'BindDataset="dsOutRace_'+ nGridNo + '" '
	          + 'BKColor="user15"          '
	          + 'BkColor2="user16"         '
	          + 'BkSelColor="user17"       '
	          + 'BoldHead="true"           '
	          + 'Border="Flat"             '
	          + 'BorderColor="user22"      '
	          + 'Bottom="86"               '
	          + 'DragMode="TRUE"           '
	          + 'DropMode="TRUE"           '
	          + 'Enable="true"             '
	          + 'Editable="TRUE"           '
	          + 'EndLineColor="default"    '
	          + 'FillArea="TRUE"           '
	          + 'HeadBorder="Flat"         '
	          + 'HeadHeight="20"           '
	          + 'Height="'+ nHeight + '"   '
	          + 'Id="grdRace_'+ nGridNo + '" '
	          + 'InputPanel="FALSE"        '
	          + 'Left="'+ nLeft + '"       '
	          + 'LineColor="user18"        '
	          + 'MinWidth="100"            '
	          + 'OnCellClick="fcGrdRace_OnCellClick" '
	          + 'OnCellDBLClick="fcGrdRace_OnCellDblClick" '
	          + 'OnDrag="fcRacerDrag" '
	          + 'OnDrop="fcRacerDrop" '
	          + 'OnHeadDBLClick="fcUpDownRace" '
	          + 'OnHeadClick="fcGridSort" '
	          + 'Right="460"               '
	          + 'RowHeight="18"            '
	          + 'SelColor="user19"         '
		      + 'Style="snis_grid"         '
		      + 'TabOrder="'+ nGridNo + '" '
		      + 'TabStop="true"            '
		      + 'Top="'+ nTop + '"         '
		      + 'UseDBuff="true"           '
		      + 'UsePopupMenu="true"       '
		      + 'UseSelColor="False"       '
		      + 'Visible="' + bVisible + '" '
		      + 'VLineColor="default"      '
		      + 'WheelScrollRow="1"        '
		      + 'Width="'+ nWidth + '"     ';

	create("Grid","grdRace_" + nGridNo, sGridType);
	object("grdRace_" + nGridNo).contents = sContents;
}

/*-------------------------------------------------------------------------------------------------+
>>  Grid Column 생성
+-------------------------------------------------------------------------------------------------*/
function fcGetColumn(nGridNo) {
    
    var sColumn = "";
    sColumn = '					<columns>'
			+ '			            <col fix="left" width="30"/>'
			+ '			            <col width="100"/>        '
			+ '			            <col width="100"/>        '
			+ '			            <col width="100"/>        '
			+ '			            <col width="100"/>        '
			+ '			            <col width="100"/>        '
			+ '			            <col width="100"/>        '
			+ '			            <col width="100"/>        '
			+ '			            <col width="0"/>          '
			+ '			            <col width="0"/>          '
			+ '			            <col width="0"/>          '
			+ '			            <col width="0"/>          '
			+ '			            <col width="0"/>          '
			+ '			            <col width="0"/>          '
			+ '			            <col width="0"/>          '
			+ '			            <col width="0"/>          '
			+ '			            <col width="0"/>          '
			+ '			            <col width="0"/>          '
			+ '			            <col width="0"/>          '
			+ '			            <col width="0"/>          '
			+ '			            <col width="0"/>          '
			+ '			            <col width="0"/>          '
			+ '			            <col width="0"/>          '
			+ '			            <col width="0"/>          '
			+ '			            <col width="0"/>          '
			+ '			            <col width="0"/>          '
			+ '			            <col width="0"/>          '
			+ '			            <col width="0"/>          '
			+ '			            <col width="0"/>          '
			+ '			            <col width="0"/>          '
			+ '			            <col width="0"/>          '
			+ '			            <col width="0"/>          '
			+ '			            <col width="0"/>          ';
    if(toInteger(dsOutSRace.GetColumn(nGridNo-1, "RACE_REG_NO_CNT"))>=7) sColumn += '			            <col width="0"/>          ';
    if(toInteger(dsOutSRace.GetColumn(nGridNo-1, "RACE_REG_NO_CNT"))>=8) sColumn += '			            <col width="0"/>          ';
    			
    sColumn += '					</columns>';
    return sColumn;
}

/*-------------------------------------------------------------------------------------------------+
>>  Grid Head 생성
+-------------------------------------------------------------------------------------------------*/
function fcGetHead(nGridNo) {
    
    var i = 0;
    
    var sHead = "";
    sHead   = '					<head>'
			+ '			            <cell bkcolor="user20" col="' + i++ + '"  color="user21" display="text" font="굴림,9" text="정번"/>            '
			+ '			            <cell bkcolor="user20" col="' + i++ + '"  color="user21" display="text" font="굴림,9" text="등록번호"/>        '
			+ '			            <cell bkcolor="user20" col="' + i++ + '"  color="user21" display="text" font="굴림,9" text="선수명"/>          '
			+ '			            <cell bkcolor="user20" col="' + i++ + '"  color="user21" display="text" font="굴림,9" text="등급"/>            '
			+ '			            <cell bkcolor="user20" col="' + i++ + '"  color="user21" display="text" font="굴림,9" text="순위"/>            '
			+ '			            <cell bkcolor="user20" col="' + i++ + '"  color="user21" display="text" font="굴림,9" text="종합평가점"/>      '
			+ '			            <cell bkcolor="user20" col="' + i++ + '"  color="user21" display="text" font="굴림,9" text="평균득점"/>        '
			+ '			            <cell bkcolor="user20" col="' + i++ + '"  color="user21" display="text" font="굴림,9" text="다른경주"/>        '
			+ '			            <cell bkcolor="user20" col="' + i++ + '"  color="user21" display="text" font="굴림,9" text="지역"/>            '
			+ '			            <cell bkcolor="user20" col="' + i++ + '"  color="user21" display="text" font="굴림,9" text="대학명"/>          '
			+ '			            <cell bkcolor="user20" col="' + i++ + '" color="user21" display="text" font="굴림,9" text="6회차평균착순점"/>      '
			+ '			            <cell bkcolor="user20" col="' + i++ + '" color="user21" display="text" font="굴림,9" text="6회차ST타임"/>     '
			+ '			            <cell bkcolor="user20" col="' + i++ + '" color="user21" display="text" font="굴림,9" text="6회차연대율"/>     '
			+ '			            <cell bkcolor="user20" col="' + i++ + '" color="user21" display="text" font="굴림,9" text="연간연대율"/>      '
			+ '			            <cell bkcolor="user20" col="' + i++ + '" color="user21" display="text" font="굴림,9" text="연간삼연대율"/>    '
			+ '			            <cell bkcolor="user20" col="' + i++ + '" color="user21" display="text" font="굴림,9" text="전회차체중"/>      '
			+ '			            <cell bkcolor="user20" col="' + i++ + '" color="user21" display="text" font="굴림,9" text="전일성적1"/>       '
			+ '			            <cell bkcolor="user20" col="' + i++ + '" color="user21" display="text" font="굴림,9" text="전일성적2"/>       '
			+ '			            <cell bkcolor="user20" col="' + i++ + '" color="user21" display="text" font="굴림,9" text="1번정 횟수"/>   '
			+ '			            <cell bkcolor="user20" col="' + i++ + '" color="user21" display="text" font="굴림,9" text="2번정 횟수"/>   '
			+ '			            <cell bkcolor="user20" col="' + i++ + '" color="user21" display="text" font="굴림,9" text="3번정 횟수"/>   '
			+ '			            <cell bkcolor="user20" col="' + i++ + '" color="user21" display="text" font="굴림,9" text="4번정 횟수"/>   '
			+ '			            <cell bkcolor="user20" col="' + i++ + '" color="user21" display="text" font="굴림,9" text="5번정 횟수"/>   '
			+ '			            <cell bkcolor="user20" col="' + i++ + '" color="user21" display="text" font="굴림,9" text="6번정 횟수"/>   ';

    if(toInteger(dsOutSRace.GetColumn(nGridNo-1, "RACE_REG_NO_CNT"))>=7) sHead += '			            <cell bkcolor="user20" col="' + i++ + '" color="user21" display="text" font="굴림,9" text="7번정 횟수"/>   ';
    if(toInteger(dsOutSRace.GetColumn(nGridNo-1, "RACE_REG_NO_CNT"))>=8) sHead += '			            <cell bkcolor="user20" col="' + i++ + '" color="user21" display="text" font="굴림,9" text="8번정 횟수"/>   ';
        						
	sHead  += '			            <cell bkcolor="user20" col="' + i++ + '" color="user21" display="text" font="굴림,9" text="모터번호"/>        '
			+ '			            <cell bkcolor="user20" col="' + i++ + '" color="user21" display="text" font="굴림,9" text="모터착순점"/>      '
			+ '			            <cell bkcolor="user20" col="' + i++ + '" color="user21" display="text" font="굴림,9" text="모터연대율"/>      '
			+ '			            <cell bkcolor="user20" col="' + i++ + '" color="user21" display="text" font="굴림,9" text="모터소개항주타임"/>'
			+ '			            <cell bkcolor="user20" col="' + i++ + '" color="user21" display="text" font="굴림,9" text="보트번호"/>        '
			+ '			            <cell bkcolor="user20" col="' + i++ + '" color="user21" display="text" font="굴림,9" text="보트착순점"/>      '
			+ '			            <cell bkcolor="user20" col="' + i++ + '" color="user21" display="text" font="굴림,9" text="보트연대율"/>      '
			+ '			            <cell bkcolor="user20" col="' + i++ + '" color="user21" display="text" font="굴림,9" text="출전"/>            '
			+ '			            <cell bkcolor="user20" col="' + i++ + '" color="user21" display="text" font="굴림,9" text="특이사항"/>        ';
    sHead += '					</head>';
    return sHead;
}

/*-------------------------------------------------------------------------------------------------+
>>  Grid Body 생성
+-------------------------------------------------------------------------------------------------*/
function fcGetBody(nGridNo) {

	var i = 0;
    
    var sBody = "";
    var sBkColor  = "expr:iif(!fnc_IsNull(dsOutRace_" + nGridNo + ".GetColumn(row,&apos;ABSE_CD&apos;))&&dsOutRace_" + nGridNo + ".GetColumn(row,&apos;ABSE_CD&apos;)!=&apos;001&apos;,&apos;red&apos;,&apos;&apos;)";

    sBody   = '         <body>'
			+ '			  <cell col="' + i++ + '"  colid="RACE_REG_NO"                   align="center"  display="text"/>'
			+ '			  <cell col="' + i++ + '"  colid="RACER_NO"                      align="center"  display="text"/>'
			+ '			  <cell col="' + i++ + '"  colid="NM_KOR"                        align="center"  display="text" bkcolor="' + sBkColor + '" />'
			+ '			  <cell col="' + i++ + '"  colid="RACER_GRD_CD"                  align="center"  display="text"/>'
			+ '			  <cell col="' + i++ + '"  colid="RANK"                          align="center"  display="text"/>'
			+ '			  <cell col="' + i++ + '"  colid="SCR"                           align="center"  display="text"/>'
			+ '			  <cell col="' + i++ + '"  colid="TRRAS_AVG_SCR"                 align="center"  display="text"/>'
			+ '			  <cell col="' + i++ + '"  colid="ETC_RACE"                      align="center"  display="text"/>'
			+ '			  <cell col="' + i++ + '"  colid="NATV_PLAC_CD"                  align="center"  display="text"/>'
			+ '			  <cell col="' + i++ + '"  colid="NATY_UNIV"                     align="center"  display="text"/>'
			+ '			  <cell col="' + i++ + '" colid="TRRAS_TMS_6_AVG_RANK_SCR"      align="center"  display="text"/>'
			+ '			  <cell col="' + i++ + '" colid="TRRAS_TMS_6_AVG_STRT_TM"       align="center"  display="text"/>'
			+ '			  <cell col="' + i++ + '" colid="TRRAS_TMS_6_HIGH_RANK_RATIO"   align="center"  display="text"/>'
			+ '			  <cell col="' + i++ + '" colid="TRRAS_HIGH_RANK_RATIO"         align="center"  display="text"/>'
			+ '			  <cell col="' + i++ + '" colid="TRRAS_HIGH_3_RANK_RATIO"       align="center"  display="text"/>'
			+ '			  <cell col="' + i++ + '" colid="ENTRY_BODY_WGHT"               align="center"  display="text"/>'
			+ '			  <cell col="' + i++ + '" colid="RACE1"                         align="center"  display="text"/>'
			+ '			  <cell col="' + i++ + '" colid="RACE2"                         align="center"  display="text"/>'
			+ '			  <cell col="' + i++ + '" colid="RACE_CNT_1"                    align="center"  display="text"/>'
			+ '			  <cell col="' + i++ + '" colid="RACE_CNT_2"                    align="center"  display="text"/>'
			+ '			  <cell col="' + i++ + '" colid="RACE_CNT_3"                    align="center"  display="text"/>'
			+ '			  <cell col="' + i++ + '" colid="RACE_CNT_4"                    align="center"  display="text"/>'
			+ '			  <cell col="' + i++ + '" colid="RACE_CNT_5"                    align="center"  display="text"/>'
			+ '			  <cell col="' + i++ + '" colid="RACE_CNT_6"                    align="center"  display="text"/>';

    if(toInteger(dsOutSRace.GetColumn(nGridNo-1, "RACE_REG_NO_CNT"))>=7) sBody += '			  <cell col="' + i++ + '" colid="RACE_CNT_7"                    align="center"  display="text"/>';
    if(toInteger(dsOutSRace.GetColumn(nGridNo-1, "RACE_REG_NO_CNT"))>=8) sBody += '			  <cell col="' + i++ + '" colid="RACE_CNT_8"                    align="center"  display="text"/>';
     			
	sBody  += '			  <cell col="' + i++ + '" colid="VIEW_MOT_NO"                   align="center"  display="text"/>'
			+ '			  <cell col="' + i++ + '" colid="TMRAS_AVG_RANK_SCR"            align="center"  display="text"/>'
			+ '			  <cell col="' + i++ + '" colid="TMRAS_HIGH_RANK_RATIO"         align="center"  display="text"/>'
			+ '			  <cell col="' + i++ + '" colid="TMRAS_AVG_ITRDT_RUN_TM"        align="center"  display="text"/>'
			+ '			  <cell col="' + i++ + '" colid="VIEW_BOAT_NO"                  align="center"  display="text"/>'
			+ '			  <cell col="' + i++ + '" colid="TBRAS_AVG_RANK_SCR"            align="center"  display="text"/>'
			+ '			  <cell col="' + i++ + '" colid="TBRAS_HIGH_RANK_RATIO"         align="center"  display="text"/>'
			+ '			  <cell col="' + i++ + '" colid="ABSE_CD"                       align="center"  display="combo" edit="combo" combocol="CD" combodataset="dsOutAbse" combotext="CD_NM"/>'
			+ '			  <cell col="' + i++ + '" colid="RMK"                           align="center"  display="text"/>';
	
    sBody += '					</body>';
    return sBody;
}

/*-------------------------------------------------------------------------------------------------+
>>  Dataset 생성
+-------------------------------------------------------------------------------------------------*/
function CreateDataset(nDsNo) {
    Create("Dataset","dsOutRace_" + nDsNo);
    
    var objDs = object("dsOutRace_" + nDsNo);
    
    objDs.AddColumn("RACE_NO"                    , "String");
    objDs.AddColumn("RACE_REG_NO"                , "String");
    objDs.AddColumn("RACER_NO"                   , "String");
    objDs.AddColumn("NM_KOR"                     , "String");
    objDs.AddColumn("RACER_GRD_CD"               , "String");
    objDs.AddColumn("RANK"                       , "DECIMAL");
    objDs.AddColumn("SCR"                        , "DECIMAL");
    objDs.AddColumn("TRRAS_AVG_SCR"              , "DECIMAL");
    objDs.AddColumn("ETC_RACE"                   , "String");
    objDs.AddColumn("NATV_PLAC_CD"               , "String");
    objDs.AddColumn("NATY_UNIV"                  , "String");
    objDs.AddColumn("TRRAS_TMS_6_AVG_RANK_SCR"   , "DECIMAL");
    objDs.AddColumn("TRRAS_TMS_6_AVG_STRT_TM"    , "DECIMAL");
    objDs.AddColumn("TRRAS_TMS_6_HIGH_RANK_RATIO", "DECIMAL");
    objDs.AddColumn("TRRAS_HIGH_RANK_RATIO"      , "DECIMAL");
    objDs.AddColumn("TRRAS_HIGH_3_RANK_RATIO"    , "DECIMAL");
    objDs.AddColumn("ENTRY_BODY_WGHT"            , "DECIMAL");
    objDs.AddColumn("RACE1"                      , "String");
    objDs.AddColumn("RACE2"                      , "String");
    objDs.AddColumn("RACE_CNT_1"                 , "DECIMAL");
    objDs.AddColumn("RACE_CNT_2"                 , "DECIMAL");
    objDs.AddColumn("RACE_CNT_3"                 , "DECIMAL");
    objDs.AddColumn("RACE_CNT_4"                 , "DECIMAL");
    objDs.AddColumn("RACE_CNT_5"                 , "DECIMAL");
    objDs.AddColumn("RACE_CNT_6"                 , "DECIMAL");
    objDs.AddColumn("RACE_CNT_7"                 , "DECIMAL");
    objDs.AddColumn("RACE_CNT_8"                 , "DECIMAL");
    objDs.AddColumn("MOT_NO"                     , "String");
    objDs.AddColumn("VIEW_MOT_NO"                , "String");
    objDs.AddColumn("TMRAS_AVG_RANK_SCR"         , "DECIMAL");
    objDs.AddColumn("TMRAS_HIGH_RANK_RATIO"      , "DECIMAL");
    objDs.AddColumn("TMRAS_AVG_ITRDT_RUN_TM"     , "DECIMAL");
    objDs.AddColumn("BOAT_NO"                    , "String");
    objDs.AddColumn("VIEW_BOAT_NO"               , "String");
    objDs.AddColumn("TBRAS_AVG_RANK_SCR"         , "DECIMAL");
    objDs.AddColumn("TBRAS_HIGH_RANK_RATIO"      , "DECIMAL");
    objDs.AddColumn("ABSE_CD"                    , "String");
    objDs.AddColumn("RMK"                        , "String");
    objDs.AddColumn("SPEC_CD"                    , "String");
}

/*-------------------------------------------------------------------------------------------------+
>>  Object생성
+-------------------------------------------------------------------------------------------------*/
function CreateObject(nObjNo, sStdMthdCd) {

    // chkeckbox 생성
    var nHeight = 20;
    var nWidth  = 16;
    var nLeft = (Truncate((nObjNo - 1) / 5) * 420) + 8;
    var nTop  = (        ((nObjNo - 1) % 5) * 158) + 42;

    sContents = "";
    sContents += ' Height="'+ nHeight + '"';
    sContents += ' Id="chkRace' + nObjNo + '"';
    sContents += ' Left="'+ nLeft + '"';
    sContents += ' OnClick="fcRaceHold" ';
    sContents += ' Style="snis_m_check" ';
//    sContents += ' TabOrder="5"         ';
    sContents += ' Top="'+ nTop + '"';
    sContents += ' Value="FALSE"        ';
    sContents += ' Width="'+ nWidth + '"';

    Create("Checkbox","chkRace" + nObjNo, sContents);
    
    
    // 경주명 생성
    nHeight = 20;
    nWidth  = 92;
    nLeft = (Truncate((nObjNo - 1) / 5) * 420) + 24;
    nTop  = (        ((nObjNo - 1) % 5) * 158) + 42;

    var sRacerNm = nObjNo;
    var sColor = "blue";
    if ( nObjNo < 10 ) sRacerNm = "0" + nObjNo;
    if(sStdMthdCd == "001") sColor = "red";
    sContents = "";
    sContents += ' Color="'+sColor+'"';
    sContents += ' Height="'+ nHeight + '"';
    sContents += ' Id="stRace' + nObjNo + '"';
    sContents += ' Left="'+ nLeft + '"    ';
    sContents += ' Style="snis_m_stitle"  ';
//    sContents += ' TabOrder="5"           ';
    sContents += ' Text="' + sRacerNm +'경주"';
    sContents += ' Top="'+ nTop + '"      ';
    sContents += ' VAlign="Middle"        ';
    sContents += ' Width="'+ nWidth + '"  ';

    Create("Static","stRace" + nObjNo, sContents);
    
    // 경주종류 생성
    nHeight = 20;
    nWidth  = 92;
    nLeft = (Truncate((nObjNo - 1) / 5) * 420) + 70;
    nTop  = (        ((nObjNo - 1) % 5) * 158) + 42;

    sContents = "";
    sContents += ' Height="'+ nHeight + '"';
    sContents += ' Id="stRaceDgre' + nObjNo + '"';
    sContents += ' Left="'+ nLeft + '"    ';
    sContents += ' Style="snis_m_stitle"  ';
//    sContents += ' TabOrder="5"           ';
    sContents += ' Text=""';
    sContents += ' Top="'+ nTop + '"      ';
    sContents += ' VAlign="Middle"        ';
    sContents += ' Width="'+ nWidth + '"  ';

    Create("Static","stRaceDgre" + nObjNo, sContents);
    
    // Shape 생성
    nHeight = 28;
    nWidth  = 272;
    nLeft = (Truncate((nObjNo - 1) / 5) * 420) + 124;
    nTop  = (        ((nObjNo - 1) % 5) * 158) + 38;

    sContents = "";
    sContents += ' BKColor="user2"    ';
    sContents += ' Bottom="66"        ';
    sContents += ' Height="' + nHeight + '"';
    sContents += ' Id="spRace' + nObjNo + '"';
    sContents += ' Left="' + nLeft + '"';
    sContents += ' LineColor="user3"  ';
    sContents += ' RoundHeight="5"    ';
    sContents += ' RoundUnit="Pixel"  ';
    sContents += ' RoundWidth="5"     ';
//    sContents += ' TabOrder="15"      ';
    sContents += ' Top="' + nTop + '" ';
    sContents += ' Type="RoundRect"   ';
    sContents += ' Width="' + nWidth + '"';
    
    Create("Shape","spRace" + nObjNo, sContents);


    // 평균득점 생성
    nHeight = 20;
    nWidth  = 76;
    nLeft = (Truncate((nObjNo - 1) / 5) * 420) + 128;
    nTop  = (        ((nObjNo - 1) % 5) * 158) + 42;

    sContents = "";
    sContents += ' 		Align="Right"          ';
    sContents += ' 		Border="Flat"          ';
    sContents += ' 		Height="' + nHeight + '"';
    sContents += ' 		Id="stAvg' + nObjNo + '"';
    sContents += ' 		Left="' + nLeft + '"   ';
    sContents += ' 		Style="snis_m_lable"   ';
//    sContents += ' 		TabOrder="17"          ';
    sContents += ' 		Text="평균평가점"      ';
    sContents += ' 		Top="' + nTop + '"     ';
    sContents += ' 		VAlign="Middle"        ';
    sContents += ' 		Width="' + nWidth + '" ';
    
    Create("Static","stAvg" + nObjNo, sContents);


    // 평균득점Maskedit 생성
    nHeight = 20;
    nWidth  = 56;
    nLeft = (Truncate((nObjNo - 1) / 5) * 420) + 206;
    nTop  = (        ((nObjNo - 1) % 5) * 158) + 42;

    sContents = "";
    sContents += ' 		Border="Flat"              ';
    sContents += ' 		Column="TMS"               ';
    sContents += ' 		Height="' + nHeight + '"   ';
    sContents += ' 		Id="mskRace' + nObjNo + '" ';
    sContents += ' 		Left="' + nLeft + '"       ';
    sContents += ' 		Style="snis_m_input01"     ';
//    sContents += ' 		TabOrder="21"              ';
    sContents += ' 		Top="' + nTop + '"         ';
    sContents += ' 		Width="' + nWidth + '"     ';
    
    Create("MaskEdit","mskRace" + nObjNo, sContents);

    // 검증버튼 생성
    nHeight = 20;
    nWidth  = 50;
    nLeft = (Truncate((nObjNo - 1) / 5) * 420) + 264;
    nTop  = (        ((nObjNo - 1) % 5) * 158) + 42;

    sContents = "";
    sContents += ' 		Align="Left"                  ';
    sContents += ' 		ButtonStyle="TRUE"            ';
    sContents += ' 		Height="' + nHeight + '"      ';
    sContents += ' 		Id="btnVerifi' + nObjNo + '"  ';
    sContents += ' 		ImageID="btn_txt_02"          ';
    sContents += ' 		Left="' + nLeft + '"          ';
    sContents += ' 		LeftMargin="15"               ';
    sContents += ' 		OnClick="fcSearchRacerVerifi" ';
    sContents += ' 		Style="snis_btn"              ';
//    sContents += ' 		TabOrder="78"                 ';
    sContents += ' 		Text="중복"                   ';
    sContents += ' 		Top="' + nTop + '"            ';
    sContents += ' 		Transparent="TRUE"            ';
    sContents += ' 		Width="' + nWidth + '"        ';
    
    Create("Button","btnVerifi" + nObjNo, sContents);

    // 검증버튼 생성
    nHeight = 20;
    nWidth  = 74;
    nLeft = (Truncate((nObjNo - 1) / 5) * 420) + 316;
    nTop  = (        ((nObjNo - 1) % 5) * 158) + 42;

    sContents = "";
    sContents += ' 		Align="Left"                       ';
    sContents += ' 		ButtonStyle="TRUE"                 ';
    sContents += ' 		Height="' + nHeight + '"           ';
    sContents += ' 		Id="btnReln' + nObjNo + '"         ';
    sContents += ' 		ImageID="btn_txt_04"               ';
    sContents += ' 		Left="' + nLeft + '"               ';
    sContents += ' 		LeftMargin="15"                    ';
    sContents += ' 		OnClick="fcSearchRacerReln"        ';
    sContents += ' 		Style="snis_btn"                   ';
//    sContents += ' 		TabOrder="18"                      ';
    sContents += ' 		Text="선수검증"                    ';
    sContents += ' 		Top="' + nTop + '"                 ';
    sContents += ' 		Transparent="TRUE"                 ';
    sContents += ' 		Width="' + nWidth + '"             ';
    
    
    Create("Button","btnReln" + nObjNo, sContents);

    // 확장버튼 생성
    nHeight = 20;
    nWidth  = 20;
    nLeft = (Truncate((nObjNo - 1) / 5) * 420) + 400;
    nTop  = (        ((nObjNo - 1) % 5) * 158) + 42;

    sContents = "";
    sContents += ' Align="Left"              ';
    sContents += ' ButtonStyle="TRUE"        ';
    sContents += ' Height="' + nHeight + '"  ';
    sContents += ' Id="btnExtendRace' + nObjNo + '"';
    sContents += ' ImageID="grid_down"       ';
    sContents += ' Left="' + nLeft + '"      ';
    sContents += ' LeftMargin="15"           ';
    sContents += ' OnClick="fcUpDownRace"    ';
    sContents += ' Style="snis_btn"          ';
//    sContents += ' TabOrder="55"             ';
    sContents += ' Top="' + nTop + '"        ';
    sContents += ' Transparent="TRUE"        ';
    sContents += ' Width="' + nWidth + '"    ';
    
    Create("Button","btnExtendRace" + nObjNo, sContents);
/*
	object("spImg1" + nGridNo).contents = sContents;
		
		<Shape BKColor="#ff8500" Bottom="54" Height="6" Id="spImg1" Left="12" LineKind="Vertical" LineWidth="0" Right="18" RoundHeight="10" RoundWidth="10" TabOrder="6" Top="48" Type="Ellipse" Width="6"></Shape>
		<Static Height="20" Id="stRace1" Left="24" Style="snis_m_stitle" TabOrder="5" Text="제1경주" Top="42" VAlign="Middle" Width="92"></Static>
		<Shape BKColor="user2" Bottom="66" Height="28" Id="spRace1" Left="112" LineColor="user3" Right="396" RoundHeight="5" RoundUnit="Pixel" RoundWidth="5" TabOrder="15" Top="38" Type="RoundRect" Width="284"></Shape>
		<Static Align="Right" Border="Flat" Height="20" Id="stAvg1" Left="116" Style="snis_m_lable" TabOrder="16" Text="회&#32;&#32;&#32;&#32;&#32;&#32;차" Top="42" VAlign="Middle" Width="124"></Static>
		<MaskEdit BindDataset="dsOutRaceTms" Border="Flat" Column="TMS" Height="20" Id="mskRace1" Left="242" Style="snis_m_input01" TabOrder="24" Top="42" Width="68"></MaskEdit>
		<Button Align="Left" ButtonStyle="TRUE" Height="20" Id="btnReln1" ImageID="btn_txt_04" Left="316" LeftMargin="15" OnClick="fcSearchRacerArrangeStnd" Style="snis_btn" TabOrder="17" Text="선수관계" Top="42" Transparent="TRUE" Width="74"></Button>
		<Button Align="Left" ButtonStyle="TRUE" Height="18" Id="btnRace1" ImageID="grid_down" Left="400" LeftMargin="15" OnClick="fcUpDownRace" Style="snis_btn" TabOrder="55" Top="42" Transparent="TRUE" Width="20"></Button>
*/
}

/*-------------------------------------------------------------------------------------------------+
>>  각 경주의 평균득점 계산
+-------------------------------------------------------------------------------------------------*/
function ComputeAvgScr(nRaceNo) {
//    object("mskRace" + nRaceNo).value = round(object("dsOutRace" + nRaceNo).Avg("SCR"), 2);
    var nAvgScr = 0;
    var nCount  = 0;
    var nTotScr = 0;
        
    for ( var i = 0; i < toInteger(dsOutSRace.GetColumn(i, "RACE_REG_NO_CNT")); i ++ ) {
        if ( fnc_IsNull(object("dsOutRace_" + nRaceNo).GetColumn(i, "RACER_NO")) ) continue;
        nTotScr += toNumber(object("dsOutRace_" + nRaceNo).GetColumn(i, "SCR"));
        nCount++;
    }
    
    if ( nCount != 0 ) 
        nAvgScr = Round(nTotScr/nCount, 2);
    object("mskRace" + nRaceNo).value = nAvgScr;
}

/*-------------------------------------------------------------------------------------------------+
>>  각 경주의 선수관계보기
+-------------------------------------------------------------------------------------------------*/
function fcSearchRacerReln(obj) {
    var objName = "btnReln";
	var sRaceNo = substr(obj.Id, length(objName));
	var objDs   = object("dsOutRace_" + sRaceNo);
	
    if ( sRaceNo.length == 1 ) sRaceNo = "0" + sRaceNo;
    
    var sArg  = " Arg_sStndYear=" + quote(cboSStndYear.Value);
        sArg += " Arg_sMbrCd="    + quote(cboSMbr.Value     );
        sArg += " Arg_sTms="      + quote(cboSRaceTms.Value );
        sArg += " Arg_sDayOrd="   + quote(cboSDayOrd.Value  );
        sArg += " Arg_sRaceNo="   + quote(sRaceNo           );
        
    var j = 0;
        sArg += " Arg_sRacerNo1=" + quote(objDs.GetColumn(j++, "RACER_NO"));
        sArg += " Arg_sRacerNo2=" + quote(objDs.GetColumn(j++, "RACER_NO"));
        sArg += " Arg_sRacerNo3=" + quote(objDs.GetColumn(j++, "RACER_NO"));
        sArg += " Arg_sRacerNo4=" + quote(objDs.GetColumn(j++, "RACER_NO"));
        sArg += " Arg_sRacerNo5=" + quote(objDs.GetColumn(j++, "RACER_NO"));
        sArg += " Arg_sRacerNo6=" + quote(objDs.GetColumn(j++, "RACER_NO"));
        sArg += " Arg_sRacerNo7=" + quote(objDs.GetColumn(j++, "RACER_NO"));
        sArg += " Arg_sRacerNo8=" + quote(objDs.GetColumn(j++, "RACER_NO"));
        
		var tempOrganInfo = Split(dsOutTempOrgan.GetColumn(cboTempOrgan.Index, "ORGAN_SEQ"), "-");
        
        sArg += " Arg_sOrganOwnerId="   + quote(tempOrganInfo[0]);
		sArg += " Arg_sOrganSeq="   + quote(tempOrganInfo[1]);           
    
	//if(toInteger(dsOutSRace.GetColumn(sRaceNo-1, "RACE_REG_NO_CNT"))>=7) sArg += " Arg_sRacerNo7=" + quote(objDs.GetColumn(j++, "RACER_NO"));
    //if(toInteger(dsOutSRace.GetColumn(sRaceNo-1, "RACE_REG_NO_CNT"))>=8) sArg += " Arg_sRacerNo8=" + quote(objDs.GetColumn(j++, "RACER_NO"));
                  

    Dialog("form::E02040042.xml", sArg, 250, 250, "");
}

/*-------------------------------------------------------------------------------------------------+
>>  각 경주의 검증보기
+-------------------------------------------------------------------------------------------------*/
function fcSearchRacerVerifi(obj) {
    var objName = "btnVerifi";
	var sRaceNo = substr(obj.Id, length(objName));
	var objDs   = object("dsOutRace_" + sRaceNo);
	
    if ( sRaceNo.length == 1 ) sRaceNo = "0" + sRaceNo;
    
    var sArg  = " Arg_sStndYear=" + quote(cboSStndYear.Value);
        sArg += " Arg_sMbrCd="    + quote(cboSMbr.Value     );
        sArg += " Arg_sTms="      + quote(cboSRaceTms.Value );
        sArg += " Arg_sDayOrd="   + quote(cboSDayOrd.Value  );
        sArg += " Arg_sRaceNo="   + quote(sRaceNo           );
        
    var j = 0;
        sArg += " Arg_sRacerNo1=" + quote(objDs.GetColumn(j++, "RACER_NO"));
        sArg += " Arg_sRacerNo2=" + quote(objDs.GetColumn(j++, "RACER_NO"));
        sArg += " Arg_sRacerNo3=" + quote(objDs.GetColumn(j++, "RACER_NO"));
        sArg += " Arg_sRacerNo4=" + quote(objDs.GetColumn(j++, "RACER_NO"));
        sArg += " Arg_sRacerNo5=" + quote(objDs.GetColumn(j++, "RACER_NO"));
        sArg += " Arg_sRacerNo6=" + quote(objDs.GetColumn(j++, "RACER_NO"));
        sArg += " Arg_sRacerNo7=" + quote(objDs.GetColumn(j++, "RACER_NO"));
        sArg += " Arg_sRacerNo8=" + quote(objDs.GetColumn(j++, "RACER_NO")); 
        
        
	//if(toInteger(dsOutSRace.GetColumn(sRaceNo-1, "RACE_REG_NO_CNT"))>=7) sArg += " Arg_sRacerNo7=" + quote(objDs.GetColumn(j++, "RACER_NO"));
    //if(toInteger(dsOutSRace.GetColumn(sRaceNo-1, "RACE_REG_NO_CNT"))>=8) sArg += " Arg_sRacerNo8=" + quote(objDs.GetColumn(j++, "RACER_NO"));
            

    Dialog("form::E02040043.xml", sArg, 250, 250, "");
}

/*-------------------------------------------------------------------------------------------------+
>>  일자 변경시
+-------------------------------------------------------------------------------------------------*/
function cboSDayOrd_OnChanged(obj,strCode,strText,nOldIndex,nNewIndex)
{
    dsOutSDayOrd.row = fnc_GetExistValue(dsOutSDayOrd, "DAY_ORD", cboSDayOrd.Value);

    fce_GetRace(cboSStndYear.Value, cboSMbr.Value, cboSRaceTms.Value, cboSDayOrd.Value, "dsOutSRace");
    var nRow = fnc_GetExistValue(dsOutSRaceTms, "TMS", cboSRaceTms.Value);

	if ( dsOutSRaceTms.GetColumn(nRow, "RACE_TMS_STAT_CD") > "050" ) {
        btnSave.Enable = false;
        btnConfirm.Enable        = false;
        btnRacerChng.Enable      = false;
        btnMotChng.Enable        = false;
        btnBoatChng.Enable       = false;
        btnTempToOrganSave.Enable = false;
    } else {
        btnSave.Enable = true;
        btnConfirm.Enable        = true;
        btnRacerChng.Enable      = true;
        btnMotChng.Enable        = true;
        btnBoatChng.Enable       = true;
        btnTempToOrganSave.Enable = true;
    }

/*
    if ( btnSave.Enable ) {
        dsOutSDayOrd.row = fnc_GetExistValue(dsOutSDayOrd, "DAY_ORD", cboSDayOrd.Value);
        if ( dsOutSDayOrd.GetColumn(dsOutSDayOrd.row, "ORGAN_STAT_CD") == "002" ) {
            btnSave.Enable = false;
            btnConfirm.Enable        = false;
            btnRacerChng.Enable      = false;
            btnMotChng.Enable        = false;
            btnBoatChng.Enable       = false;
        } else {
            btnSave.Enable = true;
            btnConfirm.Enable        = true;
            btnRacerChng.Enable      = true;
            btnMotChng.Enable        = true;
            btnBoatChng.Enable       = true;
        }
    }
*/    
}

/*-------------------------------------------------------------------------------------------------+
>>  다른 레이스 조회
+-------------------------------------------------------------------------------------------------*/
function fcGetEtcRace(obj, nRow) {
    //if ( obj.GetColumn(0, "RACE_ALLOC_CNT") == "1" ) return;
    var sRacerNo = obj.GetColumn(nRow, "RACER_NO");
    if ( fnc_IsNull(sRacerNo) ) return;
    
    var objName = "dsOutRace_";
    var nRaceNo = toInteger(substr(obj.Id, length(objName)));
        
    obj.SetColumn(nRow, "ETC_RACE", "");
    for ( var i = 1; i <= dsOutSRace.GetRowCount(); i++ ) {
        var objDs = object("dsOutRace_" + i);
        
        for ( var j = 0; j < toInteger(dsOutSRace.GetColumn(i-1, "RACE_REG_NO_CNT")); j++ ) {
            if ( obj.id == "dsOutRace_" + i && nRow == j ) continue;
            if ( objDs.GetColumn(j, "RACER_NO") == sRacerNo ) {
                var sRace = "";
                if ( i < 10 ) sRace = "0";
                sRace = sRace + i + "/" + obj.GetColumn(j, "RACE_REG_NO");
                obj.SetColumn(nRow, "ETC_RACE", sRace);
                
                sRace = "";
                if ( nRaceNo < 10 ) sRace = "0";
                sRace = sRace + nRaceNo + "/" + obj.GetColumn(nRow, "RACE_REG_NO");
                objDs.SetColumn(j, "ETC_RACE", sRace);
            }
        }
    }
    fcGetEtcRacer(obj, nRow, false);
}

/*-------------------------------------------------------------------------------------------------+
>>  선수 리스트에서 다른 경주 조회
+-------------------------------------------------------------------------------------------------*/
function fcGetEtcRacer(obj, nRow, bClear) {
    //if ( obj.GetColumn(0, "RACE_ALLOC_CNT") == "1" ) return;    
    
    var sRacerNo = obj.GetColumn(nRow, "RACER_NO");
    if ( fnc_IsNull(sRacerNo) ) return;
    
    var objName = "dsOutRace_";
    var nRaceNo = toInteger(substr(obj.Id, length(objName)));
    
    var sRace = "";
    for ( var i = 0; i <= dsOutRacer.GetRowCount(); i++ ) {
        if ( dsOutRacer.GetColumn(i, "RACER_NO") == sRacerNo ) {
            if ( !bClear ) {
                if ( nRaceNo < 10 ) sRace = "0";
                sRace = sRace + nRaceNo + "/" + obj.GetColumn(nRow, "RACE_REG_NO");
            }
            dsOutRacer.SetColumn(i, "ETC_RACE", sRace);
        }
    }
}

/*-------------------------------------------------------------------------------------------------+
>>  경주에서 삭제 되는 경우 다른 경주
+-------------------------------------------------------------------------------------------------*/
function fcGetEtcRaceClear(obj, nRow) {
    //if ( obj.GetColumn(0, "RACE_ALLOC_CNT") == "1" ) return;

    var sRacerNo = obj.GetColumn(nRow, "RACER_NO");
    if ( fnc_IsNull(sRacerNo) ) return;
    
    var objName = "dsOutRace_";
    var nRaceNo = toInteger(substr(obj.Id, length(objName)));
    
    for ( var i = 1; i <= dsOutSRace.GetRowCount(); i++ ) {
        var objDs = object("dsOutRace_" + i);
        for ( var j = 0; j < toInteger(dsOutSRace.GetColumn(i-1, "RACE_REG_NO_CNT")); j++ ) {
            if ( obj.id == "dsOutRace_" + i && nRow == j ) continue;
            if ( objDs.GetColumn(j, "RACER_NO") == sRacerNo ) {
                var sRace = "";
                objDs.SetColumn(j, "ETC_RACE", sRace);
            }
        }
    }
    fcGetEtcRacer(obj, nRow, true);
}

/*-------------------------------------------------------------------------------------------------+
>>  Grid의 최종 작업경주, 정번 설정
+-------------------------------------------------------------------------------------------------*/
function setFocus(obj, nRow, nCell) {
    var sColumnNm = obj.GetCellProp("body", nCell, "ColId");
    var objName = "grdRace_";
	var sRaceNo = substr(obj.Id, length(objName));
    var objDs   = object("dsOutRace_" + sRaceNo);

    objDs.row = nRow;
    obj.SetCellPos(nCell);
    obj.ShowEditor();
}    

/*-------------------------------------------------------------------------------------------------+
>>  취소버튼 클릭시
+-------------------------------------------------------------------------------------------------*/
function btnCancel_OnClick(obj)
{
    var nRow = dsOutRacer.GetRowCount();

    for( var i = 1; i <= dsOutSRace.GetRowCount(); i++ ) {
        if ( object("chkRace" + i).Value == "1" ) continue;
        var dsObj = object("dsOutRace_" + i);
        for ( var j = 0; j < dsObj.GetRowCount(); j++ ) {
            if ( fnc_IsNull(dsObj.GetColumn(j, "RACER_NO")) ) continue;
            fcGetEtcRaceClear(dsObj, j);
            dsOutRacer.AddRow();
            MoveRacerAllocation(dsOutRacer, dsOutRacer.currow, dsObj, j);
        }
        
        ComputeAvgScr(i);
    }
}

/*-------------------------------------------------------------------------------------------------+
>>  경주간격버튼 클릭시
+-------------------------------------------------------------------------------------------------*/
function btnRaceGap_OnClick(obj)
{
    var sArg  = " Arg_sStndYear=" + quote(cboSStndYear.Value);
        sArg += " Arg_sMbrCd="    + quote(cboSMbr.Value     );
        sArg += " Arg_sTms="      + quote(cboSRaceTms.Value );
        sArg += " Arg_sDayOrd="   + quote(cboSDayOrd.Value  );

	var asReturn = Dialog("form::E02040048.xml", sArg, 700, 360, "");

	if ( asReturn == false ) return;
}

/*-------------------------------------------------------------------------------------------------+
>>  장비변경시 현재경주 뒤에 있는 경주의 장비를 변경한다.
+-------------------------------------------------------------------------------------------------*/
function fcChangeEquip(nRaceNo, sColumn, sValue) {
    var nLastRace = dsOutSRace.GetRowCount();
    if ( sgChangeType == "RACER" ) {	// 선수는 해당선수만 변경
        nLastRace = nRaceNo;
    }

    for ( var i = nRaceNo; i <= nLastRace; i++ ) {
        var objDs = object("dsOutRace_" + i);
        for ( var j = 0; j < toInteger(dsOutSRace.GetColumn(i-1, "RACE_REG_NO_CNT")); j++ ) {
            if ( objDs.GetColumn(j, sColumn) == sValue ) {

                nSourceRow = 0;
                objDs.SetColumn(j, Trim("RACER_NO                       "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("RACER_NO                       ")));
                objDs.SetColumn(j, Trim("RACER_GRD_CD                   "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("RACER_GRD_CD                   ")));
                objDs.SetColumn(j, Trim("NM_KOR                         "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("NM_KOR                         ")));
                objDs.SetColumn(j, Trim("RACER_STAT_CD                  "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("RACER_STAT_CD                  ")));
                objDs.SetColumn(j, Trim("FAVOR_COURSE_CD                "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("FAVOR_COURSE_CD                ")));
                objDs.SetColumn(j, Trim("EMAIL_ADDR                     "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("EMAIL_ADDR                     ")));
                objDs.SetColumn(j, Trim("RACER_PERIO_NO                 "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("RACER_PERIO_NO                 ")));
                objDs.SetColumn(j, Trim("TRRAS_TMS_6_AMU_RANK_SCR       "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_TMS_6_AMU_RANK_SCR       ")));
                objDs.SetColumn(j, Trim("TRRAS_TMS_6_AVG_RANK_SCR       "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_TMS_6_AVG_RANK_SCR       ")));
                objDs.SetColumn(j, Trim("TRRAS_TMS_6_AMU_ACDNT_SCR      "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_TMS_6_AMU_ACDNT_SCR      ")));
                objDs.SetColumn(j, Trim("TRRAS_TMS_6_AVG_ACDNT_SCR      "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_TMS_6_AVG_ACDNT_SCR      ")));
                objDs.SetColumn(j, Trim("TRRAS_TMS_6_AVG_SCR            "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_TMS_6_AVG_SCR            ")));
                objDs.SetColumn(j, Trim("TRRAS_TMS_6_WIN_RATIO          "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_TMS_6_WIN_RATIO          ")));
                objDs.SetColumn(j, Trim("TRRAS_TMS_6_HIGH_RANK_RATIO    "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_TMS_6_HIGH_RANK_RATIO    ")));
                objDs.SetColumn(j, Trim("TRRAS_TMS_6_HIGH_3_RANK_RATIO  "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_TMS_6_HIGH_3_RANK_RATIO  ")));
                objDs.SetColumn(j, Trim("TRRAS_TMS_6_AVG_STRT_TM        "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_TMS_6_AVG_STRT_TM        ")));
                objDs.SetColumn(j, Trim("TRRAS_TMS_8_RANK_ORD           "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_TMS_8_RANK_ORD           ")));
                objDs.SetColumn(j, Trim("TRRAS_TMS_6_RACE_CNT           "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_TMS_6_RACE_CNT           ")));
                objDs.SetColumn(j, Trim("TRRAS_TMS_6_RANK_1             "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_TMS_6_RANK_1             ")));
                objDs.SetColumn(j, Trim("TRRAS_TMS_6_RANK_2             "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_TMS_6_RANK_2             ")));
                objDs.SetColumn(j, Trim("TRRAS_TMS_6_RANK_3             "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_TMS_6_RANK_3             ")));
                objDs.SetColumn(j, Trim("TRRAS_AMU_RANK_SCR             "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_AMU_RANK_SCR             ")));
                objDs.SetColumn(j, Trim("TRRAS_AVG_RANK_SCR             "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_AVG_RANK_SCR             ")));
                objDs.SetColumn(j, Trim("TRRAS_AMU_ACDNT_SCR            "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_AMU_ACDNT_SCR            ")));
                objDs.SetColumn(j, Trim("TRRAS_AVG_ACDNT_SCR            "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_AVG_ACDNT_SCR            ")));
                objDs.SetColumn(j, Trim("TRRAS_BF_QURT_ACDNT_SCR        "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_BF_QURT_ACDNT_SCR        ")));
                objDs.SetColumn(j, Trim("TRRAS_AF_QURT_ACDNT_SCR        "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_AF_QURT_ACDNT_SCR        ")));
                objDs.SetColumn(j, Trim("TRRAS_AVG_SCR                  "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_AVG_SCR                  ")));
                objDs.SetColumn(j, Trim("TRRAS_WIN_RATIO                "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_WIN_RATIO                ")));
                objDs.SetColumn(j, Trim("TRRAS_HIGH_RANK_RATIO          "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_HIGH_RANK_RATIO          ")));
                objDs.SetColumn(j, Trim("TRRAS_HIGH_3_RANK_RATIO        "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_HIGH_3_RANK_RATIO        ")));
                objDs.SetColumn(j, Trim("TRRAS_AVG_STRT_TM              "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_AVG_STRT_TM              ")));
                objDs.SetColumn(j, Trim("TRRAS_RUN_CNT                  "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_RUN_CNT                  ")));
                objDs.SetColumn(j, Trim("TRRAS_RACE_DT_CNT              "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_RACE_DT_CNT             ")));
                objDs.SetColumn(j, Trim("TRRAS_RACE_CNT                 "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_RACE_CNT                 ")));
                objDs.SetColumn(j, Trim("TRRAS_TOT_RACE_CNT             "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_TOT_RACE_CNT             ")));
                objDs.SetColumn(j, Trim("TRRAS_BF_RACE_CNT              "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_BF_RACE_CNT              ")));
                objDs.SetColumn(j, Trim("TRRAS_AF_RACE_CNT              "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_AF_RACE_CNT              ")));
                objDs.SetColumn(j, Trim("TRRAS_RANK_1_CNT               "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_RANK_1_CNT               ")));
                objDs.SetColumn(j, Trim("TRRAS_RANK_2_CNT               "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_RANK_2_CNT               ")));
                objDs.SetColumn(j, Trim("TRRAS_RANK_3_CNT               "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_RANK_3_CNT               ")));
                objDs.SetColumn(j, Trim("TRRAS_RANK_4_CNT               "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_RANK_4_CNT               ")));
                objDs.SetColumn(j, Trim("TRRAS_RANK_5_CNT               "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_RANK_5_CNT               ")));
                objDs.SetColumn(j, Trim("TRRAS_RANK_6_CNT               "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_RANK_6_CNT               ")));
                objDs.SetColumn(j, Trim("TRRAS_RANK_7_CNT               "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_RANK_7_CNT               ")));
                objDs.SetColumn(j, Trim("TRRAS_RANK_8_CNT               "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_RANK_8_CNT               ")));
                objDs.SetColumn(j, Trim("TRRAS_RANK_ETC_CNT             "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_RANK_ETC_CNT             ")));
                objDs.SetColumn(j, Trim("TRRAS_DGRE_JUDG_F_CNT          "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_DGRE_JUDG_F_CNT          ")));
                objDs.SetColumn(j, Trim("TRRAS_DGRE_JUDG_L_CNT          "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_DGRE_JUDG_L_CNT          ")));
                objDs.SetColumn(j, Trim("TRRAS_F_CNT                    "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_F_CNT                    ")));
                objDs.SetColumn(j, Trim("TRRAS_L_CNT                    "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_L_CNT                    ")));
                objDs.SetColumn(j, Trim("TRRAS_ABSE_CNT                 "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_ABSE_CNT                 ")));
                objDs.SetColumn(j, Trim("TRRAS_RACE_ESC_1_CNT           "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_RACE_ESC_1_CNT           ")));
                objDs.SetColumn(j, Trim("TRRAS_RACE_ESC_2_CNT           "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_RACE_ESC_2_CNT           ")));
                objDs.SetColumn(j, Trim("TRRAS_FOUL_ELIM_CNT            "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_FOUL_ELIM_CNT            ")));
                objDs.SetColumn(j, Trim("TRRAS_ELIM_CNT                 "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_ELIM_CNT                 ")));
                objDs.SetColumn(j, Trim("TRRAS_FOUL_WARN_CNT            "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_FOUL_WARN_CNT            ")));
                objDs.SetColumn(j, Trim("TRRAS_WARN_CNT                 "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_WARN_CNT                 ")));
                objDs.SetColumn(j, Trim("TRRAS_ATTEN_CNT                "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_ATTEN_CNT                ")));
                objDs.SetColumn(j, Trim("TRRAS_BF_TMS                   "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_BF_TMS                   ")));
                objDs.SetColumn(j, Trim("TRRAS_BF_BF_TMS                "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_BF_BF_TMS                ")));
                objDs.SetColumn(j, Trim("TRRAS_BF_BF_BF_TMS             "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_BF_BF_BF_TMS             ")));
                objDs.SetColumn(j, Trim("TRRAS_BF_MBR_CD                "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_BF_MBR_CD                ")));
                objDs.SetColumn(j, Trim("TRRAS_BF_BF_MBR_CD             "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_BF_BF_MBR_CD             ")));
                objDs.SetColumn(j, Trim("TRRAS_BF_BF_BF_MBR_CD          "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TRRAS_BF_BF_BF_MBR_CD          ")));
                objDs.SetColumn(j, Trim("TMRAS_STND_YEAR                "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TMRAS_STND_YEAR                ")));
                objDs.SetColumn(j, Trim("TMRAS_MBR_CD                   "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TMRAS_MBR_CD                   ")));
                objDs.SetColumn(j, Trim("TMRAS_TMS                      "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TMRAS_TMS                      ")));
                objDs.SetColumn(j, Trim("TMRAS_MOT_NO                   "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TMRAS_MOT_NO                   ")));
                objDs.SetColumn(j, Trim("TMRAS_RUN_CNT                  "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TMRAS_RUN_CNT                  ")));
                objDs.SetColumn(j, Trim("TMRAS_RACE_CNT                 "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TMRAS_RACE_CNT                 ")));
                objDs.SetColumn(j, Trim("TMRAS_RACE_DT_CNT              "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TMRAS_RACE_DT_CNT             ")));
                objDs.SetColumn(j, Trim("TMRAS_RANK_1_CNT               "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TMRAS_RANK_1_CNT               ")));
                objDs.SetColumn(j, Trim("TMRAS_RANK_2_CNT               "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TMRAS_RANK_2_CNT               ")));
                objDs.SetColumn(j, Trim("TMRAS_RANK_3_CNT               "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TMRAS_RANK_3_CNT               ")));
                objDs.SetColumn(j, Trim("TMRAS_RANK_4_CNT               "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TMRAS_RANK_4_CNT               ")));
                objDs.SetColumn(j, Trim("TMRAS_RANK_5_CNT               "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TMRAS_RANK_5_CNT               ")));
                objDs.SetColumn(j, Trim("TMRAS_RANK_6_CNT               "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TMRAS_RANK_6_CNT               ")));
                objDs.SetColumn(j, Trim("TMRAS_RANK_7_CNT               "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TMRAS_RANK_7_CNT               ")));
                objDs.SetColumn(j, Trim("TMRAS_RANK_8_CNT               "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TMRAS_RANK_8_CNT               ")));
                objDs.SetColumn(j, Trim("TMRAS_ACCU_RANK_SCR            "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TMRAS_ACCU_RANK_SCR            ")));
                objDs.SetColumn(j, Trim("TMRAS_AVG_RANK_SCR             "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TMRAS_AVG_RANK_SCR             ")));
                objDs.SetColumn(j, Trim("TMRAS_WIN_RATIO                "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TMRAS_WIN_RATIO                ")));
                objDs.SetColumn(j, Trim("TMRAS_HIGH_RANK_RATIO          "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TMRAS_HIGH_RANK_RATIO          ")));
                objDs.SetColumn(j, Trim("TMRAS_HIGH_3_RANK_RATIO        "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TMRAS_HIGH_3_RANK_RATIO        ")));
                objDs.SetColumn(j, Trim("TMRAS_TMS_3_ITRDT_RUN_TM       "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TMRAS_TMS_3_ITRDT_RUN_TM       ")));
                objDs.SetColumn(j, Trim("TMRAS_AVG_ITRDT_RUN_TM         "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TMRAS_AVG_ITRDT_RUN_TM         ")));
                objDs.SetColumn(j, Trim("TMRAS_MAX_ITRDT_RUN_TM         "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TMRAS_MAX_ITRDT_RUN_TM         ")));
                objDs.SetColumn(j, Trim("TMRAS_MIN_ITRDT_RUN_TM         "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TMRAS_MIN_ITRDT_RUN_TM         ")));
                objDs.SetColumn(j, Trim("TMRAS_ITRDT_RUN_TM_DVTN        "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TMRAS_ITRDT_RUN_TM_DVTN        ")));
                objDs.SetColumn(j, Trim("TBRAS_STND_YEAR                "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TBRAS_STND_YEAR                ")));
                objDs.SetColumn(j, Trim("TBRAS_MBR_CD                   "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TBRAS_MBR_CD                   ")));
                objDs.SetColumn(j, Trim("TBRAS_TMS                      "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TBRAS_TMS                      ")));
                objDs.SetColumn(j, Trim("TBRAS_BOAT_NO                  "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TBRAS_BOAT_NO                  ")));
                objDs.SetColumn(j, Trim("TBRAS_RUN_CNT                  "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TBRAS_RUN_CNT                  ")));
                objDs.SetColumn(j, Trim("TBRAS_RACE_CNT                 "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TBRAS_RACE_CNT                 ")));
                objDs.SetColumn(j, Trim("TBRAS_RACE_DT_CNT              "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TBRAS_RACE_DT_CNT             ")));
                objDs.SetColumn(j, Trim("TBRAS_RANK_1_CNT               "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TBRAS_RANK_1_CNT               ")));
                objDs.SetColumn(j, Trim("TBRAS_RANK_2_CNT               "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TBRAS_RANK_2_CNT               ")));
                objDs.SetColumn(j, Trim("TBRAS_RANK_3_CNT               "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TBRAS_RANK_3_CNT               ")));
                objDs.SetColumn(j, Trim("TBRAS_RANK_4_CNT               "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TBRAS_RANK_4_CNT               ")));
                objDs.SetColumn(j, Trim("TBRAS_RANK_5_CNT               "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TBRAS_RANK_5_CNT               ")));
                objDs.SetColumn(j, Trim("TBRAS_RANK_6_CNT               "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TBRAS_RANK_6_CNT               ")));
                objDs.SetColumn(j, Trim("TBRAS_RANK_7_CNT               "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TBRAS_RANK_7_CNT               ")));
                objDs.SetColumn(j, Trim("TBRAS_RANK_8_CNT               "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TBRAS_RANK_8_CNT               ")));
                objDs.SetColumn(j, Trim("TBRAS_ACCU_RANK_SCR            "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TBRAS_ACCU_RANK_SCR            ")));
                objDs.SetColumn(j, Trim("TBRAS_AVG_RANK_SCR             "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TBRAS_AVG_RANK_SCR             ")));
                objDs.SetColumn(j, Trim("TBRAS_WIN_RATIO                "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TBRAS_WIN_RATIO                ")));
                objDs.SetColumn(j, Trim("TBRAS_HIGH_RANK_RATIO          "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TBRAS_HIGH_RANK_RATIO          ")));
                objDs.SetColumn(j, Trim("TBRAS_HIGH_3_RANK_RATIO        "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TBRAS_HIGH_3_RANK_RATIO        ")));
                objDs.SetColumn(j, Trim("TBRAS_TMS_3_ITRDT_RUN_TM       "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TBRAS_TMS_3_ITRDT_RUN_TM       ")));
                objDs.SetColumn(j, Trim("TBRAS_AVG_ITRDT_RUN_TM         "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TBRAS_AVG_ITRDT_RUN_TM         ")));
                objDs.SetColumn(j, Trim("TBRAS_MAX_ITRDT_RUN_TM         "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TBRAS_MAX_ITRDT_RUN_TM         ")));
                objDs.SetColumn(j, Trim("TBRAS_MIN_ITRDT_RUN_TM         "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TBRAS_MIN_ITRDT_RUN_TM         ")));
                objDs.SetColumn(j, Trim("TBRAS_ITRDT_RUN_TM_DVTN        "), dsOutArrangeCurrRow.GetColumn(nSourceRow, Trim("TBRAS_ITRDT_RUN_TM_DVTN        ")));
        
                ComputeAvgScr(i);
            }
        }
    }
}

/*-------------------------------------------------------------------------------------------------+
>>  선수및장비 변경시 해당 정보 변경
+-------------------------------------------------------------------------------------------------*/
function fcChange(asChangeInfo) {

    var objName = "dsOutRace_";
    var nRaceNo = toInteger(substr(oLastDs.Id, length(objName)));
    var nLastRace = dsOutSRace.GetRowCount();
    var asColumn = Array(4);
    if ( sgChangeType == "RACER" ) {
        var i = 0;
        nLastRace = nRaceNo;
        asColumn[i++] = "RACER_NO";
    } else if ( sgChangeType == "MOT" ) {
        var i = 0;
        asColumn[i++] = "MOT_NO";
    } else if ( sgChangeType == "BOAT" ) {
        var i = 0;
        asColumn[i++] = "BOAT_NO";
    }
    
    var sValue   = oLastDs.GetColumn(oLastDsRow, asColumn[0]);

    for ( var i = nRaceNo; i <= nLastRace; i++ ) {
        var objDs = object("dsOutRace_" + i);
        for ( var j = 0; j < toInteger(dsOutSRace.GetColumn(i-1, "RACE_REG_NO_CNT")); j++ ) {
            if ( objDs.GetColumn(j, asColumn[0]) == sValue ) {
                if ( sgChangeType == "RACER" ) {
                    objDs.SetColumn(j, "RACER_NO"    , asChangeInfo[0]);
                    objDs.SetColumn(j, "RACER_RSN"   , asChangeInfo[1]);
                    objDs.SetColumn(j, "VIEW_MOT_NO" , substr(asChangeInfo[2], 5, 3));
                    objDs.SetColumn(j, "MOT_NO"      , asChangeInfo[2]);
                    objDs.SetColumn(j, "ORG_MOT_NO"  , asChangeInfo[2]);
                    objDs.SetColumn(j, "VIEW_BOAT_NO", substr(asChangeInfo[3], 5, 3));
                    objDs.SetColumn(j, "BOAT_NO"     , asChangeInfo[3]);
                    objDs.SetColumn(j, "ORG_BOAT_NO" , asChangeInfo[3]);
                } else if ( sgChangeType == "MOT" ) {
                    objDs.SetColumn(j, "VIEW_MOT_NO" , substr(asChangeInfo[0], 5, 3));
                    objDs.SetColumn(j, "MOT_NO" , asChangeInfo[0]);
                    objDs.SetColumn(j, "MOT_RSN", asChangeInfo[1]);
                } else if ( sgChangeType == "BOAT" ) {
                    objDs.SetColumn(j, "VIEW_BOAT_NO" , substr(asChangeInfo[0], 5, 3));
                    objDs.SetColumn(j, "BOAT_NO" , asChangeInfo[0]);
                    objDs.SetColumn(j, "BOAT_RSN", asChangeInfo[1]);
                }
            }
        }
    }
}

/*-------------------------------------------------------------------------------------------------+
>>  Excel Download Button Click
+-------------------------------------------------------------------------------------------------*/
function btnExcelDownload_OnClick(obj)
{
    Destroy("grdExcelExport");
    CreateGridExcel();
    dsOutExcelExport.Clear();
 
    var objName = "dsOutRace_";
	for ( var i = 1; i <= dsOutSRace.GetRowCount(); i++ ) {
        if ( i == 0 ) {
            dsOutExcelExport.Copy(object(objName + i));
        }
        
        dsOutExcelExport.AppendDataset(object(objName + i));
	}
	
	fnc_OpenExcelExport("grdExcelExport");
}

/*-------------------------------------------------------------------------------------------------+
>>  Excel Upload Button Click
+-------------------------------------------------------------------------------------------------*/
function btnExcelUpload_OnClick(obj)
{
    sResponse = fce_GetSelectFile();

    if ( !fnc_IsNull(sResponse) ) {
        ext_ExcelImportByIndex(sResponse[0] + "\\" + sResponse[1], 0, "dsOutExcelImport");
    } else {
        return;
    }

    var sRaceNo = "";
    for ( var i = 1; i <= dsOutSRace.GetRowCount(); i++ ) {
        var objDs = object("dsOutRace_" + i);
        objDs.ClearData();
        
        if ( i < 10 ) sRaceNo = "0" + i;
        for ( var j = 1; j <= toInteger(dsOutSRace.GetColumn(i-1, "RACE_REG_NO_CNT")); j++ ) {
            objDs.AddRow();
            objDs.SetColumn(j - 1, "RACE_NO"    , sRaceNo);
            objDs.SetColumn(j - 1, "RACE_REG_NO", j      );
        }
    }
    
	var Col26 = "";
	var Col27 = "";
	var Col28 = "";
	var Col29 = "";
	var Col30 = "";
	var Col31 = "";
	var Col32 = "";
	var Col33 = "";
	var Col34 = "";
	
	var Col35 = "";
	var Col36 = "";
	var Col37 = "";

	if(maxRegNo <= 6){
		Col28 = "Col26";
		Col29 = "Col27";
		Col30 = "Col28";
		Col31 = "Col29";
		Col32 = "Col30";
		Col33 = "Col31";
		Col34 = "Col32";
		
		Col35 = "Col33";
		Col36 = "Col34";
		Col37 = "Col35";
		
		
	}else if(maxRegNo == 7){
		Col27 = "Col26";
		Col28 = "Col27";
		Col29 = "Col28";
		Col30 = "Col29";
		Col31 = "Col30";
		Col32 = "Col31";	
		Col33 = "Col32";
		Col34 = "Col33";
		
		Col35 = "Col34";
		Col36 = "Col35";
		Col37 = "Col36";
				
	}else if(maxRegNo == 8){
		Col26 = "Col26";
		Col27 = "Col27";
		Col28 = "Col28";
		Col29 = "Col29";
		Col30 = "Col30";
		Col31 = "Col31";
		Col32 = "Col32";	
		Col33 = "Col33";
		Col34 = "Col34";
		
		Col35 = "Col35";
		Col36 = "Col36";
		Col37 = "Col37";
	}    
    
    sRaceNo = "";
    var nRaceRegNo = 0;
    for ( var i = 0; i < dsOutExcelImport.GetRowCount(); i++ ) {
        sRaceNo    = dsOutExcelImport.GetColumn(i, "Col01");
        if ( toInteger(sRaceNo) == 0 ) continue;
        
        nRaceRegNo = toInteger(dsOutExcelImport.GetColumn(i, "Col02"));
        
        var objDs = object("dsOutRace_" + toInteger(sRaceNo));
        var nRow = nRaceRegNo - 1;
        
        objDs.SetColumn(nRow, "RACE_NO"                    , dsOutExcelImport.GetColumn(i, "Col01"));   
        objDs.SetColumn(nRow, "RACE_REG_NO"                , dsOutExcelImport.GetColumn(i, "Col02"));   
        objDs.SetColumn(nRow, "RACER_NO"                   , dsOutExcelImport.GetColumn(i, "Col03"));   
        objDs.SetColumn(nRow, "NM_KOR"                     , dsOutExcelImport.GetColumn(i, "Col04"));   
        objDs.SetColumn(nRow, "RACER_GRD_CD"               , dsOutExcelImport.GetColumn(i, "Col05"));
        objDs.SetColumn(nRow, "RANK"                       , dsOutExcelImport.GetColumn(i, "Col06"));
        objDs.SetColumn(nRow, "SCR"                        , dsOutExcelImport.GetColumn(i, "Col07"));
        objDs.SetColumn(nRow, "TRRAS_AVG_SCR"              , dsOutExcelImport.GetColumn(i, "Col08"));
        objDs.SetColumn(nRow, "ETC_RACE"                   , dsOutExcelImport.GetColumn(i, "Col09"));
        objDs.SetColumn(nRow, "NATV_PLAC_CD"               , dsOutExcelImport.GetColumn(i, "Col10"));
        objDs.SetColumn(nRow, "NATY_UNIV"                  , dsOutExcelImport.GetColumn(i, "Col11"));
        objDs.SetColumn(nRow, "TRRAS_TMS_6_AVG_RANK_SCR"   , dsOutExcelImport.GetColumn(i, "Col12"));
        objDs.SetColumn(nRow, "TRRAS_TMS_6_AVG_STRT_TM"    , dsOutExcelImport.GetColumn(i, "Col13"));
        objDs.SetColumn(nRow, "TRRAS_TMS_6_HIGH_RANK_RATIO", dsOutExcelImport.GetColumn(i, "Col14"));
        objDs.SetColumn(nRow, "TRRAS_HIGH_RANK_RATIO"      , dsOutExcelImport.GetColumn(i, "Col15"));
        objDs.SetColumn(nRow, "TRRAS_HIGH_3_RANK_RATIO"    , dsOutExcelImport.GetColumn(i, "Col16"));
        objDs.SetColumn(nRow, "ENTRY_BODY_WGHT"            , dsOutExcelImport.GetColumn(i, "Col17"));
        objDs.SetColumn(nRow, "RACE1"                      , dsOutExcelImport.GetColumn(i, "Col18"));
        objDs.SetColumn(nRow, "RACE2"                      , dsOutExcelImport.GetColumn(i, "Col19"));
        objDs.SetColumn(nRow, "RACE_CNT_1"                 , dsOutExcelImport.GetColumn(i, "Col20"));
        objDs.SetColumn(nRow, "RACE_CNT_2"                 , dsOutExcelImport.GetColumn(i, "Col21"));
        objDs.SetColumn(nRow, "RACE_CNT_3"                 , dsOutExcelImport.GetColumn(i, "Col22"));
        objDs.SetColumn(nRow, "RACE_CNT_4"                 , dsOutExcelImport.GetColumn(i, "Col23"));
        objDs.SetColumn(nRow, "RACE_CNT_5"                 , dsOutExcelImport.GetColumn(i, "Col24"));
        objDs.SetColumn(nRow, "RACE_CNT_6"                 , dsOutExcelImport.GetColumn(i, "Col25"));
        
        if(maxRegNo >= 7)objDs.SetColumn(nRow, "RACE_CNT_7"                 , dsOutExcelImport.GetColumn(i, Col26));
        if(maxRegNo >= 8)objDs.SetColumn(nRow, "RACE_CNT_8"                 , dsOutExcelImport.GetColumn(i, Col27));
        
        objDs.SetColumn(nRow, "MOT_NO"                     , dsOutExcelImport.GetColumn(i, Col28));
        objDs.SetColumn(nRow, "VIEW_MOT_NO"                , substr(dsOutExcelImport.GetColumn(i, Col28), 5));
        objDs.SetColumn(nRow, "TMRAS_AVG_RANK_SCR"         , dsOutExcelImport.GetColumn(i, Col29));
        objDs.SetColumn(nRow, "TMRAS_HIGH_RANK_RATIO"      , dsOutExcelImport.GetColumn(i, Col30));
        objDs.SetColumn(nRow, "TMRAS_AVG_ITRDT_RUN_TM"     , dsOutExcelImport.GetColumn(i, Col31));
        objDs.SetColumn(nRow, "BOAT_NO"                    , dsOutExcelImport.GetColumn(i, Col32));
        objDs.SetColumn(nRow, "VIEW_BOAT_NO"               , substr(dsOutExcelImport.GetColumn(i, Col32), 5));
        objDs.SetColumn(nRow, "TBRAS_AVG_RANK_SCR"         , dsOutExcelImport.GetColumn(i, Col33));
        objDs.SetColumn(nRow, "TBRAS_HIGH_RANK_RATIO"      , dsOutExcelImport.GetColumn(i, Col34));
        objDs.SetColumn(nRow, "ABSE_CD"                    , dsOutExcelImport.GetColumn(i, Col35));
        objDs.SetColumn(nRow, "RMK"                        , dsOutExcelImport.GetColumn(i, Col36));
        objDs.SetColumn(nRow, "SPEC_CD"                    , dsOutExcelImport.GetColumn(i, Col37));
        
       
                
                
    }
    
    for ( var i = 1; i <= dsOutSRace.GetRowCount(); i++ ) {
        ComputeAvgScr(i);
    }
                
}

/*-------------------------------------------------------------------------------------------------+
>>  Grid생성
+-------------------------------------------------------------------------------------------------*/
function CreateGridExcel() {
    
    var sContents = "";
    sContents += '      <contents>';
    sContents += fcGetColumnExcel() + fcGetHeadExcel() + fcGetBodyExcel();
    sContents += '      </contents>';

	sGridType = 'AutoFit="false"           '
	          + 'AutoEnter="TRUE"          '
	          + 'AutoFitEndLine="Hide"     '
	          + 'BindDataset="dsOutExcelExport" '
	          + 'BKColor="user15"          '
	          + 'BkColor2="user16"         '
	          + 'BkSelColor="user17"       '
	          + 'BoldHead="true"           '
	          + 'Border="Flat"             '
	          + 'BorderColor="user22"      '
	          + 'Bottom="86"               '
	          + 'DragMode="TRUE"           '
	          + 'DropMode="TRUE"           '
	          + 'Enable="true"             '
	          + 'Editable="TRUE"           '
	          + 'EndLineColor="default"    '
	          + 'FillArea="TRUE"           '
	          + 'HeadBorder="Flat"         '
	          + 'HeadHeight="20"           '
	          + 'Height="100"              '
	          + 'Id="grdExcelExport"       '
	          + 'InputPanel="FALSE"        '
	          + 'Left="100"                '
	          + 'LineColor="user18"        '
	          + 'MinWidth="100"            '
	          + 'Right="460"               '
	          + 'RowHeight="18"            '
	          + 'SelColor="user19"         '
		      + 'Style="snis_grid"         '
		      + 'TabStop="true"            '
		      + 'Top="100"                 '
		      + 'UseDBuff="true"           '
		      + 'UsePopupMenu="true"       '
		      + 'UseSelColor="False"       '
		      + 'Visible="false"           '
		      + 'VLineColor="default"      '
		      + 'WheelScrollRow="1"        '
		      + 'Width="100"               ';

	create("Grid","grdExcelExport", sGridType);
	object("grdExcelExport").contents = sContents;
}

/*-------------------------------------------------------------------------------------------------+
>>  Grid Column 생성
+-------------------------------------------------------------------------------------------------*/
function fcGetColumnExcel() {
    
    var colCnt = 35;
    
    if(maxRegNo == 7) colCnt = 36;
    if(maxRegNo == 8) colCnt = 37;
    
    var sColumn = "";
    sColumn += '					<columns>';
   
    for ( var i = 0; i < colCnt; i++ ) {
        sColumn += '			            <col width="70"/>';
    }
    sColumn += '					</columns>';
    return sColumn;
}

/*-------------------------------------------------------------------------------------------------+
>>  Grid Head 생성
+-------------------------------------------------------------------------------------------------*/
function fcGetHeadExcel() {

	var idx = 0;

    var sHead = "";
    sHead   = '					<head>'
	        + '					    <cell bkcolor="user20" col="' + idx++ + '"  color="user21" display="text" font="굴림,9" text="경주번호"/>        '
			+ '			            <cell bkcolor="user20" col="' + idx++ + '"  color="user21" display="text" font="굴림,9" text="정번"/>            '
			+ '			            <cell bkcolor="user20" col="' + idx++ + '"  color="user21" display="text" font="굴림,9" text="등록번호"/>        '
			+ '			            <cell bkcolor="user20" col="' + idx++ + '"  color="user21" display="text" font="굴림,9" text="선수명"/>          '
			+ '			            <cell bkcolor="user20" col="' + idx++ + '"  color="user21" display="text" font="굴림,9" text="등급"/>            '
			+ '			            <cell bkcolor="user20" col="' + idx++ + '"  color="user21" display="text" font="굴림,9" text="순위"/>            '
			+ '			            <cell bkcolor="user20" col="' + idx++ + '"  color="user21" display="text" font="굴림,9" text="종합평가점"/>      '
			+ '			            <cell bkcolor="user20" col="' + idx++ + '"  color="user21" display="text" font="굴림,9" text="평균득점"/>        '
			+ '			            <cell bkcolor="user20" col="' + idx++ + '"  color="user21" display="text" font="굴림,9" text="다른경주"/>        '
			+ '			            <cell bkcolor="user20" col="' + idx++ + '"  color="user21" display="text" font="굴림,9" text="지역"/>            '
			+ '			            <cell bkcolor="user20" col="' + idx++ + '" color="user21" display="text" font="굴림,9" text="대학명"/>          '
			+ '			            <cell bkcolor="user20" col="' + idx++ + '" color="user21" display="text" font="굴림,9" text="평균착순점"/>      '
			+ '			            <cell bkcolor="user20" col="' + idx++ + '" color="user21" display="text" font="굴림,9" text="6회차ST타임"/>     '
			+ '			            <cell bkcolor="user20" col="' + idx++ + '" color="user21" display="text" font="굴림,9" text="6회차연대율"/>     '
			+ '			            <cell bkcolor="user20" col="' + idx++ + '" color="user21" display="text" font="굴림,9" text="연간연대율"/>      '
			+ '			            <cell bkcolor="user20" col="' + idx++ + '" color="user21" display="text" font="굴림,9" text="연간삼연대율"/>    '
			+ '			            <cell bkcolor="user20" col="' + idx++ + '" color="user21" display="text" font="굴림,9" text="전회차체중"/>      '
			+ '			            <cell bkcolor="user20" col="' + idx++ + '" color="user21" display="text" font="굴림,9" text="전일성적1"/>       '
			+ '			            <cell bkcolor="user20" col="' + idx++ + '" color="user21" display="text" font="굴림,9" text="전일성적2"/>       '
			+ '			            <cell bkcolor="user20" col="' + idx++ + '" color="user21" display="text" font="굴림,9" text="1번정 횟수"/>   '
			+ '			            <cell bkcolor="user20" col="' + idx++ + '" color="user21" display="text" font="굴림,9" text="2번정 횟수"/>   '
			+ '			            <cell bkcolor="user20" col="' + idx++ + '" color="user21" display="text" font="굴림,9" text="3번정 횟수"/>   '
			+ '			            <cell bkcolor="user20" col="' + idx++ + '" color="user21" display="text" font="굴림,9" text="4번정 횟수"/>   '
			+ '			            <cell bkcolor="user20" col="' + idx++ + '" color="user21" display="text" font="굴림,9" text="5번정 횟수"/>   '
			+ '			            <cell bkcolor="user20" col="' + idx++ + '" color="user21" display="text" font="굴림,9" text="6번정 횟수"/>   ';
	if(maxRegNo >= 7) sHead  += '			            <cell bkcolor="user20" col="' + idx++ + '" color="user21" display="text" font="굴림,9" text="7번정 횟수"/>   ';
	if(maxRegNo >= 8) sHead  += '			            <cell bkcolor="user20" col="' + idx++ + '" color="user21" display="text" font="굴림,9" text="8번정 횟수"/>   ';			
	sHead  += '			            <cell bkcolor="user20" col="' + idx++ + '" color="user21" display="text" font="굴림,9" text="모터번호"/>        '
			+ '			            <cell bkcolor="user20" col="' + idx++ + '" color="user21" display="text" font="굴림,9" text="모터착순점"/>      '
			+ '			            <cell bkcolor="user20" col="' + idx++ + '" color="user21" display="text" font="굴림,9" text="모터연대율"/>      '
			+ '			            <cell bkcolor="user20" col="' + idx++ + '" color="user21" display="text" font="굴림,9" text="모터소개항주타임"/>'
			+ '			            <cell bkcolor="user20" col="' + idx++ + '" color="user21" display="text" font="굴림,9" text="보트번호"/>        '
			+ '			            <cell bkcolor="user20" col="' + idx++ + '" color="user21" display="text" font="굴림,9" text="보트착순점"/>      '
			+ '			            <cell bkcolor="user20" col="' + idx++ + '" color="user21" display="text" font="굴림,9" text="보트연대율"/>      '
			+ '			            <cell bkcolor="user20" col="' + idx++ + '" color="user21" display="text" font="굴림,9" text="출전"/>            '
			+ '			            <cell bkcolor="user20" col="' + idx++ + '" color="user21" display="text" font="굴림,9" text="특이사항"/>        '
			+ '			            <cell bkcolor="user20" col="' + idx++ + '" color="user21" display="text" font="굴림,9" text="특선그룹"/>        ';
    sHead  += '				      </head>';
    return sHead;
}

/*-------------------------------------------------------------------------------------------------+
>>  Grid Body 생성
+-------------------------------------------------------------------------------------------------*/
function fcGetBodyExcel() {

	var idx = 0;
    
    var sBody = "";

    sBody   = '         <body>'
			+ '			  <cell col="' + idx++ + '"  colid="RACE_NO"                       align="center"  display="text"/>'
			+ '			  <cell col="' + idx++ + '"  colid="RACE_REG_NO"                   align="center"  display="text"/>'
			+ '			  <cell col="' + idx++ + '"  colid="RACER_NO"                      align="center"  display="text"/>'
			+ '			  <cell col="' + idx++ + '"  colid="NM_KOR"                        align="center"  display="text"/>'
			+ '			  <cell col="' + idx++ + '"  colid="RACER_GRD_CD"                  align="center"  display="text"/>'
			+ '			  <cell col="' + idx++ + '"  colid="RANK"                          align="center"  display="text"/>'
			+ '			  <cell col="' + idx++ + '"  colid="SCR"                           align="center"  display="text"/>'
			+ '			  <cell col="' + idx++ + '"  colid="TRRAS_AVG_SCR"                 align="center"  display="text"/>'
			+ '			  <cell col="' + idx++ + '"  colid="ETC_RACE"                      align="center"  display="text"/>'
			+ '			  <cell col="' + idx++ + '"  colid="NATV_PLAC_CD"                  align="center"  display="text"/>'
			+ '			  <cell col="' + idx++ + '" colid="NATY_UNIV"                     align="left"    display="text"/>'
			+ '			  <cell col="' + idx++ + '" colid="TRRAS_TMS_6_AVG_RANK_SCR"      align="center"  display="text"/>'
			+ '			  <cell col="' + idx++ + '" colid="TRRAS_TMS_6_AVG_STRT_TM"       align="center"  display="text"/>'
			+ '			  <cell col="' + idx++ + '" colid="TRRAS_TMS_6_HIGH_RANK_RATIO"   align="center"  display="text"/>'
			+ '			  <cell col="' + idx++ + '" colid="TRRAS_HIGH_RANK_RATIO"         align="center"  display="text"/>'
			+ '			  <cell col="' + idx++ + '" colid="TRRAS_HIGH_3_RANK_RATIO"       align="center"  display="text"/>'
			+ '			  <cell col="' + idx++ + '" colid="ENTRY_BODY_WGHT"               align="center"  display="text"/>'
			+ '			  <cell col="' + idx++ + '" colid="RACE1"                         align="center"  display="text"/>'
			+ '			  <cell col="' + idx++ + '" colid="RACE2"                         align="center"  display="text"/>'
			+ '			  <cell col="' + idx++ + '" colid="RACE_CNT_1"                    align="center"  display="text"/>'
			+ '			  <cell col="' + idx++ + '" colid="RACE_CNT_2"                    align="center"  display="text"/>'
			+ '			  <cell col="' + idx++ + '" colid="RACE_CNT_3"                    align="center"  display="text"/>'
			+ '			  <cell col="' + idx++ + '" colid="RACE_CNT_4"                    align="center"  display="text"/>'
			+ '			  <cell col="' + idx++ + '" colid="RACE_CNT_5"                    align="center"  display="text"/>'
			+ '			  <cell col="' + idx++ + '" colid="RACE_CNT_6"                    align="center"  display="text"/>';
	if(maxRegNo >= 7) sBody  += '			  <cell col="' + idx++ + '" colid="RACE_CNT_7"                    align="center"  display="text"/>';
	if(maxRegNo >= 8) sBody  += '			  <cell col="' + idx++ + '" colid="RACE_CNT_8"                    align="center"  display="text"/>';
	sBody  += '			  <cell col="' + idx++ + '" colid="MOT_NO"                        align="center"  display="text"/>'
			+ '			  <cell col="' + idx++ + '" colid="TMRAS_AVG_RANK_SCR"            align="center"  display="text"/>'
			+ '			  <cell col="' + idx++ + '" colid="TMRAS_HIGH_RANK_RATIO"         align="center"  display="text"/>'
			+ '			  <cell col="' + idx++ + '" colid="TMRAS_AVG_ITRDT_RUN_TM"        align="center"  display="text"/>'
			+ '			  <cell col="' + idx++ + '" colid="BOAT_NO"                       align="center"  display="text"/>'
			+ '			  <cell col="' + idx++ + '" colid="TBRAS_AVG_RANK_SCR"            align="center"  display="text"/>'
			+ '			  <cell col="' + idx++ + '" colid="TBRAS_HIGH_RANK_RATIO"         align="center"  display="text"/>'
			+ '			  <cell col="' + idx++ + '" colid="ABSE_CD"                       align="center"  display="text"/>'
			+ '			  <cell col="' + idx++ + '" colid="RMK"                           align="center"  display="text"/>'
			+ '			  <cell col="' + idx++ + '" colid="SPEC_CD"                       align="center"  display="text"/>';
    sBody  += '			</body>';
    return sBody;
}

/*-------------------------------------------------------------------------------------------------+
>>  Excel Dataset 생성
+-------------------------------------------------------------------------------------------------*/
function fcSetRacerDataset() {
    var objDs = dsOutRacer;

    objDs.AddColumn("RACE_NO"                    , "String");
    objDs.AddColumn("RACE_REG_NO"                , "String");
    objDs.AddColumn("RACER_NO"                   , "String");
    objDs.AddColumn("NM_KOR"                     , "String");
    objDs.AddColumn("RACER_GRD_CD"               , "String");
    objDs.AddColumn("RANK"                       , "DECIMAL");
    objDs.AddColumn("SCR"                        , "DECIMAL");
    objDs.AddColumn("TRRAS_AVG_SCR"              , "DECIMAL");
    objDs.AddColumn("ETC_RACE"                   , "String");
    objDs.AddColumn("NATV_PLAC_CD"               , "String");
    objDs.AddColumn("NATY_UNIV"                  , "String");
    objDs.AddColumn("TRRAS_TMS_6_AVG_RANK_SCR"   , "DECIMAL");
    objDs.AddColumn("TRRAS_TMS_6_AVG_STRT_TM"    , "DECIMAL");
    objDs.AddColumn("TRRAS_TMS_6_HIGH_RANK_RATIO", "DECIMAL");
    objDs.AddColumn("TRRAS_HIGH_RANK_RATIO"      , "DECIMAL");
    objDs.AddColumn("TRRAS_HIGH_3_RANK_RATIO"    , "DECIMAL");
    objDs.AddColumn("ENTRY_BODY_WGHT"            , "DECIMAL");
    objDs.AddColumn("RACE1"                      , "String");
    objDs.AddColumn("RACE2"                      , "String");
    objDs.AddColumn("RACE_CNT_1"                 , "DECIMAL");
    objDs.AddColumn("RACE_CNT_2"                 , "DECIMAL");
    objDs.AddColumn("RACE_CNT_3"                 , "DECIMAL");
    objDs.AddColumn("RACE_CNT_4"                 , "DECIMAL");
    objDs.AddColumn("RACE_CNT_5"                 , "DECIMAL");
    objDs.AddColumn("RACE_CNT_6"                 , "DECIMAL");
    if(maxRegNo >= 7) objDs.AddColumn("RACE_CNT_7"                 , "DECIMAL");
    if(maxRegNo >= 8) objDs.AddColumn("RACE_CNT_8"                 , "DECIMAL");    
    objDs.AddColumn("MOT_NO"                     , "String");
    objDs.AddColumn("VIEW_MOT_NO"                , "String");
    objDs.AddColumn("TMRAS_AVG_RANK_SCR"         , "DECIMAL");
    objDs.AddColumn("TMRAS_HIGH_RANK_RATIO"      , "DECIMAL");
    objDs.AddColumn("TMRAS_AVG_ITRDT_RUN_TM"     , "DECIMAL");
    objDs.AddColumn("BOAT_NO"                    , "String");
    objDs.AddColumn("VIEW_BOAT_NO"               , "String");
    objDs.AddColumn("TBRAS_AVG_RANK_SCR"         , "DECIMAL");
    objDs.AddColumn("TBRAS_HIGH_RANK_RATIO"      , "DECIMAL");
    objDs.AddColumn("ABSE_CD"                    , "String");
    objDs.AddColumn("RMK"                        , "String");
    objDs.AddColumn("SPEC_CD"                    , "String");
}

/*-------------------------------------------------------------------------------------------------+
>>  경주 Hold
+-------------------------------------------------------------------------------------------------*/
function fcRaceHold(obj)
{
    var objName = "chkRace";
	var nRaceNo = toInteger(substr(obj.Id, length(objName)));

    var objGrid = object("grdRace_" + nRaceNo);
    
    if ( obj.Value == "1" ) {
        objGrid.BkColor    = "#A5E3E6";
        objGrid.BkColor2   = "#A5E3E6";
        objGrid.BkSelColor = "#A5E3E6";
        objGrid.OnDrag     = "";
        objGrid.OnDrop     = "";
    } else {
        objGrid.BkColor    = "";
        objGrid.BkColor2   = "";
        objGrid.BKSelColor = "";
        objGrid.OnDrag     = "fcRacerDrag";
        objGrid.OnDrop     = "fcRacerDrop";
    }
}

function chkAll_OnClick(obj)
{
    var objName = "chkRace";

	if ( chkAll.Value == "1" ) {
		for ( var i = 1; i <= dsOutSRace.GetRowCount(); i++ ) {
			object(objName + i).Value = "True";
			fcRaceHold(object(objName + i));
		}
	} else {
		for ( var i = 1; i <= dsOutSRace.GetRowCount(); i++ ) {
			object(objName + i).Value = "False";
			fcRaceHold(object(objName + i));
		}
	}
}

/*-------------------------------------------------------------------------------------------------+
>>  편성 화면 생성
+-------------------------------------------------------------------------------------------------*/
function fcSetOrganComponents(){


	if(this.IsExistVariable("Arg_isPop", "Local")){
		trace(window.height);
		window.height = 895;
	}else{
		height = 1030;
	}

	// 경주수에 따라 화면높이를 변경한다.
	if(dsOutSRace.GetRowCount()>15){	// 늘린다.
		global.window.width = 1700;
		if(this.IsExistVariable("Arg_isPop", "Local")){
			window.width = 1700;
		}else{
			width = 1735;	
		}

	}else{	// 줄인다.
		//global.window.width = 1296;
		//window.width = 1280;
		//width = 1280;		
	}
	

	// 편성관련 obj를 모두 제거
	for(var i = this.Components.Count-1; i >= 0; i--){
		// grid제거
		if(this.Components[i].GetType()=="Grid" ){
			if(Left(this.Components[i].id, 8) == "grdRace_"){
				Destroy(this.Components[i].id);
				continue;
			}
		}
		// dataset제거
		if(this.Components[i].GetType()=="Dataset" ){
			if(Left(this.Components[i].id, 10) == "dsOutRace_"){
				Destroy(this.Components[i].id);
				continue;
			}
		}
	
		// 경주정보제거
		if((this.Components[i].GetType()=="Shape" && Left(this.Components[i].id, 6) == "spRace") ||
			(this.Components[i].GetType()=="Static" && (Left(this.Components[i].id, 6) == "stRace" ||
														Left(this.Components[i].id, 10) == "stRaceDgre" ||
														Left(this.Components[i].id, 5) == "stAvg")) ||
			(this.Components[i].GetType()=="Checkbox" && Left(this.Components[i].id, 7) == "chkRace") ||
			(this.Components[i].GetType()=="Button" && (Left(this.Components[i].id, 9) == "btnVerifi" ||
														Left(this.Components[i].id, 7) == "btnReln" ||
														Left(this.Components[i].id, 13) == "btnExtendRace")) ||
			(this.Components[i].GetType()=="Checkbox" && Left(this.Components[i].id, 7) == "chkRace") ||
			(this.Components[i].GetType()=="MaskEdit" && Left(this.Components[i].id, 7) == "mskRace") 
			){
			Destroy(this.Components[i].id);
			continue;
		}		
	}     

	// Grid 생성
	for ( var i = 1; i <= dsOutSRace.GetRowCount(); i++ ) {
		CreateDataset(i);
		CreateObject(i, dsOutSRace.GetColumn(i-1,"ST_MTHD_CD"));
		CreateGrid(i);
	}
	
	//fcInit();		

	for ( var i = 0; i < dsOutSRace.GetRowCount(); i++ ) {
		object("stRaceDgre" + (i + 1)).Value = "";
		object("stRaceDgre" + (i + 1)).Value = dsOutSRace.GetColumn(i, "RACE_DGRE_NM");
	}
}


/*-------------------------------------------------------------------------------------------------+
>>  가편성 목록 조회
+-------------------------------------------------------------------------------------------------*/
function fcSearchTempOrganList(obj) {
	
    var nTmsRow        = fnc_GetExistValue(dsOutSRaceTms, "TMS", cboSRaceTms.Value);  // 
    var sState         = dsOutSRaceTms.GetColumn(nTmsRow, "RACE_TMS_STAT_CD");           // 해당 회차 상태
	
    if ( sState < "020" ) {
		return false;
    }

	var sServiceName = "e02040040-service:searchTempOrgan";
    var sInDataSet   = "";
    var sOutDataSet  = "dsOutTempOrgan=dsOutTempOrgan ";
    
	fce_AddParam(Trim("STND_YEAR"), cboSStndYear.Value);
	fce_AddParam(Trim("MBR_CD   "), cboSMbr.Value     );
	fce_AddParam(Trim("TMS      "), cboSRaceTms.Value );
	fce_AddParam(Trim("DAY_ORD  "), cboSDayOrd.Value  );
	fce_AddParam("USER_ID", gdsUser.getColumn(0, "USER_ID"));

	fce_SendTransaction(sServiceName, sInDataSet, sOutDataSet, "fcCallBack");
}

/*-------------------------------------------------------------------------------------------------+
>>  가편성목록 콤보값 변경시
+-------------------------------------------------------------------------------------------------*/
function cboTempOrgan_OnChanged(obj,strCode,strText,nOldIndex,nNewIndex)
{
	//trace("sSaveType ::" +  sSaveType);

	// 저장 후 재조회시 처리
	if(sSaveType!=""){
		// 처리 후 초기화
		sSaveType = "";
		sOrganType = "";
		sOrganId = "";
	}else{
		fcInit();
	}

    var nRow = fnc_GetExistValue(dsOutSRaceTms, "TMS", cboSRaceTms.Value);
	if ( dsOutSRaceTms.GetColumn(nRow, "RACE_TMS_STAT_CD") > "050" ) {
	
        btnSave.Enable = false;
        btnConfirm.Enable        = false;
        btnRacerChng.Enable      = false;
        btnMotChng.Enable        = false;
        btnBoatChng.Enable       = false;
        btnTempToOrganSave.Enable = false;
        
    } else {
        
        if (dsOutTempOrgan.GetColumn(cboTempOrgan.Index, "ORGAN_TYPE")=="NEW") {	// 가편성 신규 생성
			
			btnBoatChng.Enable       = false;
			btnMotChng.Enable        = false;
			btnRacerChng.Enable      = false;
			
			btnConfirm.Enable        = false;        
			btnTempToOrganSave.Enable = false;
			btnSave.Enable = true;
			
        }
        if (dsOutTempOrgan.GetColumn(cboTempOrgan.Index, "ORGAN_TYPE")=="REAL") {// 확정 또는 미확정 편성표
			
			btnBoatChng.Enable       = true;
			btnMotChng.Enable        = true;
			btnRacerChng.Enable      = true;
			
			btnConfirm.Enable        = true;
			btnTempToOrganSave.Enable = false;
			btnSave.Enable = true;
			
        }
        if (dsOutTempOrgan.GetColumn(cboTempOrgan.Index, "ORGAN_TYPE")=="TEMP") {// 가편성
			
			btnBoatChng.Enable       = false;
			btnMotChng.Enable        = false;
			btnRacerChng.Enable      = false;
			
			btnConfirm.Enable        = false;     
			var nRow = fnc_GetExistValue(dsOutSOrganStat, "CD", cboSOrganStat.Value);	
			if ( dsOutSOrganStat.GetColumn(nRow, "CD") == "002" ) {
				btnTempToOrganSave.Enable = false;
			}else{
				btnTempToOrganSave.Enable = true;
			}
			btnSave.Enable = true;
			
        }
    }
    
}
]]></Script>
</Window>