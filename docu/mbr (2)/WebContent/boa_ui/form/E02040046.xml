<?xml version="1.0" encoding="euc-kr"?>
<Window>
	<Form Height="176" Id="E02040046" Left="8" OnLoadCompleted="fcFormLoadSetting" OnUnloadCompleted="fcFormUnloadProcess" PidAttrib="7" Title="경주별선수추출" Top="8" Ver="1.0" Width="1220" WorkArea="true">
		<Datasets>
			<Dataset DataSetType="Dataset" Id="dsInComCd">
				<Contents>
					<colinfo id="DSNAME" size="20" type="STRING"/>
					<colinfo id="CD_GRP_ID" size="6" type="STRING"/>
					<colinfo id="QUERY_ID" size="256" type="STRING"/>
					<colinfo id="DESCRIPTION" size="256" type="STRING"/>
					<colinfo id="ALL_YN" size="1" type="STRING"/>
					<record>
						<ALL_YN></ALL_YN>
						<CD_GRP_ID>E00006</CD_GRP_ID>
						<DESCRIPTION>경정장코드</DESCRIPTION>
						<DSNAME>dsOutSMbr</DSNAME>
						<QUERY_ID></QUERY_ID>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutRacerList">
				<Contents>
					<colinfo id="RACER_NO" size="256" type="STRING"/>
					<colinfo id="RACER_GRD_CD" size="256" type="STRING"/>
					<colinfo id="NM_KOR" size="256" type="STRING"/>
					<colinfo id="STND_YEAR" size="256" type="STRING"/>
					<colinfo id="QURT_CD" size="256" type="STRING"/>
					<colinfo id="RACER_NO" size="256" type="STRING"/>
					<colinfo id="RACE_ALLOC_CNT" size="256" type="STRING"/>
					<colinfo id="RACE_CNT" size="256" type="STRING"/>
					<colinfo id="AVG_RANK_SCR" size="256" type="STRING"/>
					<colinfo id="AVG_SCR" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutSRace"></Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutSDayOrd">
				<Contents>
					<colinfo id="DAY_ORD" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutSMbr">
				<Contents>
					<colinfo id="GRP_CD" size="256" type="STRING"/>
					<colinfo id="GRP_NM" size="256" type="STRING"/>
					<colinfo id="CD" size="256" type="STRING"/>
					<colinfo id="CD_NM" size="256" type="STRING"/>
					<colinfo id="RMK" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutSRaceTms">
				<Contents>
					<colinfo id="Tms" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutSStndYear">
				<Contents>
					<colinfo id="STND_YEAR" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutRace"></Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutRegNoReversed"></Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutRacerRelation"></Dataset>
			<Dataset DataSetType="Dataset" Id="dsCheckTms">
				<Contents>
					<colinfo id="cd" size="256" type="INT"/>
					<record>
						<cd>1</cd>
					</record>
					<record>
						<cd>2</cd>
					</record>
					<record>
						<cd>3</cd>
					</record>
					<record>
						<cd>4</cd>
					</record>
					<record>
						<cd>5</cd>
					</record>
					<record>
						<cd>6</cd>
					</record>
					<record>
						<cd>7</cd>
					</record>
					<record>
						<cd>8</cd>
					</record>
					<record>
						<cd>9</cd>
					</record>
					<record>
						<cd>10</cd>
					</record>
				</Contents>
			</Dataset>
		</Datasets>
		<Button Align="Left" ButtonStyle="TRUE" Height="20" Id="btnConfirm" ImageID="btn_txt_02" Left="1104" LeftMargin="15" OnClick="btnConfirm_OnClick" Style="snis_btn" TabOrder="1" Text="확인" Top="144" Transparent="TRUE" Width="50"></Button>
		<Button Align="Left" ButtonStyle="TRUE" Height="20" Id="btnClose" ImageID="btn_txt_02" Left="1156" LeftMargin="15" OnClick="btnClose_OnClick" Style="snis_btn" TabOrder="2" Text="닫기" Top="144" Transparent="TRUE" Width="50"></Button>
		<Shape BKColor="user2" Bottom="168" Height="32" Id="Shape4" Left="6" LineColor="user3" Right="267" RoundHeight="5" RoundUnit="Pixel" RoundWidth="5" TabOrder="3" Top="136" Type="RoundRect" Width="261"></Shape>
		<Static Align="Right" Border="Flat" Height="20" Id="Static5" Left="156" Style="snis_m_lable" TabOrder="4" Text="적용경주" Top="142" VAlign="Middle" Width="60"></Static>
		<Combo Border="Flat" CodeColumn="RACE_NO" DataColumn="RACE_NO" Height="20" Id="cboRaceNo" InnerDataset="dsOutRace" Left="218" Style="snis_if_input01" TabOrder="5" Top="142" Width="45"></Combo>
		<Static Align="Right" Border="Flat" Height="20" Id="Static0" Left="12" Style="snis_m_lable" TabOrder="6" Text="적용경주" Top="142" VAlign="Middle" Width="60"></Static>
		<MaskEdit Border="Flat" Height="20" Id="meAvgScr" Left="75" Readonly="TRUE" Style="snis_m_input01" TabOrder="7" Top="142" Value="MaskEdit0" Width="76"></MaskEdit>
		<Button Align="Left" ButtonStyle="TRUE" Height="20" Id="btnReln" ImageID="btn_txt_02" Left="272" LeftMargin="15" OnClick="fcSearchRacerPopUp" Style="snis_btn" TabOrder="8" Text="중복" Top="144" Transparent="TRUE" Width="50"></Button>
		<Button Align="Left" ButtonStyle="TRUE" Height="20" Id="btnVerifi" ImageID="btn_txt_04" Left="324" LeftMargin="15" OnClick="fcSearchRacerPopUp" Style="snis_btn" TabOrder="9" Text="선수검증" Top="144" Transparent="TRUE" Width="74"></Button>
		<Button Align="Left" ButtonStyle="TRUE" Height="20" Id="btnScore" ImageID="btn_txt_04" Left="400" LeftMargin="15" OnClick="fcSearchRacerPopUp" Style="snis_btn" TabOrder="10" Text="상대전적" Top="144" Transparent="TRUE" Width="74"></Button>
		<Button Align="Left" ButtonStyle="TRUE" Height="20" Id="btnCourse" ImageID="btn_txt_06" Left="476" LeftMargin="15" OnClick="fcSearchRacerPopUp" Style="snis_btn" TabOrder="11" Text="코스별&#32;연대율" Top="144" Transparent="TRUE" Width="98"></Button>
		<Button ButtonStyle="TRUE" Height="20" Id="btnEntryStat" ImageID="btn_txt_10" Left="576" LeftMargin="15" OnClick="fcSearchRacerPopUp" Style="snis_btn" TabOrder="12" Text="코스별&#32;진입변화&#32;통계" Top="144" Transparent="TRUE" Width="147"></Button>
		<Div BKColor="user2" Height="22" Id="divSearch" Left="1052" TabOrder="13" Text="Div0" Top="144" Url="common::comButtonSearch.xml" Width="50">
			<Contents></Contents>
		</Div>
		<Button Align="Left" ButtonStyle="TRUE" Height="20" Id="btnAutoOrgan" ImageID="btn_txt_04" Left="724" LeftMargin="15" OnClick="fcSearchRacerPopUp" Style="snis_btn" TabOrder="14" Text="자동선별" Top="144" Transparent="TRUE" Width="74"></Button>
		<Static BKColor="lightgreen" Height="16" Id="Static1" Left="108" TabOrder="15" Top="10" Width="18"></Static>
		<Static Height="16" Id="Static2" Left="126" TabOrder="16" Text="연대관계" Top="10" Width="80"></Static>
		<Static Height="16" Id="Static3" Left="199" TabOrder="17" Text="동일기수" Top="10" Width="80"></Static>
		<Static Height="16" Id="Static4" Left="271" TabOrder="18" Text="정번미역전" Top="10" Width="80"></Static>
		<Static BKColor="yellow" Height="16" Id="Static6" Left="180" TabOrder="19" Top="10" Width="18"></Static>
		<Static BKColor="skyblue" Height="16" Id="Static7" Left="253" TabOrder="20" Top="10" Width="18"></Static>
		<Static BKColor="red" Height="16" Id="Static8" Left="339" TabOrder="21" Top="10" Width="18"></Static>
		<Static Height="16" Id="Static9" Left="360" TabOrder="22" Text="복합" Top="10" Width="80"></Static>
		<Combo Border="Flat" CodeColumn="cd" DataColumn="cd" Height="20" Id="cCheckTms" INDEX="4" InnerDataset="dsCheckTms" Left="900" OnChanged="cCheckTms_OnChanged" Style="snis_if_input01" TabOrder="23" Top="144" Width="45"></Combo>
		<Static Height="20" Id="Static10" Left="816" TabOrder="24" Text="※&#32;정번미역전" Top="148" Width="112"></Static>
		<Static Height="16" Id="Static11" Left="947" TabOrder="25" Text="회차&#32;이내&#32;검증" Top="148" Width="120"></Static>
		<Static Height="16" Id="Static12" Left="6" TabOrder="26" Text="편성검증정보&#32;:" Top="10" Width="80"></Static>
	</Form>
	<Script><![CDATA[/***************************************************************************************************
*   Form Common Script                                                                             *
*     현재 총 100 컬럼임 되도록 100 컬럼 안으로 코딩을 하세요                                      *
123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 1234567890
***************************************************************************************************/

/***************************************************************************************************
*                                         공통 Script Include                                      *
***************************************************************************************************/
#include "lib::boa_common_script.js";
#include "lib::boa_app_script.js";

/***************************************************************************************************
*                                          화면 변수 선언부                                        *
***************************************************************************************************/
var sFormId       = 'E02040046';
var sBUTTONLIST   = 'TTFFFT';                          //공통기능정의(버튼순으로 T or F)
var sUSERAUTH     = '';                                //사용자별 프로그램 사용 권한
var sFORMCAPTION  = '';                                //Form의 Title 정보
var sFORMLOCATION = '';                                //Form의 Location 정보
var sUSERLAVEL    = '';                                //Form의 사용  Level
var vREVOBJ       = Array(9);                          //결과값 처리를 위한 오브젝트 
var sGRDTIT       = "";                                //그리드 제목
var sCUROBJ       ;                                    //현재 LOST FOCUS 오브젝트

var oLastDs       = null;

/***************************************************************************************************
*                                         공통 Event 처리 부분                                     *
***************************************************************************************************/
/*-------------------------------------------------------------------------------------------------+
>>  최초 화면 Load時 처리 할 사항
+-------------------------------------------------------------------------------------------------*/
function fcFormLoadSetting(obj) {
	//화면환경 설정
	sFORMCAPTION  = obj.Title;
	sFORMLOCATION = "";
	
	//화면 정보 Display 및 Button 권한 설정
//	fnc_FormLoadSetting(obj, sFORMCAPTION, sFORMLOCATION, sBUTTONLIST, sUSERAUTH);
	
	//초기 화면 BK Color설정 
	fnc_SetBKColor(this);

    //년도조회
//    fce_SetStndYear(dsOutSStndYear, toInteger(fce_GetSysdate("YYYY")));
//    cboSStndYear.Index = 0;

    for ( var i = 1; i <= 8; i++ ) {
        CreateDataset(i);
    }

    for ( var i = 1; i <= 6; i++ ) {
        CreateGrid(i);
    }

	//공통코드 조회
	fce_GetComboDs(dsInComCd);
	
	//정번 미역전 검증회차 정보셋팅
	cCheckTms.Value = GetReg("CheckTms", "5");
	
	// 화면 초기화
	fcInit();
}

/*-------------------------------------------------------------------------------------------------+
>>  최초 화면 Load時 처리 할 사항
+-------------------------------------------------------------------------------------------------*/
function fcFormUnloadProcess(obj) {
	//자료 변경 여부를 체크하고자 하는  DataSet Object를 넘긴다.
	var sDataset = "";
	
	for ( var i = 0; i < dsOutRace.GetRowCount(); i++ ) {
		for ( var j = 1; j <= dsOutRace.GetColumn(i, "RACE_REG_NO_CNT"); j++ ) {
			fcRacerBorderColor(dsOutRace.GetColumn(i, "RACE_NO"), j, "user22");
		}
	}
    
	if ( !fnc_FormUnloadCheck(sDataset , sFormId) ) return false;
}

/*-------------------------------------------------------------------------------------------------+
>>  단축키 처리(Form KeyDown)
+-------------------------------------------------------------------------------------------------*/
function fcHotKey(obj,objSenderObj,nChar,bShift,bControl,bAlt,nLLParam,nHLParam) {

	//Return Key Press時 Next Component focus
	if ( nChar == 13 ) {
		var oFocusComponent = GetNextComponent(true);
		oFocusComponent.setfocus();
		return;
	}

	//Control Key가 눌려져 있다면 단축키 처리
	//if (bControl) fnc_HotKey(this, nChar);
}

/***************************************************************************************************
*                                      공통 버튼 Event 처리 부분                                   *
***************************************************************************************************/
/*-------------------------------------------------------------------------------------------------+
>>  취소 버튼 클릭 時 처리
+-------------------------------------------------------------------------------------------------*/
function fcInit(obj) {
    dsOutRacerList.ClearData();
}


/*-------------------------------------------------------------------------------------------------+
>>  조회 버튼 클릭 時 처리
+-------------------------------------------------------------------------------------------------*/
function fcSearchCheck(obj) {
	if ( !fnc_IsMandatory(cboRaceNo, "적용경주") ) return;
    
    fcInit();

	return true;
}

function fcSearch(obj) {
    if ( !fcSearchCheck() ) return;
    
	var nRaceNo = toInteger(cboRaceNo.Text);
	var racerCnt = dsOutRace.GetColumn(nRaceNo-1, "RACE_REG_NO_CNT");
	
	// 데이터 초기화
	for ( var i = 1; i <= 8; i++ ) {
        var dsObj = object("dsOutRacerTemp" + i);
        dsObj.ClearData();
	}    

	// 데이터 셋팅
	for ( var nRaceRegNo = 1; nRaceRegNo <= toInteger(racerCnt); nRaceRegNo++ ) {
		dsObj = object("dsOutRacer_" + cboRaceNo.Text + "_" + nRaceRegNo);
        object("dsOutRacerTemp" + nRaceRegNo).Copy(dsObj);
	}
	
	if(racerCnt > 6){
		window.width = 1627;	
	}else{
		window.width = 1227;	
	}	
	
	// grid제거
	for(var i = this.Components.Count-1; i >= 0; i--){
		if(this.Components[i].GetType()=="Grid" ){
			if(Left(this.Components[i].id, 12) == "grdRacerTemp"){
				Destroy(this.Components[i].id);
				continue;
			}
		}	
	}	

    for ( var i = 1; i <= racerCnt; i++ ) {
        CreateGrid(i);
    }		
    
    fcSetAvgScr();
    
    // 편성검증
    fcSearchValidationInfo();
    
}

/*-------------------------------------------------------------------------------------------------+
>>  저장 버튼 클릭 時 처리
+-------------------------------------------------------------------------------------------------*/
function fcSaveCheck(obj) {

	return true;
}

function fcSave(obj) {

}

/*-------------------------------------------------------------------------------------------------+
>>  엑셀 버튼 클릭 時 처리
+-------------------------------------------------------------------------------------------------*/
function fcToExcel(obj) {

}

/*-------------------------------------------------------------------------------------------------+
>>  인쇄 버튼 클릭 時 처리
+-------------------------------------------------------------------------------------------------*/
function fcPrint(obj) {

}

/*-------------------------------------------------------------------------------------------------+
>>  화면 종료(닫기) 버튼 클릭 時 처리
+-------------------------------------------------------------------------------------------------*/
function fcEnd(obj) {
	//화면 종료
	Close();	
}

/*-------------------------------------------------------------------------------------------------+
>>  행추가 버튼 클릭 時 처리
+-------------------------------------------------------------------------------------------------*/
function fcAddRow(obj) {
	
}

/*-------------------------------------------------------------------------------------------------+
>>  행삭제 버튼 클릭 時 처리
+-------------------------------------------------------------------------------------------------*/
function fcDelRow(obj) {

}

/***************************************************************************************************
*                                      공통 Function 처리 부분                                     *
***************************************************************************************************/
/*-------------------------------------------------------------------------------------------------+
>>  Text Box가 Focus를 받을 때
+-------------------------------------------------------------------------------------------------*/
function fcEditFocus(obj) {
	fnc_EditFocus(obj);
}

/*-------------------------------------------------------------------------------------------------+
>>  그리드 정렬
+-------------------------------------------------------------------------------------------------*/
function fcGridSort(obj,nCell,nX,nY) {
	//특정 Head 클릭 시 해당 항목으로 Sort(만약 특정 컬럼을 누를때만 소트하고자 한다면 nCell로 조건)
	fnc_GridSort(obj, object(obj.BindDataset), nCell);	
}

/*-------------------------------------------------------------------------------------------------+
>>  Help Popup Open
+-------------------------------------------------------------------------------------------------*/
function fcHelpDialoge(obj,nX,nY) {

}

/*-------------------------------------------------------------------------------------------------+
>>  그리드에서 팝업 처리 
+-------------------------------------------------------------------------------------------------*/
function fcGrdOnExpandEdit(objGrd, nRow, nCell, strVal, nPivotIndex){
	
}

/***************************************************************************************************
*                                      사용자 정의  처리 부분                                      *
***************************************************************************************************/
/*-------------------------------------------------------------------------------------------------+
>>  Transaction 후 처리 해야 할 내용!
+-------------------------------------------------------------------------------------------------*/
function fcCallBack(sServiceName, ErrorCode, ErrorMSG) {

	if ( !fnc_Result(ErrorCode, ErrorMSG) ) return;
	
	// 공통코드 조회시
	if ( sServiceName == "common-service:searchCode" ) {
        fce_GetRace(Arg_sStndYear, Arg_sMbrCd, Arg_sTms, Arg_sDayOrd, "dsOutRace");
        return;
	}
	
	// 편성 검증
	if ( sServiceName == "e02040046-service:searchValidationInfo" ) {
		btnAutoOrgan.Enable = true;
		fcSetValidation1();	// 검증1 연대정보 화면셋팅 -- 연대(부부, 학연, 지연등) 관계 선수 2인이상 추출시
		fcSetValidation2(); // 검증2 동일기수정보 화면셋팅 -- 동일기수 3명 이상 추출시
		fcSetValidation3();	// 검증3 정번 역전 정보 셋팅 -- 과거 5회차 이내 선수들의 정번이 역전되지 않았을 시
        return;
	}
	
	//오류가 없이 정상 처리되었다면...
	fcPostProcess(sServiceName);
}

/*-------------------------------------------------------------------------------------------------+
>>  Transaction 후 Post Process!
+-------------------------------------------------------------------------------------------------*/
function fcPostProcess(sServiceName) {

}

/*-------------------------------------------------------------------------------------------------+
>>  코드나 명 입력 후 Lost Focus 시 해당 정보 Display
+-------------------------------------------------------------------------------------------------*/
function fcCodeNameDisplay(obj) {

}

/*-------------------------------------------------------------------------------------------------+
>>  닫기버튼 클릭시
+-------------------------------------------------------------------------------------------------*/
function btnClose_OnClick(obj)
{
	close(false);
}

/*-------------------------------------------------------------------------------------------------+
>>  확인버튼 클릭시
+-------------------------------------------------------------------------------------------------*/
function btnConfirm_OnClick(obj)
{
    var nCount = 0;
	if ( !fnc_IsMandatory(cboRaceNo, "적용경주") ) return;
	
	var asReturn = Array(2);
	asReturn[0] = cboRaceNo.Value;
	asReturn[1] = "";
	
	var nRaceNo = toInteger(cboRaceNo.Text);
	var racerCnt = dsOutRace.GetColumn(nRaceNo-1, "RACE_REG_NO_CNT");	
	
	for ( var i = 1; i <= racerCnt; i++ ) {
        var dsObj = object("dsOutRacerTemp" + i);
        if ( !fnc_IsNull(dsObj.GetColumn(0, "RACER_NO")) ) {
            nCount++;
            asReturn[1] += dsObj.GetColumn(0, "RACER_NO") + "|";
        }
	}

	if ( nCount != racerCnt ) {
        if ( !fnc_Message(racerCnt + "명의 선수가 선택되지 않았습니다. 계속하시겠습니까?", "Y") ) return;
	}

	if ( !fcGetSpecialRacer(asReturn[0], asReturn[1]) ) return;
	
	for ( var i = 1; i <= racerCnt; i++ ) {
        var dsObj = object("dsOutRacerTemp" + i);
        dsObj.ClearData();
        
        dsObj.AddRow();
        dsObj.AddRow();
        dsObj.AddRow();
	}
}

/*-------------------------------------------------------------------------------------------------+
>>  Dataset생성
+-------------------------------------------------------------------------------------------------*/
function CreateDataset(nDsNo) {
    Create("Dataset","dsOutRacerTemp" + nDsNo);

    dsObj = object("dsOutRacerTemp" + nDsNo);
    dsObj.AddColumn("RACER_NO"               );
    dsObj.AddColumn("ENTRY_BODY_WGHT"        );
    dsObj.AddColumn("TRRAS_TMS_6_AVG_STRT_TM");
    dsObj.AddColumn("NATV_PLAC_CD"           );
    dsObj.AddColumn("NATY_UNIV"              );
    dsObj.AddColumn("RACE_CNT_1"             );
    dsObj.AddColumn("RACE_CNT_2"             );
    dsObj.AddColumn("RACE_CNT_3"             );
    dsObj.AddColumn("RACE_CNT_4"             );
    dsObj.AddColumn("RACE_CNT_5"             );
    dsObj.AddColumn("RACE_CNT_6"             );
    dsObj.AddColumn("RACE_CNT_7"             );
    dsObj.AddColumn("RACE_CNT_8"             );
    dsObj.AddColumn("EQUIP_NO"               );
    dsObj.AddColumn("RACE_ALLOC_CNT"         );
    dsObj.AddColumn("SELECT_RACE_1"          );
    dsObj.AddColumn("SELECT_RACE_2"          );
    
    dsObj.AddRow();
    dsObj.AddRow();
    dsObj.AddRow();
}

/*-------------------------------------------------------------------------------------------------+
>>  Grid생성
+-------------------------------------------------------------------------------------------------*/
function CreateGrid(nGridNo) {

	var nRaceNo = toInteger(cboRaceNo.Text);
	var racerCnt = dsOutRace.GetColumn(nRaceNo-1, "RACE_REG_NO_CNT");
    
    var sContents = "";
    sContents += '      <contents>';
    sContents += fcGetColumn(nGridNo, racerCnt) + fcGetBody(nGridNo, racerCnt);
    sContents += '      </contents>';
    

    var nHeight = 50;
    var nWidth  = 400;
    
    var divIndex = 3;
    if(racerCnt > 6) divIndex = 4;
    
    var nLeft = (        ((nGridNo - 1) % divIndex) * (nWidth  + 2)) + 8;
    var nTop  = (truncate((nGridNo - 1) / divIndex) * (nHeight + 2)) + 8 + 22;

	sGridType = 'AutoFit="TRUE"            '
	          + 'AutoFitEndLine="Hide"     '
	          + 'BindDataset="dsOutRacerTemp'+ nGridNo + '" '
	          + 'BKColor="user15"          '
	          + 'BkColor2="user16"         '
	          + 'BkSelColor="user17"       '
	          + 'BoldHead="true"           '
	          + 'Border="Flat"             '
	          + 'BorderColor="user22"      '
	          + 'Bottom="86"               '
	          + 'DragMode="TRUE"           '
	          + 'DropMode="TRUE"           '
	          + 'Enable="true"             '
	          + 'EndLineColor="default"    '
	          + 'FillArea="TRUE"           '
	          + 'HeadBorder="Flat"         '
	          + 'HeadHeight="20"           '
	          + 'Height="'+ nHeight + '"   '
	          + 'Id="grdRacerTemp'+ nGridNo + '"'
	          + 'InputPanel="FALSE"        '
	          + 'Left="'+ nLeft + '"       '
	          + 'LineColor="user18"        '
	          + 'MinWidth="100"            '
	          + 'OnCellClick="grdRacer_OnCellClick" '
	          + 'OnCellDBLClick="grdRacer_OnCellDblClick" '
	          //+ 'OnDrag="grdRace_OnDrag"   '
	          + 'OnDrop="grdRace_OnDrop"   '
	          + 'Right="460"               '
	          + 'RowHeight="16"            '
	          + 'SelColor="user19"         '
		      + 'Style="snis_grid"         '
		      + 'TabOrder="'+ nGridNo + '" '
		      + 'TabStop="true"            '
		      + 'Top="'+ nTop + '"         '
		      + 'UseDBuff="true"           '
		      + 'UsePopupMenu="true"       '
		      + 'UseSelColor="False"       '
		      + 'Visible="true"            '
		      + 'VLineColor="default"      '
		      + 'WheelScrollRow="1"        '
		      + 'Width="'+ nWidth + '"     ';
              
	create("Grid","grdRacerTemp" + nGridNo, sGridType);
	object("grdRacerTemp" + nGridNo).contents = sContents;
}

/*-------------------------------------------------------------------------------------------------+
>>  Grid Column 생성
+-------------------------------------------------------------------------------------------------*/
function fcGetColumn(nGridNo, racerCnt) {
    
    var sColumn = "";
    sColumn = '					<columns>'
            + '						<col width="80"/>'
            + '						<col width="70"/>'
            + '						<col width="55"/>'
            + '						<col width="60"/>'
            + '						<col width="80"/>'
            + '						<col width="55"/>'
            + '						<col width="55"/>'
            + '						<col width="55"/>'
            + '						<col width="55"/>'
            + '						<col width="55"/>'
            + '						<col width="55"/>';
    if(racerCnt >= 7){
		sColumn += '						<col width="55"/>';
    }
    if(racerCnt == 8){
		sColumn += '						<col width="55"/>';
    }            
    sColumn += '					</columns>';
    return sColumn;
}

/*-------------------------------------------------------------------------------------------------+
>>  Grid Body 생성
+-------------------------------------------------------------------------------------------------*/
function fcGetBody(nGridNo, racerCnt) {
    
    var sBkColor = fcGetBkColor("dsOutRacerTemp", nGridNo);
    var sBody = "";
    sBody   = '         <body>';
    sBody  += '           <cell col="0"  colid="RACER_NO"                align="center" display="text" font="expr:iif(row==1,&quot;굴림,9,Bold&quot;,&quot;&quot;)" bkcolor="' + sBkColor + '" />';
    sBody  += '           <cell col="1"  colid="ENTRY_BODY_WGHT"         align="center" display="text" font="expr:iif(row==2,&quot;굴림,9,Bold&quot;,&quot;&quot;)"/>';
    sBody  += '           <cell col="2"  colid="TRRAS_TMS_6_AVG_STRT_TM" align="center" display="text"/>';

    sBkColor = fcGetSpecRaceColor("dsOutRacerTemp", nGridNo);
    sBody  += '           <cell col="3"  colid="NATV_PLAC_CD"            align="center" display="text" bkcolor="' + sBkColor + '"/>';
    sBody  += '           <cell col="4"  colid="NATY_UNIV"               align="center" display="text" font="expr:iif(row==1,&quot;굴림,9,Bold&quot;,&quot;&quot;)"/>';
    var n = 1;
    sRaceColor = fcGetRaceColor("dsOutRacerTemp", nGridNo, n);
    sBody  += '           <cell col="5"  colid="RACE_CNT_1"              align="center" display="text" bkcolor="' + sRaceColor + '" font="' + fcGetRaceRegFont(nGridNo, n++, "dsOutRacerTemp") + '"/>';
    sRaceColor = fcGetRaceColor("dsOutRacerTemp", nGridNo, n);
    sBody  += '           <cell col="6"  colid="RACE_CNT_2"              align="center" display="text" bkcolor="' + sRaceColor + '" font="' + fcGetRaceRegFont(nGridNo, n++, "dsOutRacerTemp") + '"/>';
    sRaceColor = fcGetRaceColor("dsOutRacerTemp", nGridNo, n);
    sBody  += '           <cell col="7"  colid="RACE_CNT_3"              align="center" display="text" bkcolor="' + sRaceColor + '" font="' + fcGetRaceRegFont(nGridNo, n++, "dsOutRacerTemp") + '"/>';
    sRaceColor = fcGetRaceColor("dsOutRacerTemp", nGridNo, n);
    sBody  += '           <cell col="8"  colid="RACE_CNT_4"              align="center" display="text" bkcolor="' + sRaceColor + '" font="' + fcGetRaceRegFont(nGridNo, n++, "dsOutRacerTemp") + '"/>';
    sRaceColor = fcGetRaceColor("dsOutRacerTemp", nGridNo, n);
    sBody  += '           <cell col="9"  colid="RACE_CNT_5"              align="center" display="text" bkcolor="' + sRaceColor + '" font="' + fcGetRaceRegFont(nGridNo, n++, "dsOutRacerTemp") + '"/>';
    sRaceColor = fcGetRaceColor("dsOutRacerTemp", nGridNo, n);
    sBody  += '           <cell col="10" colid="RACE_CNT_6"              align="center" display="text" bkcolor="' + sRaceColor + '" font="' + fcGetRaceRegFont(nGridNo, n++, "dsOutRacerTemp") + '"/>';
    if(racerCnt >= 7){
		sRaceColor = fcGetRaceColor("dsOutRacerTemp", nGridNo, n);
		sBody  += '           <cell col="11" colid="RACE_CNT_7"              align="center" display="text" bkcolor="' + sRaceColor + '" font="' + fcGetRaceRegFont(nGridNo, n++, "dsOutRacerTemp") + '"/>';
    }
    if(racerCnt == 8){
		sRaceColor = fcGetRaceColor("dsOutRacerTemp", nGridNo, n);
		sBody  += '           <cell col="12" colid="RACE_CNT_8"              align="center" display="text" bkcolor="' + sRaceColor + '" font="' + fcGetRaceRegFont(nGridNo, n++, "dsOutRacerTemp") + '"/>';
    }     
    
    sBody  += '         </body>';
    return sBody;
}

/*-------------------------------------------------------------------------------------------------+
>>  그리드에 Drop시
+-------------------------------------------------------------------------------------------------*/
function grdRace_OnDrop(obj,objDragObj,objDataObj,nPosX,nPosY,varKeyState,nRow,nCell,nPivotIndex)
{
    var objName       = "grdRacerTemp";
	var sTargetRaceNo = substr(obj.Id, length(objName));
    var objTargetDs   = Object("dsOutRacerTemp" + sTargetRaceNo);

	var sSourceRaceNo = substr(objDataObj.GetData("CF_TEXT"), length("grdRacer_"));
    var objSourceDs   = Object("dsOutRacer_" + sSourceRaceNo);

    var sRacerNo = objSourceDs.GetColumn(0, "RACER_NO");

    if ( fnc_IsNull(sRacerNo) ) return;
    
	var nRaceNo = toInteger(cboRaceNo.Text);
	var racerCnt = dsOutRace.GetColumn(nRaceNo-1, "RACE_REG_NO_CNT");    
    
    for ( var i = 1; i <= racerCnt; i++ ) {
        if ( sRacerNo == object("dsOutRacerTemp" + i).GetColumn(0, "RACER_NO") ) {
            fnc_Message(SNIS_BOA_B010, "N");
            return;
        }
    }

    objTargetDs.Copy(objSourceDs);
    objTargetDs.row = 1;

	var tempStr   = split(sSourceRaceNo, "_");
    fcRacerBorderColor(tempStr[0], tempStr[1], "#FF0000");
    fcSetAvgScr();
    
    // 편성검증
    fcSearchValidationInfo();
}


/*-------------------------------------------------------------------------------------------------+
>>  그리드에 Click시
+-------------------------------------------------------------------------------------------------*/
function grdRacer_OnCellClick(obj,nRow,nCell,nX,nY,nPivotIndex) {
    oLastDs       = object(obj.BindDataset);
}

/*-------------------------------------------------------------------------------------------------+
>>  그리드에 Double Click시
+-------------------------------------------------------------------------------------------------*/
function grdRacer_OnCellDblClick(obj,nRow,nCell,nX,nY,nPivotIndex) {
    var objDs = object(obj.BindDataset);
    
    objDs.ClearData();
    
    objDs.AddRow();
    objDs.AddRow();
    objDs.AddRow();
    
    fcSetAvgScr();
    // 편성검증
    fcSearchValidationInfo();
}

/*-------------------------------------------------------------------------------------------------+
>>  선수별 평균 점수산출
+-------------------------------------------------------------------------------------------------*/
function fcSetAvgScr() {
    var nAvgScr = 0;
    var nCount  = 0;
    var nTotScr = 0;
    
	var nRaceNo = toInteger(cboRaceNo.Text);
	var racerCnt = dsOutRace.GetColumn(nRaceNo-1, "RACE_REG_NO_CNT");    
    
    for ( var i = 1; i <= racerCnt; i ++ ) {
        if ( fnc_IsNull(object("dsOutRacerTemp" + i).GetColumn(1, "RACER_NO")) ) continue;
        nTotScr += toNumber(object("dsOutRacerTemp" + i).GetColumn(1, "ENTRY_BODY_WGHT"));
        nCount++;
    }
    
    if ( nCount != 0 ) nAvgScr = Round(nTotScr/nCount, 2);
    meAvgScr.Value = nAvgScr;
}

/*-------------------------------------------------------------------------------------------------+
>>  각 경주의 선수관계보기
+-------------------------------------------------------------------------------------------------*/
function fcSearchRacerPopUp(obj) {
    if ( !fnc_IsMandatory(cboRaceNo, "경주번호") ) return;
    
    var sArg  = " Arg_sStndYear=" + quote(cboSStndYear.Value);
        sArg += " Arg_sMbrCd="    + quote(cboSMbr.Value     );
        sArg += " Arg_sTms="      + quote(cboSRaceTms.Value );
        sArg += " Arg_sDayOrd="   + quote(cboSDayOrd.Value  );
        sArg += " Arg_sRaceNo="   + quote(cboRaceNo.Value   );
        
        sArg += " Arg_sRacerNo1=" + quote(dsOutRacerTemp1.GetColumn(0, "RACER_NO"));
        sArg += " Arg_sRacerNo2=" + quote(dsOutRacerTemp2.GetColumn(0, "RACER_NO"));
        sArg += " Arg_sRacerNo3=" + quote(dsOutRacerTemp3.GetColumn(0, "RACER_NO"));
        sArg += " Arg_sRacerNo4=" + quote(dsOutRacerTemp4.GetColumn(0, "RACER_NO"));
        sArg += " Arg_sRacerNo5=" + quote(dsOutRacerTemp5.GetColumn(0, "RACER_NO"));
        sArg += " Arg_sRacerNo6=" + quote(dsOutRacerTemp6.GetColumn(0, "RACER_NO"));
        sArg += " Arg_sRacerNo7=" + quote(dsOutRacerTemp7.GetColumn(0, "RACER_NO"));
        sArg += " Arg_sRacerNo8=" + quote(dsOutRacerTemp8.GetColumn(0, "RACER_NO"));
        
        sArg += " Arg_sOrganOwnerId="   + quote(Arg_sOrganOwnerId);
		sArg += " Arg_sOrganSeq="   + quote(Arg_sOrganSeq);   

	switch ( obj.id ) {
		//중복
		case "btnReln" :
			Dialog("form::E02040043.xml", sArg, 700, 370, "");
			break;			
		//선수관계 검증
		case "btnVerifi" :
     
			Dialog("form::E02040042.xml", sArg, 800, 170, "");
			break;			
		//상대전적
		case "btnScore" :
			Dialog("form::E02040049.xml", sArg, 675, 170, "");
			break;			
		//코스별 연대율
		case "btnCourse" :
			Dialog("form::E02040049_1.xml", sArg, 675, 170, "");
			break;			
		//코스별 진입변화 통계
		case "btnEntryStat" :
			Dialog("form::E02040049_2.xml", sArg, 660, 670, "");
			break;	
		//자동편성기능
		case "btnAutoOrgan" :
			if(oLastDs==null){
				return;
			}
			
			sArg += " Arg_sSeletedRegNo="   + quote(substr(oLastDs.Id, length("dsOutRacerTemp")));
			sArg += " Arg_sSeletedNmKor="   + quote(oLastDs.GetColumn(1, "RACER_NO"));
			sArg += " Arg_sCheckTms="   + quote(cCheckTms.Value);
			
			Dialog("form::E02040046_1.xml", sArg, 660, 670, "");			
			//Open("form::E02040046_1.xml", sArg, 660, 670, "WinLevel=-1 TaskBar=true", 100, 100);
			break;		
			
	
	}
}


/*-------------------------------------------------------------------------------------------------+
>>  편성검증
+-------------------------------------------------------------------------------------------------*/
function fcSearchValidationInfo() {

	// 검증전 색상 초기화
    var nRaceNo = toInteger(cboRaceNo.Text);
    var racerCnt = dsOutRace.GetColumn(nRaceNo-1, "RACE_REG_NO_CNT");    
    for ( var i = 1; i <= racerCnt; i ++ ) {
		object("grdRacerTemp" + i).BkColor = "user15";
    }	

	var sServiceName = "e02040046-service:searchValidationInfo";
    var sInDataSet   = "";
    var sOutDataSet  = "dsOutRacerRelation=dsOutRacerRelation dsOutRegNoReversed=dsOutRegNoReversed";
    
    fce_AddParam("STND_YEAR", cboSStndYear.Value);
    fce_AddParam("MBR_CD"   , cboSMbr.Value );
    fce_AddParam("TMS"      , cboSRaceTms.Value     );
    fce_AddParam("DAY_ORD"  , cboSDayOrd.Value  );
    fce_AddParam("RACE_NO"  , cboRaceNo.Value   );

    fce_AddParam("RACER_NO_1"  , dsOutRacerTemp1.GetColumn(0, "RACER_NO")  );
    fce_AddParam("RACER_NO_2"  , dsOutRacerTemp2.GetColumn(0, "RACER_NO")  );
    fce_AddParam("RACER_NO_3"  , dsOutRacerTemp3.GetColumn(0, "RACER_NO")  );
    fce_AddParam("RACER_NO_4"  , dsOutRacerTemp4.GetColumn(0, "RACER_NO")  );
    fce_AddParam("RACER_NO_5"  , dsOutRacerTemp5.GetColumn(0, "RACER_NO")  );
    fce_AddParam("RACER_NO_6"  , dsOutRacerTemp6.GetColumn(0, "RACER_NO")  );
    fce_AddParam("RACER_NO_7"  , dsOutRacerTemp7.GetColumn(0, "RACER_NO")  );
    fce_AddParam("RACER_NO_8"  , dsOutRacerTemp8.GetColumn(0, "RACER_NO")  );
    
    fce_AddParam("ORGAN_OWNER_ID"  , Arg_sOrganOwnerId  );
    fce_AddParam("ORGAN_SEQ"  , Arg_sOrganSeq  );
    fce_AddParam("CHECK_TMS"  , cCheckTms.Value  );
    
	fce_SendTransaction(sServiceName, sInDataSet, sOutDataSet, "fcCallBack");
}

/*-------------------------------------------------------------------------------------------------+
>>  검증1 연대정보 화면셋팅 -- 연대(부부, 학연, 지연등) 관계 선수 2인이상 추출시
+-------------------------------------------------------------------------------------------------*/
function fcSetValidation1() {
	       
	var nRaceNo = toInteger(cboRaceNo.Text);
    var racerCnt = dsOutRace.GetColumn(nRaceNo-1, "RACE_REG_NO_CNT");    
    var dsObj;
    for ( var i = 1; i <= racerCnt; i ++ ) {
		
		dsObj = object("dsOutRacerTemp" + i);
        
        if ( fnc_IsNull(dsObj.GetColumn(0, "RACER_NO")) ) continue;
		
		for ( var j = 0; j < dsOutRacerRelation.GetRowCount(); j ++ ) {

			if(dsOutRacerRelation.GetColumn(j, "RACER_NO") == dsObj.GetColumn(0, "RACER_NO")){
				
				if(object("grdRacerTemp" + i).BkColor!="user15"){
					object("grdRacerTemp" + i).BkColor = "red";
				}else{
					object("grdRacerTemp" + i).BkColor = "lightgreen";
				}
				btnAutoOrgan.Enable = false;
			}
		}
    }
}

/*-------------------------------------------------------------------------------------------------+
>>  검증2 동일기수정보 화면셋팅 -- 동일기수 3명 이상 추출시
+-------------------------------------------------------------------------------------------------*/
function fcSetValidation2() {

	var nRaceNo = toInteger(cboRaceNo.Text);
    var racerCnt = dsOutRace.GetColumn(nRaceNo-1, "RACE_REG_NO_CNT");    
    
    var aRacer = Array(racerCnt);
    
    var dsObj;
    var dsObj2;
    
    for ( var i = 1; i <= racerCnt; i ++ ) {

		aRacer[i-1] = 0;
		
		if ( fnc_IsNull(object("dsOutRacerTemp" + i).GetColumn(0, "RACER_NO")) ) continue;    
		dsObj = split(object("dsOutRacerTemp" + i).GetColumn(0, "RACER_NO"), "-");
		
		for ( var j = 1; j <= racerCnt; j ++ ) {
		
			if( fnc_IsNull(object("dsOutRacerTemp" + j).GetColumn(0, "RACER_NO")) ) continue;    
			dsObj2 = split(object("dsOutRacerTemp" + j).GetColumn(0, "RACER_NO"), "-");
			
			if( dsObj[0] == dsObj2[0]){
				aRacer[i-1] = aRacer[i-1] + 1;
			}
		}
    }
    
    for ( var i = 0; i < aRacer.length; i ++ ) {
    
		if(aRacer[i]>2){
			
			if(object("grdRacerTemp" + (i+1)).BkColor!="user15"){
				object("grdRacerTemp" + (i+1)).BkColor = "red";
			}else{
				object("grdRacerTemp" + (i+1)).BkColor = "yellow";
			}
			btnAutoOrgan.Enable = false;
		}
    }
    
}

/*-------------------------------------------------------------------------------------------------+
>>  검증3 정번 역전 정보 셋팅 -- 과거 5회차 이내 선수들의 정번이 역전되지 않았을 시
+-------------------------------------------------------------------------------------------------*/
function fcSetValidation3() {

	var nRaceNo = toInteger(cboRaceNo.Text);
    var racerCnt = dsOutRace.GetColumn(nRaceNo-1, "RACE_REG_NO_CNT");    
    var dsObj;
    for ( var i = 1; i <= racerCnt; i ++ ) {
		
		dsObj = object("dsOutRacerTemp" + i);
        
        if ( fnc_IsNull(dsObj.GetColumn(0, "RACER_NO")) ) continue;
		
		for ( var j = 0; j < dsOutRegNoReversed.GetRowCount(); j ++ ) {

			if(dsOutRegNoReversed.GetColumn(j, "RACER_NO") == dsObj.GetColumn(0, "RACER_NO")){
				
				if(object("grdRacerTemp" + i).BkColor!="user15"){
					object("grdRacerTemp" + i).BkColor = "red";
				}else{
					object("grdRacerTemp" + i).BkColor = "skyblue";
				}
				btnAutoOrgan.Enable = false;
			}
		}
    }
}

function cCheckTms_OnChanged(obj,strCode,strText,nOldIndex,nNewIndex)
{
	SetReg("CheckTms", cCheckTms.Value);
	fcSearchValidationInfo();
}
]]></Script>
</Window>