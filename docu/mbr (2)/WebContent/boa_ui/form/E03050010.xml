<?xml version="1.0" encoding="euc-kr"?>
<Window>
	<Form Height="590" Id="E03050010" Left="8" OnLoadCompleted="fcFormLoadSetting" OnUnloadCompleted="fcFormUnloadProcess" PidAttrib="7" Title="지정연습편성" Top="8" Ver="1.0" Width="1014" WorkArea="true">
		<Datasets>
			<Dataset DataSetType="Dataset" Id="dsInComCd">
				<Contents>
					<colinfo id="DSNAME" size="20" type="STRING"/>
					<colinfo id="CD_GRP_ID" size="6" type="STRING"/>
					<colinfo id="QUERY_ID" size="256" type="STRING"/>
					<colinfo id="DESCRIPTION" size="256" type="STRING"/>
					<colinfo id="ALL_YN" size="1" type="STRING"/>
					<record>
						<ALL_YN></ALL_YN>
						<CD_GRP_ID>E00006</CD_GRP_ID>
						<DESCRIPTION>경정장코드</DESCRIPTION>
						<DSNAME>dsOutMbr</DSNAME>
						<QUERY_ID></QUERY_ID>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutCurTms"></Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutMbr">
				<Contents>
					<colinfo id="GRP_CD" size="256" type="STRING"/>
					<colinfo id="GRP_NM" size="256" type="STRING"/>
					<colinfo id="CD" size="256" type="STRING"/>
					<colinfo id="CD_NM" size="256" type="STRING"/>
					<colinfo id="RMK" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutSRaceDayOrd"></Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutSRaceTms">
				<Contents>
					<colinfo id="Tms" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutSStndYear">
				<Contents>
					<colinfo id="STND_YEAR" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutAppoExercOrgan">
				<Contents>
					<colinfo id="STND_YEAR" size="256" type="STRING"/>
					<colinfo id="MBR_CD" size="256" type="STRING"/>
					<colinfo id="TMS" size="256" type="STRING"/>
					<colinfo id="DAY_ORD" size="256" type="STRING"/>
					<colinfo id="RACE_NO" size="256" type="STRING"/>
					<colinfo id="RACE_REG_NO" size="256" type="STRING"/>
					<colinfo id="RACER_NO" size="256" type="STRING"/>
					<colinfo id="MOT_NO" size="256" type="STRING"/>
					<colinfo id="BOAT_NO" size="256" type="STRING"/>
					<colinfo id="NM_KOR" size="256" type="STRING"/>
					<colinfo id="START_TM_1_0" size="256" type="STRING"/>
					<colinfo id="START_TM_2_0" size="256" type="STRING"/>
					<colinfo id="START_TM_1" size="256" type="STRING"/>
					<colinfo id="START_TM_2" size="256" type="STRING"/>
					<colinfo id="RUN_TM" size="256" type="STRING"/>
					<colinfo id="RUN_TM_0" size="256" type="STRING"/>
					<colinfo id="RMK" size="256" type="STRING"/>
					<colinfo id="RMK_0" size="256" type="STRING"/>
					<colinfo id="START_FLYING_CNT_1_0" size="256" type="STRING"/>
					<colinfo id="START_LATE_CNT_1_0" size="256" type="STRING"/>
					<colinfo id="START_FLYING_CNT_2_0" size="256" type="STRING"/>
					<colinfo id="START_LATE_CNT_2_0" size="256" type="STRING"/>
					<colinfo id="START_FLYING_CNT_1" size="256" type="STRING"/>
					<colinfo id="START_LATE_CNT_1" size="256" type="STRING"/>
					<colinfo id="START_FLYING_CNT_2" size="256" type="STRING"/>
					<colinfo id="START_LATE_CNT_2" size="256" type="STRING"/>
					<colinfo id="START_TM_3_0" size="256" type="STRING"/>
					<colinfo id="START_TM_3" size="256" type="STRING"/>
					<colinfo id="START_FLYING_CNT_3_0" size="256" type="STRING"/>
					<colinfo id="START_LATE_CNT_3_0" size="256" type="STRING"/>
					<colinfo id="START_FLYING_CNT_3" size="256" type="STRING"/>
					<colinfo id="START_LATE_CNT_3" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutAppoExercRslt">
				<Contents>
					<colinfo id="STND_YEAR" size="256" type="STRING"/>
					<colinfo id="MBR_CD" size="256" type="STRING"/>
					<colinfo id="TMS" size="256" type="STRING"/>
					<colinfo id="DAY_ORD" size="256" type="STRING"/>
					<colinfo id="CNTNT" size="256" type="STRING"/>
					<colinfo id="CNTNT1" size="256" type="STRING"/>
					<colinfo id="NOTICE" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutArrangeRacer">
				<Contents>
					<colinfo id="RACER_NO" size="256" type="STRING"/>
					<colinfo id="NM_KOR" size="256" type="STRING"/>
					<colinfo id="MOT_NO" size="256" type="STRING"/>
					<colinfo id="BOAT_NO" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutArrangeRacerTemp">
				<Contents>
					<colinfo id="RACER_NO" size="256" type="STRING"/>
					<colinfo id="NM_KOR" size="256" type="STRING"/>
					<colinfo id="MOT_NO" size="256" type="STRING"/>
					<colinfo id="BOAT_NO" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutRacerPerio">
				<Contents>
					<colinfo id="RACER_NO" size="256" type="STRING"/>
					<colinfo id="NM_KOR" size="256" type="STRING"/>
					<colinfo id="RACER_PERIO_NO" size="256" type="STRING"/>
					<colinfo id="MOT_NO" size="256" type="STRING"/>
					<colinfo id="BOAT_NO" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutAppoExercOrganTemp">
				<Contents>
					<colinfo id="STND_YEAR" size="256" type="STRING"/>
					<colinfo id="MBR_CD" size="256" type="STRING"/>
					<colinfo id="TMS" size="256" type="STRING"/>
					<colinfo id="DAY_ORD" size="256" type="STRING"/>
					<colinfo id="RACE_NO" size="256" type="STRING"/>
					<colinfo id="RACE_REG_NO" size="256" type="STRING"/>
					<colinfo id="RACER_NO" size="256" type="STRING"/>
					<colinfo id="MOT_NO" size="256" type="STRING"/>
					<colinfo id="BOAT_NO" size="256" type="STRING"/>
					<colinfo id="NM_KOR" size="256" type="STRING"/>
					<colinfo id="START_TM_1" size="256" type="STRING"/>
					<colinfo id="START_TM_2" size="256" type="STRING"/>
					<colinfo id="START_TM_3" size="256" type="STRING"/>
					<colinfo id="START_TM_4" size="256" type="STRING"/>
					<colinfo id="RUN_TM" size="256" type="STRING"/>
					<colinfo id="RUM_TM_0" size="256" type="STRING"/>
					<colinfo id="RMK" size="256" type="STRING"/>
					<colinfo id="RMK_0" size="256" type="STRING"/>
					<colinfo id="START_FLYING_CNT_1" size="256" type="STRING"/>
					<colinfo id="START_LATE_CNT_1" size="256" type="STRING"/>
					<colinfo id="START_FLYING_CNT_2" size="256" type="STRING"/>
					<colinfo id="START_LATE_CNT_2" size="256" type="STRING"/>
					<colinfo id="START_FLYING_CNT_3" size="256" type="STRING"/>
					<colinfo id="START_LATE_CNT_3" size="256" type="STRING"/>
					<colinfo id="START_FLYING_CNT_4" size="256" type="STRING"/>
					<colinfo id="START_LATE_CNT_4" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutSRacer">
				<Contents>
					<colinfo id="RACER_NO" size="6" type="STRING"/>
					<colinfo id="NM_KOR" size="20" type="STRING"/>
					<colinfo id="RACER_GRD_CD" size="2" type="STRING"/>
					<colinfo id="NATV_PLAC_CD" size="2" type="STRING"/>
					<colinfo id="HOME_PHONE_NO" size="15" type="STRING"/>
					<colinfo id="CELPON_NO" size="15" type="STRING"/>
					<colinfo id="POST_NO" size="7" type="STRING"/>
					<colinfo id="ADD_HOME" size="256" type="STRING"/>
					<colinfo id="RES_NO" size="13" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutOrganResult">
				<Contents>
					<colinfo id="RACER_NO" size="256" type="STRING"/>
					<colinfo id="RACE_NO" size="256" type="STRING"/>
					<colinfo id="NM_KOR" size="256" type="STRING"/>
					<colinfo id="RACE_REG_NO" size="256" type="STRING"/>
					<colinfo id="MOT_NO" size="256" type="STRING"/>
					<colinfo id="BOAT_NO" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutOrganResultTemp">
				<Contents>
					<colinfo id="RACER_NO" size="256" type="STRING"/>
					<colinfo id="RACE_NO" size="256" type="STRING"/>
					<colinfo id="NM_KOR" size="256" type="STRING"/>
					<colinfo id="RACE_REG_NO" size="256" type="STRING"/>
					<colinfo id="MOT_NO" size="256" type="STRING"/>
					<colinfo id="BOAT_NO" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutAppoExercHistory">
				<Contents>
					<colinfo id="RACER_NO" size="256" type="STRING"/>
					<colinfo id="NM_KOR" size="256" type="STRING"/>
					<colinfo id="RACE_NO1" size="256" type="STRING"/>
					<colinfo id="RACE_REG_NO1" size="256" type="STRING"/>
					<colinfo id="RACE_NO2" size="256" type="STRING"/>
					<colinfo id="RACE_REG_NO2" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutRacerPerioTemp">
				<Contents>
					<colinfo id="RACER_NO" size="256" type="STRING"/>
					<colinfo id="NM_KOR" size="256" type="STRING"/>
					<colinfo id="RACER_PERIO_NO" size="256" type="STRING"/>
					<colinfo id="MOT_NO" size="256" type="STRING"/>
					<colinfo id="BOAT_NO" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutMot"></Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutBoat"></Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutRaceTemp"></Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutMaxRaceNo"></Dataset>
		</Datasets>
		<Shape BKColor="user2" Bottom="581" Height="77" Id="Shape3" Left="5" LineColor="user3" Right="1007" RoundHeight="5" RoundUnit="Pixel" RoundWidth="5" TabOrder="8" Top="504" Type="RoundRect" Width="1002"></Shape>
		<Shape BKColor="user0" Bottom="58" Height="28" Id="Shape0" Left="6" LineColor="user1" Right="1008" RoundHeight="5" RoundUnit="Pixel" RoundWidth="5" TabOrder="1" Top="30" Type="RoundRect" Width="1002"></Shape>
		<Image Height="20" Id="imgFormTitle" ImageID="m_titleblet" Left="8" TabOrder="3" Top="8" Width="17"></Image>
		<Static Height="22" Id="stFormTitle" Left="30" Style="snis_m_title" TabOrder="2" Text="조회조건" Top="6" VAlign="Middle" Width="132"></Static>
		<Div Height="20" Id="divBtnLst" Left="678" TabOrder="4" Text="Div0" Top="6" Url="common::comButtonType.xml" Width="330">
			<Contents></Contents>
		</Div>
		<Shape BKColor="#ff8500" Bottom="78" Height="6" Id="Shape2" Left="12" LineKind="Vertical" LineWidth="0" Right="18" RoundHeight="10" RoundWidth="10" TabOrder="7" Top="72" Type="Ellipse" Width="6"></Shape>
		<Static Height="20" Id="Static20" Left="24" Style="snis_m_stitle" TabOrder="6" Text="지정연습편성" Top="66" VAlign="Middle" Width="150"></Static>
		<Grid AutoEnter="TRUE" AutoFit="TRUE" AutoFitEndLine="Hide" BindDataset="dsOutAppoExercOrgan" BKColor="user15" BkColor2="user16" BkSelColor="user17" BoldHead="true" Border="Flat" BorderColor="user22" Bottom="500" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="20" Height="410" Id="grdExercOrgan" InputPanel="FALSE" Left="8" LineColor="user18" MinWidth="100" OnCellClick="grdExercOrgan_OnCellClick" OnCellDBLClick="grdExercOrgan_OnCellDblClick" OnDrag="fcRacerDrag" OnDrop="fcRacerDrop" OnEnterEdit="grdExercOrgan_OnEnterEdit" Right="832" SelColor="user19" Style="snis_grid" TabOrder="5" TabStop="true" Top="90" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="824">
			<contents>
				<format id="Default">
					<columns>
						<col width="39"/>
						<col width="41"/>
						<col width="55"/>
						<col width="58"/>
						<col width="28"/>
						<col width="31"/>
						<col width="56"/>
						<col width="26"/>
						<col width="27"/>
						<col width="58"/>
						<col width="28"/>
						<col width="32"/>
						<col width="67"/>
						<col width="67"/>
						<col width="62"/>
						<col width="25"/>
						<col width="25"/>
						<col width="62"/>
						<col width="27"/>
						<col width="24"/>
						<col width="54"/>
						<col width="28"/>
						<col width="28"/>
						<col width="67"/>
						<col width="67"/>
					</columns>
					<head>
						<cell bkcolor="user20" col="0" color="user21" display="text" font="굴림,9" rowspan="3" text="조"/>
						<cell bkcolor="user20" col="1" color="user21" display="text" font="굴림,9" rowspan="3" text="정번"/>
						<cell bkcolor="user20" col="2" color="user21" display="text" font="굴림,9" rowspan="3" text="선수"/>
						<cell bkcolor="user20" col="3" color="user21" colspan="11" display="text" font="굴림,9" text="지정연습결과(1R)"/>
						<cell bkcolor="user20" col="3" color="user21" colspan="3" display="text" font="굴림,9" row="1" text="스타트타임1"/>
						<cell bkcolor="user20" col="3" color="user21" display="text" font="굴림,9" row="2" text="시간"/>
						<cell bkcolor="user20" col="4" color="user21" display="text" font="굴림,9" row="2" text="F"/>
						<cell bkcolor="user20" col="5" color="user21" display="text" font="굴림,9" row="2" text="L"/>
						<cell bkcolor="user20" col="6" color="user21" colspan="3" display="text" font="굴림,9" row="1" text="스타트타임2"/>
						<cell bkcolor="user20" col="6" color="user21" display="text" font="굴림,9" row="2" text="시간"/>
						<cell bkcolor="user20" col="7" color="user21" display="text" font="굴림,9" row="2" text="F"/>
						<cell bkcolor="user20" col="8" color="user21" display="text" font="굴림,9" row="2" text="L"/>
						<cell bkcolor="user20" col="9" color="user21" colspan="3" display="text" font="굴림,9" row="1" text="스타트타임3"/>
						<cell bkcolor="user20" col="9" color="user21" display="text" font="굴림,9" row="2" text="시간"/>
						<cell bkcolor="user20" col="10" color="user21" display="text" font="굴림,9" row="2" text="F"/>
						<cell bkcolor="user20" col="11" color="user21" display="text" font="굴림,9" row="2" text="L"/>
						<cell bkcolor="user20" col="12" color="user21" display="text" font="굴림,9" row="1" rowspan="2" text="항주타임"/>
						<cell bkcolor="user20" col="13" color="user21" display="text" font="굴림,9" row="1" rowspan="2" text="비고"/>
						<cell bkcolor="user20" col="14" color="user21" colspan="11" display="text" font="굴림,9" text="지정연습결과(2R)"/>
						<cell bkcolor="user20" col="14" color="user21" colspan="3" display="text" font="굴림,9" row="1" text="스타트타임1"/>
						<cell bkcolor="user20" col="14" color="user21" display="text" font="굴림,9" row="2" text="시간"/>
						<cell bkcolor="user20" col="15" color="user21" display="text" font="굴림,9" row="2" text="F"/>
						<cell bkcolor="user20" col="16" color="user21" display="text" font="굴림,9" row="2" text="L"/>
						<cell bkcolor="user20" col="17" color="user21" colspan="3" display="text" font="굴림,9" row="1" text="스타트타임2"/>
						<cell bkcolor="user20" col="17" color="user21" display="text" font="굴림,9" row="2" text="시간"/>
						<cell bkcolor="user20" col="18" color="user21" display="text" font="굴림,9" row="2" text="F"/>
						<cell bkcolor="user20" col="19" color="user21" display="text" font="굴림,9" row="2" text="L"/>
						<cell bkcolor="user20" col="20" color="user21" colspan="3" display="text" font="굴림,9" row="1" text="스타트타임3"/>
						<cell bkcolor="user20" col="20" color="user21" display="text" font="굴림,9" row="2" text="시간"/>
						<cell bkcolor="user20" col="21" color="user21" display="text" font="굴림,9" row="2" text="F"/>
						<cell bkcolor="user20" col="22" color="user21" display="text" font="굴림,9" row="2" text="L"/>
						<cell bkcolor="user20" col="23" color="user21" display="text" font="굴림,9" row="1" rowspan="2" text="항주타임"/>
						<cell bkcolor="user20" col="24" color="user21" display="text" font="굴림,9" row="1" rowspan="2" text="비고"/>
					</head>
					<body>
						<cell align="center" col="0" colid="RACE_NO" display="text" suppress="1" SuppressAlign="Middle"/>
						<cell align="center" col="1" colid="RACE_REG_NO" display="text"/>
						<cell align="center" col="2" colid="NM_KOR" display="text" expandsize="0"/>
						<cell align="center" col="3" colid="START_TM_1_0" display="text" edit="mask" limit="1" LimitDec="2" Mask="#.##"/>
						<cell align="center" col="4" colid="START_FLYING_CNT_1_0" display="number" edit="integer"/>
						<cell align="center" col="5" colid="START_LATE_CNT_1_0" display="number" edit="integer"/>
						<cell align="center" col="6" colid="START_TM_2_0" display="text" edit="mask" limit="1" LimitDec="2" Mask="#.##"/>
						<cell align="center" col="7" colid="START_FLYING_CNT_2_0" display="number" edit="integer"/>
						<cell align="center" col="8" colid="START_LATE_CNT_2_0" display="number" edit="integer"/>
						<cell align="center" col="9" colid="START_TM_3_0" display="text" edit="mask" limit="1" LimitDec="2" Mask="#.##"/>
						<cell col="10" colid="START_FLYING_CNT_3_0" display="number" edit="integer"/>
						<cell align="center" col="11" colid="START_LATE_CNT_3_0" display="number" edit="integer"/>
						<cell align="center" col="12" colid="RUN_TM_0" display="text" limit="1" LimitDec="2" Mask="#.##"/>
						<cell col="13" colid="RMK_0" display="text" edit="normal"/>
						<cell align="center" col="14" colid="START_TM_1" display="text" edit="mask" limit="1" LimitDec="2" Mask="#.##"/>
						<cell align="center" col="15" colid="START_FLYING_CNT_1" display="number" edit="integer"/>
						<cell align="center" col="16" colid="START_LATE_CNT_1" display="number" edit="integer"/>
						<cell align="center" col="17" colid="START_TM_2" display="text" edit="mask" limit="1" LimitDec="2" Mask="#.##"/>
						<cell align="center" col="18" colid="START_FLYING_CNT_2" display="number" edit="integer"/>
						<cell align="center" col="19" colid="START_LATE_CNT_2" display="number" edit="integer"/>
						<cell align="center" col="20" colid="START_TM_3" display="text" edit="mask" limit="1" LimitDec="2" Mask="#.##"/>
						<cell align="center" col="21" colid="START_FLYING_CNT_3" display="number" edit="integer"/>
						<cell align="center" col="22" colid="START_LATE_CNT_3" display="number" edit="integer"/>
						<cell align="center" col="23" colid="RUN_TM" display="text" limit="1" LimitDec="2" Mask="#.##"/>
						<cell col="24" colid="RMK" display="text" edit="normal"/>
					</body>
				</format>
				<format id="header_not0day">
					<columns>
						<col width="80"/>
						<col width="80"/>
						<col width="80"/>
						<col width="80"/>
						<col width="35"/>
						<col width="35"/>
						<col width="80"/>
						<col width="37"/>
						<col width="37"/>
						<col width="80"/>
						<col width="28"/>
						<col width="30"/>
						<col width="80"/>
						<col width="80"/>
					</columns>
					<head>
						<cell bkcolor="user20" col="0" color="user21" display="text" font="굴림,9" rowspan="2" text="조"/>
						<cell bkcolor="user20" col="1" color="user21" display="text" font="굴림,9" rowspan="2" text="정번"/>
						<cell bkcolor="user20" col="2" color="user21" display="text" font="굴림,9" rowspan="2" text="선수"/>
						<cell bkcolor="user20" col="3" color="user21" colspan="11" display="text" font="굴림,9" text="지정연습결과"/>
						<cell bkcolor="user20" col="3" color="user21" display="text" font="굴림,9" row="1" text="스타트타임1"/>
						<cell bkcolor="user20" col="4" color="user21" display="text" font="굴림,9" row="1" text="F"/>
						<cell bkcolor="user20" col="5" color="user21" display="text" font="굴림,9" row="1" text="L"/>
						<cell bkcolor="user20" col="6" color="user21" display="text" font="굴림,9" row="1" text="스타트타임2"/>
						<cell bkcolor="user20" col="7" color="user21" display="text" font="굴림,9" row="1" text="F"/>
						<cell bkcolor="user20" col="8" color="user21" display="text" font="굴림,9" row="1" text="L"/>
						<cell bkcolor="user20" col="9" color="user21" display="text" font="굴림,9" row="1" text="스타트타임3"/>
						<cell bkcolor="user20" col="10" color="user21" display="text" font="굴림,9" row="1" text="F"/>
						<cell bkcolor="user20" col="11" color="user21" display="text" font="굴림,9" row="1" text="L"/>
						<cell bkcolor="user20" col="12" color="user21" display="text" font="굴림,9" row="1" text="항주타임"/>
						<cell bkcolor="user20" col="13" color="user21" display="text" font="굴림,9" row="1" text="비고"/>
					</head>
					<body>
						<cell align="center" col="0" colid="RACE_NO" display="text" suppress="1" SuppressAlign="Middle"/>
						<cell align="center" col="1" colid="RACE_REG_NO" display="text"/>
						<cell align="center" col="2" colid="NM_KOR" display="text"/>
						<cell align="center" col="3" colid="START_TM_1" display="text" edit="mask" limit="1" LimitDec="2" Mask="#.##"/>
						<cell align="center" col="4" colid="START_FLYING_CNT_1" display="number" edit="integer"/>
						<cell align="center" col="5" colid="START_LATE_CNT_1" display="number" edit="integer"/>
						<cell align="center" col="6" colid="START_TM_2" display="text" edit="mask" limit="1" LimitDec="2" Mask="#.##"/>
						<cell align="center" col="7" colid="START_FLYING_CNT_2" display="number" edit="integer"/>
						<cell align="center" col="8" colid="START_LATE_CNT_2" display="number" edit="integer"/>
						<cell align="center" col="9" colid="START_TM_3" display="text" edit="mask" limit="1" LimitDec="2" Mask="#.##"/>
						<cell align="center" col="10" colid="START_FLYING_CNT_3" display="number" edit="integer"/>
						<cell align="center" col="11" colid="START_LATE_CNT_3" display="number" edit="integer"/>
						<cell align="center" col="12" colid="RUN_TM" display="text" limit="1" LimitDec="2" Mask="#.##"/>
						<cell col="13" colid="RMK" display="text" edit="normal"/>
					</body>
				</format>
			</contents>
		</Grid>
		<TextArea BindDataset="dsOutAppoExercRslt" Border="Flat" Column="CNTNT" DisableBKColor="user2" Height="31" Id="taRsltCntnt" Left="107" Style="snis_m_input01" TabOrder="10" Top="508" VScroll="TRUE" Width="446"></TextArea>
		<Static Align="Right" Height="20" Id="Static6" Left="20" Style="snis_if_lable" TabOrder="11" Text="년도" Top="34" VAlign="Middle" Width="40"></Static>
		<Combo Border="Flat" BorderColor="user1" CodeColumn="STND_YEAR" DataColumn="STND_YEAR" Height="20" Id="cboSStndYear" InnerDataset="dsOutSStndYear" Left="63" OnChanged="cboSStndYear_OnChanged" Style="snis_m_input01" TabOrder="15" Top="33" Width="62"></Combo>
		<Static Align="Right" Height="20" Id="Static3" Left="130" Style="snis_if_lable" TabOrder="16" Text="경정장" Top="34" VAlign="Middle" Width="40"></Static>
		<Combo Border="Flat" BorderColor="user1" CodeColumn="CD" DataColumn="CD_NM" Height="20" Id="cboSMbr" InnerDataset="dsOutMbr" Left="174" OnChanged="cboSStndYear_OnChanged" Style="snis_m_input01" TabOrder="17" Top="33" Width="121"></Combo>
		<Static Align="Right" Height="20" Id="Static0" Left="296" Style="snis_if_lable" TabOrder="12" Text="회차" Top="34" VAlign="Middle" Width="40"></Static>
		<Combo Border="Flat" CodeColumn="Tms" DataColumn="Tms" Height="20" Id="cboSRaceTms" InnerDataset="dsOutSRaceTms" Left="342" OnChanged="cboSRaceTms_OnChanged" Style="snis_if_input01" TabOrder="18" Top="33" Width="70"></Combo>
		<Static Align="Right" Height="20" Id="Static1" Left="420" Style="snis_if_lable" TabOrder="13" Text="일차" Top="34" VAlign="Middle" Width="40"></Static>
		<Combo Border="Flat" CodeColumn="DAY_ORD" DataColumn="DAY_ORD" Height="20" Id="cboSRaceDayOrd" InnerDataset="dsOutSRaceDayOrd" Left="462" OnChanged="cboSRaceDayOrd_OnChanged" Style="snis_if_input01" TabOrder="14" Top="33" Width="111"></Combo>
		<Div BKColor="user0" Height="22" Id="divSearch" Left="579" TabOrder="19" Text="Div0" Top="33" Url="common::comButtonSearch.xml" Width="50">
			<Contents></Contents>
		</Div>
		<Button Align="Left" ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btnChoiceRacer" ImageID="btn_txt_04" Left="679" LeftMargin="15" OnClick="btnChoiceRacer_OnClick" Style="snis_btn" TabOrder="20" Text="선수선택" Top="65" Transparent="TRUE" Width="74"></Button>
		<Button Align="Left" ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btnAutoOrgan" ImageID="btn_txt_04" Left="757" LeftMargin="15" OnClick="btnAutoOrgan_OnClick" Style="snis_btn" TabOrder="21" Text="자동편성" Top="65" Transparent="TRUE" Width="74"></Button>
		<Calendar BindDataset="dsOutSRaceDayOrd" Border="Flat" Column="RACE_DAY" DisableBKColor="user15" Enable="FALSE" Height="20" Id="calRaceDt" Left="128" SaturdayTextColor="blue" Style="snis_if_input01" SundayTextColor="red" TabOrder="22" Top="64" Visible="FALSE" Width="90"></Calendar>
		<Shape BKColor="#ff8500" Bottom="77" Height="6" Id="Shape1" Left="833" LineKind="Vertical" LineWidth="0" Right="839" RoundHeight="10" RoundWidth="10" TabOrder="24" Top="71" Type="Ellipse" Width="6"></Shape>
		<Static Height="20" Id="Static2" Left="845" Style="snis_m_stitle" TabOrder="23" Text="주선선수&#32;목록" Top="66" VAlign="Middle" Width="150"></Static>
		<Grid AutoEnter="TRUE" AutoFit="TRUE" AutoFitEndLine="Hide" BindDataset="dsOutArrangeRacer" BKColor="user15" BkColor2="user16" BkSelColor="user17" BoldHead="true" Border="Flat" BorderColor="user22" Bottom="500" DragMode="TRUE" DropMode="TRUE" Editable="TRUE" Enable="true" EndLineColor="default" HeadBorder="Flat" HeadHeight="20" Height="410" Id="grdArrangeRacer" InputPanel="FALSE" Left="836" LineColor="user18" MinWidth="100" OnCellDBLClick="grdArrangeRacer_addRacer" OnDrag="fcRacerDrag" OnHeadClick="fcGridSort" Right="1007" SelColor="user19" Style="snis_grid" TabOrder="25" TabStop="true" Top="90" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="default" WheelScrollRow="1" Width="171">
			<contents>
				<format id="Default">
					<columns>
						<col width="63"/>
						<col width="55"/>
					</columns>
					<head>
						<cell bkcolor="user20" col="0" color="user21" display="text" font="굴림,9" rowspan="2" text="등록번호"/>
						<cell bkcolor="user20" col="1" color="user21" display="text" font="굴림,9" rowspan="2" text="선수명"/>
					</head>
					<body>
						<cell align="center" col="0" colid="RACER_NO" display="text" SuppressAlign="Middle"/>
						<cell align="center" col="1" colid="NM_KOR" display="text"/>
					</body>
				</format>
			</contents>
		</Grid>
		<Button Align="Left" ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btnRacerView" ImageID="btn_txt_04" Left="934" LeftMargin="15" OnClick="fcArrangeRacerSearch" Style="snis_btn" TabOrder="26" Text="선수조회" Top="64" Transparent="TRUE" Width="74"></Button>
		<Button Align="Left" ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btnEquip" ImageID="btn_txt_06" Left="577" LeftMargin="15" OnClick="btnEquip_OnClick" Style="snis_btn" TabOrder="27" Text="예비장비인쇄" Top="65" Transparent="TRUE" Width="99"></Button>
		<TextArea BindDataset="dsOutAppoExercRslt" Border="Flat" Column="CNTNT1" DisableBKColor="user2" Height="31" Id="taRsltCntnt1" Left="107" Style="snis_m_input01" TabOrder="28" Top="546" VScroll="TRUE" Width="446"></TextArea>
		<Button Align="Left" ButtonStyle="TRUE" Cursor="HAND" Height="20" Id="btnConfirm" ImageID="btn_txt_02" Left="522" LeftMargin="15" OnClick="fcSave" Style="snis_btn" TabOrder="29" Text="완료" Top="65" Transparent="TRUE" Width="50"></Button>
		<Static Align="Right" Border="Flat" Height="69" Id="Static16" Left="9" Style="snis_m_lable" TabOrder="9" Text="내용&#32;" Top="508" VAlign="Middle" Width="96"></Static>
		<Static Align="Center" Border="Flat" Height="69" Id="Static4" Left="561" Style="snis_m_lable" TabOrder="30" Text="홈페이지&#10;공지사항" Top="508" VAlign="Middle" Width="96" WordWrap="TRUE"></Static>
		<TextArea BindDataset="dsOutAppoExercRslt" Border="Flat" Column="NOTICE" DisableBKColor="user2" Height="69" Id="taRslNotice" Left="659" Style="snis_m_input01" TabOrder="31" Top="508" VScroll="TRUE" Width="343"></TextArea>
		<Edit Align="CENTER" Border="Flat" BorderColor="user3" Height="19" Id="edRaceCnt" Left="480" Number="TRUE" Style="snis_if_input01" TabOrder="32" Text="12" Top="66" Width="31"></Edit>
		<Static Height="12" Id="Static5" Left="440" TabOrder="33" Text="조편성" Top="69" Width="40"></Static>
	</Form>
	<Script><![CDATA[/***************************************************************************************************
*   Form Common Script                                                                             *
*     현재 총 100 컬럼임 되도록 100 컬럼 안으로 코딩을 하세요                                      *
123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 1234567890
***************************************************************************************************/

/***************************************************************************************************
*                                         공통 Script Include                                      *
***************************************************************************************************/
#include "lib::boa_common_script.js";
#include "lib::boa_app_script.js";

/***************************************************************************************************
*                                          화면 변수 선언부                                        *
***************************************************************************************************/
var sFormId       = 'E03050010';
var sBUTTONLIST   = 'TTFTFT';                          //공통기능정의(버튼순으로 T or F)
var sUSERAUTH     = '';                                //사용자별 프로그램 사용 권한
var sFORMCAPTION  = '';                                //Form의 Title 정보
var sFORMLOCATION = '';                                //Form의 Location 정보
var sUSERLAVEL    = '';                                //Form의 사용  Level
var vREVOBJ       = Array(9);                          //결과값 처리를 위한 오브젝트 
var sGRDTIT       = "";                                //그리드 제목
var sCUROBJ       ;                                    //현재 LOST FOCUS 오브젝트

var CURR_DT = fce_GetSysdate("YYYYMMDD");
var CURR_STND_YEAR = gdsRace.GetColumn(gdsRace.rowposition, "STND_YEAR");   //현재 년도 
var CURR_USER_MBR_CD = gdsRace.GetColumn(gdsRace.rowposition, "MBR_CD");	//현재 User의 경정장 코드 
var CURR_TMS = gdsRace.GetColumn(gdsRace.rowposition, "TMS");			    //현재 회차  
var CURR_DAY_ORD = gdsRace.GetColumn(gdsRace.rowposition, "DAY_ORD");		//현재 일차 
var CURR_RACE_NO = gdsRace.GetColumn(gdsRace.rowposition, "RACE_NO");		//현재 경주번호 

var oLastDs       = null;
var oLastDsRow    = 0;
var actFlag       = "";
var clickFlag     = "";
/***************************************************************************************************
*                                         공통 Event 처리 부분                                     *
***************************************************************************************************/

/*-------------------------------------------------------------------------------------------------+
>>  최초 화면 Load時 처리 할 사항
+-------------------------------------------------------------------------------------------------*/
function fcFormLoadSetting(obj)
{
    sBUTTONLIST   = 'T'+sInpt+'FTTT';
	if ( sInpt == "T" ) {
        btnConfirm.Visible  = true;
	} else {
        btnConfirm.Visible  = false;
	}

	//화면환경 설정
	sFORMCAPTION  = obj.Title;
	sFORMLOCATION = "";
	
	//화면 정보 Display 및 Button 권한 설정
	fnc_FormLoadSetting(obj, sFORMCAPTION, sFORMLOCATION, sBUTTONLIST, sUSERAUTH);
	
	//초기 화면 BK Color설정 
	fnc_SetBKColor(this);

    //년도조회
    fce_SetStndYear(dsOutSStndYear, toInteger(fce_GetSysdate("YYYY")));
    cboSStndYear.Index = 0;

	// 화면 초기화
	fcInit();

	//공통코드 조회
	fce_GetComboDs(dsInComCd);
}

/*-------------------------------------------------------------------------------------------------+
>>  단축키 처리(Form KeyDown)
+-------------------------------------------------------------------------------------------------*/
function fcHotKey(obj,objSenderObj,nChar,bShift,bControl,bAlt,nLLParam,nHLParam)
{
	//Return Key Press時 Next Component focus
	if ( nChar == 13 ) {
		var oFocusComponent = GetNextComponent(true);
		oFocusComponent.setfocus();
		return;
	}
}

/*-------------------------------------------------------------------------------------------------+
>>  최초 화면 Load時 처리 할 사항
+-------------------------------------------------------------------------------------------------*/
function fcFormUnloadProcess(obj)
{
	//자료 변경 여부를 체크하고자 하는  DataSet Object를 넘긴다.
	if ( !fnc_FormUnloadCheck("dsOutAppoExercOrgan" ,sFormId) ) return false;
}

/***************************************************************************************************
*                                      공통 버튼 Event 처리 부분                                   *
***************************************************************************************************/
/*-------------------------------------------------------------------------------------------------+
>>  취소 버튼 클릭 時 처리
+-------------------------------------------------------------------------------------------------*/
function fcInit(obj) {
    dsOutAppoExercOrgan.ClearData();
    if ( obj.Id != "btnAutoOrgan" ) 
        dsOutAppoExercRslt .ClearData();
    dsOutArrangeRacer  .ClearData();
    oLastDs       = dsOutAppoExercOrgan;
    //grdExercOrgan.DragMode = false;
}

/*-------------------------------------------------------------------------------------------------+
>>  조회 버튼 클릭 時 처리
+-------------------------------------------------------------------------------------------------*/
function fcSearchCheck(obj) {

	fcInit(obj);
	
	var sDayOrd = cboSRaceDayOrd.Value;
	if ( sDayOrd == '0' ) sDayOrd = '1';
    var nRow = fnc_GetExistValue(dsOutSRaceDayOrd, "DAY_ORD", sDayOrd);
	if ( dsOutSRaceDayOrd.GetColumn(nRow, "ORGAN_STAT_CD") != "002" ) {
		// fnc_Message(L_COM_CNF_0000, "N", "편성작업이 확정되지 않았습니다.");
        // return false;
	}
	
	return true;
}

function fcSearch(obj) {
    if ( !fcSearchCheck(obj) ) return;

	var sServiceName = "e03050010-service:searchExerciseOrganization";
    var sInDataSet   = "";
    var sOutDataSet  = "dsOutAppoExercOrgan=dsOutAppoExercOrgan "
                        + "dsOutAppoExercRslt=dsOutAppoExercRslt ";
    
	fce_AddParam(Trim("STND_YEAR"), cboSStndYear.Value);
	fce_AddParam(Trim("MBR_CD"),    cboSMbr.Value);
	fce_AddParam(Trim("TMS"),       cboSRaceTms.Value);
	fce_AddParam(Trim("DAY_ORD"),   cboSRaceDayOrd.Value);
	fce_AddParam("RACE_CNT",        edRaceCnt.Text);

	fce_SendTransaction(sServiceName, sInDataSet, sOutDataSet, "fcCallBack", false);
// 0일차 1~2일차
    if(cboSRaceDayOrd.value == "0"){
        grdExercOrgan.Format = "Default";
//        taRsltCntnt.Width    = 446;
        taRsltCntnt.Height    = 31;
        taRsltCntnt1.Visible = "true";
    }else{
        grdExercOrgan.Format = "header_not0day";
//        taRsltCntnt.Width    = 896;
        taRsltCntnt.Height    = 69;
        taRsltCntnt1.Visible = "false";
    }
}


/*-------------------------------------------------------------------------------------------------+
>>  예비 장비 버튼 클릭 時 처리
+-------------------------------------------------------------------------------------------------*/
function fcSearchEquipCheck(obj) {

	//fcInit(obj);
	
	return true;
}

function fcSearchEquip(obj) {
    if ( !fcSearchEquipCheck(obj) ) return;

	var sServiceName = "e03050010-service:searchEquipMot";
    var sInDataSet   = "";
    var sOutDataSet  = "dsOutMot=dsOutMot "
                     + "dsOutBoat=dsOutBoat ";
    
	fce_AddParam(Trim("STND_YEAR"), cboSStndYear.Value);
	fce_AddParam(Trim("MBR_CD"), cboSMbr.Value);
	fce_AddParam(Trim("TMS"), cboSRaceTms.Value);
	fce_AddParam(Trim("DAY_ORD"), cboSRaceDayOrd.Value);

	fce_SendTransaction(sServiceName, sInDataSet, sOutDataSet, "fcCallBack", false);
}



/*-------------------------------------------------------------------------------------------------+
>>  저장 버튼 클릭 時 처리
+-------------------------------------------------------------------------------------------------*/
function fcSaveCheck(obj) {

    if ( obj.id == "btnConfirm" ) {
		return true;
    }
    
	//변경된 자료가 있는지 체크
	if ( !fnc_DatasetChangeCheck(dsOutAppoExercOrgan) 
        && !fnc_DatasetChangeCheck(dsOutAppoExercRslt))
	{
		//저장 할 자료가 없음
		fnc_Message(SNIS_COM_1006, "N");
		return false;
	}

	// 필수항목체크
	/*oDataSet          = dsOutAppoExercOrgan;
	sMandatoryColID   = "RACER_NO||NM_KOR";
	sMandatoryColName = "등록번호||선수명;
	oGrid             = grdExercOrgan;
	if ( fnc_GetMandatoryViolateRow(oDataSet, sMandatoryColID, sMandatoryColName, oGrid) > -1 ) {
	    return false;
	}*/
	
	
	
	return true;
}

function fcSave(obj) {

    if ( !fcSaveCheck(obj) ) return;
    
	var sServiceName = "e03050010-service:SaveExerciseOrganization";
    var sInDataSet   = "dsOutAppoExercOrgan=dsOutAppoExercOrgan:u dsOutAppoExercRslt=dsOutAppoExercRslt:u";
    var sOutDataSet  = "dsOutAppoExercOrgan=dsOutAppoExercOrgan dsOutAppoExercRslt=dsOutAppoExercRslt";

	fce_AddParam(Trim("STND_YEAR"), cboSStndYear.Value);
	fce_AddParam(Trim("MBR_CD"), cboSMbr.Value);
	fce_AddParam(Trim("TMS"), cboSRaceTms.Value);
	fce_AddParam(Trim("DAY_ORD"), cboSRaceDayOrd.Value);

    if ( obj.id == "btnConfirm" ) {
        fce_AddParam(Trim("WORK_CD"), "025");
    }

	fce_SendTransaction(sServiceName, sInDataSet, sOutDataSet, "fcCallBack");
}

/*-------------------------------------------------------------------------------------------------+
>>  엑셀 버튼 클릭 時 처리
+-------------------------------------------------------------------------------------------------*/
function fcToExcel(obj) {
	fnc_OpenExcelExport("grdExercOrgan");         //입력 첫 항목으로 Focus
}

/*-------------------------------------------------------------------------------------------------+
>>  인쇄 버튼 클릭 時 처리
+-------------------------------------------------------------------------------------------------*/
function fcPrint(obj) {
	var logImgUrl = GBL_REPORT_URL+"log.jpg";
	var sSubUrl   = "";                     //레포트 파일이 있는 서브디렉토리
	var sRptNm    = "";               //레포트 파일명
    //리포트 파일 변경하기 
    if(cboSRaceDayOrd.value == "0"){
        sRptNm = "e03059011_racer_exerc_organ_0day.jrf";
    }else{
        sRptNm = "e03059010_racer_exerc_organ.jrf";
    }
	
	var sDataSet  = "racer_exerc_organ=dsOutAppoExercOrgan  racer_exerc_rslt=dsOutAppoExercRslt";    //"UBI 쿼리명, MIP Dataset명"

	var nDay = GetDay( calRaceDt.Value );
	var strDay = Decode( nDay, 0, "일", 1, "월", 2, "화", 
		3, "수", 4, "목", 5, "금", 6, "토" );

	var sArg  = " TMS="+cboSRaceTms.Value; 
		sArg += " RACE_DAY="+calRaceDt.Value; 	
		sArg += " DAY="+strDay; 	
		sArg += " IMG_URL="+logImgUrl; 
	var sRptDrct  = 1;                               //출력방향(0 : 수직, 1 : 수평)
	
	fnc_RPTPrint(sSubUrl, sRptNm, sDataSet, sArg, sRptDrct);
}

/*-------------------------------------------------------------------------------------------------+
>>  화면 종료(닫기) 버튼 클릭 時 처리
+-------------------------------------------------------------------------------------------------*/
function fcEnd(obj) {
	//화면 종료
	Close();	
}


/***************************************************************************************************
*                                      공통 Function 처리 부분                                     *
***************************************************************************************************/
/*-------------------------------------------------------------------------------------------------+
>>  Text Box가 Focus를 받을 때
+-------------------------------------------------------------------------------------------------*/
function fcEditFocus(obj) {
	fnc_EditFocus(obj);
}

/*-------------------------------------------------------------------------------------------------+
>>  그리드 정렬
+-------------------------------------------------------------------------------------------------*/
function fcGridSort(obj,nCell,nX,nY) {
	//특정 Head 클릭 시 해당 항목으로 Sort(만약 특정 컬럼을 누를때만 소트하고자 한다면 nCell로 조건)
	fnc_GridSort(obj, object(obj.BindDataset), nCell);	
}

/*-------------------------------------------------------------------------------------------------+
>>  Help Popup Open
+-------------------------------------------------------------------------------------------------*/
function fcHelpDialoge(obj,nX,nY) {

}

/*-------------------------------------------------------------------------------------------------+
>>  그리드에서 팝업 처리 
+-------------------------------------------------------------------------------------------------*/
function fcGrdOnExpandEdit(objGrd, nRow, nCell, strVal, nPivotIndex){

}

/***************************************************************************************************
*                                      사용자 정의  처리 부분                                      *
***************************************************************************************************/
/***************************************************************************************************
*                                      사용자 정의  처리 부분                                      *
***************************************************************************************************/
/*-------------------------------------------------------------------------------------------------+
>>  Transaction 후 처리 해야 할 내용!
+-------------------------------------------------------------------------------------------------*/
function fcCallBack(sServiceName, ErrorCode, ErrorMSG) {

	if ( !fnc_Result(ErrorCode, ErrorMSG) ) return;
	
	// 공통코드 조회시
	if ( sServiceName == "common-service:searchCode" ) {
        cboSMbr.Index = 0;
        cboSMbr.Value = CURR_USER_MBR_CD;

        fce_GetRaceTms(cboSStndYear.Value,cboSMbr.Value,"","dsOutSRaceTms");
		return;
	}

	// 회차 리스트 조회시
	if ( sServiceName == "common_race-service:searchRaceTms" ) {
        cboSRaceTms.Index = 0;
        if ( cboSStndYear.Value == CURR_STND_YEAR ) {
            var nIndexRow = fnc_GetExistValue(dsOutSRaceTms, "TMS", CURR_TMS);
            if ( nIndexRow > -1 ) cboSRaceTms.Index = nIndexRow;
        }       
        fce_GetRaceDayOrd(cboSStndYear.Value, cboSMbr.Value, cboSRaceTms.Value, "dsOutSRaceDayOrd");
		return;
	}

	// 일차 리스트 조회 후
	if ( sServiceName == "common_race-service:searchRaceDayOrd" ) {
        cboSRaceDayOrd.Index = 0;
        
        if ( cboSRaceTms.Value == CURR_TMS ) {
            var nIndexRow = fnc_GetExistValue(dsOutSRaceDayOrd, "DAY_ORD", CURR_DAY_ORD);
            
            if ( nIndexRow > -1 ) cboSRaceDayOrd.Index = nIndexRow;
        }

        var beforeDate = fnc_calDate(dsOutSRaceDayOrd.GetColumn("0","RACE_DAY"),1,"Y");
        dsOutSRaceDayOrd.row = fnc_GetExistValue(dsOutSRaceDayOrd, "DAY_ORD", cboSRaceDayOrd.Value);

        //코드값 추가, 경기전일자 날짜 세팅---------------------------------------------------//
        var nRow = 0;
        bFirst = "";
        
        if ( !bFirst ) {
            dsOutSRaceDayOrd.InsertRow(nRow);
        } else {
            nRow = dsOutSRaceDayOrd.GetRowCount();
            dsOutSRaceDayOrd.AddRow();
        }

      
        dsOutSRaceDayOrd.SetColumn(nRow, "DAY_ORD" , "0");
        dsOutSRaceDayOrd.SetColumn(nRow, "RACE_DAY" , beforeDate);
        
        if ( cboSRaceDayOrd != null ) 
            cboSRaceDayOrd.index = nRow;
        //---------------------------------------------------------------//

        //그리드 해더 변경하기 
        if(cboSRaceDayOrd.value == "0"){
            grdExercOrgan.Format = "Default";
        }else{
            grdExercOrgan.Format = "header_not0day";
        }
        fcGetMaxRaceNo();    
        fcSearch();
		return;
	}

	// 조회 후
	if ( sServiceName == "e03050010-service:searchExerciseOrganization" ) {
	    // 값이 없을 경우 첫번째 항목으로 세팅
        /*if ( dsOutAppoExercOrgan.GetRowCount() == 0 ) {
            grdExercOrgan.DragMode = true;
        }*/
        if ( dsOutAppoExercRslt.GetRowCount() == 0 ) {
            dsOutAppoExercRslt.InsertRow();
            dsOutAppoExercRslt.SetColumn(0, "STND_YEAR", cboSStndYear.Value);
            dsOutAppoExercRslt.SetColumn(0, "MBR_CD", cboSMbr.Value);
            dsOutAppoExercRslt.SetColumn(0, "TMS", cboSRaceTms.Value);
            dsOutAppoExercRslt.SetColumn(0, "DAY_ORD", cboSRaceDayOrd.Value);
        }             
    
        fnc_SetStatus(SNIS_BOA_0003, dsOutAppoExercOrgan.GetRowCount());
        fcArrangeRacerSearch();
		return;
	}
	
	// 선수리스트 조회
	if ( sServiceName == "e03050010-service:searchArrangeRacer" ) {
        fcSetRacerList();
        return;
	}	

	// 지정연습편성 그리드 생성 후
	if ( sServiceName == "e03050010-service:searchAutoOrgan" ) {
	}	

	// 예비장비조회 후
	if ( sServiceName == "e03050010-service:searchEquipMot" ) {
	
        var logImgUrl = GBL_REPORT_URL + "log.jpg";
        var sSubUrl   = "";                     //레포트 파일이 있는 서브디렉토리
        var sRptNm    = "e03059010_equip.jrf";               //레포트 파일명
        var sDataSet  = "mot=dsOutMot "; //"UBI 쿼리명, MIP Dataset명"
            sDataSet += "boat=dsOutBoat ";
        
        var sArg      = " IMG_URL="+logImgUrl;
            sArg     += " STND_YEAR="+cboSStndYear.Value;
            sArg     += " TMS="+cboSRaceTms.Value;
            
        var sRptDrct  = 1;                               //출력방향(0 : 수직, 1 : 수평)
        
        fnc_RPTPrint(sSubUrl, sRptNm, sDataSet, sArg, sRptDrct);
                
        return;
	}	

	// 저장 후
	if ( sServiceName == "e03050010-service:SaveExerciseOrganization" ) {
        fcSearch();
		return;
	}
	
	//오류가 없이 정상 처리되었다면...
	fcPostProcess(sServiceName);
}

/*-------------------------------------------------------------------------------------------------+
>>  Transaction 후 Post Process!
+-------------------------------------------------------------------------------------------------*/
function fcPostProcess(sServiceName) {

}

/*-------------------------------------------------------------------------------------------------+
>>  코드나 명 입력 후 Lost Focus 시 해당 정보 Display
+-------------------------------------------------------------------------------------------------*/
function fcCodeNameDisplay(obj) {

}

/*-------------------------------------------------------------------------------------------------+
>>  주선선수목록 Display
+-------------------------------------------------------------------------------------------------*/
function fcArrangeRacerSearch(obj) {
	var sServiceName = "e03050010-service:searchArrangeRacer";
    var sInDataSet   = "";
    var sOutDataSet  = "dsOutArrangeRacer=dsOutArrangeRacer"; 		//추첨 대상 보트 

    fce_AddParam("STND_YEAR", cboSStndYear.Value);
	fce_AddParam("MBR_CD", cboSMbr.Value);
    fce_AddParam("TMS", cboSRaceTms.Value);
	
	fce_SendTransaction(sServiceName, sInDataSet, sOutDataSet, "fcCallBack", false);
}

/*-------------------------------------------------------------------------------------------------+
>>  선수선택 버튼 클릭 시
+-------------------------------------------------------------------------------------------------*/
function btnChoiceRacer_OnClick(obj)
{
    //편성된 값이 있을때는 자동편성 기능이 안되도록..
    /*if ( grdExercOrgan.DragMode == 0 ) {
        fnc_Message("이미 지정연습이 편성되어 있습니다!");
        return;
    }*/	
    
    http.sync = true;
    fcFillOrganGrid();
    http.sync = false;
    if ( dsOutAppoExercOrgan.GetRowCount() == 0 ) {
        fnc_Message(SNIS_BOA_C005);
        return;
    }
    
    //grdExercOrgan.DragMode = true;
    fcArrangeRacerSearch();
}


/*-------------------------------------------------------------------------------------------------+
>> 자동편성 버튼 클릭 시
+-------------------------------------------------------------------------------------------------*/
function btnAutoOrgan_OnClick(obj)
{
    //편성된 값이 있을때는 자동편성 기능이 안되도록..
    /*if ( grdExercOrgan.DragMode == 0 ) {
        fnc_Message("이미 지정연습이 편성되어 있습니다!");
        return;
    }*/
    actFlag       = "Auto";    
    http.sync = true;
    fcFillOrganGrid(obj);
    fcArrangeRacerSearch(obj);
    http.sync = false;
    if ( dsOutAppoExercOrgan.GetRowCount() == 0 ) {
        fnc_Message(SNIS_BOA_C005);
        return;
    }
        
    //grdExercOrgan.DragMode = true;

    //선수세팅하기
    if (cboSRaceDayOrd.value == "0"){
        //주선선수 기수별로 가져오기
        fcsearchRacerPerio();
        //지정연습편성이력 2회차분 가져오기
        fcsearchAppoExercHistory();
        
        fcSetZeroDayRacer();  
    }else{
        //편성정보가져오기
        http.sync = true;
        fcsearchOrganResult();
        http.sync = false;
                
        fcSetRacer();  
    }
    
    actFlag = "";
    return;
}

/*-------------------------------------------------------------------------------------------------+
>> 편성화면 그리드 생성
+-------------------------------------------------------------------------------------------------*/
function fcFillOrganGrid(obj)
{
	fcInit(obj);

    if ( !fcSearchCheck(obj) ) return;
    var sServiceName = "e03050010-service:searchAutoOrgan";
    var sInDataSet   = "";
    var sOutDataSet  = "dsOutAppoExercOrgan=dsOutAppoExercOrgan ";
    
    fce_AddParam(Trim("STND_YEAR"), cboSStndYear.Value);
    fce_AddParam(Trim("MBR_CD"),    cboSMbr.Value);
    fce_AddParam(Trim("TMS"),       cboSRaceTms.Value);
    fce_AddParam(Trim("DAY_ORD"),   cboSRaceDayOrd.Value);
    fce_AddParam("RACE_CNT",        edRaceCnt.Text);

    fce_SendTransaction(sServiceName, sInDataSet, sOutDataSet, "fcCallBack", false);
}

/*-------------------------------------------------------------------------------------------------+
>>  주선선수 클릭 시 최종 그리드 
+-------------------------------------------------------------------------------------------------*/
function grdExercOrgan_OnCellClick(obj,nRow,nCell,nX,nY,nPivotIndex)
{
    clickFlag = "";
    
    oLastDs       = object(obj.BindDataset);
    if ( nRow < 0 ) nRow = 0;
    oLastDsRow    = nRow;
}

/*-------------------------------------------------------------------------------------------------+
>>  지정연습 Double Click 경주선수 삭제, 주선선수 리스트에 추가
+-------------------------------------------------------------------------------------------------*/
function grdExercOrgan_OnCellDblClick(obj,nRow,nCell,nX,nY,nPivotIndex)
{
    //편성된 값이 있을때는 자동편성 기능이 안되도록..
    /*if ( grdExercOrgan.DragMode == 0 ) {
        return;
    }*/

    //정번을 눌렀을때만 선수가 주선선수목록으로 이동    
//    if (nCell != "1")   return;
    
	oLastDs       = object(obj.BindDataset);
    oLastDsRow    = nRow;
    srcDataSet    = dsOutArrangeRacer;   
    sColumnID     = "RACER_NO";
    var sRacerNo  = oLastDs.getColumn(nRow, "RACER_NO");
     
    if ( fnc_IsNull(sRacerNo) ) return;

    srcDataSet.AddRow();
    MoveRacerAllocation(srcDataSet, srcDataSet.currow, oLastDs, oLastDsRow);
}


/*-------------------------------------------------------------------------------------------------+
>> 주선선수 리스트 Double Click시 각 선수를  해당 경주-정번에 등록
+-------------------------------------------------------------------------------------------------*/
function grdArrangeRacer_addRacer(obj,nRow,nCell,nX,nY,nPivotIndex)
{
    clickFlag = "Dbl";
    
    var srcColumn = "RACER_NO";
    srcDataSet  = dsOutArrangeRacer;  
    
    var sRacerNo = object(obj.BindDataset).getColumn(nRow, srcColumn);
    if ( fnc_IsNull(sRacerNo) ) return;
    if ( !fnc_IsNull(oLastDs.GetColumn(oLastDsRow, srcColumn)) ) return;

    oLastDs.row = oLastDsRow;    
    MoveRacerAllocation(oLastDs, oLastDsRow, srcDataSet, nRow);
     
    oLastDsRow++;
}

/*-------------------------------------------------------------------------------------------------+
>>  선수 리스트 드래그 & 드롭 시 각 경주에 해당 선수 변경
+-------------------------------------------------------------------------------------------------*/
function ChangeRacerAllocation(objTarget, nRowTarget, objSource, nRowSource)
{
    for ( var i = 0; i < objSource.GetColCount(); i++ ) {
        var sColumnID = objSource.GetColID(i);
        if (sColumnID = "NM_KOR"){
                objTarget.SetColumn(nRowTarget, "RACER_NO", objSource.GetColumn(nRowSource, "RACER_NO"));
                objTarget.SetColumn(nRowTarget, "NM_KOR", objSource.GetColumn(nRowSource, "NM_KOR"));
                objTarget.SetColumn(nRowTarget, "MOT_NO", objSource.GetColumn(nRowSource, "MOT_NO"));
                objTarget.SetColumn(nRowTarget, "BOAT_NO", objSource.GetColumn(nRowSource, "BOAT_NO"));
        }
    }    
}


/*-------------------------------------------------------------------------------------------------+
>>  선수 리스트 Double Click시 각 경주에 해당 선수 등록
+-------------------------------------------------------------------------------------------------*/
function MoveRacerAllocation(objTarget, nRowTarget, objSource, nRowSource)
{
    objTarget.SetColumn(nRowTarget, "RACER_NO", objSource.GetColumn(nRowSource, "RACER_NO"));
    objTarget.SetColumn(nRowTarget, "NM_KOR"  , objSource.GetColumn(nRowSource, "NM_KOR"  ));
    objTarget.SetColumn(nRowTarget, "MOT_NO"  , objSource.GetColumn(nRowSource, "MOT_NO"  ));
    objTarget.SetColumn(nRowTarget, "BOAT_NO" , objSource.GetColumn(nRowSource, "BOAT_NO" ));
    objSource.SetColumn(nRowSource, "RACER_NO", "");
    objSource.SetColumn(nRowSource, "NM_KOR"  , "");
    objSource.SetColumn(nRowSource, "MOT_NO"  , "");
    objSource.SetColumn(nRowSource, "BOAT_NO" , "");
    
    if ( objSource.ID == "dsOutArrangeRacer" || objSource.ID == "dsOutArrangeRacerTemp") objSource.DeleteRow(nRowSource);
}


/*-------------------------------------------------------------------------------------------------+
>>  년도, 분기 변경시
+-------------------------------------------------------------------------------------------------*/
function cboSStndYear_OnChanged(obj,strCode,strText,nOldIndex,nNewIndex)
{
    fcInit();
    fce_GetRaceTms(cboSStndYear.Value, cboSMbr.Value, "", "dsOutSRaceTms");
}

/*-------------------------------------------------------------------------------------------------+
>>  회차변경시
+-------------------------------------------------------------------------------------------------*/
function cboSRaceTms_OnChanged(obj,strCode,strText,nOldIndex,nNewIndex)
{
    fce_GetRaceDayOrd(cboSStndYear.Value, cboSMbr.Value, cboSRaceTms.Value, "dsOutSRaceDayOrd");
}

/*-------------------------------------------------------------------------------------------------+
>>  일차변경시
+-------------------------------------------------------------------------------------------------*/
function cboSRaceDayOrd_OnChanged(obj,strCode,strText,nOldIndex,nNewIndex)
{
    dsOutSRaceDayOrd.row = fnc_GetExistValue(dsOutSRaceDayOrd, "DAY_ORD", cboSRaceDayOrd.Value);
    fcGetMaxRaceNo();
    fcSearch();
}

/*-------------------------------------------------------------------------------------------------+
>>  자동편성- 편성결과 가져오기
+-------------------------------------------------------------------------------------------------*/
function fcsearchOrganResult()
{
	var sServiceName = "e03050010-service:searchOrganResult";
    var sInDataSet   = "";
    var sOutDataSet  = "dsOutOrganResult=dsOutOrganResult ";
    
	fce_AddParam(Trim("STND_YEAR"), cboSStndYear.Value);
	fce_AddParam(Trim("MBR_CD"), cboSMbr.Value);
	fce_AddParam(Trim("TMS"), cboSRaceTms.Value);
	fce_AddParam(Trim("DAY_ORD"), cboSRaceDayOrd.Value);
    
	fce_SendTransaction(sServiceName, sInDataSet, sOutDataSet, "fcCallBack", false);
}


/*-------------------------------------------------------------------------------------------------+
>>  자동편성- 주선된 선수 기수별로 가져오기
+-------------------------------------------------------------------------------------------------*/
function fcsearchRacerPerio()
{
	var sServiceName = "e03050010-service:searchRacerPerio";
    var sInDataSet   = "";
    var sOutDataSet  = "dsOutRacerPerio=dsOutRacerPerio ";
    
	fce_AddParam(Trim("STND_YEAR"), cboSStndYear.Value);
	fce_AddParam(Trim("MBR_CD"), cboSMbr.Value);
    fce_AddParam(Trim("TMS"), cboSRaceTms.Value);
    
    http.sync = true;
	fce_SendTransaction(sServiceName, sInDataSet, sOutDataSet, "fcCallBack", false);
	http.sync = false;
}

/*-------------------------------------------------------------------------------------------------+
>>  자동편성- 지정연습편성정보 2회차분 이력 가져오기
+-------------------------------------------------------------------------------------------------*/
function fcsearchAppoExercHistory()
{
	var sServiceName = "e03050010-service:searchAppoExercHistory";
    var sInDataSet   = "";
    var sOutDataSet  = "dsOutAppoExercHistory=dsOutAppoExercHistory ";

	fce_AddParam(Trim("TMS1"), toInteger(cboSRaceTms.Value) - 2);
    fce_AddParam(Trim("TMS2"), toInteger(cboSRaceTms.Value) - 1);
	fce_AddParam(Trim("STND_YEAR"), cboSStndYear.Value);
	fce_AddParam(Trim("MBR_CD"), cboSMbr.Value);
    
    http.sync = true;
	fce_SendTransaction(sServiceName, sInDataSet, sOutDataSet, "fcCallBack", false);
	http.sync = false;
}
/*-------------------------------------------------------------------------------------------------+
>>  지정연습 최대 편성조 가져오기
+-------------------------------------------------------------------------------------------------*/
function fcGetMaxRaceNo()
{
	var sServiceName = "e03050010-service:searchMaxRaceNo";
    var sInDataSet   = "";
    var sOutDataSet  = "dsOutMaxRaceNo=dsOutMaxRaceNo ";

	fce_AddParam(Trim("STND_YEAR"), cboSStndYear.Value);
	fce_AddParam(Trim("MBR_CD"), cboSMbr.Value);
	fce_AddParam(Trim("TMS"), cboSRaceTms.Value);
	fce_AddParam(Trim("DAY_ORD"), cboSRaceDayOrd.Value);
    
    http.sync = true;
	fce_SendTransaction(sServiceName, sInDataSet, sOutDataSet, "fcCallBack", false);
	if (dsOutMaxRaceNo.RowCount() > 0) edRaceCnt.text = dsOutMaxRaceNo.GetColumn(0, "MAX_RACE_NO");
	http.sync = false;
}    
/*-------------------------------------------------------------------------------------------------+
>>  자동편성- 선수세팅
1. 편성 1 ~ 4 인 선수를 가져와 1 ~ 5의  해당 정번에 꽂아준다.
2. 편성 5 ~ 15 인 선수를 15경주부터 10의 해당 정번에 꽂아준다.
3. 돌리고 남은 선수를 해당 정번을 찾아 다시 돌린다.
4. 선수가 남았을 경우, 남은 선수를 정번의 근사치에 꽂아준다.
+-------------------------------------------------------------------------------------------------*/
function fcSetRacer()
{
    dsOutOrganResultTemp.copy(dsOutOrganResult);

    var nRow       = 0;
    var nRaceNo    = 2;
    //지정연습 1~5경주를 세팅한다.
    while ( dsOutOrganResultTemp.GetRowCount() > 0 ) {
        if ( toInteger(dsOutOrganResultTemp.GetColumn(0, "RACE_NO")) > 4 ) {
            break;
        }

        var nRaceRegNo = toInteger(dsOutOrganResultTemp.GetColumn(0, "RACE_REG_NO"));
        
        nRow = (nRaceNo * 6) + nRaceRegNo - 1;
        
        fcSetMoveRacer(dsOutAppoExercOrgan, nRow, dsOutOrganResultTemp, 0);
        if ( nRaceNo == 4 ) {
            nRaceNo = -1;
        }
        nRaceNo++;
    }
    
    var nRow       = 0;
    var nRaceNo    = 9;
    //지정연습 6~10경주를 세팅한다.
    //15경주부터 세팅. 10조부터 채워나간다.
    for ( var i = dsOutOrganResultTemp.GetRowCount() - 1; i >= 0; i-- ) {
        var nRaceRegNo = toInteger(dsOutOrganResultTemp.GetColumn(i, "RACE_REG_NO"));
        
        nRow = (nRaceNo * 6) + nRaceRegNo - 1;
        if ( !fnc_IsNull(dsOutAppoExercOrgan.GetColumn(nRow, "RACER_NO")) ) continue;
        
        fcSetMoveRacer(dsOutAppoExercOrgan, nRow, dsOutOrganResultTemp, i);
        
        if ( nRaceNo == 5 ) {
            nRaceNo = 10;
        }
        nRaceNo--;
    }
    
    var nRow         = 0;
    var nContinueRow = 0;
    var bDeleteRow   = false;
    var nLoopCnt     = 0;
    var nRowCount    = dsOutOrganResultTemp.GetRowCount();
    //돌리고 남은 선수를 끼워넣는다.
    while ( nLoopCnt < nRowCount ) {
        nLoopCnt++;
        bDeleteRow   = false;
        var nRaceRegNo = toInteger(dsOutOrganResultTemp.GetColumn(nContinueRow, "RACE_REG_NO"));
        for ( var j = 0; j < 10; j++ ) {
            nRow = (j * 6) + nRaceRegNo - 1;
            
            if ( !fnc_IsNull(dsOutAppoExercOrgan.GetColumn(nRow, "RACER_NO")) ) continue;

            fcSetMoveRacer(dsOutAppoExercOrgan, nRow, dsOutOrganResultTemp, nContinueRow);
            bDeleteRow   = true;
            break;
        }
        
        if ( bDeleteRow ) continue;
        nContinueRow++;
    }
    
    var nRowCount    = dsOutOrganResultTemp.GetRowCount();
    //남은 선수 빈 자리에 넣기.
    for ( var i = 0; i < nRowCount; i++ ) {
        nRow = fnc_GetExistValue(dsOutAppoExercOrgan, "RACER_NO", "");
        fcSetMoveRacer(dsOutAppoExercOrgan, nRow, dsOutOrganResultTemp, 0);
    }

    return;
}

function fcSetMoveRacer(objDsTo, nRowTo, objDsFrom, nRowFrom)
{
    if ( !fnc_IsNull(objDsTo.GetColumn(nRowTo, "RACER_NO")) ) return;

    objDsTo.SetColumn(nRowTo, "RACER_NO", objDsFrom.GetColumn(nRowFrom, "RACER_NO"));
    objDsTo.SetColumn(nRowTo, "NM_KOR"  , objDsFrom.GetColumn(nRowFrom, "NM_KOR"  ));
    objDsTo.SetColumn(nRowTo, "MOT_NO"  , objDsFrom.GetColumn(nRowFrom, "MOT_NO"  ));
    objDsTo.SetColumn(nRowTo, "BOAT_NO" , objDsFrom.GetColumn(nRowFrom, "BOAT_NO" ));
    
    var nRow = -1;
    nRow = fnc_GetExistValue(dsOutArrangeRacer, "RACER_NO", objDsFrom.GetColumn(nRowFrom, "RACER_NO"));
    if ( nRow > -1 ) dsOutArrangeRacer.DeleteRow(nRow);

    objDsFrom.DeleteRow(nRowFrom);
}

/*-------------------------------------------------------------------------------------------------+
>>  자동편성- 0일차 일경우에는 2회차분의 지정연습편성 결과를 비교하여 세팅한다.
+-------------------------------------------------------------------------------------------------*/
function fcSetZeroDayRacer()
{
    dsOutRacerPerioTemp.copy(dsOutRacerPerio);
    dsOutRacerPerioTemp.ClearData();

    // 3번만에 들어온 선수수를 구한다.
    var nRowCount  = 0;
    while(true) {
    
        if ( nRowCount >= dsOutRacerPerio.GetRowCount() ) break;
        if ( fnc_IsNull(dsOutRacerPerio.GetColumn(nRowCount, "RACE_NO")) ) {
            nRowCount++;
            continue;
        }
        break;
    }

    var nRow       = 0;
    var nRaceNo    = 2;
    var nRaceRegNo = 2;
    var nWorkCount = 0;
    
    var nMinRaceNo = 2;
    var nMaxRaceNo = nMinRaceNo + Ceil(nRowCount / 4);
    if ( nMaxRaceNo == 5 ) nMaxRaceNo = 7;
    //3번만에 들어온 선수는 3번 경주부터 4명씩 배치한다. 6번 경주의 경우 정번이 일치되는 일이 발생하므로 7번 경주까지 배치한다.
    while(nWorkCount < nRowCount) {
        if ( nWorkCount > nRowCount ) break;
        nWorkCount++;
        
        if ( fnc_IsNull(dsOutRacerPerio.GetColumn(0, "RACE_NO")) ) {
            nRow = (nRaceNo * 6) + nRaceRegNo - 1;
            
            fcSetMoveRacer(dsOutAppoExercOrgan, nRow, dsOutRacerPerio, 0);
        }
    
        if ( nRaceNo    == nMaxRaceNo ) nRaceNo = nMinRaceNo - 1;
        nRaceNo++;
    
        if ( nRaceRegNo == 3 ) nRaceRegNo++;
        if ( nRaceRegNo == 6 ) nRaceRegNo = 1;
        
        nRaceRegNo++;
    }


    // 1~5경주에 배정
    var nRowCount    = dsOutRacerPerio.GetRowCount();
    var nWorkCount   = 0;

    var nRaceNo      = 0;
    var nRaceRegNo   = 0;
    
    var nMinRaceNo   = 0;
    var nMaxRaceNo   = 4;
    var nStartRaceNo = 0;
    
    var bOrganRacer  = false;
    var nTempRow     = 0;

    while(nWorkCount < nRowCount) {
        if ( nWorkCount > nRowCount ) break;
        nWorkCount++;
        if ( toInteger(dsOutRacerPerio.GetColumn(0, "RACE_NO")) < 6) break;
        
        nRaceRegNo = toInteger(dsOutRacerPerio.GetColumn(0, "RACE_REG_NO"));
        bOrganRacer = false;
        for ( var i = 0; i < 5; i++ ) {
            if ( fcSetEscRaceRegNo(nStartRaceNo, nRaceRegNo, 0) ) {
                if ( nStartRaceNo == nMaxRaceNo ) nStartRaceNo = nMinRaceNo - 1;
                nStartRaceNo++;
                bOrganRacer = true;
                break;
            }
            if ( nStartRaceNo == nMaxRaceNo ) nStartRaceNo = nMinRaceNo - 1;
            nStartRaceNo++;
        }
        
        if ( !bOrganRacer ) {
            dsOutRacerPerioTemp.AddRow();
            dsOutRacerPerioTemp.CopyRow(nTempRow, dsOutRacerPerio, 0);
            dsOutRacerPerio.DeleteRow(0);
            nTempRow++;
        }
    }

    // 전반에 배정안된 선수 6~7경주에 배정
    // 6~7경주에 배정
    var nRowCount    = dsOutRacerPerioTemp.GetRowCount();
    var nWorkCount   = 0;

    var nRaceNo      = 0;
    var nRaceRegNo   = 0;
    
    var nMinRaceNo   = 5;
    var nMaxRaceNo   = 6;
    var nStartRaceNo = 5;
    
    var bOrganRacer  = false;
    var nTempRow     = 0;

    while(nWorkCount < nRowCount) {
        if ( nWorkCount > nRowCount ) break;
        nWorkCount++;
        
        nRaceRegNo = toInteger(dsOutRacerPerioTemp.GetColumn(0, "RACE_REG_NO"));
        bOrganRacer = false;
        for ( var i = 0; i < 5; i++ ) {
            if ( fcSetEscRaceRegNo(nStartRaceNo, nRaceRegNo, 0, dsOutRacerPerioTemp) ) {
                if ( nStartRaceNo == nMaxRaceNo ) nStartRaceNo = nMinRaceNo - 1;
                nStartRaceNo++;
                bOrganRacer = true;
                break;
            }
            if ( nStartRaceNo == nMaxRaceNo ) nStartRaceNo = nMinRaceNo - 1;
            nStartRaceNo++;
        }
        
        if ( !bOrganRacer ) {

            dsOutRacerPerioTemp.AddRow();
            dsOutRacerPerioTemp.CopyRow(nTempRow, dsOutRacerPerio, 0);
            dsOutRacerPerio.DeleteRow(0);
            nTempRow++;
        }
    }


    // 6~10경주에 배정
    var nRowCount    = dsOutRacerPerio.GetRowCount();
    var nWorkCount   = 0;

    var nRaceNo      = 0;
    var nRaceRegNo   = 0;
    
    var nMinRaceNo   = 5;
    var nMaxRaceNo   = 9;
    var nStartRaceNo = 5;
    
    var bOrganRacer  = false;
    var nTempRow     = 0;

    while(nWorkCount < nRowCount) {
        if ( nWorkCount > nRowCount ) break;
        nWorkCount++;
        //if ( toInteger(dsOutRacerPerio.GetColumn(0, "RACE_NO")) < 6) break;
        
        nRaceRegNo = toInteger(dsOutRacerPerio.GetColumn(0, "RACE_REG_NO"));
        bOrganRacer = false;
        for ( var i = 0; i < 5; i++ ) {
            if ( fcSetEscRaceRegNo(nStartRaceNo, nRaceRegNo, 0) ) {
                if ( nStartRaceNo == nMaxRaceNo ) nStartRaceNo = nMinRaceNo - 1;
                nStartRaceNo++;
                bOrganRacer = true;
                break;
            }
            if ( nStartRaceNo == nMaxRaceNo ) nStartRaceNo = nMinRaceNo - 1;
            nStartRaceNo++;
        }
        
        if ( !bOrganRacer ) {
            dsOutRacerPerioTemp.AddRow();
            dsOutRacerPerioTemp.CopyRow(nTempRow, dsOutRacerPerio, 0);
            dsOutRacerPerio.DeleteRow(0);
            nTempRow++;
        }
    }
    var nRowCount    = dsOutRacerPerioTemp.GetRowCount();
    //남은 선수 빈 자리에 넣기.
    for ( var i = 0; i < nRowCount; i++ ) {
        nRow = fnc_GetExistValue(dsOutAppoExercOrgan, "RACER_NO", "");
        fcSetMoveRacer(dsOutAppoExercOrgan, nRow, dsOutRacerPerioTemp, 0);
    }

    return;
}

function fcSetEscRaceRegNo(nRaceNo, nEscRaceRegNo, nWorkRow, objWorkDs) {
    if ( objWorkDs == null ) objWorkDs = dsOutRacerPerio;

    var nRow = 0;
    for ( var i = 1; i <= 6; i++ ) {
        // 전회차의 정번을 피하여 배정. (1, 4), (2, 5), (3, 6) 는 같은 정번으로 간주
        if ( ( i % 3 ) == ( nEscRaceRegNo % 3 ) ) continue;

        // 이미 배정되어 있으면 다음 정번으로
        nRow = (nRaceNo * 6) + i - 1;
        if ( !fnc_IsNull(dsOutAppoExercOrgan.GetColumn(nRow, "RACER_NO")) ) continue;

        fcSetMoveRacer(dsOutAppoExercOrgan, nRow, objWorkDs, nWorkRow);
        return true;
    }
    
    return false;
}

//  선수 동시선택 방지
function dsOutAppoExercOrgan_OnColumnChanged(obj,nRow,strColumnID,varOldValue,varNewValue,nPivotIndex)
{
    //자동편성일때는 타지 않도록..
    if(actFlag == "Auto")   return;
    //더블클릭으로 선택할 시에는 타지 않도록..
    if(clickFlag == "Dbl")  return;
    
    if(strColumnID != "NM_KOR")  return;
    //if (strColumnID == "NM_KOR" ) {
        //더블클릭으로 데이터가 변경됐을 경우에는 PASS
        var sOldBoat = dsOutAppoExercOrgan.GetOrgColumn(nRow,"BOAT_NO");
        var sNewBoat = dsOutAppoExercOrgan.GetColumn(nRow,"BOAT_NO");    
        if (sOldBoat != null && sNewBoat != null && sOldBoat != sNewBoat){
            return;	
        }else{
            /*-------------------------------------------------------------------------------------------------+
            >>선수명 EDIT해서 변경시에는 주선선수목록에서 해당 선수의 모터/보트번호를 가져와서 세팅해준다.
            +-------------------------------------------------------------------------------------------------*/    
            var sRacerNo  = dsOutAppoExercOrgan.GetColumn(nRow, "RACER_NO");
            var sRacerNm  = dsOutAppoExercOrgan.GetColumn(nRow, "NM_KOR");
            if ( fnc_IsNull(sRacerNm) ) return;
            
            //등록번호가 입력안되었을때는 성명을 가지고 등록번호를 search 
            var sServiceName = "e03010010-service:searchRacer";
            var sInDataSet   = "";
            var sOutDataSet  = "dsOutSRacer=dsOutSRacer";
        
            fce_AddParam(Trim("NM_KOR       "), sRacerNm);            
            http.sync = true;
            fce_SendTransaction(sServiceName, sInDataSet, sOutDataSet, "", false);
            http.sync = false;
        
            var sRelaRacerNo = dsOutSRacer.GetColumn(dsOutSRacer.currow, "RACER_NO");
            var sRelaRacerNm = dsOutSRacer.GetColumn(dsOutSRacer.currow, "NM_KOR");
            
            var objTarget   = dsOutAppoExercOrgan;    
            var objSource   = dsOutArrangeRacer;
            var nRowTarget  = dsOutAppoExercOrgan.rowposition;
            var nRowSource  = "";
            
            //검색결과가 없거나 1건 이상이라면 선수검색창을 보여줌.
            if ( dsOutSRacer.GetRowCount() == 1 ) {   
                for ( i = 0; i < dsOutArrangeRacer.GetRowCount(); i++ ) {
                    // 등록번호가 같은 선수정보를 가져온다.
                    if ( dsOutSRacer.GetColumn(0, "RACER_NO") == dsOutArrangeRacer.GetColumn(i, "RACER_NO")){
                        nRowSource = i;
                    }
                }
                if(nRowSource == "") {
                    fnc_Message(SNIS_BOA_C009,"N",sRacerNm);
                    objTarget.SetColumn(nRow, "NM_KOR", varOldValue);  
                }else{
                    MoveRacerAllocation(objTarget, nRowTarget, objSource, nRowSource);
                }
            }else{
                fnc_Message(SNIS_BOA_C009,"N",sRacerNm);
                objTarget.SetColumn(nRow, "NM_KOR", varOldValue);  
            }
        }
	//}
}

//  선수 동시선택 방지
function grdExercOrgan_OnEnterEdit(obj,nRow,nCell,nPivotIndex)
{
	grdExercOrgan.SetEditSel(0,-1);
}

function btnEquip_OnClick(obj)
{
	fcSearchEquip(obj);
}

function fcRacerDrag(obj,objDragObj,objDataObj,nPosX,nPosY,varKeyState,nRow,nCell,nPivotIndex)
{
    var dataObj = CreateDataObject();
	dataObj.SetData("CF_TEXT", obj.ID);
	
	if ( obj.IsAboveSel() ) return dataObj;	
}

function fcRacerDrop(obj,objDragObj,objDataObj,nPosX,nPosY,varKeyState,nRow,nCell,nPivotIndex)
{
	if ( objDataObj.GetData("CF_TEXT") == "grdArrangeRacer" ) // MultiLine Grid 에서 온경우
	{
        if ( nRow < 0 ) return;
        MoveRacerAllocation(dsOutAppoExercOrgan, nRow, dsOutArrangeRacer, dsOutArrangeRacer.currow);
        dsOutAppoExercOrgan.row = nRow;

        oLastDs       = dsOutAppoExercOrgan;
        oLastDsRow    = nRow;
        
        return;
	}
    
	if ( objDataObj.GetData("CF_TEXT") == "grdExercOrgan" ) // MultiLine Grid 에서 온경우
	{
    
        if ( nRow < 0 ) {
            dsOutArrangeRacer.AddRow();
            MoveRacerAllocation(dsOutArrangeRacer, dsOutArrangeRacer.currow, dsOutAppoExercOrgan, dsOutAppoExercOrgan.currow);
        } else {
            dsOutArrangeRacerTemp.ClearData();
            dsOutArrangeRacerTemp.AddRow();
            
            MoveRacerAllocation(dsOutArrangeRacerTemp, dsOutArrangeRacerTemp.currow, dsOutAppoExercOrgan, nRow);
            MoveRacerAllocation(dsOutAppoExercOrgan, nRow, dsOutAppoExercOrgan, dsOutAppoExercOrgan.currow);
            MoveRacerAllocation(dsOutAppoExercOrgan, dsOutAppoExercOrgan.currow, dsOutArrangeRacerTemp, dsOutArrangeRacerTemp.currow);
    
            oLastDs         = dsOutAppoExercOrgan;
            oLastDsRow      = nRow;
        }
    }
}

function fcSetRacerList() {
    var nCount = dsOutArrangeRacer.GetRowCount() - 1;
    for ( var i = nCount; i >= 0; i-- ) {
        var nRow = fnc_GetExistValue(dsOutAppoExercOrgan, "RACER_NO", dsOutArrangeRacer.GetColumn(i, "RACER_NO"));
        if ( nRow > -1 ) dsOutArrangeRacer.DeleteRow(i);
    }
}
]]></Script>
</Window>