<?xml version="1.0" encoding="euc-kr"?>
<Window>
	<Form Height="846" Id="E02030030" Left="8" OnKeyDown="fcHotKey" OnLoadCompleted="fcFormLoadSetting" OnUnloadCompleted="fcFormUnloadProcess" PidAttrib="7" Title="선수주선" Top="8" Ver="1.0" Width="1270" WorkArea="true">
		<Datasets>
			<Dataset DataSetType="Dataset" Id="dsInComCd">
				<Contents>
					<colinfo id="DSNAME" size="20" type="STRING"/>
					<colinfo id="CD_GRP_ID" size="6" type="STRING"/>
					<colinfo id="QUERY_ID" size="256" type="STRING"/>
					<colinfo id="DESCRIPTION" size="256" type="STRING"/>
					<colinfo id="ALL_YN" size="1" type="STRING"/>
					<record>
						<ALL_YN></ALL_YN>
						<CD_GRP_ID>E00107</CD_GRP_ID>
						<DESCRIPTION>분기코드</DESCRIPTION>
						<DSNAME>dsOutSQurt</DSNAME>
						<QUERY_ID></QUERY_ID>
					</record>
					<record>
						<ALL_YN></ALL_YN>
						<CD_GRP_ID>E00024</CD_GRP_ID>
						<DESCRIPTION>출신지</DESCRIPTION>
						<DSNAME>dsOutNatvPlac</DSNAME>
						<QUERY_ID></QUERY_ID>
					</record>
					<record>
						<ALL_YN></ALL_YN>
						<CD_GRP_ID>E00006</CD_GRP_ID>
						<DESCRIPTION>경정장코드</DESCRIPTION>
						<DSNAME>dsOutMbr</DSNAME>
						<QUERY_ID></QUERY_ID>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutSStndYear">
				<Contents>
					<colinfo id="STND_YEAR" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutRacerArrange" OnColumnChanged="dsOutRacerArrange_OnColumnChanged">
				<Contents></Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutSRaceTms">
				<Contents>
					<colinfo id="Tms" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutSQurt">
				<Contents>
					<colinfo id="GRP_CD" size="256" type="STRING"/>
					<colinfo id="GRP_NM" size="256" type="STRING"/>
					<colinfo id="CD" size="256" type="STRING"/>
					<colinfo id="CD_NM" size="256" type="STRING"/>
					<colinfo id="RMK" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutRaceDayOrd"></Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutNatvPlac">
				<Contents>
					<colinfo id="GRP_CD" size="256" type="STRING"/>
					<colinfo id="GRP_NM" size="256" type="STRING"/>
					<colinfo id="CD" size="256" type="STRING"/>
					<colinfo id="CD_NM" size="256" type="STRING"/>
					<colinfo id="RMK" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutRacerArrangeDetail">
				<Contents></Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutCurTms"></Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutTemp"></Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutRacer"></Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutMbr">
				<Contents>
					<colinfo id="GRP_CD" size="256" type="STRING"/>
					<colinfo id="GRP_NM" size="256" type="STRING"/>
					<colinfo id="CD" size="256" type="STRING"/>
					<colinfo id="CD_NM" size="256" type="STRING"/>
					<colinfo id="RMK" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutOrgan">
				<Contents></Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutRacerArrangeStnd">
				<Contents>
					<colinfo id="CFRNT_CD" size="255" type="STRING"/>
					<colinfo id="SEQ" size="255" type="STRING"/>
					<colinfo id="RACER_GRD_CD" size="255" type="STRING"/>
					<colinfo id="RACER_CNT" size="255" type="STRING"/>
					<colinfo id="SELT_STND_CD" size="255" type="STRING"/>
					<colinfo id="INST_ID" size="255" type="STRING"/>
					<colinfo id="INST_DTM" size="255" type="STRING"/>
					<colinfo id="UPDT_ID" size="255" type="STRING"/>
					<colinfo id="UPDT_DTM" size="255" type="STRING"/>
					<colinfo id="chk" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsTempArrange"></Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutArrangeList">
				<Contents>
					<colinfo id="STR" size="256" type="STRING"/>
					<colinfo id="TT" size="256" type="STRING"/>
					<colinfo id="A1" size="256" type="STRING"/>
					<colinfo id="A2" size="256" type="STRING"/>
					<colinfo id="B1" size="256" type="STRING"/>
					<colinfo id="B2" size="256" type="STRING"/>
					<colinfo id="RMK" size="256" type="STRING"/>
					<colinfo id="SN" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutArrangeNew">
				<Contents>
					<colinfo id="STR" size="256" type="STRING"/>
					<colinfo id="TOT" size="256" type="STRING"/>
					<colinfo id="TOT2" size="256" type="STRING"/>
					<colinfo id="RMK" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutArrangeNameList">
				<Contents>
					<colinfo id="RACER_GRD_CD" size="256" type="STRING"/>
					<colinfo id="CNT" size="256" type="STRING"/>
					<colinfo id="STR" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutArrangeDouble">
				<Contents>
					<colinfo id="DAYORD" size="256" type="STRING"/>
					<colinfo id="CNT" size="256" type="STRING"/>
					<colinfo id="A1" size="256" type="STRING"/>
					<colinfo id="A2" size="256" type="STRING"/>
					<colinfo id="B1" size="256" type="STRING"/>
					<colinfo id="B2" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutRacerEsc">
				<Contents>
					<colinfo id="NM_KOR" size="256" type="STRING"/>
					<colinfo id="RACER_GRD_CD" size="256" type="STRING"/>
					<colinfo id="CD_NM" size="256" type="STRING"/>
					<colinfo id="SANC_RSN" size="256" type="STRING"/>
					<colinfo id="RMK" size="256" type="STRING"/>
					<colinfo id="SEQ" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutRacerIjry">
				<Contents>
					<colinfo id="NM_KOR" size="256" type="STRING"/>
					<colinfo id="RACER_GRD_CD" size="256" type="STRING"/>
					<colinfo id="IJRY_STAT" size="256" type="STRING"/>
					<colinfo id="RMK" size="256" type="STRING"/>
					<colinfo id="SEQ" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutRacerLater">
				<Contents>
					<colinfo id="NM_KOR" size="256" type="STRING"/>
					<colinfo id="RACER_PERIO_NO" size="256" type="STRING"/>
					<colinfo id="SANC_RSN" size="256" type="STRING"/>
					<colinfo id="RMK" size="256" type="STRING"/>
					<colinfo id="SEQ" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutRacerPerioNoStr">
				<Contents>
					<colinfo id="STR" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutNewRacerNoStr">
				<Contents>
					<colinfo id="STR" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutTmsQurt">
				<Contents>
					<colinfo id="QURTSTR" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutArrangeRacer"></Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutStrStndYear">
				<Contents>
					<colinfo id="STND_YEAR" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutEndStndYear">
				<Contents>
					<colinfo id="STND_YEAR" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutStrMbr">
				<Contents>
					<colinfo id="GRP_CD" size="256" type="STRING"/>
					<colinfo id="GRP_NM" size="256" type="STRING"/>
					<colinfo id="CD" size="256" type="STRING"/>
					<colinfo id="CD_NM" size="256" type="STRING"/>
					<colinfo id="RMK" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutEndMbr">
				<Contents>
					<colinfo id="GRP_CD" size="256" type="STRING"/>
					<colinfo id="GRP_NM" size="256" type="STRING"/>
					<colinfo id="CD" size="256" type="STRING"/>
					<colinfo id="CD_NM" size="256" type="STRING"/>
					<colinfo id="RMK" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutStrTms">
				<Contents>
					<colinfo id="Tms" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutEndTms">
				<Contents>
					<colinfo id="Tms" size="256" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsOutPrintOption">
				<Contents>
					<colinfo id="NAME" size="256" type="STRING"/>
					<colinfo id="VALUE" size="256" type="STRING"/>
					<record>
						<NAME>전체</NAME>
						<VALUE>001</VALUE>
					</record>
					<record>
						<NAME>참가</NAME>
						<VALUE>002</VALUE>
					</record>
					<record>
						<NAME>불참</NAME>
						<VALUE>003</VALUE>
					</record>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="dsPrintRacerList"></Dataset>
			<Dataset DataSetType="Dataset" Id="dsExcl"></Dataset>
			<Dataset DataSetType="Dataset" Id="dsOnline"></Dataset>
		</Datasets>
		<Shape BKColor="user2" Bottom="90" Height="28" Id="Shape4" Left="6" LineColor="user3" Right="1264" RoundHeight="5" RoundUnit="Pixel" RoundWidth="5" TabOrder="13" Top="62" Type="RoundRect" Width="1258"></Shape>
		<Image Height="20" Id="imgFormTitle" ImageID="m_titleblet" Left="8" TabOrder="4" Top="8" Width="17"></Image>
		<Static Height="22" Id="stFormTitle" Left="30" Style="snis_m_title" TabOrder="2" Text="조회조건" Top="6" VAlign="Middle" Width="132"></Static>
		<Shape BKColor="user0" Bottom="58" Height="28" Id="Shape0" Left="6" LineColor="user1" Right="1264" RoundHeight="5" RoundUnit="Pixel" RoundWidth="5" TabOrder="1" Top="30" Type="RoundRect" Width="1258"></Shape>
		<Static Align="Right" Height="20" Id="Static6" Left="12" Style="snis_if_lable" TabOrder="3" Text="년도" Top="34" VAlign="Middle" Width="36"></Static>
		<Div Height="20" Id="divBtnLst" Left="934" TabOrder="5" Text="Div0" Top="6" Url="common::comButtonType.xml" Visible="FALSE" Width="330">
			<Contents></Contents>
		</Div>
		<Static Height="20" Id="Static20" Left="24" Style="snis_m_stitle" TabOrder="6" Text="선수" Top="96" VAlign="Middle" Width="34"></Static>
		<Shape BKColor="#ff8500" Bottom="108" Height="6" Id="Shape2" Left="12" LineKind="Vertical" LineWidth="0" Right="18" RoundHeight="10" RoundWidth="10" TabOrder="7" Top="102" Type="Ellipse" Width="6"></Shape>
		<Combo Border="Flat" BorderColor="user1" CodeColumn="STND_YEAR" DataColumn="STND_YEAR" Height="20" Id="cboSStndYear" InnerDataset="dsOutSStndYear" Left="48" OnChanged="cboSStndYear_OnChanged" Style="snis_m_input01" TabOrder="8" Top="33" Width="62"></Combo>
		<Div BKColor="user0" Height="22" Id="divSearch" Left="610" TabOrder="9" Text="Div0" Top="34" Url="common::comButtonSearch.xml" Width="50">
			<Contents></Contents>
		</Div>
		<Static Align="Right" Height="20" Id="Static0" Left="284" Style="snis_if_lable" TabOrder="10" Text="분기" Top="34" VAlign="Middle" Width="52"></Static>
		<Combo Border="Flat" BorderColor="user1" CodeColumn="CD" DataColumn="CD_NM" Height="20" Id="cboSQurt" InnerDataset="dsOutSQurt" Left="338" OnChanged="cboSStndYear_OnChanged" Style="snis_m_input01" TabOrder="11" Top="33" Width="62"></Combo>
		<Combo Border="Flat" CodeColumn="Tms" DataColumn="Tms" Height="20" Id="cboSRaceTms" InnerDataset="dsOutSRaceTms" Left="74" OnChanged="cboSRaceTms_OnChanged" Style="snis_if_input01" TabOrder="12" Top="65" Width="70"></Combo>
		<Static Align="Right" Border="Flat" Height="20" Id="Static19" Left="10" Style="snis_m_lable" TabOrder="14" Text="회&#32;&#32;&#32;&#32;&#32;&#32;차" Top="66" VAlign="Middle" Width="62"></Static>
		<Button Align="Left" ButtonStyle="TRUE" Height="20" Id="btnArrangeCmpl" ImageID="btn_txt_04" Left="908" LeftMargin="15" OnClick="fcSaveEnd" Style="snis_btn" TabOrder="15" Text="주선완료" Top="6" Transparent="TRUE" Width="74"></Button>
		<Button Align="Left" ButtonStyle="TRUE" Height="20" Id="btnBacAlloc" ImageID="btn_txt_04" Left="832" LeftMargin="15" OnClick="fcSaveBacAlloc" Style="snis_btn" TabOrder="16" Text="기본배정" Top="6" Transparent="TRUE" Width="74"></Button>
		<Static Align="Right" Height="20" Id="Static13" Left="114" Style="snis_if_lable" TabOrder="18" Text="경정장" Top="34" VAlign="Middle" Width="52"></Static>
		<Combo Border="Flat" BorderColor="user1" CodeColumn="CD" DataColumn="CD_NM" Height="20" Id="cboSMbr" InnerDataset="dsOutMbr" Left="168" OnChanged="cboSStndYear_OnChanged" Style="snis_m_input01" TabOrder="17" Top="33" Width="121"></Combo>
		<Button Align="Left" ButtonStyle="TRUE" Height="20" Id="btnArrange" ImageID="btn_txt_04" Left="146" LeftMargin="15" OnClick="fcSearchRacerArrangeStnd" Style="snis_btn" TabOrder="19" Text="선수추출" Top="66" Transparent="TRUE" Width="74"></Button>
		<Combo Border="Flat" CodeColumn="Tms" DataColumn="Tms" Height="20" Id="cboSStrTms" InnerDataset="dsOutSRaceTms" Left="454" Style="snis_if_input01" TabOrder="20" Top="33" Width="70"></Combo>
		<Static Align="Right" Height="20" Id="Static1" Left="398" Style="snis_if_lable" TabOrder="21" Text="회차" Top="34" VAlign="Middle" Width="52"></Static>
		<Combo Border="Flat" CodeColumn="Tms" DataColumn="Tms" Height="20" Id="cboSEndTms" InnerDataset="dsOutSRaceTms" Left="535" Style="snis_if_input01" TabOrder="22" Top="33" Width="70"></Combo>
		<Static Align="Right" Height="20" Id="Static2" Left="524" Style="snis_if_lable" TabOrder="23" Text="~" Top="34" VAlign="Middle" Width="10"></Static>
		<Combo Border="Flat" CodeColumn="STND_YEAR" DataColumn="STND_YEAR" Height="20" Id="cboStrStndYear" InnerDataset="dsOutSStndYear" Left="261" OnChanged="cboStrStndYear_OnChanged" Style="snis_if_input01" TabOrder="25" Top="65" Width="56"></Combo>
		<Combo Border="Flat" BorderColor="user1" CodeColumn="CD" DataColumn="CD_NM" Height="20" Id="cboStrMbr" INDEX="0" InnerDataset="dsOutStrMbr" Left="356" OnChanged="cboStrStndYear_OnChanged" Style="snis_m_input01" TabOrder="28" Top="65" Width="84"></Combo>
		<Combo Border="Flat" CodeColumn="Tms" DataColumn="Tms" Height="20" Id="cboStrTms" InnerDataset="dsOutStrTms" Left="441" OnChanged="cboStrTms_OnChanged" Style="snis_if_input01" TabOrder="26" Top="65" Width="60"></Combo>
		<Calendar Border="Flat" Height="20" Id="calStrDt" Left="518" SaturdayTextColor="blue" Style="snis_m_input01" SundayTextColor="red" TabOrder="31" Top="66" Width="84"></Calendar>
		<Static Align="Center" Height="20" Id="Static39" Left="604" Style="snis_txt" TabOrder="24" Text="~" Top="68" VAlign="Middle" Width="16"></Static>
		<Combo Border="Flat" CodeColumn="STND_YEAR" DataColumn="STND_YEAR" Height="20" Id="cboEndStndYear" InnerDataset="dsOutSStndYear" Left="659" OnChanged="cboEndStndYear_OnChanged" Style="snis_if_input01" TabOrder="29" Top="65" Width="56"></Combo>
		<Combo Border="Flat" BorderColor="user1" CodeColumn="CD" DataColumn="CD_NM" Height="20" Id="cboEndMbr" INDEX="0" InnerDataset="dsOutEndMbr" Left="754" OnChanged="cboEndStndYear_OnChanged" Style="snis_m_input01" TabOrder="30" Top="65" Width="84"></Combo>
		<Combo Border="Flat" CodeColumn="Tms" DataColumn="Tms" Height="20" Id="cboEndTms" InnerDataset="dsOutEndTms" Left="839" Style="snis_if_input01" TabOrder="27" Top="65" Width="60"></Combo>
		<Calendar Border="Flat" Height="20" Id="calEndDt" Left="916" SaturdayTextColor="blue" Style="snis_m_input01" SundayTextColor="red" TabOrder="32" Top="66" Width="84"></Calendar>
		<Static Align="Right" Border="Flat" Height="20" Id="Static3" Left="224" Style="snis_m_lable" TabOrder="33" Text="년도" Top="66" VAlign="Middle" Width="36"></Static>
		<Static Align="Right" Border="Flat" Height="20" Id="Static4" Left="318" Style="snis_m_lable" TabOrder="34" Text="경정장" Top="66" VAlign="Middle" Width="38"></Static>
		<Static Align="Right" Border="Flat" Height="20" Id="Static5" Left="502" Style="snis_m_lable" TabOrder="35" Text="회" Top="66" VAlign="Middle" Width="14"></Static>
		<Static Align="Right" Border="Flat" Height="20" Id="Static7" Left="622" Style="snis_m_lable" TabOrder="36" Text="년도" Top="66" VAlign="Middle" Width="36"></Static>
		<Static Align="Right" Border="Flat" Height="20" Id="Static8" Left="716" Style="snis_m_lable" TabOrder="37" Text="경정장" Top="66" VAlign="Middle" Width="38"></Static>
		<Static Align="Right" Border="Flat" Height="20" Id="Static9" Left="900" Style="snis_m_lable" TabOrder="38" Text="회" Top="66" VAlign="Middle" Width="14"></Static>
		<Button Cursor="HAND" Height="20" Id="btnEnd" ImageID="btn_close" Left="1212" OnClick="fcEnd" TabOrder="42" Text="종료" Top="6" Transparent="TRUE" Width="50"></Button>
		<Image Height="20" Id="ImgSpace" ImageID="m_vline" Left="1199" TabOrder="41" Top="6" Width="12"></Image>
		<Button Cursor="HAND" Height="20" Id="btnSave" ImageID="btn_Save" Left="1044" OnClick="fcSave" TabOrder="40" Text="저장" Top="6" Transparent="TRUE" Width="50"></Button>
		<Button Cursor="HAND" Height="20" Id="btnCancel" ImageID="btn_clear_c" Left="984" OnClick="fcInit" TabOrder="39" Text="취소" Top="6" Transparent="TRUE" Width="58"></Button>
		<Button Cursor="HAND" Height="20" Id="btnToExcel" ImageID="btn_excel" Left="1096" OnClick="fcToExcel" TabOrder="43" Text="엑셀" Top="6" Transparent="TRUE" Width="50"></Button>
		<Button Cursor="HAND" Height="20" Id="btnPrint" ImageID="btn_print" Left="1148" OnClick="fcPrint" TabOrder="44" Text="인쇄" Top="6" Transparent="TRUE" Width="50"></Button>
		<Static Align="Right" Height="20" Id="Static10" Left="982" Style="snis_if_lable" TabOrder="45" Text="인쇄선수정보" Top="35" VAlign="Middle" Width="102"></Static>
		<Combo Border="Flat" BorderColor="user1" CodeColumn="VALUE" DataColumn="NAME" Height="20" Id="cboPrintOption" INDEX="0" InnerDataset="dsOutPrintOption" Left="1084" Style="snis_m_input01" TabOrder="46" Top="34" Width="62"></Combo>
		<Button Cursor="HAND" Height="20" Id="btnPrn2" ImageID="btn_print" Left="1148" OnClick="fcPrint2" TabOrder="47" Text="인쇄" Top="34" Transparent="TRUE" Width="50"></Button>
		<Shape BKColor="#646eff" Bottom="112" Height="14" Id="Shape1" Left="64" LineColor="user1" Right="78" RoundHeight="5" RoundUnit="Pixel" RoundWidth="5" TabOrder="48" Top="98" Type="RoundRect" Width="14"></Shape>
		<Shape BKColor="#a164a1" Bottom="112" Height="14" Id="Shape3" Left="292" LineColor="user1" Right="306" RoundHeight="5" RoundUnit="Pixel" RoundWidth="5" TabOrder="49" Top="98" Type="RoundRect" Width="14"></Shape>
		<Shape BKColor="#957745" Bottom="112" Height="14" Id="Shape5" Left="178" LineColor="user1" Right="192" RoundHeight="5" RoundUnit="Pixel" RoundWidth="5" TabOrder="50" Top="98" Type="RoundRect" Width="14"></Shape>
		<Static Font="굴림,9" Height="20" Id="Static11" Left="78" Style="snis_m_stitle" TabOrder="51" Text="(-)제재주선제외" Top="96" VAlign="Middle" Width="92"></Static>
		<Static Font="굴림,9" Height="20" Id="Static12" Left="192" Style="snis_m_stitle" TabOrder="52" Text="(#)성적주선제외" Top="96" VAlign="Middle" Width="88"></Static>
		<Static Font="굴림,9" Height="20" Id="Static14" Left="306" Style="snis_m_stitle" TabOrder="53" Text="(*)기타주선제외" Top="96" VAlign="Middle" Width="88"></Static>
	</Form>
	<Script><![CDATA[/***************************************************************************************************
*   Form Common Script                                                                             *
*     현재 총 100 컬럼임 되도록 100 컬럼 안으로 코딩을 하세요                                      *
123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789 1234567890
***************************************************************************************************/

/***************************************************************************************************
*                                         공통 Script Include                                      *
***************************************************************************************************/
#include "lib::boa_common_script.js";
#include "lib::boa_app_script.js";

/***************************************************************************************************
*                                          화면 변수 선언부                                        *
***************************************************************************************************/
var sFormId       = 'E02030030';
var sBUTTONLIST   = 'TTFTTT';                          //공통기능정의(버튼순으로 T or F)
var sUSERAUTH     = '';                                //사용자별 프로그램 사용 권한
var sFORMCAPTION  = '';                                //Form의 Title 정보
var sFORMLOCATION = '';                                //Form의 Location 정보
var sUSERLAVEL    = '';                                //Form의 사용  Level
var vREVOBJ       = Array(9);                          //결과값 처리를 위한 오브젝트 
var sGRDTIT       = "";                                //그리드 제목
var sCUROBJ       ;                                    //현재 LOST FOCUS 오브젝트
var F_sSetCellProp = "";
var F_asColumnList = Array();

var Fg_ObjNm = "";
/***************************************************************************************************
*                                         공통 Event 처리 부분                                     *
***************************************************************************************************/
/*-------------------------------------------------------------------------------------------------+
>>  최초 화면 Load時 처리 할 사항
+-------------------------------------------------------------------------------------------------*/
function fcFormLoadSetting(obj) {
	//화면환경 설정
	sFORMCAPTION  = obj.Title;
	sFORMLOCATION = "";
	
	//화면 정보 Display 및 Button 권한 설정
	sBUTTONLIST   = 'T' + sInpt + 'FTTT';
	if ( sInpt == "T" ) {
        btnSave.Visible        = true;
        btnBacAlloc.Visible    = true;
        btnArrangeCmpl.Visible = true;
	} else {
        btnSave.Visible        = false;
        btnBacAlloc.Visible    = false;
        btnArrangeCmpl.Visible = false;
	}
	
	fnc_FormLoadSetting(obj, sFORMCAPTION, sFORMLOCATION, sBUTTONLIST, sUSERAUTH);
	
	//초기 화면 BK Color설정 
	fnc_SetBKColor(this);

    //년도조회
    fce_SetStndYear(dsOutSStndYear, toInteger(fce_GetSysdate("YYYY")));
    cboSStndYear.Index = 0;
    cboStrStndYear.Index = 0;
    cboEndStndYear.Index = 0;

	//공통코드 조회
	fce_GetComboDs(dsInComCd);
}

/*-------------------------------------------------------------------------------------------------+
>>  최초 화면 Load時 처리 할 사항
+-------------------------------------------------------------------------------------------------*/
function fcFormUnloadProcess(obj) {
	//자료 변경 여부를 체크하고자 하는  DataSet Object를 넘긴다.
	var sDataset = "dsOutRacerArrange";
	if ( !fnc_FormUnloadCheck(sDataset , sFormId) ) return false;
}

/*-------------------------------------------------------------------------------------------------+
>>  단축키 처리(Form KeyDown)
+-------------------------------------------------------------------------------------------------*/
function fcHotKey(obj,objSenderObj,nChar,bShift,bControl,bAlt,nLLParam,nHLParam) {

	//Return Key Press時 Next Component focus
	if ( nChar == 13 ) {
		var oFocusComponent = GetNextComponent(true);
		oFocusComponent.setfocus();
		return;
	}

	//Control Key가 눌려져 있다면 단축키 처리
	//if (bControl) fnc_HotKey(this, nChar);
}

/***************************************************************************************************
*                                      공통 버튼 Event 처리 부분                                   *
***************************************************************************************************/
/*-------------------------------------------------------------------------------------------------+
>>  취소 버튼 클릭 時 처리
+-------------------------------------------------------------------------------------------------*/
function fcInit(obj) {
    Destroy("grdRacerArrange");
    dsOutRacerArrange.Clear();
}


/*-------------------------------------------------------------------------------------------------+
>>  조회 버튼 클릭 時 처리
+-------------------------------------------------------------------------------------------------*/
function fcSearchCheck(obj) {

	fcInit(obj);
	return true;
}

function fcSearch(obj) {
    if ( !fcSearchCheck(obj) ) return;

	var sServiceName = "e02030030-service:searchRacerArrange";
    var sInDataSet   = "";
    var sOutDataSet  = "dsOutRaceDayOrd=dsOutRaceDayOrd "
                     + "dsOutRacerArrange=dsOutRacerArrange "
                     + "dsExcl=dsExcl "
                     + "dsOnline=dsOnline ";
    
	fce_AddParam(Trim("STND_YEAR"), cboSStndYear.Value);
	fce_AddParam(Trim("MBR_CD"   ), cboSMbr.Value     );
	fce_AddParam(Trim("QURT_CD"  ), cboSQurt.Value    );
	fce_AddParam(Trim("STR_TMS"  ), cboSStrTms.Value  );
	fce_AddParam(Trim("END_TMS"  ), cboSEndTms.Value  );
	fce_AddParam(Trim("SRACE_TMS"), cboSRaceTms.Value  );
	
	dsOutRacerArrange.FireEvent = true;
	fce_SendTransaction(sServiceName, sInDataSet, sOutDataSet, "fcCallBack");
}


/*-------------------------------------------------------------------------------------------------+
>>  조회 버튼 클릭 時 처리
+-------------------------------------------------------------------------------------------------*/
function fcSearchRacerArrangeStndCheck(obj) {
    if ( dsOutRacerArrange.GetRowCount() == 0 ) {
		fnc_Message(L_COM_ALT_0003, "N");
        return false;
    }
//	fcInit(obj);
	return true;
}

function fcSearchRacerArrangeStnd(obj) {
    if ( !fcSearchRacerArrangeStndCheck(obj) ) return;

	var sServiceName = "e02030030-service:searchRacerArrangeStnd";
    var sInDataSet   = "";
    var sOutDataSet  = "dsOutArrangeRacer=dsOutArrangeRacer ";
    
    var nRow = 0;
    nRow = fnc_GetExistValue(dsOutSRaceTms, "TMS", cboSRaceTms.Value);
	fce_AddParam(Trim("STND_YEAR"), cboSStndYear.Value);
	fce_AddParam(Trim("MBR_CD   "), cboSMbr.Value);
	fce_AddParam(Trim("QURT_CD  "), cboSQurt.Value);
	fce_AddParam(Trim("TMS      "), cboSRaceTms.Value);
	fce_AddParam(Trim("CFRNT_CD "), dsOutSRaceTms.GetColumn(nRow, "CFRNT_CD"));
	fce_AddParam(Trim("STR_DT   "), calStrDt.Value);
	fce_AddParam(Trim("END_DT   "), calEndDt.Value);

	fce_SendTransaction(sServiceName, sInDataSet, sOutDataSet, "fcCallBack");
}

/*-------------------------------------------------------------------------------------------------+
>>  저장 버튼 클릭 時 처리
+-------------------------------------------------------------------------------------------------*/
function fcSaveCheck(obj) {

    if ( dsOutRacerArrange.GetRowCount() == 0 ) {
		fnc_Message(L_COM_ALT_0003, "N");
        return false;
    }

    var nTmsRow        = fnc_GetExistValue(dsOutSRaceTms, "TMS", cboSRaceTms.Value);  // 
    var sState         = dsOutSRaceTms.GetColumn(nTmsRow, "RACE_TMS_STAT_CD");           // 해당 회차 상태
    var sArrangeCmplYn = dsOutSRaceTms.GetColumn(nTmsRow, "ARRANGE_CMPL_YN");            // 해당 회차 주선 완료 여부


    if ( nTmsRow < 0 ) {
		fnc_Message(SNIS_BOA_B005, "N");
		return false;
    }

    if ( sArrangeCmplYn == "Y" ) {
		fnc_Message(SNIS_BOA_B004, "N");
		return false;
    }

    if ( sState >= "020" ) {
//		fnc_Message(SNIS_BOA_B004, "N");
//		return false;
    }

/*
	//변경된 자료가 있는지 체크
	if ( !fnc_DatasetChangeCheck(dsOutRacerArrange       ) )
	{
		//저장 할 자료가 없음
		fnc_Message(SNIS_COM_1006, "N");
		return false;
	}
*/
    dsOutRacer.Clear();
    dsOutRacer.AddColumn("RACER_NO");
    dsOutRacer.AddColumn("EXCL_YN" );
    dsOutRacer.AddColumn("ONLINE_YN" );

    dsOutTemp.Clear();
    dsOutTemp.AddColumn("RACER_NO");
    dsOutTemp.AddColumn("DAY_ORD" );
    dsOutTemp.AddColumn("RACE_ALLOC_CNT" );
    dsOutTemp.AddColumn("RACE_ONLINE_CNT" );
    var sTms = cboSRaceTms.Value;
    
    // 일차수 검색
    var asTmsOrdColumn = Array();
    var nColumn = 0;
    for ( var i = 0; i < dsOutRacerArrange.GetColCount(); i++ ) {
        var sColumnNm = dsOutRacerArrange.GetColID(i);
        if ( indexOf(sColumnNm, "TMS_" + sTms + "_DAY_") > -1 ) {
            asTmsOrdColumn[nColumn] = sColumnNm;
            nColumn++;
        } else {
            if ( nColumn > 0 ) break;
        }
    }
    // 일차수 검색(온라인)
    var asTmsOrdColumnOnline = Array();
    nColumn = 0;
    for ( var i = 0; i < dsOutRacerArrange.GetColCount(); i++ ) {
        var sColumnNm = dsOutRacerArrange.GetColID(i);
        if ( indexOf(sColumnNm, "TMS_" + sTms + "_ONDAY") > -1 ) {
            asTmsOrdColumnOnline[nColumn] = sColumnNm;
            nColumn++;
        } else {
            if ( nColumn > 0 ) break;
        }
    } 
    
    // 일차별 출주수 설정
    var nRow   = 0;
    var nRacer = 0;
    var nCount = 0;
    for ( var i = 0; i < dsOutRacerArrange.GetRowCount(); i++ ) {
        if ( dsOutRacerArrange.GetColumn(i, "chk") == "1" ) {
            
            for ( var j = 0; j < length(asTmsOrdColumn); j++ ) {
                dsOutTemp.AddRow();
                dsOutTemp.SetColumn(nRow, "RACER_NO"      , dsOutRacerArrange.GetColumn(i, "RACER_NO"));
                dsOutTemp.SetColumn(nRow, "DAY_ORD"       , j + 1);
                dsOutTemp.SetColumn(nRow, "RACE_ALLOC_CNT", dsOutRacerArrange.GetColumn(i, asTmsOrdColumn[j]));
                dsOutTemp.SetColumn(nRow, "RACE_ONLINE_CNT", dsOutRacerArrange.GetColumn(i, asTmsOrdColumnOnline[j]));
                nCount += toInteger(dsOutRacerArrange.GetColumn(i, asTmsOrdColumn[j]));
                nRow++;
            }
            
            dsOutRacer.AddRow();
            dsOutRacer.SetColumn(nRacer, "RACER_NO", dsOutRacerArrange.GetColumn(i, "RACER_NO"));

            if (dsOutRacerArrange.GetColumn(i, "EXCL_YN") == "1" ) dsOutRacer.SetColumn(nRacer, "EXCL_YN", "Y");
            else 												   dsOutRacer.SetColumn(nRacer, "EXCL_YN", "N");

            if (dsOutRacerArrange.GetColumn(i, "ONLINE_YN") == "1" ) dsOutRacer.SetColumn(nRacer, "ONLINE_YN", "Y");
            else 												     dsOutRacer.SetColumn(nRacer, "ONLINE_YN", "N");

            nRacer++;
        }
    }

    if ( nRacer != 72 ) {
        if ( !fnc_Message(SNIS_BOA_B002, "Y", "72") ) {;
            return false;
        }
    }
    
    if ( nCount != 180 ) {
        if ( !fnc_Message(SNIS_BOA_B003, "Y", "180") ) {;
            return false;
        }
    }
 	return true;
}

function fcSave(obj) {

    if ( !fcSaveCheck(obj) ) return;

	var sServiceName = "e02030030-service:saveRacerArrange";
    var sInDataSet   = "dsOutRacerArrange=dsOutTemp "
                     + "dsOutRacer=dsOutRacer ";
    var sOutDataSet  = "dsOutRaceDayOrd=dsOutRaceDayOrd "
                     + "dsOutRacerArrange=dsOutRacerArrange "
                     + "dsExcl=dsExcl "
                     + "dsOnline=dsOnline ";
    
	fce_AddParam(Trim("STND_YEAR"), cboSStndYear.Value);
	fce_AddParam(Trim("MBR_CD"   ), cboSMbr.Value     );
	fce_AddParam(Trim("QURT_CD"  ), cboSQurt.Value    );
	fce_AddParam(Trim("STR_TMS"  ), cboSStrTms.Value  );
	fce_AddParam(Trim("END_TMS"  ), cboSEndTms.Value  );
	fce_AddParam(Trim("TMS"      ), cboSRaceTms.Value  );

    var nTmsRow        = fnc_GetExistValue(dsOutSRaceTms, "TMS", cboSRaceTms.Value);  // 
    var sState         = dsOutSRaceTms.GetColumn(nTmsRow, "RACE_TMS_STAT_CD");           // 해당 회차 상태
    var sArrangeCmplYn = dsOutSRaceTms.GetColumn(nTmsRow, "ARRANGE_CMPL_YN");            // 해당 회차 주선 완료 여부
	if ( sState < "010" ) 
        fce_AddParam(Trim("RACE_TMS_STAT_CD"), '010');
    
    
    if ( obj.id = "btnArrangeCmpl" ) {
        fce_AddParam(Trim("ARRANGE_CMPL_YN"), 'Y');
    }
	//dsOutRacerArrange.FireEvent = true;
	fce_SendTransaction(sServiceName, sInDataSet, sOutDataSet, "fcCallBack");
}

/*-------------------------------------------------------------------------------------------------+
>>  주선완료저장 버튼 클릭 時 처리
+-------------------------------------------------------------------------------------------------*/
function fcSaveEndCheck(obj) {
    return true;
}

function fcSaveEnd(obj) {

    if ( !fcSaveEndCheck(obj) ) return;

	var sServiceName = "e02030030-service:saveRacerArrangeEnd";
    var sInDataSet   = "dsOutRacerArrange=dsOutTemp "
                     + "dsOutRacer=dsOutRacer ";
    var sOutDataSet  = "dsOutRaceDayOrd=dsOutRaceDayOrd "
                     + "dsOutRacerArrange=dsOutRacerArrange "
                     + "dsExcl=dsExcl "
                     + "dsOnline=dsOnline ";
    
	fce_AddParam(Trim("STND_YEAR"), cboSStndYear.Value);
	fce_AddParam(Trim("MBR_CD"   ), cboSMbr.Value     );
	fce_AddParam(Trim("QURT_CD"  ), cboSQurt.Value    );
	fce_AddParam(Trim("STR_TMS"  ), cboSStrTms.Value  );
	fce_AddParam(Trim("END_TMS"  ), cboSEndTms.Value  );
	fce_AddParam(Trim("TMS"      ), cboSRaceTms.Value );

    var nTmsRow        = fnc_GetExistValue(dsOutSRaceTms, "TMS", cboSRaceTms.Value);  // 
    var sState         = dsOutSRaceTms.GetColumn(nTmsRow, "RACE_TMS_STAT_CD");           // 해당 회차 상태
    var sArrangeCmplYn = dsOutSRaceTms.GetColumn(nTmsRow, "ARRANGE_CMPL_YN");            // 해당 회차 주선 완료 여부

    if ( sArrangeCmplYn == "Y" ) {
        fce_AddParam(Trim("ARRANGE_CMPL_YN"), 'N');
    } else {
        fce_AddParam(Trim("ARRANGE_CMPL_YN"), 'Y');
    }
    
    if ( sState < "010" ) {
        fce_AddParam(Trim("RACE_TMS_STAT_CD"), '010');
    }
    
	fce_SendTransaction(sServiceName, sInDataSet, sOutDataSet, "fcCallBack");
}

/*-------------------------------------------------------------------------------------------------+
>>  기본배정 저장 버튼 클릭 時 처리
+-------------------------------------------------------------------------------------------------*/
function fcSaveBacAllocCheck(obj) {

	//변경된 자료가 있는지 체크
/*
	if ( !fnc_DatasetChangeCheck(dsOutStndRaceCnt       ) )
	{
		//저장 할 자료가 없음
		fnc_Message(SNIS_COM_1006, "N");
		return false;
	}
*/
	// 필수항목체크
/*	
	oDataSet          = dsOutRacerArrange;
	sMandatoryColID   = "STND_RACE_CNT";
	sMandatoryColName = "기준출주횟수";
	oGrid             = grdRacerArrange;
	if ( fnc_GetMandatoryViolateRow(oDataSet, sMandatoryColID, sMandatoryColName, oGrid) > -1 ) {
	    return false;
	}
*/
    if ( dsOutRacerArrange.GetRowCount() == 0 ) {
		fnc_Message(L_COM_ALT_0003, "N");
        return false;
    }

    dsOutTemp.Clear();
    dsOutTemp.AddColumn("RACER_NO");
    dsOutTemp.AddColumn("RACE_ALLOC_CNT");
    
    for ( var i = 0; i < dsOutRacerArrange.GetRowCount(); i++ ) {
        dsOutTemp.AddRow();
        dsOutTemp.SetColumn(i,"RACER_NO"      , dsOutRacerArrange.GetColumn(i, "RACER_NO"      ));
        dsOutTemp.SetColumn(i,"RACE_ALLOC_CNT", dsOutRacerArrange.GetColumn(i, "RACE_ALLOC_CNT"));
    }

	return true;
}

function fcSaveBacAlloc(obj) {

    if ( !fcSaveBacAllocCheck(obj) ) return;

	var sServiceName = "e02030030-service:saveArrangeBacAlloc";
    var sInDataSet   = "dsOutBacAlloc=dsOutTemp ";
    var sOutDataSet  = "dsOutRaceDayOrd=dsOutRaceDayOrd "
                     + "dsOutRacerArrange=dsOutRacerArrange ";
    
	fce_AddParam(Trim("STND_YEAR"), cboSStndYear.Value);
	fce_AddParam(Trim("MBR_CD"   ), cboSMbr.Value     );
	fce_AddParam(Trim("QURT_CD"  ), cboSQurt.Value    );
	fce_AddParam(Trim("STR_TMS"  ), cboSStrTms.Value  );
	fce_AddParam(Trim("END_TMS"  ), cboSEndTms.Value  );

	fce_SendTransaction(sServiceName, sInDataSet, sOutDataSet, "fcCallBack");
}

/*-------------------------------------------------------------------------------------------------+
>>  엑셀 버튼 클릭 時 처리
+-------------------------------------------------------------------------------------------------*/
function fcToExcel(obj) {
    if ( dsOutRacerArrange.GetRowCount() == 0 ) {
		fnc_Message(L_COM_ALT_0003, "N");
        return;
    }

    fnc_OpenExcelExport("grdRacerArrange");         //입력 첫 항목으로 Focus
}

/*-------------------------------------------------------------------------------------------------+
>>  인쇄 버튼 클릭 時 처리
+-------------------------------------------------------------------------------------------------*/
function fcPrint(obj) {
	var sServiceName = "e02030030-service:searchPrintRacer";
    var sInDataSet   = "";
    var sOutDataSet  = "dsOutArrangeList=dsOutArrangeList ";
        sOutDataSet += "dsOutArrangeNew=dsOutArrangeNew ";
        sOutDataSet += "dsOutArrangeNameList=dsOutArrangeNameList ";
        sOutDataSet += "dsOutArrangeDouble=dsOutArrangeDouble ";
        sOutDataSet += "dsOutRacerEsc=dsOutRacerEsc ";
        sOutDataSet += "dsOutRacerIjry=dsOutRacerIjry ";
        sOutDataSet += "dsOutRacerLater=dsOutRacerLater ";
        sOutDataSet += "dsOutRacerPerioNoStr=dsOutRacerPerioNoStr ";
        sOutDataSet += "dsOutNewRacerNoStr=dsOutNewRacerNoStr ";
        sOutDataSet += "dsOutTmsQurt=dsOutTmsQurt ";
        
	fce_AddParam("STND_YEAR"    , cboSStndYear  .   Value);
	fce_AddParam("MBR_CD"       , cboSMbr       .   Value);
	fce_AddParam("TMS"          , cboSRaceTms   .   Value);

    var nTmsRow = fnc_GetExistValue(dsOutSRaceTms, "TMS", cboSRaceTms.Value);  //
    if ( nTmsRow < dsOutSRaceTms.GetRowCount() - 1 ) nTmsRow = nTmsRow + 1;
    var sStrDt  = dsOutSRaceTms.GetColumn(nTmsRow, "STR_DT");           // 해당 회차 상태
    var sEndDt  = dsOutSRaceTms.GetColumn(nTmsRow, "END_DT");           // 해당 회차 주선 완료 여부
	
	fce_AddParam("STR_DT"       , sStrDt);
	fce_AddParam("END_DT"       , sEndDt);

	fce_SendTransaction(sServiceName, sInDataSet, sOutDataSet, "fcCallBack");
}

function fcPrint2(obj) {        
	if(dsOutRacerArrange.TotalRowCount() == 0)
	{
		fnc_Message(L_COM_CNF_0000, "N", "선수 목록이 없습니다.");
		return;
	}
	dsPrintRacerList.ClearData();
	if(cboPrintOption.Value == '002')
	{
		dsOutRacerArrange.Filter("chk='1'");
		dsPrintRacerList.CopyF(dsOutRacerArrange);
		dsOutRacerArrange.UnFilter();
	}
	else if(cboPrintOption.Value == '003')
	{
		dsOutRacerArrange.Filter("chk!='1'");
		dsPrintRacerList.CopyF(dsOutRacerArrange);
		dsOutRacerArrange.UnFilter();
	}
	else
	{
		dsPrintRacerList.Copy(dsOutRacerArrange);
	}
	
	dsPrintRacerList.Sort("RACER_NO", true);
	for(var i = 0; i < dsPrintRacerList.rowcount; i++)
	{
		dsPrintRacerList.SetColumn(i,"chk",i+1);
	}
		
	var logImgUrl = GBL_REPORT_URL + "log.jpg";
	var sSubUrl   = "";                     //레포트 파일이 있는 서브디렉토리
	var sRptNm    = "e02039030_racer_ready_status.jrf";               //레포트 파일명
	var sDataSet  = "uds_dsoutarrangelist=dsPrintRacerList "; //"UBI 쿼리명, MIP Dataset명"
	
	var sArg      = " IMG_URL="+logImgUrl;
		sArg     += " STND_YEAR="+cboSStndYear.Value;
		sArg     += " TMS="+cboSRaceTms.Value;
		sArg     += " PRINT_OPTION="+cboPrintOption.Value;
		
	var sRptDrct  = 1;                               //출력방향(0 : 수직, 1 : 수평)
	
	fnc_RPTPrint(sSubUrl, sRptNm, sDataSet, sArg, sRptDrct);
}

/*-------------------------------------------------------------------------------------------------+
>>  화면 종료(닫기) 버튼 클릭 時 처리
+-------------------------------------------------------------------------------------------------*/
function fcEnd(obj) {
	//화면 종료
	Close();	
}

/*-------------------------------------------------------------------------------------------------+
>>  행추가 버튼 클릭 時 처리
+-------------------------------------------------------------------------------------------------*/
function fcAddRow(obj) {
	
}

/*-------------------------------------------------------------------------------------------------+
>>  행삭제 버튼 클릭 時 처리
+-------------------------------------------------------------------------------------------------*/
function fcDelRow(obj) {

}

/***************************************************************************************************
*                                      공통 Function 처리 부분                                     *
***************************************************************************************************/
/*-------------------------------------------------------------------------------------------------+
>>  Text Box가 Focus를 받을 때
+-------------------------------------------------------------------------------------------------*/
function fcEditFocus(obj) {
	fnc_EditFocus(obj);
}

/*-------------------------------------------------------------------------------------------------+
>>  그리드 정렬
+-------------------------------------------------------------------------------------------------*/
function fcGridSort(obj,nCell,nX,nY) {
	fnc_GridSort(obj, object(obj.BindDataset), nCell);
}

/*-------------------------------------------------------------------------------------------------+
>>  Help Popup Open
+-------------------------------------------------------------------------------------------------*/
function fcHelpDialoge(obj,nX,nY) {

}

/*-------------------------------------------------------------------------------------------------+
>>  그리드에서 팝업 처리 
+-------------------------------------------------------------------------------------------------*/
function fcGrdOnExpandEdit(objGrd, nRow, nCell, strVal, nPivotIndex){
	
}

/***************************************************************************************************
*                                      사용자 정의  처리 부분                                      *
***************************************************************************************************/
/*-------------------------------------------------------------------------------------------------+
>>  Transaction 후 처리 해야 할 내용!
+-------------------------------------------------------------------------------------------------*/
function fcCallBack(sServiceName, ErrorCode, ErrorMSG) {

	if ( !fnc_Result(ErrorCode, ErrorMSG) ) return;
	
	// 공통코드 조회시
	if ( sServiceName == "common-service:searchCode" ) {
        dsOutStrMbr.Copy(dsOutMbr);
        dsOutEndMbr.Copy(dsOutMbr);
	
        cboSMbr.Index = 0;
        cboSMbr.Value = fce_GetUserInfo("MBR_CD");
	
        cboSQurt.Index = 0;
        if ( cboSStndYear.Value == fce_GetCurRaceInfo("STND_YEAR") ) {
            var nIndexRow = fnc_GetExistValue(dsOutSQurt, "CD", fce_GetCurRaceInfo("QURT_CD"));
            if ( nIndexRow > -1 ) cboSQurt.Index = nIndexRow;
        }
        
        fce_GetRaceTms(cboSStndYear.Value, cboSMbr.Value, cboSQurt.Value, "dsOutSRaceTms");
        Fg_ObjNm = "START";
		return;
	}

	// 회차 리스트 조회시
	if ( sServiceName == "common_race-service:searchRaceTms" ) {
        if ( Fg_ObjNm == "cboStrStndYear" || Fg_ObjNm == "cboStrMbr" ) {
            cboStrTms.Index = dsOutStrTms.GetRowCount() - 1;
            cboStrTms_OnChanged();
            Fg_ObjNm = "";
            return;
        }
        
        if ( Fg_ObjNm == "cboEndStndYear" || Fg_ObjNm == "cboEndMbr" ) {
            cboEndTms.Index = 0;
            cboEndTms_OnChanged();
            Fg_ObjNm = "";
            return;
        }
        
        cboSRaceTms.Value = dsOutSRaceTms.GetColumn(0, "TMS");
        if ( cboSStndYear.Value == fce_GetCurRaceInfo("STND_YEAR") ) {
            var nIndexRow = fnc_GetExistValue(dsOutSRaceTms, "TMS", fce_GetCurRaceInfo("TMS"));
            if ( nIndexRow > -1 ) cboSRaceTms.Index = nIndexRow;
        }

        cboSStrTms.Value = dsOutSRaceTms.GetColumn(dsOutSRaceTms.GetRowCount() - 1, "TMS");
        cboSEndTms.Value = dsOutSRaceTms.GetColumn(0                              , "TMS");

        cboSRaceTms_OnChanged();

        if ( Fg_ObjNm == "START" ) {
            dsOutStrTms.Copy(dsOutSRaceTms);
            cboStrTms.Index = dsOutStrTms.GetRowCount() - 1;
            cboStrTms_OnChanged();
            dsOutEndTms.Copy(dsOutSRaceTms);
            cboEndTms.Index = 0;
            cboEndTms_OnChanged();
            Fg_ObjNm = "";
            return;
        }

		return;
	}

	// 조회 후
	if ( sServiceName == "e02030030-service:searchRacerArrange" ) {
        dsOutRacerArrange.AddColumn("chk");
        dsOutRacerArrange.AddColumn("ArrangeEnableYn");
        dsOutRacerArrange.AddColumn("EXCL_YN");
        dsOutRacerArrange.AddColumn("ONLINE_YN");

        fcCreateGrid();
		dsOutRacerArrange.FireEvent = false;
        cboSRaceTms_OnChanged();
        
		return;
	}

	// 주선대상 조회 후
	if ( sServiceName == "e02030030-service:searchRacerArrangeStnd" ) {
        fcSetArrange();
		return;
	}

	// 저장 후
	if ( sServiceName == "e02030030-service:saveRacerArrange" ) {
		fcSearch();
		/*
        dsOutRacerArrange.AddColumn("chk");
        dsOutRacerArrange.AddColumn("ArrangeEnableYn");
        dsOutRacerArrange.AddColumn("EXCL_YN");
        dsOutRacerArrange.AddColumn("ONLINE_YN");
        fcCreateGrid();
		dsOutRacerArrange.FireEvent = false;
        cboSRaceTms_OnChanged();
        */
		return;
	}
	
	// 저장 후
	if ( sServiceName == "e02030030-service:saveRacerArrangeEnd" ) {
        var nTmsRow        = fnc_GetExistValue(dsOutSRaceTms, "TMS", cboSRaceTms.Value);  // 
        var sState         = dsOutSRaceTms.GetColumn(nTmsRow, "RACE_TMS_STAT_CD");           // 해당 회차 상태
        var sArrangeCmplYn = dsOutSRaceTms.GetColumn(nTmsRow, "ARRANGE_CMPL_YN");            // 해당 회차 주선 완료 여부

        if ( sArrangeCmplYn == "Y" ) {
            dsOutSRaceTms.SetColumn(nTmsRow, "ARRANGE_CMPL_YN", "N");
        } else {
            dsOutSRaceTms.SetColumn(nTmsRow, "ARRANGE_CMPL_YN", "Y");
        }
        /*
        dsOutRacerArrange.AddColumn("chk");
        dsOutRacerArrange.AddColumn("ArrangeEnableYn");
        dsOutRacerArrange.AddColumn("EXCL_YN");
        dsOutRacerArrange.AddColumn("ONLINE_YN");
        
        fcCreateGrid();
        cboSRaceTms_OnChanged();
		*/
		fcSearch();
		return;
	}
	
	// 기본배정 저장 후
	if ( sServiceName == "e02030030-service:saveBacAlloc" ) {
		return;
	}
	
	
	// 인쇄버튼 클릭시
	if ( sServiceName == "e02030030-service:searchPrintRacer" ) {
/*        
        if ( dsOutArrangeList       .GetRowCount() == 0 &&
             dsOutArrangeNew        .GetRowCount() == 0 &&
             dsOutArrangeNameList   .GetRowCount() == 0 &&
             dsOutArrangeDouble     .GetRowCount() == 0 &&
             dsOutRacerEsc          .GetRowCount() == 0 &&
             dsOutRacerIjry         .GetRowCount() == 0 &&
             dsOutRacerLater        .GetRowCount() == 0) {
            fnc_Message(SNIS_BOA_B008, "N", "편성작업");
            return;
        }
 */
        /* 기수 str */
        var strValue  = dsOutRacerPerioNoStr.getColumn(0, "STR") + " 선수 : ";
            strValue += "등록인원 " + dsOutArrangeList.getColumn(0, "TT")+"명, ";
            strValue += "가용인원 " + dsOutArrangeList.getColumn(1, "TT")+"명, ";
            strValue += "주선인원 " + dsOutArrangeList.getColumn(2, "TT")+"명";
        dsOutRacerPerioNoStr.setColumn(0, "STR", strValue);

        /* 신인 str */
        var nstrValue  = dsOutNewRacerNoStr.getColumn(0, "STR") + " 신인선수 : ";
            nstrValue += "등록인원 " + dsOutArrangeNew.getColumn(0, "TOT")+"명, ";
            nstrValue += "가용인원 " + dsOutArrangeNew.getColumn(1, "TOT")+"명, ";
            nstrValue += "주선인원 " + dsOutArrangeNew.getColumn(2, "TOT")+"명";
        dsOutNewRacerNoStr.setColumn(0, "STR", nstrValue);        
                
        
        var logImgUrl = GBL_REPORT_URL + "log.jpg";
        var sSubUrl   = "";                     //레포트 파일이 있는 서브디렉토리
        var sRptNm    = "e02039030_racer_print.jrf";               //레포트 파일명
        var sDataSet  = "uds_dsoutarrangelist=dsOutArrangeList "; //"UBI 쿼리명, MIP Dataset명"
            sDataSet += "uds_dsoutarrangenew=dsOutArrangeNew ";
            sDataSet += "uds_dsoutarrangenamelist=dsOutArrangeNameList ";
            sDataSet += "uds_dsoutarrangedouble=dsOutArrangeDouble ";   
            sDataSet += "sql_esc=dsOutRacerEsc ";
            sDataSet += "sql_ijry=dsOutRacerIjry ";
            sDataSet += "sql_later=dsOutRacerLater ";
            sDataSet += "sql_pnostr=dsOutRacerPerioNoStr ";
            sDataSet += "sql_nnostr=dsOutNewRacerNoStr ";
            
        
        var yStr = substr(cboSStndYear.Value, 2, 2)+"년"+dsOutTmsQurt.getColumn(0, "QURTSTR");
        
        var sArg      = " IMG_URL="+logImgUrl;
            sArg     += " escNumStr=출전정지자:"+dsOutRacerEsc.rowcount+"명";
            sArg     += " ijryNumStr=부상및기타사유자:"+dsOutRacerIjry.rowcount+"명";
            sArg     += " laterNumStr="+yStr+"주선보류대상자:" +dsOutRacerLater.rowcount+"명";
            
        var sRptDrct  = 1;                               //출력방향(0 : 수직, 1 : 수평)
        
        fnc_RPTPrint(sSubUrl, sRptNm, sDataSet, sArg, sRptDrct);
                
        return;
	}
	
	//오류가 없이 정상 처리되었다면...
	fcPostProcess(sServiceName);
}

/*-------------------------------------------------------------------------------------------------+
>>  Transaction 후 Post Process!
+-------------------------------------------------------------------------------------------------*/
function fcPostProcess(sServiceName) {

}

/*-------------------------------------------------------------------------------------------------+
>>  코드나 명 입력 후 Lost Focus 시 해당 정보 Display
+-------------------------------------------------------------------------------------------------*/
function fcCodeNameDisplay(obj) {

}

/*-------------------------------------------------------------------------------------------------+
>>  Grid생성 Display
+-------------------------------------------------------------------------------------------------*/
function fcCreateGrid() {

    Destroy("grdRacerArrange");
    
    var sContents = "";
    sContents = '      <contents>';
    sContents = sContents + fcGetColumn() + fcGetHead() + fcGetBody() + fcGetSummary();
    sContents = sContents + '      </contents>';

    sGridType = 'AutoFitEndLine="Hide" '
              + 'BindDataset="dsOutRacerArrange" '
              + 'BKColor="user15" '
              + 'BkColor2="user16" '
              + 'BkSelColor="#4AFE8E" '
              + 'BoldHead="true" '
              + 'Border="Flat" '
              + 'BorderColor="user22" '
              + 'Bottom="833" '
              + 'Editable="TRUE" '
              + 'FillArea="TRUE" '
              + 'HeadBorder="Flat" '
              + 'HeadHeight="20" '
              + 'Height="700" '
              + 'Left="6" '
              + 'LineColor="user18" '
              + 'MinWidth="100" '
              + 'OnHeadClick="fcGridSort" '
	          + 'OnCellDBLClick="grdRacerArrange_OnCellDblClick" '
              //+ 'Right="1264" '
              + 'SelColor="user19" '
              + 'Style="snis_grid" '
              + 'TabOrder="12"  '
              + 'Top="116" '
              + 'UseDBuff="true" '
              + 'UsePopupMenu="true" '
              + 'UseSelColor="true" '
              + 'WheelScrollRow="1" '
              + 'Width="' + (parent.width - 15) + '" ';
              
              parent.div_content.Width = (parent.width - 10);

	create("Grid","grdRacerArrange", sGridType);
	grdRacerArrange.contents = sContents;
}

/*-------------------------------------------------------------------------------------------------+
>>  주선 Grid의 Column정보 생성
+-------------------------------------------------------------------------------------------------*/
function fcGetColumn() {
    var sColumn = "";
    sColumn = '					<columns>'
            + '						<col fix="left" width="22"/>'
            + '						<col fix="left" width="22"/>'
            + '						<col fix="left" width="30"/>'
            + '						<col fix="left" width="30"/>'
            + '						<col fix="left" width="50"/>'
            + '						<col fix="left" width="50"/>'
            + '						<col fix="left" width="40"/>'
            + '						<col fix="left" width="50"/>'
            + '						<col fix="left" width="50"/>'
            + '						<col fix="left" width="50"/>'
            + '						<col fix="left" width="50"/>'
            + '						<col fix="left" width="40"/>'
            + '						<col fix="left" width="40"/>'
            + '						<col fix="left" width="40"/>'
            + '						<col fix="left" width="40"/>'
            + '						<col fix="left" width="50"/>'
            + '						<col width="50"/>'
            + '						<col width="50"/>';
    sColumn = sColumn + fcAddColumn();
            
    sColumn = sColumn
            + '					</columns>';
    return sColumn;
}

/*-------------------------------------------------------------------------------------------------+
>>  주선 Grid의 Column정보 생성
+-------------------------------------------------------------------------------------------------*/
function fcAddColumn() {
    var sColumn = "";
    for ( var i = 0; i < dsOutRaceDayOrd.GetRowCount(); i++ ) {
        sColumn += '						<col width="30"/>';
    }

    return sColumn;
}

/*-------------------------------------------------------------------------------------------------+
>>  주선 Grid의 Head정보 생성
+-------------------------------------------------------------------------------------------------*/
function fcGetHead() {
    var sHead = "";
    sHead   = '         <head>'
            + '           <cell bkcolor="user20" col="0" color="user21" display="text" font="굴림,9" rowspan="3"/>'
            + '           <cell bkcolor="user20" col="1" color="user21" display="text" font="굴림,9" rowspan="3" text="상위"/>'
            + '           <cell bkcolor="user20" col="2" color="user21" display="text" font="굴림,9" rowspan="3" text="온\n라\n인"/>'
            + '           <cell bkcolor="user20" col="3" color="user21" display="text" font="굴림,9" rowspan="3" text="등급"/>'
            + '           <cell bkcolor="user20" col="4" color="user21" display="text" font="굴림,9" rowspan="3" text="등록번호"/>'
            + '           <cell bkcolor="user20" col="5" color="user21" display="text" font="굴림,9" rowspan="3" text="선수명"/>'
            + '           <cell bkcolor="user20" col="6" color="user21" display="text" font="굴림,9" rowspan="3" text="출신지"/>'
            + '           <cell bkcolor="user20" col="7" color="user21" colspan="2" display="text" font="굴림,9" text="최근6회차"/>'
            + '           <cell bkcolor="user20" col="7" color="user21" display="text" font="굴림,9" row="1" rowspan="2" text="평균득점"/>'
            + '           <cell bkcolor="user20" col="8" color="user21" display="text" font="굴림,9" row="1" rowspan="2" text="연대율"/>'
            + '           <cell bkcolor="user20" col="9" color="user21" display="text" font="굴림,9" text="기본배정"/>'
            + '           <cell bkcolor="user20" col="9" color="user21" display="text" font="굴림,9" row="1" rowspan="2" text="출주"/>'
            + '           <cell bkcolor="user20" col="10" color="user21" colspan="4" display="text" font="굴림,9" text="합계"/>'
            + '           <cell bkcolor="user20" col="10" color="user21" colspan="2" display="text" font="굴림,9" row="1" rowspan="1" text="출전"/>'
            + '           <cell bkcolor="user20" col="12" color="user21" colspan="2" display="text" font="굴림,9" row="1" rowspan="1" text="출주"/>'
            + '           <cell bkcolor="user20" col="10" color="user21" display="text" font="굴림,9" row="2" rowspan="1" text="합계"/>'
            + '           <cell bkcolor="user20" col="11" color="user21" display="text" font="굴림,9" row="2" rowspan="1" text="온라인"/>'
            + '           <cell bkcolor="user20" col="12" color="user21" display="text" font="굴림,9" row="2" rowspan="1" text="합계"/>'
            + '           <cell bkcolor="user20" col="13" color="user21" display="text" font="굴림,9" row="2" rowspan="1" text="온라인"/>'
            + '           <cell bkcolor="user20" col="14" color="user21" display="text" font="굴림,9" text="일반"/>'
            + '           <cell bkcolor="user20" col="14" color="user21" display="text" font="굴림,9" row="1" rowspan="2" text="출주"/>'
            + '           <cell bkcolor="user20" col="15" color="user21" display="text" font="굴림,9" text="잔여"/>'
            + '           <cell bkcolor="user20" col="15" color="user21" display="text" font="굴림,9" row="1" rowspan="2" text="출주"/>'
            + '           <cell bkcolor="user20" col="16" color="user21" colspan="2" display="text" font="굴림,9" text="대상"/>'
            + '           <cell bkcolor="user20" col="16" color="user21" display="text" font="굴림,9" row="1" rowspan="2" text="출전"/>'
            + '           <cell bkcolor="user20" col="17" color="user21" display="text" font="굴림,9" row="1" rowspan="2" text="출주"/>';
    sHead   = sHead + fcAddHead();

    sHead   += '         </head>';
    return sHead;
}

/*-------------------------------------------------------------------------------------------------+
>>  주선 Grid의 Head정보 생성
+-------------------------------------------------------------------------------------------------*/
function fcAddHead() {
    
    var sHead  = "";
    var nCol      = 18;
    
    var sMonth    = "";
    var sTms      = "";
    
    for ( var i = 0; i < dsOutRaceDayOrd.GetRowCount(); i++ ) {
        if ( sMonth == dsOutRaceDayOrd.GetColumn(i, "MONTH") ) {
            if ( sTms == dsOutRaceDayOrd.GetColumn(i, "TMS") ) {
                sHead += '		<cell bkcolor="user20" col="' + nCol + '" color="user21" display="text" font="굴림,9" row="2" text="'+ dsOutRaceDayOrd.GetColumn(i, "DAY_ORD") + '일"/>';
            } else {
                sHead += '		<cell bkcolor="user20" col="' + nCol + '" color="user21" colspan="' + dsOutRaceDayOrd.GetColumn(i, "TMS_COUNT")   + '" display="text" font="굴림,9" row="1" text="' + dsOutRaceDayOrd.GetColumn(i, "TMS") + '회차"/>';
                sHead += '		<cell bkcolor="user20" col="' + nCol + '" color="user21" display="text" font="굴림,9" row="2" text="'+ dsOutRaceDayOrd.GetColumn(i, "DAY_ORD") + '일"/>';
            }
            sTms        = dsOutRaceDayOrd.GetColumn(i, "TMS");
        } else {
            sHead += '      <cell bkcolor="user20" col="' + nCol + '" color="user21" colspan="' + dsOutRaceDayOrd.GetColumn(i, "MONTH_COUNT") + '" display="text" font="굴림,9" text="' + dsOutRaceDayOrd.GetColumn(i, "MONTH") + '월"/>';
            sHead += '		<cell bkcolor="user20" col="' + nCol + '" color="user21" colspan="' + dsOutRaceDayOrd.GetColumn(i, "TMS_COUNT")   + '" display="text" font="굴림,9" row="1" text="' + dsOutRaceDayOrd.GetColumn(i, "TMS") + '회차"/>';
            sHead += '		<cell bkcolor="user20" col="' + nCol + '" color="user21" display="text" font="굴림,9" row="2" text="'+ dsOutRaceDayOrd.GetColumn(i, "DAY_ORD") + '일"/>';

            sMonth = dsOutRaceDayOrd.GetColumn(i, "MONTH");
            sTms   = dsOutRaceDayOrd.GetColumn(i, "TMS");
        }
        
        nCol++;
    }

    return sHead;
}

/*-------------------------------------------------------------------------------------------------+
>>  주선 Grid의 Body정보 생성
+-------------------------------------------------------------------------------------------------*/
function fcGetBody() {
    var sBody = "";
    sBody   = '         <body>'
            + '           <cell col="0" colid="chk"                align="center"    display="checkbox" />'
            + '           <cell col="1" colid="EXCL_YN"            align="center"    display="checkbox" />'
            + '           <cell col="2" colid="ONLINE_YN"          align="center"    display="checkbox" />'
            + '           <cell col="3" colid="RACER_GRD_CD"       align="center"    display="text" />'
            + '           <cell col="4" colid="RACER_NO"           align="center"    display="text" />'
            + '           <cell col="5" colid="NM_KOR"             align="center"    display="text" />'
            + '           <cell col="6" colid="NATV_PLAC_CD"       align="center"    display="combo" combocol="CD" combodataset="dsOutNatvPlac" combotext="CD_NM" />'
            + '           <cell col="7" colid="AVG_SCR"            align="center"    display="number"/>'
            + '           <cell col="8" colid="HIGH_RANK_RATIO"    align="center"    display="number"/>'
            + '           <cell col="9" colid="RACE_ALLOC_CNT"     align="center"    display="number" edit="number"/>'
            + '           <cell col="10" colid="RACE_CNT"          align="center"    display="number"/>'
            + '           <cell col="11" colid="RACE_CNT_ONLINE"   align="center"    display="number"/>'
            + '           <cell col="12" colid="RUN_CNT"           align="center"    display="number"/>'
            + '           <cell col="13" colid="RUN_CNT_ONLINE"    align="center"    display="number"/>'
            + '           <cell col="14" colid="NORMAL_RUN_CNT"    align="center"    display="number"/>'
            + '           <cell col="15" colid="REST_RUN_CNT"      align="center"    display="number"/>'
            + '           <cell col="16" colid="SPECIAL_RACE_CNT"  align="center"    display="number"/>'
            + '           <cell col="17" colid="SPECIAL_RUN_CNT"   align="center"    display="number"/>';
    sBody   = sBody + fcAddBody();
            
    sBody  += '         </body>';
    return sBody;
}

/*-------------------------------------------------------------------------------------------------+
>>  주선 Grid의 Body정보 생성
+-------------------------------------------------------------------------------------------------*/
function fcAddBody() {
    var sBody = "";
	var nCol      = 18;
    F_sSetCellProp = "";
    
    var sColumnNm = "";
    var sBkColor  = "";
    var sEdit     = "";
    for ( var i = 0; i < dsOutRaceDayOrd.GetRowCount(); i++ ) {
        
        sColumnNm = "TMS_" + dsOutRaceDayOrd.GetColumn(i, "TMS") + "_DAY_" + dsOutRaceDayOrd.GetColumn(i, "DAY_ORD");
        sBkColor  = "expr:iif(dsOutRacerArrange.GetColumn(row,&apos;" + sColumnNm + "&apos;)==&apos;-&apos;,&apos;#646EFF&apos;,(iif(dsOutRacerArrange.GetColumn(row,&apos;" + sColumnNm + "&apos;)==&apos;*&apos;,&apos;#A164A1&apos;,(iif(dsOutRacerArrange.GetColumn(row,&apos;" + sColumnNm + "&apos;)==&apos;#&apos;,&apos;#957745&apos;,&apos;&apos;)))))";
        sEdit     = "expr:iif(dsOutRacerArrange.GetColumn(row,&apos;" + sColumnNm + "&apos;)==&apos;-&apos;||dsOutRacerArrange.GetColumn(row,&apos;" + sColumnNm + "&apos;)==&apos;*&apos;||dsOutRacerArrange.GetColumn(row,&apos;" + sColumnNm + "&apos;)==&apos;#&apos;,&apos;none&apos;,&apos;number&apos;)";
        if ( dsOutRaceDayOrd.GetColumn(i, "ARRANGE_CMPL_YN") == "Y" ) {
            sBody += '           <cell col="' + toInteger( nCol + i) + '" colid="' + sColumnNm + '" display="text" edit="none"         align="center" bkcolor="' + sBkColor + '" color="blue" />';
        } else {
            sBody += '           <cell col="' + toInteger( nCol + i) + '" colid="' + sColumnNm + '" display="text" edit="none"         align="center" bkcolor="' + sBkColor + '" />';
        }
        
        if ( i == 0 ) {
            F_sSetCellProp +=       "toInteger(TMS_" + dsOutRaceDayOrd.GetColumn(i, "TMS") + "_DAY_" + dsOutRaceDayOrd.GetColumn(i, "DAY_ORD") + ")";
        } else {
            F_sSetCellProp += "+" + "toInteger(TMS_" + dsOutRaceDayOrd.GetColumn(i, "TMS") + "_DAY_" + dsOutRaceDayOrd.GetColumn(i, "DAY_ORD") + ")";
        }
    }

    return sBody;
}

/*-------------------------------------------------------------------------------------------------+
>>  주선 Grid의 Summary정보 생성
+-------------------------------------------------------------------------------------------------*/
function fcGetSummary() {

    var sSummary = "";
	sSummary  += '	<summary>                          ';
	sSummary  += '		<cell col="0" display="number" Expr="dsOutRacerArrange.Sum(&apos;chk&apos;)"/> ';
	sSummary  += '		<cell col="1" display="number" Expr="dsOutRacerArrange.Sum(&apos;EXCL_YN&apos;)"/> ';
	sSummary  += '		<cell col="2" display="number" Expr="dsOutRacerArrange.Sum(&apos;ONLINE_YN&apos;)"/> ';
	sSummary  += '		<cell col="3" display="number"/> ';
	sSummary  += '		<cell col="4" display="number"/> ';
	sSummary  += '		<cell col="5" display="number"/> ';
	sSummary  += '		<cell col="6" display="number"/> ';
	sSummary  += '		<cell col="7" display="number"/> ';
	sSummary  += '		<cell col="8" display="number"/> ';
	sSummary  += '		<cell col="9" display="number"  Expr="dsOutRacerArrange.Sum(&apos;RACE_ALLOC_CNT&apos;)"/> ';
	sSummary  += '		<cell col="10" display="number" Expr="dsOutRacerArrange.Sum(&apos;RACE_CNT&apos;)"/> ';
	sSummary  += '		<cell col="11" display="number" Expr="dsOutRacerArrange.Sum(&apos;RACE_CNT_ONLINE&apos;)"/> ';
	sSummary  += '		<cell col="12" display="number" Expr="dsOutRacerArrange.Sum(&apos;RUN_CNT&apos;)" />';
	sSummary  += '		<cell col="13" display="number" Expr="dsOutRacerArrange.Sum(&apos;RUN_CNT_ONLINE&apos;)" />';
	sSummary  += '		<cell col="14" display="number" Expr="dsOutRacerArrange.Sum(&apos;NORMAL_RUN_CNT&apos;)" />';
	sSummary  += '		<cell col="15" display="number" Expr="dsOutRacerArrange.Sum(&apos;REST_RUN_CNT&apos;)" />';
	sSummary  += '		<cell col="16" display="number"/>';
	sSummary  += '		<cell col="17" display="number" Expr="dsOutRacerArrange.Sum(&apos;SPECIAL_RUN_CNT&apos;)" />';
    sSummary   = sSummary + fcAddSummary();

	sSummary  += '	</summary>                         ';
    return sSummary;
}

/*-------------------------------------------------------------------------------------------------+
>>  주선 Grid의 Body정보 생성
+-------------------------------------------------------------------------------------------------*/
function fcAddSummary() {

    var sSummary  = "";
    var sColumnNm = "";
    var sExpr     = "";
	var nCol      = 18;    

    for ( var i = 0; i < dsOutRaceDayOrd.GetRowCount(); i++ ) {
        
        sColumnNm = "TMS_" + dsOutRaceDayOrd.GetColumn(i, "TMS") + "_DAY_" + dsOutRaceDayOrd.GetColumn(i, "DAY_ORD");
        sExpr     = "dsOutRacerArrange.Sum('" + sColumnNm + "')";
        sSummary += '       <cell col="' + toInteger(18 + i) + '" display="number" Expr="' + sExpr + '" />';
    }

    return sSummary;
}

/*-------------------------------------------------------------------------------------------------+
>>  주선 정보 화면에 표현
+-------------------------------------------------------------------------------------------------*/
function fcSetOrgan() {
    var sRacerNo = "";
    var nRow     = -1;

    dsOutRacerArrange.FireEvent = false;
    for ( var i = 0; i < dsOutOrgan.GetRowCount(); i++ ) {
        if ( sRacerNo != dsOutOrgan.GetColumn(i, "RACER_NO") ) {
            sRacerNo = dsOutOrgan.GetColumn(i, "RACER_NO");
            nRow = fnc_GetExistValue(dsOutRacerArrange, "RACER_NO", sRacerNo);
        }
        dsOutRacerArrange.SetColumn(nRow, "TMS_" + dsOutOrgan.GetColumn(i, "TMS") + "_DAY_" + dsOutOrgan.GetColumn(i, "DAY_ORD"), dsOutOrgan.GetColumn(i, "RACE_ALLOC_CNT"));
    }
    dsOutRacerArrange.FireEvent = true;
}

/*-------------------------------------------------------------------------------------------------+
>>  주선 정보 화면에 표현
+-------------------------------------------------------------------------------------------------*/
function fcSetRacerArrange() {
    var sRacerNo = "";
    var nRow     = -1;
	
    dsOutRacerArrange.FireEvent = false;
    for ( var i = 0; i < dsOutRacerArrangeDetail.GetRowCount(); i++ ) {
        if ( sRacerNo != dsOutRacerArrangeDetail.GetColumn(i, "RACER_NO") ) {
            sRacerNo = dsOutRacerArrangeDetail.GetColumn(i, "RACER_NO");
            nRow = fnc_GetExistValue(dsOutRacerArrange, "RACER_NO", sRacerNo);
        }
        dsOutRacerArrange.SetColumn(nRow, "TMS_" + dsOutRacerArrangeDetail.GetColumn(i, "TMS") + "_DAY_" + dsOutRacerArrangeDetail.GetColumn(i, "DAY_ORD"), dsOutRacerArrangeDetail.GetColumn(i, "RACE_ALLOC_CNT"));
    }
    dsOutRacerArrange.FireEvent = true;
}

/*-------------------------------------------------------------------------------------------------+
>>  주선 정보 화면에 표현
+-------------------------------------------------------------------------------------------------*/
function fcSetArrange() {

    var nTmsRow        = fnc_GetExistValue(dsOutRaceDayOrd, "TMS", cboSRaceTms.Value);  // 
    var sState         = dsOutRaceDayOrd.GetColumn(nTmsRow, "RACE_TMS_STAT_CD");           // 해당 회차 상태
    var sArrangeCmplYn = dsOutRaceDayOrd.GetColumn(nTmsRow, "ARRANGE_CMPL_YN");            // 해당 회차 주선 완료 여부

    if ( nTmsRow < 0 ) {
		fnc_Message(SNIS_BOA_B005, "N");
		return false;
    }

    if ( sArrangeCmplYn == "Y" ) {
		fnc_Message(SNIS_BOA_B004, "N");
		return false;
    }

    // 회차별 column설정
    var asTmsOrdColumn = Array();
    var nColumn = 0;
    for ( var i = 0; i < dsOutRacerArrange.GetColCount(); i++ ) {
        var sColumnNm = dsOutRacerArrange.GetColID(i);
        if ( indexOf(sColumnNm, "TMS_" + cboSRaceTms.Value + "_DAY_") > -1 ) {
            asTmsOrdColumn[nColumn] = sColumnNm;
            nColumn++;
        } else {
            if ( nColumn > 0 ) break;
        }
    }

    dsOutRacerArrange.FireEvent = false;
    fnc_SetAllColumnValue(dsOutRacerArrange, "chk", "");
    for ( var k = 0; k < length(asTmsOrdColumn); k++ ) {
        for ( var i = 0; i < dsOutRacerArrange.GetRowCount(); i++ ) {
            var sTempValue = dsOutRacerArrange.GetColumn(i, asTmsOrdColumn[k]);
            if ( sTempValue == "*" || sTempValue == "-" || sTempValue == "#" ) {
                continue;
            }
            dsOutRacerArrange.SetColumn(i, asTmsOrdColumn[k], "");
        }
    }

    for ( var j = 0; j < dsOutArrangeRacer.GetRowCount(); j++ ) {
    
        //이미 주선되었으면 제외
        var nRow = fnc_GetExistValue(dsOutRacerArrange, "RACER_NO", dsOutArrangeRacer.GetColumn(j, "RACER_NO"));
        
        for ( var k = 0; k < length(asTmsOrdColumn); k++ ) {
            dsOutRacerArrange.SetColumn(nRow, asTmsOrdColumn[k], "1");
        }
        dsOutRacerArrange.SetColumn(nRow, "chk", "1");
    }
    
    dsOutRacerArrange.FireEvent = true;
    return;
}

/*-------------------------------------------------------------------------------------------------+
>>  년도, 분기 변경시
+-------------------------------------------------------------------------------------------------*/
function cboSStndYear_OnChanged(obj,strCode,strText,nOldIndex,nNewIndex)
{
    fcInit();
	fce_GetRaceTms(cboSStndYear.Value, cboSMbr.Value, ""            , "dsOutSRaceTms");
}

/*-------------------------------------------------------------------------------------------------+
>>  회차변경시
+-------------------------------------------------------------------------------------------------*/
function cboSRaceTms_OnChanged(obj,strCode,strText,nOldIndex,nNewIndex)
{
    // 출주 횟수가 있는 선수는 Check표시
    dsOutRacerArrange.FireEvent = false;
//    dsOutRacerArrange.UpdateControl = false;
    for ( var j = 0; j < dsOutRacerArrange.GetRowCount(); j++ ) {
        var nCount = 0;
        for ( var i = 0; i < dsOutRacerArrange.GetColCount(); i++ ) {
            var sColumnNm = dsOutRacerArrange.GetColID(i);
            if ( indexOf(sColumnNm, "TMS_" + cboSRaceTms.Value + "_DAY_") > -1 ) {
                nCount = nCount + toInteger(dsOutRacerArrange.GetColumn(j, sColumnNm));
            }
            
            if ( nCount > 0 ) break;
        }

        if ( nCount > 0 ) {
            dsOutRacerArrange.SetColumn(j, "chk", "1");
        } else {
            dsOutRacerArrange.SetColumn(j, "chk", "0");
        }
    }
//    dsOutRacerArrange.UpdateControl = true;
    dsOutRacerArrange.FireEvent = true;
    
    var nTmsRow        = fnc_GetExistValue(dsOutSRaceTms, "TMS", cboSRaceTms.Value);  // 
    var sState         = dsOutSRaceTms.GetColumn(nTmsRow, "RACE_TMS_STAT_CD");           // 해당 회차 상태
    var sArrangeCmplYn = dsOutSRaceTms.GetColumn(nTmsRow, "ARRANGE_CMPL_YN");            // 해당 회차 주선 완료 여부

    if ( sArrangeCmplYn == "Y" ) {
        btnArrange.Enable = false;
        //btnArrangeCmpl.Enable = false;
        btnArrangeCmpl.Text = "주선취소";
        btnSave.Enable = false;
        grdRacerArrange.SetCellProp("body", 0, "edit", "none");
        grdRacerArrange.SetCellProp("body", 1, "edit", "none");
        grdRacerArrange.SetCellProp("body", 2, "edit", "none");
    } else {
        btnArrange.Enable = true;
        btnArrangeCmpl.Text = "주선완료";
        //btnArrangeCmpl.Enable = true;
        btnSave.Enable = true;
        grdRacerArrange.SetCellProp("body", 0, "edit", "checkbox");
        grdRacerArrange.SetCellProp("body", 1, "edit", "checkbox");
        grdRacerArrange.SetCellProp("body", 2, "edit", "checkbox");
    }

    //성적상위자 주선여부 체크
    var sFilter = "EXCL_YN='Y' && STND_YEAR='" + cboSStndYear.Value + "' && TMS="+cboSRaceTms.Value;
    dsExcl.Filter(sFilter);
    var iRow = 0;
    var fRow = -1;
    var sRacerNo = "";
    fnc_SetAllColumnValue(dsOutRacerArrange, "EXCL_YN", "0");
    for (iRow=0;iRow<dsExcl.rowcount();iRow++) {
		sRacerNo = dsExcl.GetColumn(iRow, "RACER_NO");
		fRow = dsOutRacerArrange.FindRow("RACER_NO", sRacerNO);
		if (iRow >= 0) {
			dsOutRacerArrange.SetColumn(fRow, "EXCL_YN", "1");
		}
    }
    //온라인스타트 주선여부 체크
    var sFilter = "ST_MTHD_CD='001' && STND_YEAR='" + cboSStndYear.Value + "' && TMS="+cboSRaceTms.Value;
    dsOnline.Filter(sFilter);

    var iRow = 0;
    var fRow = -1;
    var sRacerNo = "";

    fnc_SetAllColumnValue(dsOutRacerArrange, "ONLINE_YN", "0");

    for (iRow=0;iRow<dsOnline.rowcount();iRow++) {
		sRacerNo = dsOnline.GetColumn(iRow, "RACER_NO");
		fRow = dsOutRacerArrange.FindRow("RACER_NO", sRacerNO);
		if (iRow >= 0) {
			dsOutRacerArrange.SetColumn(fRow, "ONLINE_YN", "1");
		}
    }

}

/*-------------------------------------------------------------------------------------------------+
>>  주선변경시
+-------------------------------------------------------------------------------------------------*/
function dsOutRacerArrange_OnColumnChanged(obj,nRow,strColumnID,varOldValue,varNewValue,nPivotIndex)
{
	if ( strColumnID == "ONLINE_YN" || strColumnID == "EXCL_YN" || strColumnID == "chk" ) {
		if ( strColumnID == "chk" ) {
			if (dsOutRacerArrange.GetColumn(nRow, "chk") == "0") {		//주선도 자동 체크
				dsOutRacerArrange.SetColumn(nRow, "EXCL_YN", "0");
				dsOutRacerArrange.SetColumn(nRow, "ONLINE_YN", "0");
			}
		} else if ( strColumnID == "EXCL_YN" ) {
			if (dsOutRacerArrange.GetColumn(nRow, "EXCL_YN") == "1") {		//주선도 자동 체크
				dsOutRacerArrange.SetColumn(nRow, "chk", "1");
			}
		} else if ( strColumnID == "ONLINE_YN" ) {
			if (dsOutRacerArrange.GetColumn(nRow, "ONLINE_YN") == "1") {		//주선도 자동 체크
				dsOutRacerArrange.SetColumn(nRow, "chk", "1");
			}
		}
	}
	if ( strColumnID == "chk" ) {
        //dsOutRacerArrange.FireEvent = false;
        if ( varNewValue == "1") {
            for ( var i = 0; i < dsOutRacerArrange.GetColCount(); i++ ) {
                var sColumnNm = dsOutRacerArrange.GetColID(i);
                if ( indexOf(sColumnNm, "TMS_" + cboSRaceTms.Value + "_DAY_") > -1 ) {
                    if ( dsOutRacerArrange.GetColumn(nRow, sColumnNm) == "-" 
                      || dsOutRacerArrange.GetColumn(nRow, sColumnNm) == "*" 
                      || dsOutRacerArrange.GetColumn(nRow, sColumnNm) == "#" ) {
                        fnc_message("출주보류(제외) 선수입니다.", "N");
                        dsOutRacerArrange.SetColumn(nRow, "chk", "0");
                        return;
                    }
                }
            }
            for ( var i = 0; i < dsOutRacerArrange.GetColCount(); i++ ) {
                var sColumnNm = dsOutRacerArrange.GetColID(i);
                if ( indexOf(sColumnNm, "TMS_" + cboSRaceTms.Value + "_DAY_") > -1 ) {
                    dsOutRacerArrange.SetColumn(nRow, sColumnNm, "1");
                }
            }
        } else {
            for ( var i = 0; i < dsOutRacerArrange.GetColCount(); i++ ) {
                var sColumnNm = dsOutRacerArrange.GetColID(i);
                if ( indexOf(sColumnNm, "TMS_" + cboSRaceTms.Value + "_DAY_") > -1 ) {
                    if ( dsOutRacerArrange.GetColumn(nRow, sColumnNm) == "-" 
                      || dsOutRacerArrange.GetColumn(nRow, sColumnNm) == "*" 
                      || dsOutRacerArrange.GetColumn(nRow, sColumnNm) == "#" ) {
                        continue;
                    }
                    dsOutRacerArrange.SetColumn(nRow, sColumnNm, "");
                }
            }
        }
        //dsOutRacerArrange.FireEvent = true;
    }
    
    if ( strColumnID == "ONLINE_YN" ) {	//Online start check
        //dsOutRacerArrange.FireEvent = false;
        if ( varNewValue == "1" ) {
            for ( var i = 0; i < dsOutRacerArrange.GetColCount(); i++ ) {
                var sColumnNm = dsOutRacerArrange.GetColID(i);
                if ( indexOf(sColumnNm, "TMS_" + cboSRaceTms.Value + "_DAY_") > -1 ) {
                    if ( dsOutRacerArrange.GetColumn(nRow, sColumnNm) == "-" 
                      || dsOutRacerArrange.GetColumn(nRow, sColumnNm) == "*" 
                      || dsOutRacerArrange.GetColumn(nRow, sColumnNm) == "#" ) {
                        fnc_message("출주보류(제외) 선수입니다.", "N");
                        dsOutRacerArrange.SetColumn(nRow, "chk", "0");
                        return;
                    }
                }
            }
            for ( var i = 0; i < dsOutRacerArrange.GetColCount(); i++ ) {
                var sColumnNm = dsOutRacerArrange.GetColID(i);
                if ( indexOf(sColumnNm, "TMS_" + cboSRaceTms.Value + "_DAY_") > -1 ) {
                    dsOutRacerArrange.SetColumn(nRow, sColumnNm, "1");
                }
                if ( indexOf(sColumnNm, "TMS_" + cboSRaceTms.Value + "_ONDAY") > -1 ) {
                    dsOutRacerArrange.SetColumn(nRow, sColumnNm, "1");
                }
            }
        } else {
            for ( var i = 0; i < dsOutRacerArrange.GetColCount(); i++ ) {
                var sColumnNm = dsOutRacerArrange.GetColID(i);
                if ( indexOf(sColumnNm, "TMS_" + cboSRaceTms.Value + "_ONDAY") > -1 ) {
                    if ( dsOutRacerArrange.GetColumn(nRow, sColumnNm) == "-" 
                      || dsOutRacerArrange.GetColumn(nRow, sColumnNm) == "*" 
                      || dsOutRacerArrange.GetColumn(nRow, sColumnNm) == "#" ) {
                        continue;
                    }
                    dsOutRacerArrange.SetColumn(nRow, sColumnNm, "");
                }
            }
        }
        //dsOutRacerArrange.FireEvent = true;
    }

	if ( indexOf(strColumnID, "TMS_" + cboSRaceTms.Value + "_DAY_") < 0 ) return;
	
    var nCount = 0;
    for ( var i = 0; i < dsOutRacerArrange.GetColCount(); i++ ) {
        var sColumnNm = dsOutRacerArrange.GetColID(i);
        if ( indexOf(sColumnNm, "TMS_" + cboSRaceTms.Value + "_DAY_") > -1 ) {
            nCount = nCount + toInteger(dsOutRacerArrange.GetColumn(nRow, sColumnNm));
        }
    }

    dsOutRacerArrange.FireEvent = false;
//    dsOutRacerArrange.UpdateControl = false;
    if ( nCount > 0 ) {
        dsOutRacerArrange.SetColumn(nRow, "chk", "1");
    } else {
        dsOutRacerArrange.SetColumn(nRow, "chk", "0");
    }
//    dsOutRacerArrange.UpdateControl = true;


    dsOutRacerArrange.FireEvent = true;
}

/*-------------------------------------------------------------------------------------------------+
>>  경주선수 Double Click 경주선수 삭제, 선수 리스트에 추가
+-------------------------------------------------------------------------------------------------*/
function grdRacerArrange_OnCellDblClick(obj,nRow,nCell,nX,nY,nPivotIndex)
{
    if ( nCell < 15 ) return;
    var sColumnNm = grdRacerArrange.GetCellProp("body", nCell, "ColId");
    var sColor    = grdRacerArrange.GetCellProp("body", nCell, "Color");

    if ( sColor != "-1" ) return;
    if ( dsOutRacerArrange.GetColumn(nRow, sColumnNm) == "-" ) return;
    if ( dsOutRacerArrange.GetColumn(nRow, sColumnNm) == "*" ) return;
    if ( dsOutRacerArrange.GetColumn(nRow, sColumnNm) == "#" ) return;
    
    if ( toInteger(dsOutRacerArrange.GetColumn(nRow, sColumnNm)) < 2 ) {
        dsOutRacerArrange.SetColumn(nRow, sColumnNm, toInteger(dsOutRacerArrange.GetColumn(nRow, sColumnNm)) + 1);
    } else {
        dsOutRacerArrange.SetColumn(nRow, sColumnNm, "");
    }
    
    grdRacerArrange.SetCellPos(0);
}

/*-------------------------------------------------------------------------------------------------+
>>  년도변경시
+-------------------------------------------------------------------------------------------------*/
function cboStrStndYear_OnChanged(obj,strCode,strText,nOldIndex,nNewIndex)
{
    Fg_ObjNm = obj.Id;
	fce_GetRaceTms(cboStrStndYear.Value, cboStrMbr.Value, ""            , "dsOutStrTms");
}

/*-------------------------------------------------------------------------------------------------+
>>  년도변경시
+-------------------------------------------------------------------------------------------------*/
function cboEndStndYear_OnChanged(obj,strCode,strText,nOldIndex,nNewIndex)
{
    Fg_ObjNm = obj.Id;
	fce_GetRaceTms(cboEndStndYear.Value, cboEndMbr.Value, ""            , "dsOutEndTms");
}

/*-------------------------------------------------------------------------------------------------+
>>  회차변경시
+-------------------------------------------------------------------------------------------------*/
function cboStrTms_OnChanged(obj,strCode,strText,nOldIndex,nNewIndex)
{
    var nIndexRow = fnc_GetExistValue(dsOutStrTms, "TMS", cboStrTms.Value);
    calStrDt.Value = dsOutStrTms.GetColumn(nIndexRow, "STR_DT");
}

/*-------------------------------------------------------------------------------------------------+
>>  회차변경시
+-------------------------------------------------------------------------------------------------*/
function cboEndTms_OnChanged(obj,strCode,strText,nOldIndex,nNewIndex)
{
    var nIndexRow = fnc_GetExistValue(dsOutEndTms, "TMS", cboEndTms.Value);
    calEndDt.Value = dsOutEndTms.GetColumn(nIndexRow, "END_DT");
}

]]></Script>
</Window>