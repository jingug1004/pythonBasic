<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 
  * @파일명 : business_customerLedger.xml
  * @메뉴명 : 거래처원장조회
  * @최초작성일 : 2014/11/14
  * @author : 윤범진          
  * @수정내역 :
 -->
<mapper namespace="customerLedger"> 
	
	<select id="getCustomerGridList" parameterType="hashmap" resultType="com.hanaph.saleon.business.vo.CustomerLedgerVO">
	
		<if test="page != null">
			SELECT *
				FROM (SELECT T0.*, FLOOR((ROWNUM - 1) / #{perPageRow,jdbcType=INTEGER} + 1) PAGE
	        		FROM (
    	</if>
		<![CDATA[
						SELECT C.CUST_ID                     CUST_ID,
						       C.CUST_NM                     CUST_NM,
						       F_DEPT_NM2(C.SAWON_ID)               AS DEPT_NM ,
						       F_GET_NAME('SALE0007',C.SAWON_ID,'') AS SAWON_NM 
						  FROM (SELECT 1                             SEQ,
						               A.CUST_ID                     CUST_ID,
						               (NVL(B.AMT,0) + NVL(B.VAT,0)) TOT
						          FROM SALE.SALE0207 A, 
						               SALE.SALE0208 B, 
						               SALE.SALE0004 D,
						               SALE.SALE0203 E
						         WHERE A.DEAL_NO = B.DEAL_NO
						           AND A.YMD     = B.YMD
						           AND B.ITEM_ID = D.ITEM_ID
						           AND A.YMD BETWEEN #{ad_fr_date,jdbcType=VARCHAR} AND #{ad_to_date,jdbcType=VARCHAR}
						           ]]>
								<if test="as_fr_cust != ''">
								   AND A.CUST_ID = #{as_fr_cust,jdbcType=VARCHAR}
								</if>
								<![CDATA[
						           AND A.GUMAE_NO = E.GUMAE_NO(+)
						        UNION ALL /*  수금(할인) 내역 */
						        SELECT 2                             SEQ,
						               A.CUST_ID                     CUST_ID,
						               NVL(-(CASH_AMT),0)            TOT
						          FROM SALE.SALE0401  A
						         WHERE A.YMD         BETWEEN #{ad_fr_date,jdbcType=VARCHAR} AND #{ad_to_date,jdbcType=VARCHAR}
						           ]]>
								<if test="as_fr_cust != ''">
								   AND A.CUST_ID = #{as_fr_cust,jdbcType=VARCHAR}
								</if>
								<![CDATA[
						           AND A.CASH_AMT      <> 0
						        UNION ALL
						        SELECT 2                             SEQ,
						               A.CUST_ID                     CUST_ID,
						               NVL(-(AMT),0)                 TOT
						          FROM SALE.SALE0402  B,
						               SALE.SALE0401  A,
						               (SELECT CODE1, CODE1_NM FROM  SALE.SALE0001 WHERE CODE_GB = '0007') C
						         WHERE A.YMD         BETWEEN #{ad_fr_date,jdbcType=VARCHAR} AND #{ad_to_date,jdbcType=VARCHAR}
						           AND A.JUNPYO_NO   = B.JUNPYO_NO
						           ]]>
								<if test="as_fr_cust != ''">
								   AND A.CUST_ID = #{as_fr_cust,jdbcType=VARCHAR}
								</if>
								<![CDATA[
						           AND B.BILL_GB = C.CODE1(+))  A,
						       (SELECT CUST_ID                  CUST_ID,
						               NVL(SUM(BEFORE_AMT),0)   BEFORE_AMT
						          FROM (SELECT CUST_ID,                   /*전월 잔액 */
						                       BEFORE_AMT      BEFORE_AMT
						                  FROM SALE.SALE0306
						                 WHERE YMD         = TO_DATE(SUBSTR(#{ad_fr_date}, 1, 7) || '-01','YYYY/MM/DD')
						                   ]]>
										<if test="as_fr_cust != ''">
										   AND CUST_ID = #{as_fr_cust,jdbcType=VARCHAR}
										</if>
										<![CDATA[
						                 UNION ALL
						                SELECT CUST_ID,                  /*금월의 조회조건 기간까지의 잔액*/
						                       NVL(A.AMT,0) + NVL(A.VAT,0)  
						                       BEFORE_AMT
						                  FROM SALE.SALE0207  B,
						                       SALE.SALE0208  A
						                 WHERE A.DEAL_NO    = B.DEAL_NO
						                   AND A.YMD        = B.YMD
						                   ]]>
										<if test="as_fr_cust != ''">
										   AND B.CUST_ID = #{as_fr_cust,jdbcType=VARCHAR}
										</if>
										<![CDATA[
						                   AND A.YMD        >= TO_DATE(SUBSTR(#{ad_fr_date}, 1, 7) || '-01','YYYY/MM/DD')
						                   AND A.YMD        <  #{ad_fr_date,jdbcType=VARCHAR}
						                     UNION all
						                SELECT CUST_ID,     
						                       (NVL(A.bill_amt,0) + NVL(A.cash_amt,0))*-1  
						                       BEFORE_AMT
						                  FROM SALE.SALE0401  A
						                 WHERE A.YMD        >= TO_DATE(SUBSTR(#{ad_fr_date}, 1, 7) || '-01','YYYY/MM/DD')
						                   AND A.YMD        <  #{ad_fr_date,jdbcType=VARCHAR}
						                   ]]>
										<if test="as_fr_cust != ''">
										   AND A.CUST_ID = #{as_fr_cust,jdbcType=VARCHAR}
										</if>
										<![CDATA[
										)
						         GROUP BY CUST_ID          )  B,
						      SALE.SALE0003 C
						WHERE C.CUST_ID    = A.CUST_ID(+)
						  AND C.CUST_ID    = B.CUST_ID(+)
						  ]]>
						<if test="as_fr_cust != ''">
						  AND C.CUST_ID = #{as_fr_cust,jdbcType=VARCHAR}
						</if>
						
						<choose>
						<when test="as_assgnCode eq '27020' or as_assgnCode eq '27025'">
						  AND C.SAWON_ID IN (SELECT SAWON_ID 
											   FROM SALE.SALE0007 
										      WHERE DEPT_CD IN (
												                select sale_dept_cd 
				                                                  from hr_co_depart_0 
				                                                  connect by prior dept_cd = up_dept_cd
				                                                  start with dept_cd = (    select dept_cd 
				                                                                              from hr_co_depart_0 
				                                                                             where level = 2
				                                                                              connect by  dept_cd = prior up_dept_cd
				                                                                              start with dept_cd = (select dept_cd from hr_hc_empbas_0 where emp_no in (select insa_sawon_id from sale0007 where sawon_id = #{as_emp_cd}))
				                                                                       )
													             )													 
								            )
					    </when>
						<when test="as_assgnCode eq '27027' or as_assgnCode eq '27030' or as_assgnCode eq '27035' ">
						  AND C.SAWON_ID IN (SELECT SAWON_ID FROM SALE.SALE0007 WHERE DEPT_CD = #{as_dept_cd})
						</when>  
						<when test="as_assgnCode eq '27040' or as_assgnCode eq '27050'">
						  AND C.SAWON_ID = #{as_emp_cd} 
						</when>  
						</choose>
						
		<![CDATA[		            
						  AND (NVL(A.TOT,0) <> 0 OR NVL(B.BEFORE_AMT,0) <> 0)
						GROUP BY C.CUST_ID, C.CUST_NM,F_DEPT_NM2(C.SAWON_ID),F_GET_NAME('SALE0007',C.SAWON_ID,'')
		]]>
		 
					<if test="sidx != ''">
						ORDER BY ${sidx} ${sord}
					</if>
		
				<if test="page != null">
					) T0
				)
				WHERE PAGE = #{page,jdbcType=INTEGER}
				</if>
	</select>
	
	<select id="getCustomerGridTotalCount" parameterType="hashmap" resultType="com.hanaph.saleon.business.vo.CustomerLedgerVO">
	<![CDATA[
		SELECT COUNT(DISTINCT(C.CUST_ID)) AS total_cnt
		  FROM (SELECT 1                             SEQ,
		               A.CUST_ID                     CUST_ID,
		               (NVL(B.AMT,0) + NVL(B.VAT,0)) TOT
		          FROM SALE.SALE0207 A, 
		               SALE.SALE0208 B, 
		               SALE.SALE0004 D,
		               SALE.SALE0203 E
		         WHERE A.DEAL_NO = B.DEAL_NO
		           AND A.YMD     = B.YMD
		           AND B.ITEM_ID = D.ITEM_ID
		           AND A.YMD BETWEEN #{ad_fr_date,jdbcType=VARCHAR} AND #{ad_to_date,jdbcType=VARCHAR}
		           ]]>
				<if test="as_fr_cust != ''">
				   AND A.CUST_ID = #{as_fr_cust,jdbcType=VARCHAR}
				</if>
				<![CDATA[
		           AND A.GUMAE_NO = E.GUMAE_NO(+)
		        UNION ALL /*  수금(할인) 내역 */
		        SELECT 2                             SEQ,
		               A.CUST_ID                     CUST_ID,
		               NVL(-(CASH_AMT),0)            TOT
		          FROM SALE.SALE0401  A
		         WHERE A.YMD         BETWEEN #{ad_fr_date,jdbcType=VARCHAR} AND #{ad_to_date,jdbcType=VARCHAR}
		           ]]>
				<if test="as_fr_cust != ''">
				   AND A.CUST_ID = #{as_fr_cust,jdbcType=VARCHAR}
				</if>
				<![CDATA[
		           AND A.CASH_AMT      <> 0
		        UNION ALL
		        SELECT 2                             SEQ,
		               A.CUST_ID                     CUST_ID,
		               NVL(-(AMT),0)                 TOT
		          FROM SALE.SALE0402  B,
		               SALE.SALE0401  A,
		               (SELECT CODE1, CODE1_NM FROM  SALE.SALE0001 WHERE CODE_GB = '0007') C
		         WHERE A.YMD         BETWEEN #{ad_fr_date,jdbcType=VARCHAR} AND #{ad_to_date,jdbcType=VARCHAR}
		           AND A.JUNPYO_NO   = B.JUNPYO_NO
		           ]]>
				<if test="as_fr_cust != ''">
				   AND A.CUST_ID = #{as_fr_cust,jdbcType=VARCHAR}
				</if>
				<![CDATA[
		           AND B.BILL_GB = C.CODE1(+))  A,
		       (SELECT CUST_ID                  CUST_ID,
		               NVL(SUM(BEFORE_AMT),0)   BEFORE_AMT
		          FROM (SELECT CUST_ID,                   /*전월 잔액 */
		                       BEFORE_AMT      BEFORE_AMT
		                  FROM SALE.SALE0306
		                 WHERE YMD         = TO_DATE(SUBSTR(#{ad_fr_date}, 1, 7) || '-01','YYYY/MM/DD')
		                   ]]>
						<if test="as_fr_cust != ''">
						   AND CUST_ID = #{as_fr_cust,jdbcType=VARCHAR}
						</if>
						<![CDATA[
		                 UNION ALL
		                SELECT CUST_ID,                  /*금월의 조회조건 기간까지의 잔액*/
		                       NVL(A.AMT,0) + NVL(A.VAT,0)  
		                       BEFORE_AMT
		                  FROM SALE.SALE0207  B,
		                       SALE.SALE0208  A
		                 WHERE A.DEAL_NO    = B.DEAL_NO
		                   AND A.YMD        = B.YMD
		                   ]]>
						<if test="as_fr_cust != ''">
						   AND B.CUST_ID = #{as_fr_cust,jdbcType=VARCHAR}
						</if>
						<![CDATA[
		                   AND A.YMD        >= TO_DATE(SUBSTR(#{ad_fr_date}, 1, 7) || '-01','YYYY/MM/DD')
		                   AND A.YMD        <  #{ad_fr_date,jdbcType=VARCHAR}
		                     UNION all
		                SELECT CUST_ID,     
		                       (NVL(A.bill_amt,0) + NVL(A.cash_amt,0))*-1  
		                       BEFORE_AMT
		                  FROM SALE.SALE0401  A
		                 WHERE A.YMD        >= TO_DATE(SUBSTR(#{ad_fr_date}, 1, 7) || '-01','YYYY/MM/DD')
		                   AND A.YMD        <  #{ad_fr_date,jdbcType=VARCHAR}
		                   ]]>
						<if test="as_fr_cust != ''">
						   AND A.CUST_ID = #{as_fr_cust,jdbcType=VARCHAR}
						</if>
						<![CDATA[
		                   )
		         GROUP BY CUST_ID          )  B,
		      SALE.SALE0003 C
		WHERE C.CUST_ID    = A.CUST_ID(+)
		  AND C.CUST_ID    = B.CUST_ID(+)
		  ]]>
		<if test="as_fr_cust != ''">
		  AND C.CUST_ID = #{as_fr_cust,jdbcType=VARCHAR}
		</if> 	
		<choose>
		<when test="as_assgnCode eq '27020' or as_assgnCode eq '27025'">
		  AND C.SAWON_ID IN (SELECT SAWON_ID 
							   FROM SALE.SALE0007 
						      WHERE DEPT_CD IN (
								                select sale_dept_cd 
                                                  from hr_co_depart_0 
                                                  connect by prior dept_cd = up_dept_cd
                                                  start with dept_cd = (    select dept_cd 
                                                                              from hr_co_depart_0 
                                                                             where level = 2
                                                                              connect by  dept_cd = prior up_dept_cd
                                                                              start with dept_cd = (select dept_cd from hr_hc_empbas_0 where emp_no in (select insa_sawon_id from sale0007 where sawon_id = #{as_emp_cd}))
                                                                       )
									             )													 
				            )
	    </when>
		<when test="as_assgnCode eq '27027' or as_assgnCode eq '27030' or as_assgnCode eq '27035' ">
		  AND C.SAWON_ID IN (SELECT SAWON_ID FROM SALE.SALE0007 WHERE DEPT_CD = #{as_dept_cd})
		</when>  
		<when test="as_assgnCode eq '27040' or as_assgnCode eq '27050'">
		  AND C.SAWON_ID = #{as_emp_cd} 
		</when>  
		</choose>
								
		
		<![CDATA[
		  AND (NVL(A.TOT,0) <> 0 OR NVL(B.BEFORE_AMT,0) <> 0)
	    ]]>
	</select>
	
	<select id="getIndirectGridList" parameterType="hashmap" resultType="com.hanaph.saleon.business.vo.CustomerLedgerVO">
	
		<if test="page != null">
			SELECT *
				FROM (SELECT T0.*, FLOOR((ROWNUM - 1) / #{perPageRow,jdbcType=INTEGER} + 1) PAGE
	        		FROM (
    	</if>
		<![CDATA[
						SELECT C.CUST_ID                     CUST_ID,
						       C.CUST_NM                     CUST_NM
						  FROM (SELECT 1                             SEQ,
						               A.RCUST_ID                    CUST_ID,
						               (NVL(B.AMT,0) + NVL(B.VAT,0)) TOT
						          FROM SALE.SALE0207 A, 
						               SALE.SALE0208 B, 
						               SALE.SALE0004 D,
						               SALE.SALE0203 E
						         WHERE A.DEAL_NO = B.DEAL_NO
						           AND A.YMD     = B.YMD
						           AND B.ITEM_ID = D.ITEM_ID
						           AND A.YMD BETWEEN #{ad_fr_date,jdbcType=VARCHAR} AND #{ad_to_date,jdbcType=VARCHAR}
						           ]]>
								<if test="as_fr_cust != ''">
								   AND A.RCUST_ID = #{as_fr_cust,jdbcType=VARCHAR}
								</if>
								<![CDATA[
						           AND A.GUMAE_NO = E.GUMAE_NO(+)
						        UNION ALL /*  수금(할인) 내역 */
						        SELECT 2                             SEQ,
						               A.RCUST_ID                    CUST_ID,
						               NVL(-(CASH_AMT),0)            TOT
						          FROM SALE.SALE0401  A
						         WHERE A.YMD         BETWEEN #{ad_fr_date,jdbcType=VARCHAR} AND #{ad_to_date,jdbcType=VARCHAR}
						           ]]>
								<if test="as_fr_cust != ''">
								   AND A.RCUST_ID = #{as_fr_cust,jdbcType=VARCHAR}
								</if>
								<![CDATA[
						           AND A.CASH_AMT      <> 0
						        UNION ALL
						        SELECT 2                             SEQ,
						               A.RCUST_ID                    CUST_ID,
						               NVL(-(AMT),0)                 TOT
						          FROM SALE.SALE0402  B,
						               SALE.SALE0401  A,
						               (SELECT CODE1, CODE1_NM FROM  SALE.SALE0001 WHERE CODE_GB = '0007') C
						         WHERE A.YMD         BETWEEN #{ad_fr_date,jdbcType=VARCHAR} AND #{ad_to_date,jdbcType=VARCHAR}
						           AND A.JUNPYO_NO   = B.JUNPYO_NO
						           ]]>
								<if test="as_fr_cust != ''">
								   AND A.RCUST_ID = #{as_fr_cust,jdbcType=VARCHAR}
								</if>
								<![CDATA[
						           AND B.BILL_GB = C.CODE1(+))  A,
						       (SELECT RCUST_ID                 CUST_ID,
						               NVL(SUM(BEFORE_AMT),0)   BEFORE_AMT
						          FROM (SELECT RCUST_ID,                   /*전월 잔액 */
						                       BEFORE_AMT      BEFORE_AMT
						                  FROM SALE.SALE0306
						                 WHERE YMD         = TO_DATE(SUBSTR(#{ad_fr_date}, 1, 7) || '-01','YYYY/MM/DD')
						                   ]]>
										<if test="as_fr_cust != ''">
										   AND RCUST_ID = #{as_fr_cust,jdbcType=VARCHAR}
										</if>
										<![CDATA[
						                 UNION ALL
						                SELECT RCUST_ID,                  /*금월의 조회조건 기간까지의 잔액*/
						                       NVL(A.AMT,0) + NVL(A.VAT,0)  
						                       BEFORE_AMT
						                  FROM SALE.SALE0207  B,
						                       SALE.SALE0208  A
						                 WHERE A.DEAL_NO    = B.DEAL_NO
						                   AND A.YMD        = B.YMD
						                   ]]>
										<if test="as_fr_cust != ''">
										   AND B.RCUST_ID = #{as_fr_cust,jdbcType=VARCHAR}
										</if>
										<![CDATA[
						                   AND A.YMD        >= TO_DATE(SUBSTR(#{ad_fr_date}, 1, 7) || '-01','YYYY/MM/DD')
						                   AND A.YMD        <  #{ad_fr_date,jdbcType=VARCHAR}
						                     UNION all
						                SELECT RCUST_ID,     
						                       (NVL(A.bill_amt,0) + NVL(A.cash_amt,0))*-1  
						                       BEFORE_AMT
						                  FROM SALE.SALE0401  A
						                 WHERE A.YMD        >= TO_DATE(SUBSTR(#{ad_fr_date}, 1, 7) || '-01','YYYY/MM/DD')
						                   AND A.YMD        <  #{ad_fr_date,jdbcType=VARCHAR}
						                   ]]>
										<if test="as_fr_cust != ''">
										   AND A.RCUST_ID = #{as_fr_cust,jdbcType=VARCHAR}
										</if>
										<![CDATA[
						                   )
						         GROUP BY RCUST_ID          )  B,
						      SALE.SALE0003 C
						WHERE C.CUST_ID    = A.CUST_ID(+)
						  AND C.CUST_ID    = B.CUST_ID(+)
						  ]]>
						<if test="as_fr_cust != ''">
						  AND C.CUST_ID = #{as_fr_cust,jdbcType=VARCHAR}
						</if>


						<choose>
						<when test="as_assgnCode eq '27020' or as_assgnCode eq '27025'">
						  AND C.SAWON_ID IN (SELECT SAWON_ID 
											   FROM SALE.SALE0007 
										      WHERE DEPT_CD IN (
												                select sale_dept_cd 
				                                                  from hr_co_depart_0 
				                                                  connect by prior dept_cd = up_dept_cd
				                                                  start with dept_cd = (    select dept_cd 
				                                                                              from hr_co_depart_0 
				                                                                             where level = 2
				                                                                              connect by  dept_cd = prior up_dept_cd
				                                                                              start with dept_cd = (select dept_cd from hr_hc_empbas_0 where emp_no in (select insa_sawon_id from sale0007 where sawon_id = #{as_emp_cd}))
				                                                                       )
													             )													 
								            )
					    </when>
						<when test="as_assgnCode eq '27027' or as_assgnCode eq '27030' or as_assgnCode eq '27035' ">
						  AND C.SAWON_ID IN (SELECT SAWON_ID FROM SALE.SALE0007 WHERE DEPT_CD = #{as_dept_cd})
						</when>  
						<when test="as_assgnCode eq '27040' or as_assgnCode eq '27050'">
						  AND C.SAWON_ID = #{as_emp_cd} 
						</when>  
						</choose>
						
						<![CDATA[
						  AND (NVL(A.TOT,0) <> 0 OR NVL(B.BEFORE_AMT,0) <> 0)
						GROUP BY C.CUST_ID, C.CUST_NM
		                ]]>
		 
					<if test="sidx != ''">
						ORDER BY ${sidx} ${sord}
					</if>
		
				<if test="page != null">
					) T0
				)
				WHERE PAGE = #{page,jdbcType=INTEGER}
				</if>
	</select>
	
	<select id="getIndirectGridTotalCount" parameterType="hashmap" resultType="com.hanaph.saleon.business.vo.CustomerLedgerVO">
	<![CDATA[
		SELECT COUNT(DISTINCT(C.CUST_ID)) AS total_cnt
		  FROM (SELECT 1                             SEQ,
		               A.RCUST_ID                    CUST_ID,
		               (NVL(B.AMT,0) + NVL(B.VAT,0)) TOT
		          FROM SALE.SALE0207 A, 
		               SALE.SALE0208 B, 
		               SALE.SALE0004 D,
		               SALE.SALE0203 E
		         WHERE A.DEAL_NO = B.DEAL_NO
		           AND A.YMD     = B.YMD
		           AND B.ITEM_ID = D.ITEM_ID
		           AND A.YMD BETWEEN #{ad_fr_date,jdbcType=VARCHAR} AND #{ad_to_date,jdbcType=VARCHAR}
		           ]]>
				<if test="as_fr_cust != ''">
				   AND A.RCUST_ID = #{as_fr_cust,jdbcType=VARCHAR}
				</if>
				<![CDATA[
		           AND A.GUMAE_NO = E.GUMAE_NO(+)
		        UNION ALL /*  수금(할인) 내역 */
		        SELECT 2                             SEQ,
		               A.RCUST_ID                    CUST_ID,
		               NVL(-(CASH_AMT),0)            TOT
		          FROM SALE.SALE0401  A
		         WHERE A.YMD         BETWEEN #{ad_fr_date,jdbcType=VARCHAR} AND #{ad_to_date,jdbcType=VARCHAR}
		           ]]>
				<if test="as_fr_cust != ''">
				   AND A.RCUST_ID = #{as_fr_cust,jdbcType=VARCHAR}
				</if>
				<![CDATA[
		           AND A.CASH_AMT      <> 0
		        UNION ALL
		        SELECT 2                             SEQ,
		               A.RCUST_ID                    CUST_ID,
		               NVL(-(AMT),0)                 TOT
		          FROM SALE.SALE0402  B,
		               SALE.SALE0401  A,
		               (SELECT CODE1, CODE1_NM FROM  SALE.SALE0001 WHERE CODE_GB = '0007') C
		         WHERE A.YMD         BETWEEN #{ad_fr_date,jdbcType=VARCHAR} AND #{ad_to_date,jdbcType=VARCHAR}
		           AND A.JUNPYO_NO   = B.JUNPYO_NO
		           ]]>
				<if test="as_fr_cust != ''">
				   AND A.RCUST_ID = #{as_fr_cust,jdbcType=VARCHAR}
				</if>
				<![CDATA[
		           AND B.BILL_GB = C.CODE1(+))  A,
		       (SELECT RCUST_ID                 CUST_ID,
		               NVL(SUM(BEFORE_AMT),0)   BEFORE_AMT
		          FROM (SELECT RCUST_ID,                   /*전월 잔액 */
		                       BEFORE_AMT      BEFORE_AMT
		                  FROM SALE.SALE0306
		                 WHERE YMD         = TO_DATE(SUBSTR(#{ad_fr_date}, 1, 7) || '-01','YYYY/MM/DD')
		                   ]]>
						<if test="as_fr_cust != ''">
						   AND RCUST_ID = #{as_fr_cust,jdbcType=VARCHAR}
						</if>
						<![CDATA[
		                 UNION ALL
		                SELECT RCUST_ID,                  /*금월의 조회조건 기간까지의 잔액*/
		                       NVL(A.AMT,0) + NVL(A.VAT,0)  
		                       BEFORE_AMT
		                  FROM SALE.SALE0207  B,
		                       SALE.SALE0208  A
		                 WHERE A.DEAL_NO    = B.DEAL_NO
		                   AND A.YMD        = B.YMD
		                   ]]>
						<if test="as_fr_cust != ''">
						   AND B.RCUST_ID = #{as_fr_cust,jdbcType=VARCHAR}
						</if>
						<![CDATA[
		                   AND A.YMD        >= TO_DATE(SUBSTR(#{ad_fr_date}, 1, 7) || '-01','YYYY/MM/DD')
		                   AND A.YMD        <  #{ad_fr_date,jdbcType=VARCHAR}
		                     UNION all
		                SELECT RCUST_ID,     
		                       (NVL(A.bill_amt,0) + NVL(A.cash_amt,0))*-1  
		                       BEFORE_AMT
		                  FROM SALE.SALE0401  A
		                 WHERE A.YMD        >= TO_DATE(SUBSTR(#{ad_fr_date}, 1, 7) || '-01','YYYY/MM/DD')
		                   AND A.YMD        <  #{ad_fr_date,jdbcType=VARCHAR}
		                   ]]>
						<if test="as_fr_cust != ''">
						   AND A.RCUST_ID = #{as_fr_cust,jdbcType=VARCHAR}
						</if>
						<![CDATA[
		                   )
		         GROUP BY RCUST_ID          )  B,
		      SALE.SALE0003 C
		WHERE C.CUST_ID    = A.CUST_ID(+)
		  AND C.CUST_ID    = B.CUST_ID(+)
		  ]]>
		<if test="as_fr_cust != ''">
		  AND C.CUST_ID = #{as_fr_cust,jdbcType=VARCHAR}
		</if>

		<choose>
		<when test="as_assgnCode eq '27020' or as_assgnCode eq '27025'">
		  AND C.SAWON_ID IN (SELECT SAWON_ID 
							   FROM SALE.SALE0007 
						      WHERE DEPT_CD IN (
								                select sale_dept_cd 
                                                  from hr_co_depart_0 
                                                  connect by prior dept_cd = up_dept_cd
                                                  start with dept_cd = (    select dept_cd 
                                                                              from hr_co_depart_0 
                                                                             where level = 2
                                                                              connect by  dept_cd = prior up_dept_cd
                                                                              start with dept_cd = (select dept_cd from hr_hc_empbas_0 where emp_no in (select insa_sawon_id from sale0007 where sawon_id = #{as_emp_cd}))
                                                                       )
									             )													 
				            )
	    </when>
		<when test="as_assgnCode eq '27027' or as_assgnCode eq '27030' or as_assgnCode eq '27035' ">
		  AND C.SAWON_ID IN (SELECT SAWON_ID FROM SALE.SALE0007 WHERE DEPT_CD = #{as_dept_cd})
		</when>  
		<when test="as_assgnCode eq '27040' or as_assgnCode eq '27050'">
		  AND C.SAWON_ID = #{as_emp_cd} 
		</when>  
		</choose>

		<![CDATA[ 
		  AND (NVL(A.TOT,0) <> 0 OR NVL(B.BEFORE_AMT,0) <> 0)
	    ]]>
	</select>
	
	<select id="getCustomerLedgerGridList" parameterType="hashmap" resultType="com.hanaph.saleon.business.vo.CustomerLedgerVO">
	
		<if test="page != null">
			SELECT *
				FROM (SELECT T0.*, FLOOR((ROWNUM - 1) / #{perPageRow,jdbcType=INTEGER} + 1) PAGE
	        		FROM (
    	</if>
		<![CDATA[
						SELECT TO_CHAR(A.YMD,'YYYYMM')       YM,
						       TO_CHAR (A.YMD, 'YYYY-MM-DD') YMD,
						       C.CUST_ID                     CUST_ID,
						       A.RCUST_ID                    RCUST_ID,
						       C.VOU_NO                      VOU_NO,
						       C.CUST_NM||'('||C.CUST_ID||')' CUST_NM,
						       RTRIM(C.ADDR1)||' '||RTRIM(C.ADDR2)  ADDR,
						       C.PRESIDENT                    PRESIDENT,
						       E.SAWON_ID                     SAWON_ID,
						       E.SAWON_NM                     SAWON_NM,
						       D.CUST_NM                      RCUST_NM,
						       A.ITEM_ID                      ITEM_ID,
						       DECODE(A.YMD,null,'****  거래내역 없음  ****',A.ITEM_NM) ITEM_NM,
						       A.STANDARD                    STANDARD,
						       A.QTY                         QTY,
						       A.DANGA                       DANGA,
						       NVL(A.AMT,0)                  AMT,
						       NVL(A.VAT,0)                  VAT,
						       NVL(A.SUKUM,0)                SUKUM,
						       NVL(A.AMT,0) + NVL(A.VAT,0)   TOT,
						       NVL(B.BEFORE_AMT,0)           BEFORE_AMT,
						       A.DEAL_NO                     DEAL_NO,
						       A.DC_AMT                      DC_AMT,
						       A.DC_QTY                      DC_QTY,
						       DECODE(A.DC_EN_YN,'Y',A.DC_AMT) 
						                                     DC_EN_AMT,
						       A.DC_EN_YN                    DC_EN_YN,
						       C.TEL                         TEL,
						       SUM(NVL(A.AMT,0)+NVL(A.VAT,0)-NVL(A.SUKUM,0)) OVER (PARTITION BY C.CUST_ID ORDER BY C.CUST_ID, A.YMD, A.RCUST_ID
						       ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)+NVL(B.BEFORE_AMT,0) AS REM_AMT,
						       A.BIGO                        BIGO
						  FROM (SELECT 1                             SEQ,
						               A.YMD                         YMD,
						               A.CUST_ID                     CUST_ID,
						               A.RCUST_ID                    RCUST_ID,
						               B.ITEM_ID                     ITEM_ID,
						               D.ITEM_NM                     ITEM_NM,
						               D.STANDARD                    STANDARD,
						               B.QTY                         QTY,
						               B.DANGA                       DANGA,
						               B.AMT                         AMT,
						               B.VAT                         VAT,
						               B.DC_AMT                      DC_AMT,
						               B.DC_QTY                      DC_QTY,
						               B.DC_EN_YN                    DC_EN_YN,
						               0                             SUKUM,
						               (NVL(B.AMT,0) + NVL(B.VAT,0)) TOT,
						               A.DEAL_NO                     DEAL_NO,
						               DECODE(E.GUMAE_GB,'12',E.BIGO,'13',E.BIGO,'') BIGO
						          FROM SALE.SALE0207 A, 
						               SALE.SALE0208 B, 
						               SALE.SALE0004 D,
						               SALE.SALE0203 E
						         WHERE A.DEAL_NO = B.DEAL_NO
						           AND A.YMD     = B.YMD
						           AND B.ITEM_ID = D.ITEM_ID
						           AND A.YMD BETWEEN #{ad_fr_date,jdbcType=VARCHAR} AND #{ad_to_date,jdbcType=VARCHAR}
						           AND A.CUST_ID = #{as_cust_id,jdbcType=VARCHAR}
						           AND A.GUMAE_NO = E.GUMAE_NO(+)
						        UNION ALL /*  수금(할인) 내역 */
						        SELECT 2                             SEQ,
						               A.YMD                         YMD,
						               A.CUST_ID                     CUST_ID,
						               A.RCUST_ID                    RCUST_ID,
						               DECODE(A.JUNPYO_GB,'01','현금','10','매출할인','20','부실채권','30','거래이관','35','대손상각','40','잡수익','45','손실정리'
						                                 ,'50','부도어음대체','55','폐업상품입고','기타수금')
						                                             ITEM_ID,
						               BIGO                          ITEM_NM,
						               ''                            STANDARD,
						               0                             QTY,
						               0                             DANGA,
						               0                             AMT,
						               0                             VAT,
						               0                             DC_AMT,
						               0                             DC_QTY,
						               ''                            DC_EN_YN,
						               CASH_AMT                      SUKUM,
						               NVL(-(CASH_AMT),0)            TOT,
						               ''                            DEAL_NO,
						               ''                            BIGO
						          FROM SALE.SALE0401  A
						         WHERE A.YMD         BETWEEN #{ad_fr_date,jdbcType=VARCHAR} AND #{ad_to_date,jdbcType=VARCHAR}
						           AND A.CUST_ID     = #{as_cust_id,jdbcType=VARCHAR}
						           AND A.CASH_AMT      <> 0
						        UNION ALL
						        SELECT 2                             SEQ,
						               A.YMD                         YMD,
						               A.CUST_ID                     CUST_ID,
						               A.RCUST_ID                    RCUST_ID,
						               C.CODE1_NM                    ITEM_ID,                                             
						               B.BILL_NO                     ITEM_NM,
						               ''                            STANDARD,
						               0                             QTY,
						               0                             DANGA,
						               0                             AMT,
						               0                             VAT,
						               0                             DC_AMT,
						               0                             DC_QTY,
						               ''                            DC_EN_YN,
						               AMT                           SUKUM,
						               NVL(-(AMT),0)                 TOT,
						               ''                            DEAL_NO,
						               DECODE(C.CODE1,'100','',B.END_YMD) BIGO
						          FROM SALE.SALE0402  B,
						               SALE.SALE0401  A,
						               (SELECT CODE1, CODE1_NM FROM  SALE.SALE0001 WHERE CODE_GB = '0007') C
						         WHERE A.YMD         BETWEEN #{ad_fr_date,jdbcType=VARCHAR} AND #{ad_to_date,jdbcType=VARCHAR}
						           AND A.JUNPYO_NO   = B.JUNPYO_NO
						           AND A.CUST_ID     = #{as_cust_id,jdbcType=VARCHAR}
						           AND B.BILL_GB = C.CODE1(+))  A,
						       (SELECT CUST_ID                  CUST_ID,
						               NVL(SUM(BEFORE_AMT),0)   BEFORE_AMT
						          FROM (SELECT CUST_ID,                   /*전월 잔액 */
						                       BEFORE_AMT      BEFORE_AMT
						                  FROM SALE.SALE0306
						                 WHERE CUST_ID     = #{as_cust_id,jdbcType=VARCHAR}
						                   AND YMD         = TO_DATE(SUBSTR(#{ad_fr_date}, 1, 7) || '-01','YYYY/MM/DD')
						                 UNION ALL
						                SELECT CUST_ID,                  /*금월의 조회조건 기간까지의 잔액*/
						                       NVL(A.AMT,0) + NVL(A.VAT,0)  
						                       BEFORE_AMT
						                  FROM SALE.SALE0207  B,
						                       SALE.SALE0208  A
						                 WHERE A.DEAL_NO    = B.DEAL_NO
						                   AND A.YMD        = B.YMD
						                   AND B.CUST_ID    = #{as_cust_id,jdbcType=VARCHAR}
						                   AND A.YMD        >= TO_DATE(SUBSTR(#{ad_fr_date}, 1, 7) || '-01','YYYY/MM/DD')
						                   AND A.YMD        <  #{ad_fr_date,jdbcType=VARCHAR}
						                     UNION all
						                SELECT CUST_ID,     
						                       (NVL(A.bill_amt,0) + NVL(A.cash_amt,0))*-1  
						                       BEFORE_AMT
						                  FROM SALE.SALE0401  A
						                 WHERE A.CUST_ID    = #{as_cust_id,jdbcType=VARCHAR}
						                   AND A.YMD        >= TO_DATE(SUBSTR(#{ad_fr_date}, 1, 7) || '-01','YYYY/MM/DD')
						                   AND A.YMD        <  #{ad_fr_date,jdbcType=VARCHAR})
						         GROUP BY CUST_ID          )  B,
						      SALE.SALE0003 C,
						      SALE.SALE0003 D,
						      (SELECT B.SAWON_ID, B.SAWON_NM, B.DEPT_CD, C.DEPT_NM 
						         FROM SALE.SALE0007 B, SALE.SALE0008 C  
						        WHERE B.DEPT_CD = C.DEPT_CD) E
						WHERE C.CUST_ID     = #{as_cust_id,jdbcType=VARCHAR}
						  AND C.CUST_ID    = A.CUST_ID(+)
						  AND C.CUST_ID    = B.CUST_ID(+)
						  AND A.RCUST_ID   = D.CUST_ID(+)
						  AND C.SAWON_ID   = E.SAWON_ID(+)
						  AND (NVL(A.TOT,0) <> 0 OR NVL(B.BEFORE_AMT,0) <> 0)
		]]>
		 
					<if test="sidx != ''">
						ORDER BY ${sidx} ${sord}
					</if>
		
				<if test="page != null">
					) T0
				)
				WHERE PAGE = #{page,jdbcType=INTEGER}
				</if>
	</select>
	
	<select id="getCustomerLedgerGridTotalCount" parameterType="hashmap" resultType="com.hanaph.saleon.business.vo.CustomerLedgerVO">
	<![CDATA[
		SELECT COUNT(*) AS total_cnt, SUM(NVL(A.AMT, 0)) total_amt, SUM(NVL(A.VAT, 0)) total_vat,
			   SUM(NVL(A.TOT, 0)) total_tot, SUM(NVL(A.SUKUM, 0)) total_sukum, SUM(NVL(A.DC_AMT, 0)) total_dc_amt
		  FROM (SELECT 1                             SEQ,
		               A.YMD                         YMD,
		               A.CUST_ID                     CUST_ID,
		               A.RCUST_ID                    RCUST_ID,
		               B.ITEM_ID                     ITEM_ID,
		               D.ITEM_NM                     ITEM_NM,
		               D.STANDARD                    STANDARD,
		               B.QTY                         QTY,
		               B.DANGA                       DANGA,
		               B.AMT                         AMT,
		               B.VAT                         VAT,
		               B.DC_AMT                      DC_AMT,
		               B.DC_QTY                      DC_QTY,
		               B.DC_EN_YN                    DC_EN_YN,
		               0                             SUKUM,
		               (NVL(B.AMT,0) + NVL(B.VAT,0)) TOT,
		               A.DEAL_NO                     DEAL_NO,
		               DECODE(E.GUMAE_GB,'12',E.BIGO,'13',E.BIGO,'') BIGO
		          FROM SALE.SALE0207 A, 
		               SALE.SALE0208 B, 
		               SALE.SALE0004 D,
		               SALE.SALE0203 E
		         WHERE A.DEAL_NO = B.DEAL_NO
		           AND A.YMD     = B.YMD
		           AND B.ITEM_ID = D.ITEM_ID
		           AND A.YMD BETWEEN #{ad_fr_date,jdbcType=VARCHAR} AND #{ad_to_date,jdbcType=VARCHAR}
		           AND A.CUST_ID = #{as_cust_id,jdbcType=VARCHAR}
		           AND A.GUMAE_NO = E.GUMAE_NO(+)
		        UNION ALL /*  수금(할인) 내역 */
		        SELECT 2                             SEQ,
		               A.YMD                         YMD,
		               A.CUST_ID                     CUST_ID,
		               A.RCUST_ID                    RCUST_ID,
		               DECODE(A.JUNPYO_GB,'01','현금','10','매출할인','20','부실채권','30','거래이관','35','대손상각','40','잡수익','45','손실정리'
		                                 ,'50','부도어음대체','55','폐업상품입고','기타수금')
		                                             ITEM_ID,
		               BIGO                          ITEM_NM,
		               ''                            STANDARD,
		               0                             QTY,
		               0                             DANGA,
		               0                             AMT,
		               0                             VAT,
		               0                             DC_AMT,
		               0                             DC_QTY,
		               ''                            DC_EN_YN,
		               CASH_AMT                      SUKUM,
		               NVL(-(CASH_AMT),0)            TOT,
		               ''                            DEAL_NO,
		               ''                            BIGO
		          FROM SALE.SALE0401  A
		         WHERE A.YMD         BETWEEN #{ad_fr_date,jdbcType=VARCHAR} AND #{ad_to_date,jdbcType=VARCHAR}
		           AND A.CUST_ID     = #{as_cust_id,jdbcType=VARCHAR}
		           AND A.CASH_AMT      <> 0
		        UNION ALL
		        SELECT 2                             SEQ,
		               A.YMD                         YMD,
		               A.CUST_ID                     CUST_ID,
		               A.RCUST_ID                    RCUST_ID,
		               C.CODE1_NM                    ITEM_ID,                                             
		               B.BILL_NO                     ITEM_NM,
		               ''                            STANDARD,
		               0                             QTY,
		               0                             DANGA,
		               0                             AMT,
		               0                             VAT,
		               0                             DC_AMT,
		               0                             DC_QTY,
		               ''                            DC_EN_YN,
		               AMT                           SUKUM,
		               NVL(-(AMT),0)                 TOT,
		               ''                            DEAL_NO,
		               DECODE(C.CODE1,'100','',B.END_YMD) BIGO
		          FROM SALE.SALE0402  B,
		               SALE.SALE0401  A,
		               (SELECT CODE1, CODE1_NM FROM  SALE.SALE0001 WHERE CODE_GB = '0007') C
		         WHERE A.YMD         BETWEEN #{ad_fr_date,jdbcType=VARCHAR} AND #{ad_to_date,jdbcType=VARCHAR}
		           AND A.JUNPYO_NO   = B.JUNPYO_NO
		           AND A.CUST_ID     = #{as_cust_id,jdbcType=VARCHAR}
		           AND B.BILL_GB = C.CODE1(+))  A,
		       (SELECT CUST_ID                  CUST_ID,
		               NVL(SUM(BEFORE_AMT),0)   BEFORE_AMT
		          FROM (SELECT CUST_ID,                   /*전월 잔액 */
		                       BEFORE_AMT      BEFORE_AMT
		                  FROM SALE.SALE0306
		                 WHERE CUST_ID     = #{as_cust_id,jdbcType=VARCHAR}
		                   AND YMD         = TO_DATE(SUBSTR(#{ad_fr_date}, 1, 7) || '-01','YYYY/MM/DD')
		                 UNION ALL
		                SELECT CUST_ID,                  /*금월의 조회조건 기간까지의 잔액*/
		                       NVL(A.AMT,0) + NVL(A.VAT,0)  
		                       BEFORE_AMT
		                  FROM SALE.SALE0207  B,
		                       SALE.SALE0208  A
		                 WHERE A.DEAL_NO    = B.DEAL_NO
		                   AND A.YMD        = B.YMD
		                   AND B.CUST_ID    = #{as_cust_id,jdbcType=VARCHAR}
		                   AND A.YMD        >= TO_DATE(SUBSTR(#{ad_fr_date}, 1, 7) || '-01','YYYY/MM/DD')
		                   AND A.YMD        <  #{ad_fr_date,jdbcType=VARCHAR}
		                     UNION all
		                SELECT CUST_ID,     
		                       (NVL(A.bill_amt,0) + NVL(A.cash_amt,0))*-1  
		                       BEFORE_AMT
		                  FROM SALE.SALE0401  A
		                 WHERE A.CUST_ID    = #{as_cust_id,jdbcType=VARCHAR}
		                   AND A.YMD        >= TO_DATE(SUBSTR(#{ad_fr_date}, 1, 7) || '-01','YYYY/MM/DD')
		                   AND A.YMD        <  #{ad_fr_date,jdbcType=VARCHAR})
		         GROUP BY CUST_ID          )  B,
		      SALE.SALE0003 C,
		      SALE.SALE0003 D,
		      (SELECT B.SAWON_ID, B.SAWON_NM, B.DEPT_CD, C.DEPT_NM 
		         FROM SALE.SALE0007 B, SALE.SALE0008 C  
		        WHERE B.DEPT_CD = C.DEPT_CD) E
		WHERE C.CUST_ID     = #{as_cust_id,jdbcType=VARCHAR}
		  AND C.CUST_ID    = A.CUST_ID(+)
		  AND C.CUST_ID    = B.CUST_ID(+)
		  AND A.RCUST_ID   = D.CUST_ID(+)
		  AND C.SAWON_ID   = E.SAWON_ID(+)
		  AND (NVL(A.TOT,0) <> 0 OR NVL(B.BEFORE_AMT,0) <> 0)
	]]>
	</select>
	
	<select id="getIndirectLedgerGridList" parameterType="hashmap" resultType="com.hanaph.saleon.business.vo.CustomerLedgerVO">
	
		<if test="page != null">
			SELECT *
				FROM (SELECT T0.*, FLOOR((ROWNUM - 1) / #{perPageRow,jdbcType=INTEGER} + 1) PAGE
	        		FROM (
    	</if>
		<![CDATA[
						SELECT TO_CHAR(A.YMD,'YYYYMM')       YM,
						       TO_CHAR (A.YMD, 'YYYY-MM-DD') YMD,
						       C.CUST_ID                     RCUST_ID,
						       A.CUST_ID                     CUST_ID,
						       C.VOU_NO                      VOU_NO,
						       D.CUST_NM                     RCUST_NM,
						       RTRIM(C.ADDR1)||' '||RTRIM(C.ADDR2)
						                                      ADDR,
						       C.PRESIDENT                    PRESIDENT,
						       E.SAWON_ID                     SAWON_ID,
						       E.SAWON_NM                     SAWON_NM,
						       D.CUST_NM                      CUST_NM,
						       A.ITEM_ID                      ITEM_ID,
						       DECODE(A.YMD,null,'****  거래내역 없음  ****',A.ITEM_ID||' '||A.ITEM_NM)
						                                     ITEM_NM,
						       A.STANDARD                    STANDARD,
						       A.QTY                         QTY,
						       A.DANGA                       DANGA,
						       NVL(A.AMT,0)                  AMT,
						       NVL(A.VAT,0)                  VAT,
						       NVL(A.SUKUM,0)                SUKUM,
						       NVL(A.AMT,0) + NVL(A.VAT,0)   TOT,
						       NVL(B.BEFORE_AMT,0)           BEFORE_AMT,
						       A.DEAL_NO                     DEAL_NO,
						       A.DC_AMT                      DC_AMT,
						       A.DC_QTY                      DC_QTY,
						       DECODE(A.DC_EN_YN,'Y',A.DC_AMT) 
						                                     DC_EN_AMT,
						       A.DC_EN_YN                    DC_EN_YN,
						       C.TEL                         TEL,
						       SUM(NVL(A.AMT,0)+NVL(A.VAT,0)-NVL(A.SUKUM,0)) OVER (PARTITION BY C.CUST_ID ORDER BY C.CUST_ID, A.YMD, A.RCUST_ID
						       ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)+NVL(B.BEFORE_AMT,0) AS REM_AMT,
						       A.BIGO                        BIGO
						  FROM (SELECT 1                             SEQ,
						               A.YMD                         YMD,
						               A.CUST_ID                     CUST_ID,
						               A.RCUST_ID                    RCUST_ID,
						               B.ITEM_ID                     ITEM_ID,
						               D.ITEM_NM                     ITEM_NM,
						               D.STANDARD                    STANDARD,
						               B.QTY                         QTY,
						               B.DANGA                       DANGA,
						               B.AMT                         AMT,
						               B.VAT                         VAT,
						               B.DC_AMT                      DC_AMT,
						               B.DC_QTY                      DC_QTY,
						               B.DC_EN_YN                    DC_EN_YN,
						               0                             SUKUM,
						               (NVL(B.AMT,0) + NVL(B.VAT,0)) TOT,
						               A.DEAL_NO                     DEAL_NO,
						               DECODE(E.GUMAE_GB,'12',E.BIGO,'13',E.BIGO,'') BIGO
						          FROM SALE.SALE0207 A, 
						               SALE.SALE0208 B, 
						               SALE.SALE0004 D,
						               SALE.SALE0203 E
						         WHERE A.DEAL_NO = B.DEAL_NO
						           AND A.YMD     = B.YMD
						           AND B.ITEM_ID = D.ITEM_ID
						           AND A.YMD BETWEEN #{ad_fr_date,jdbcType=VARCHAR} AND #{ad_to_date,jdbcType=VARCHAR}
						           AND A.RCUST_ID = #{as_cust_id,jdbcType=VARCHAR}
						           AND A.GUMAE_NO = E.GUMAE_NO(+)
						        UNION ALL /*  수금(할인) 내역 */
						        SELECT 2                             SEQ,
						               A.YMD                         YMD,
						               A.CUST_ID                     CUST_ID,
						               A.RCUST_ID                    RCUST_ID,
						               DECODE(A.JUNPYO_GB,'01','현금','10','매출할인','20','부실채권','30','거래이관','35','대손상각','40','잡수익','45','손실정리'
						                                 ,'50','부도어음대체','55','폐업상품입고','기타수금')
						                                             ITEM_ID,
						               BIGO                          ITEM_NM,
						               ''                            STANDARD,
						               0                             QTY,
						               0                             DANGA,
						               0                             AMT,
						               0                             VAT,
						               0                             DC_AMT,
						               0                             DC_QTY,
						               ''                            DC_EN_YN,
						               CASH_AMT                      SUKUM,
						               NVL(-(CASH_AMT),0)            TOT,
						               ''                            DEAL_NO,
						               ''                            BIGO
						          FROM SALE.SALE0401  A
						         WHERE A.YMD         BETWEEN #{ad_fr_date,jdbcType=VARCHAR} AND #{ad_to_date,jdbcType=VARCHAR}
						           AND A.RCUST_ID     = #{as_cust_id,jdbcType=VARCHAR}
						           AND A.CASH_AMT      <> 0
						        UNION ALL
						        SELECT 2                             SEQ,
						               A.YMD                         YMD,
						               A.CUST_ID                     CUST_ID,
						               A.RCUST_ID                    RCUST_ID,
						               C.CODE1_NM                    ITEM_ID,                                             
						               B.BILL_NO                     ITEM_NM,
						               ''                            STANDARD,
						               0                             QTY,
						               0                             DANGA,
						               0                             AMT,
						               0                             VAT,
						               0                             DC_AMT,
						               0                             DC_QTY,
						               ''                            DC_EN_YN,
						               AMT                           SUKUM,
						               NVL(-(AMT),0)                 TOT,
						               ''                            DEAL_NO,
						               DECODE(C.CODE1,'100','',B.END_YMD) BIGO
						          FROM SALE.SALE0402  B,
						               SALE.SALE0401  A,
						               (SELECT CODE1, CODE1_NM FROM  SALE.SALE0001 WHERE CODE_GB = '0007') C
						         WHERE A.YMD         BETWEEN #{ad_fr_date,jdbcType=VARCHAR} AND #{ad_to_date,jdbcType=VARCHAR}
						           AND A.JUNPYO_NO   = B.JUNPYO_NO
						           AND A.RCUST_ID     = #{as_cust_id,jdbcType=VARCHAR}
						           AND B.BILL_GB = C.CODE1(+))  A,
						       (SELECT RCUST_ID                 RCUST_ID,
						               NVL(SUM(BEFORE_AMT),0)   BEFORE_AMT
						          FROM (SELECT RCUST_ID,                   /*전월 잔액 */
						                       BEFORE_AMT      BEFORE_AMT
						                  FROM SALE.SALE0306
						                 WHERE RCUST_ID     = #{as_cust_id,jdbcType=VARCHAR}
						                   AND YMD         = TO_DATE(SUBSTR(#{ad_fr_date}, 1, 7) || '-01','YYYY/MM/DD')
						                 UNION ALL
						                SELECT RCUST_ID,                  /*금월의 조회조건 기간까지의 잔액*/
						                       NVL(A.AMT,0) + NVL(A.VAT,0)  
						                       BEFORE_AMT
						                  FROM SALE.SALE0207  B,
						                       SALE.SALE0208  A
						                 WHERE A.DEAL_NO    = B.DEAL_NO
						                   AND A.YMD        = B.YMD
						                   AND B.RCUST_ID    = #{as_cust_id,jdbcType=VARCHAR}
						                   AND A.YMD        >= TO_DATE(SUBSTR(#{ad_fr_date}, 1, 7) || '-01','YYYY/MM/DD')
						                   AND A.YMD        <  #{ad_fr_date,jdbcType=VARCHAR}
						                     UNION all
						                SELECT RCUST_ID,     
						                       (NVL(A.bill_amt,0) + NVL(A.cash_amt,0))*-1  
						                       BEFORE_AMT
						                  FROM SALE.SALE0401  A
						                 WHERE A.RCUST_ID    = #{as_cust_id,jdbcType=VARCHAR}
						                   AND A.YMD        >= TO_DATE(SUBSTR(#{ad_fr_date}, 1, 7) || '-01','YYYY/MM/DD')
						                   AND A.YMD        <  #{ad_fr_date,jdbcType=VARCHAR})
						         GROUP BY RCUST_ID          )  B,
						      SALE.SALE0003 C,
						      SALE.SALE0003 D,
						      (SELECT B.SAWON_ID, B.SAWON_NM, B.DEPT_CD, C.DEPT_NM 
						         FROM SALE.SALE0007 B, SALE.SALE0008 C  
						        WHERE B.DEPT_CD = C.DEPT_CD) E
						WHERE C.CUST_ID     = #{as_cust_id,jdbcType=VARCHAR}
						  AND C.CUST_ID    = A.RCUST_ID(+)
						  AND C.CUST_ID    = B.RCUST_ID(+)
						  AND A.CUST_ID    = D.CUST_ID(+)
						  AND C.SAWON_ID   = E.SAWON_ID(+)
						  AND (NVL(A.TOT,0) <> 0 OR NVL(B.BEFORE_AMT,0) <> 0)
		]]>
		 
					<if test="sidx != ''">
						ORDER BY ${sidx} ${sord}
					</if>
		
				<if test="page != null">
					) T0
				)
				WHERE PAGE = #{page,jdbcType=INTEGER}
				</if>
	</select>
	
	<select id="getIndirectLedgerGridTotalCount" parameterType="hashmap" resultType="com.hanaph.saleon.business.vo.CustomerLedgerVO">
	<![CDATA[
		SELECT COUNT(*) AS total_cnt, SUM(NVL(A.AMT, 0)) total_amt, SUM(NVL(A.VAT, 0)) total_vat,
			   SUM(NVL(A.TOT, 0)) total_tot, SUM(NVL(A.SUKUM, 0)) total_sukum, SUM(NVL(A.DC_AMT, 0)) total_dc_amt
		  FROM (SELECT 1                             SEQ,
		               A.YMD                         YMD,
		               A.CUST_ID                     CUST_ID,
		               A.RCUST_ID                    RCUST_ID,
		               B.ITEM_ID                     ITEM_ID,
		               D.ITEM_NM                     ITEM_NM,
		               D.STANDARD                    STANDARD,
		               B.QTY                         QTY,
		               B.DANGA                       DANGA,
		               B.AMT                         AMT,
		               B.VAT                         VAT,
		               B.DC_AMT                      DC_AMT,
		               B.DC_QTY                      DC_QTY,
		               B.DC_EN_YN                    DC_EN_YN,
		               0                             SUKUM,
		               (NVL(B.AMT,0) + NVL(B.VAT,0)) TOT,
		               A.DEAL_NO                     DEAL_NO,
		               DECODE(E.GUMAE_GB,'12',E.BIGO,'13',E.BIGO,'') BIGO
		          FROM SALE.SALE0207 A, 
		               SALE.SALE0208 B, 
		               SALE.SALE0004 D,
		               SALE.SALE0203 E
		         WHERE A.DEAL_NO = B.DEAL_NO
		           AND A.YMD     = B.YMD
		           AND B.ITEM_ID = D.ITEM_ID
		           AND A.YMD BETWEEN #{ad_fr_date,jdbcType=VARCHAR} AND #{ad_to_date,jdbcType=VARCHAR}
		           AND A.RCUST_ID = #{as_cust_id,jdbcType=VARCHAR}
		           AND A.GUMAE_NO = E.GUMAE_NO(+)
		        UNION ALL /*  수금(할인) 내역 */
		        SELECT 2                             SEQ,
		               A.YMD                         YMD,
		               A.CUST_ID                     CUST_ID,
		               A.RCUST_ID                    RCUST_ID,
		               DECODE(A.JUNPYO_GB,'01','현금','10','매출할인','20','부실채권','30','거래이관','35','대손상각','40','잡수익','45','손실정리'
		                                 ,'50','부도어음대체','55','폐업상품입고','기타수금')
		                                             ITEM_ID,
		               BIGO                          ITEM_NM,
		               ''                            STANDARD,
		               0                             QTY,
		               0                             DANGA,
		               0                             AMT,
		               0                             VAT,
		               0                             DC_AMT,
		               0                             DC_QTY,
		               ''                            DC_EN_YN,
		               CASH_AMT                      SUKUM,
		               NVL(-(CASH_AMT),0)            TOT,
		               ''                            DEAL_NO,
		               ''                            BIGO
		          FROM SALE.SALE0401  A
		         WHERE A.YMD         BETWEEN #{ad_fr_date,jdbcType=VARCHAR} AND #{ad_to_date,jdbcType=VARCHAR}
		           AND A.RCUST_ID     = #{as_cust_id,jdbcType=VARCHAR}
		           AND A.CASH_AMT      <> 0
		        UNION ALL
		        SELECT 2                             SEQ,
		               A.YMD                         YMD,
		               A.CUST_ID                     CUST_ID,
		               A.RCUST_ID                    RCUST_ID,
		               C.CODE1_NM                    ITEM_ID,                                             
		               B.BILL_NO                     ITEM_NM,
		               ''                            STANDARD,
		               0                             QTY,
		               0                             DANGA,
		               0                             AMT,
		               0                             VAT,
		               0                             DC_AMT,
		               0                             DC_QTY,
		               ''                            DC_EN_YN,
		               AMT                           SUKUM,
		               NVL(-(AMT),0)                 TOT,
		               ''                            DEAL_NO,
		               DECODE(C.CODE1,'100','',B.END_YMD) BIGO
		          FROM SALE.SALE0402  B,
		               SALE.SALE0401  A,
		               (SELECT CODE1, CODE1_NM FROM  SALE.SALE0001 WHERE CODE_GB = '0007') C
		         WHERE A.YMD         BETWEEN #{ad_fr_date,jdbcType=VARCHAR} AND #{ad_to_date,jdbcType=VARCHAR}
		           AND A.JUNPYO_NO   = B.JUNPYO_NO
		           AND A.RCUST_ID     = #{as_cust_id,jdbcType=VARCHAR}
		           AND B.BILL_GB = C.CODE1(+))  A,
		       (SELECT RCUST_ID                 RCUST_ID,
		               NVL(SUM(BEFORE_AMT),0)   BEFORE_AMT
		          FROM (SELECT RCUST_ID,                   /*전월 잔액 */
		                       BEFORE_AMT      BEFORE_AMT
		                  FROM SALE.SALE0306
		                 WHERE RCUST_ID     = #{as_cust_id,jdbcType=VARCHAR}
		                   AND YMD         = TO_DATE(SUBSTR(#{ad_fr_date}, 1, 7) || '-01','YYYY/MM/DD')
		                 UNION ALL
		                SELECT RCUST_ID,                  /*금월의 조회조건 기간까지의 잔액*/
		                       NVL(A.AMT,0) + NVL(A.VAT,0)  
		                       BEFORE_AMT
		                  FROM SALE.SALE0207  B,
		                       SALE.SALE0208  A
		                 WHERE A.DEAL_NO    = B.DEAL_NO
		                   AND A.YMD        = B.YMD
		                   AND B.RCUST_ID    = #{as_cust_id,jdbcType=VARCHAR}
		                   AND A.YMD        >= TO_DATE(SUBSTR(#{ad_fr_date}, 1, 7) || '-01','YYYY/MM/DD')
		                   AND A.YMD        <  #{ad_fr_date,jdbcType=VARCHAR}
		                     UNION all
		                SELECT RCUST_ID,     
		                       (NVL(A.bill_amt,0) + NVL(A.cash_amt,0))*-1  
		                       BEFORE_AMT
		                  FROM SALE.SALE0401  A
		                 WHERE A.RCUST_ID    = #{as_cust_id,jdbcType=VARCHAR}
		                   AND A.YMD        >= TO_DATE(SUBSTR(#{ad_fr_date}, 1, 7) || '-01','YYYY/MM/DD')
		                   AND A.YMD        <  #{ad_fr_date,jdbcType=VARCHAR})
		         GROUP BY RCUST_ID          )  B,
		      SALE.SALE0003 C,
		      SALE.SALE0003 D,
		      (SELECT B.SAWON_ID, B.SAWON_NM, B.DEPT_CD, C.DEPT_NM 
		         FROM SALE.SALE0007 B, SALE.SALE0008 C  
		        WHERE B.DEPT_CD = C.DEPT_CD) E
		WHERE C.CUST_ID     = #{as_cust_id,jdbcType=VARCHAR}
		  AND C.CUST_ID    = A.RCUST_ID(+)
		  AND C.CUST_ID    = B.RCUST_ID(+)
		  AND A.CUST_ID    = D.CUST_ID(+)
		  AND C.SAWON_ID   = E.SAWON_ID(+)
		  AND (NVL(A.TOT,0) <> 0 OR NVL(B.BEFORE_AMT,0) <> 0)
	]]>
	</select>
	
</mapper>
	
