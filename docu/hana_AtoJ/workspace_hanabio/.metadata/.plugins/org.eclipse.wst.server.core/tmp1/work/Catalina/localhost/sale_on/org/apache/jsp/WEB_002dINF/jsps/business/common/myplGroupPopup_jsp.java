/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.55
 * Generated at: 2015-12-18 02:36:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsps.business.common;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.hanaph.saleon.member.vo.LoginUserVO;
import com.hanaph.saleon.common.utils.StringUtil;
import com.hanaph.saleon.common.utils.WebUtil;

public final class myplGroupPopup_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/include/head.jsp", Long.valueOf(1421734197738L));
    _jspx_dependants.put("/common/path.jsp", Long.valueOf(1430124365934L));
    _jspx_dependants.put("/common/sessionCheck.jsp", Long.valueOf(1430193978042L));
    _jspx_dependants.put("/include/footer_pop.jsp", Long.valueOf(1421734197738L));
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	LoginUserVO loginUserVO = (LoginUserVO) session.getAttribute("onlineUser");	//세션생성 세션에서 emp_code를 가져온다.
	
	String userEmpCode  = "";		// 사원 코드
	String userEmpName  = "";		// 사원 이름
	String userEmpGb    = "";		// 사원 구분 
	String userDeptCode = "";		// 부서코드
	String userDeptName = "";		// 부서명
	String userGradeName = "";		// 사원 Grade Name
	String userDeptCd = "";			//hanahr 부서정보
	String userAssgnCd = "";			//직책 코드
	String userAssgnName = "";			//직책 코드명
	/*
	 * 로그인 정보가 있는경우
	 */
	if(loginUserVO != null){
		userEmpCode = StringUtil.nvl(loginUserVO.getEmp_code());    	// 사용자코드
		userEmpName = StringUtil.nvl(loginUserVO.getEmp_name());		// 사용자명
		userEmpGb = StringUtil.nvl(loginUserVO.getEmp_gb());			// 사용자 구분 코드
		userDeptCode = StringUtil.nvl(loginUserVO.getDept_code());  	// 부서 코드
		userDeptName = StringUtil.nvl(loginUserVO.getDept_name());		// 부서 명
		userGradeName = StringUtil.nvl(loginUserVO.getGrade_name());	// 사용자 부서명
		userDeptCd = StringUtil.nvl(loginUserVO.getDept_cd());  	    // 부서 코드
		userAssgnCd = StringUtil.nvl(loginUserVO.getAssgn_cd());  	    // 직책 코드
		userAssgnName = StringUtil.nvl(loginUserVO.getAssgn_name());  	// 직책 코드명
	}
	
	/* 현재 URI에 해당하는 프로그램 No(pgm_no) */
	String currPgmNoByUri = request.getAttribute("pgm_no") == null ? "" : (String) request.getAttribute("pgm_no");

      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');

	com.hanaph.saleon.common.utils.Environment env = new com.hanaph.saleon.common.utils.Environment();	//환경 변수
	
	String HTTPS_ONLINE_WEB_ROOT = env.getValue("https.web_root_dir.url");
	String HTTPS_ONLINE_ROOT = env.getValue("https.root_dir.url");
	String ONLINE_WEB_ROOT = env.getValue("web_root_dir.url");		//URL 프로토콜, 도메인, 포트, 서브컨텍스트명, web디렉토리
	String ONLINE_ROOT = env.getValue("root_dir.url");				//URL 프로토콜, 도메인, 포트, 서브컨텍스트명
	String JDBC_URL = env.getValue("jdbc.url");
	

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("\t");
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tvar ONLINE_ROOT = \"");
      out.print(ONLINE_ROOT );
      out.write("\";\t\t/*환경변수*/\r\n");
      out.write("</script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/jquery-1.11.1.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/jquery-ui-1.10.4.custom.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/jquery.easyui.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/common.js\" charset=\"utf-8\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/default.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/placeholders.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/css/easyui.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/css/main.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/css/jquery-ui.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/css/smoothness/jquery-ui.theme.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/css/fonts.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/css/gw_sample.css\">");
      out.write("\r\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/css/ui.jqgrid.css\">\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/grid.locale-kr.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/jquery.jqGrid.min.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/business.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/formCheck.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\r\n");
      out.write("\tvar rowIdArray = [];\t\t//P/L그룹 배열\r\n");
      out.write("\t\r\n");
      out.write("\t/* 화면의 Dom 객체가 모두 준비되었을 때 */\r\n");
      out.write("\t$(document).ready(function(){\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/* jqGrid의 jsonReader 옵션 전역 설정. row 반복 형태의 json 처리. */\r\n");
      out.write("\t    jsonReader : {\r\n");
      out.write("            repeatitems: false;\r\n");
      out.write("    \t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/* P/L그룹 목록 */\r\n");
      out.write("\t\t$(\"#grid_list\").jqGrid({\r\n");
      out.write("\t\t\turl:\"");
      out.print(ONLINE_ROOT);
      out.write("/business/myplGroupGridList.do\",\r\n");
      out.write("\t\t\tmtype:\"get\",\r\n");
      out.write("\t\t\tdatatype:\"json\",\r\n");
      out.write("\t\t\tcolNames:[\"PL그룹명\",\"설명\",\"정렬순서\",\"plgrp_nm\"],\r\n");
      out.write("\t\t\tcolModel:[\r\n");
      out.write("\t\t\t\t{name:\"plgrp_nm\",\tindex:\"plgrp_nm\", \talign:\"left\",\t\twidth:120,\t\tformatter:plgrpNmFormatter},\t\t//PL그룹명\r\n");
      out.write("\t\t\t\t{name:\"comments\",\tindex:\"comments\", \talign:\"center\", \twidth:200,\t\tformatter:commentsFormatter},\t\t//설명\r\n");
      out.write("\t\t\t\t{name:\"sort_seq\",\tindex:\"sort_seq\",\talign:\"center\",\t\twidth:70,\t\tformatter:sortSeqFormatter},\t\t//정렬순서\r\n");
      out.write("\t\t\t\t{name:\"plgrp_no\",\tindex:\"plgrp_no\", \thidden:true,\t\tkey:true\t}\t\t//plgrp_nm\r\n");
      out.write("\t\t\t],\r\n");
      out.write("\t\t\theight:415,\r\n");
      out.write("\t\t\trownumWidth : 30,\r\n");
      out.write("\t\t\tautowidth:true,\r\n");
      out.write("\t\t\tloadComplete: function(data){\t//조회 완료시 호출되는 function\r\n");
      out.write("\t\t\t\tif(data.records != 0){\t\t//조회 결과가 있을 경우\r\n");
      out.write("\t\t\t\t\t$('.total').html(\"결과 총 \"+data.records+\"건\");\r\n");
      out.write("\t\t\t\t\tchangeModifyForm(data.rows[0].plgrp_no, \"plgrp_nm\");\t\t//첫 로우를 수정폼으로 변경\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("   \t\t});\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t/* 브라우저 창의 사이즈가 변경될 때 */\r\n");
      out.write("\t$(window).resize(function(){\r\n");
      out.write("\t\t$(\"#grid_list\").setGridWidth($(\".box_type01\").width() , true);\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t/**\r\n");
      out.write("\t*\tP/L그룹 목록 조회\r\n");
      out.write("\t*/\r\n");
      out.write("\tfunction getGridList(){\r\n");
      out.write("\t\t// 호출\r\n");
      out.write("\t\t$(\"#grid_list\").jqGrid('setGridParam',{url:\"");
      out.print(ONLINE_ROOT);
      out.write("/business/myplGroupGridList.do\"}).trigger(\"reloadGrid\");\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t/**\r\n");
      out.write("\t * \t추가 버튼 클릭시\r\n");
      out.write("\t */\r\n");
      out.write("\tfunction insertPlGroup(){\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(\"#p_insert\").attr(\"disabled\",true);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif($(\"#plgrp_nm\").val()==''){\r\n");
      out.write("\t\t\talert(\"PL그룹명을 먼저 입력해주십시오.\");\r\n");
      out.write("\t\t\t$(\"#p_insert\").attr(\"disabled\",false);\r\n");
      out.write("\t\t\t$(\"#plgrp_nm\").focus();\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif (formCheck.getByteLength($(\"#plgrp_nm\").val())>100){\r\n");
      out.write("\t\t\talert('PL그룹명은 한글 50자, 영문 100자로 입력해주세요(100byte)');\r\n");
      out.write("\t\t\t$(\"#p_insert\").attr(\"disabled\",false);\r\n");
      out.write("\t\t\t$(\"#plgrp_nm\").focus();\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif (formCheck.getByteLength($(\"#comments\").val())>100){\r\n");
      out.write("\t\t\talert('설명은 한글 50자, 영문 100자로 입력해주세요(100byte)');\r\n");
      out.write("\t\t\t$(\"#p_insert\").attr(\"disabled\",false);\r\n");
      out.write("\t\t\t$(\"#comments\").focus();\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(formCheck.isNumer($(\"#sort_seq\").val())){\r\n");
      out.write("\t\t\talert(\"정렬순서에는 숫자만 입력가능합니다.\");\r\n");
      out.write("\t\t\t$(\"#sort_seq\").focus();\r\n");
      out.write("\t\t\t$(\"#p_insert\").attr(\"disabled\",false);\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\ttype:\"POST\",\r\n");
      out.write("\t\t\tasync: false,\r\n");
      out.write("\t\t\turl:\"");
      out.print(ONLINE_ROOT);
      out.write("/business/insertPlGroupAjax.do\",\r\n");
      out.write("\t\t\tdata:$(\"#frm\").serialize(),\r\n");
      out.write("\t\t\tdataType:\"json\",\r\n");
      out.write("\t\t\tsuccess:function(data){\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif(data.result==\"Y\"){\r\n");
      out.write("\t\t\t\t\t//입력한값 empty\r\n");
      out.write("\t\t\t\t\t$('#plgrp_nm').val(\"\");\r\n");
      out.write("\t\t\t\t\t$('#comments').val(\"\");\r\n");
      out.write("\t\t\t\t\t$('#sort_seq').val(\"\");\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\talert(\"저장하였습니다.\");\r\n");
      out.write("\t\t\t\t\topener.getGridList();\r\n");
      out.write("\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\talert(\"저장되지 않았습니다. 다시 시도하여 주세요.\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t},complete:function(){\r\n");
      out.write("\t\t\t\t//추가버튼 다시 사용\r\n");
      out.write("\t\t\t\t$(\"#p_insert\").attr(\"disabled\",false);\r\n");
      out.write("\t\t\t\t//grid reload\r\n");
      out.write("\t\t\t\tgetGridList();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t/**\r\n");
      out.write("\t * P/L그룹 목록 그리드. P/L그룹명 컬럼 클릭시 수정폼으로 변경\r\n");
      out.write("\t * @param cellvalue\t현재 컬럼 값\r\n");
      out.write("\t * @param rowObject\t현재 row 데이터\r\n");
      out.write("\t * @returns {String}\t수정폼으로 변경하게 하는 html\r\n");
      out.write("\t */\r\n");
      out.write("\tfunction plgrpNmFormatter(cellvalue, rowObject){\r\n");
      out.write("\t\tvar returnValue = \"<div id='plgrpNmLayer_\"+rowObject.rowId+\"' onclick='javascript:changeModifyForm(\"+rowObject.rowId+\",\\\"plgrp_nm\\\");'>\"+cellvalue+\"&nbsp;</div>\";\r\n");
      out.write("\t\treturnValue += \"<div id='plgrpNmInputLayer_\"+rowObject.rowId+\"' style='display:none;'>\";\r\n");
      out.write("\t\treturnValue += \"<input type='text' name='plgrp_nm' id='plgrp_nm_\"+rowObject.rowId+\"' value='\"+cellvalue+\"' onKeyDown='if(event.keyCode==13 || event.keyCode==9){removeOnblur(\"+rowObject.rowId+\",\\\"plgrp_nm\\\");  return false;}' onblur='javascript:changeModifyForm(\"+rowObject.rowId+\",\\\"plgrp_nm\\\");' />\";\r\n");
      out.write("\t\treturnValue += \"</div>\";\r\n");
      out.write("\t\t\r\n");
      out.write("\t\treturn returnValue;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t/**\r\n");
      out.write("\t *\tP/L그룹 목록 그리드. P/L그룹 코멘트 컬럼 클릭시 수정폼으로 변경\r\n");
      out.write("\t * @param cellvalue\t현재 컬럼 값\r\n");
      out.write("\t * @param rowObject\t현재 row 데이터\r\n");
      out.write("\t * @returns {String}\t\t수정폼으로 변경하게 하는 html\r\n");
      out.write("\t */\r\n");
      out.write("\tfunction commentsFormatter(cellvalue, rowObject){\r\n");
      out.write("\t\tvar returnValue = \"<div id='commentsLayer_\"+rowObject.rowId+\"' onclick='javascript:changeModifyForm(\"+rowObject.rowId+\",\\\"comments\\\");'>\"+cellvalue+\"&nbsp;</div>\";\r\n");
      out.write("\t\treturnValue += \"<div id='commentsInputLayer_\"+rowObject.rowId+\"' style='display:none;'>\";\r\n");
      out.write("\t\treturnValue += \"<input type='text' name='comments' id='comments_\"+rowObject.rowId+\"' value='\"+cellvalue+\"' onKeyDown='if(event.keyCode==13 || event.keyCode==9){removeOnblur(\"+rowObject.rowId+\",\\\"comments\\\");  return false;} ' onblur='javascript:changeModifyForm(\"+rowObject.rowId+\",\\\"comments\\\");' />\";\r\n");
      out.write("\t\treturnValue += \"</div>\";\r\n");
      out.write("\t\t\r\n");
      out.write("\t\treturn returnValue;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t/**\r\n");
      out.write("\t *\tP/L그룹 목록 그리드. P/L그룹 정렬순서 컬럼 클릭시 수정폼으로 변경\r\n");
      out.write("\t * @param cellvalue\t현재 컬럼 값\r\n");
      out.write("\t * @param rowObject\t현재 row 데이터\r\n");
      out.write("\t * @returns {String}\t수정폼으로 변경하게 하는 html\r\n");
      out.write("\t */\r\n");
      out.write("\tfunction sortSeqFormatter(cellvalue, rowObject){\r\n");
      out.write("\t\t// 사용내역 포맷\r\n");
      out.write("\t\tvar returnValue = \"<div id='sortSeqLayer_\"+rowObject.rowId+\"' onclick='javascript:changeModifyForm(\"+rowObject.rowId+\",\\\"sort_seq\\\");'>\"+cellvalue+\"&nbsp;</div>\";\r\n");
      out.write("\t\treturnValue += \"<div id='sortSeqInputLayer_\"+rowObject.rowId+\"' style='display:none;'>\";\r\n");
      out.write("\t\treturnValue += \"<input type='text' name='sort_seq' id='sort_seq_\"+rowObject.rowId+\"' value='\"+cellvalue+\"' onKeyDown='if(event.keyCode==13 || event.keyCode==9){removeOnblur(\"+rowObject.rowId+\",\\\"sort_seq\\\");  return false;}' onblur='javascript:changeModifyForm(\"+rowObject.rowId+\",\\\"sort_seq\\\");' />\";\r\n");
      out.write("\t\treturnValue += \"</div>\";\r\n");
      out.write("\t\t\r\n");
      out.write("\t\treturn returnValue;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t/**\r\n");
      out.write("\t * 탭/엔터 입력 시 onblur 이벤트 제거 및 다음 수정폼으로 이동\r\n");
      out.write("\t * @param rowId\t현재 row id\r\n");
      out.write("\t * @param type\t컬럼 type\r\n");
      out.write("\t */\r\n");
      out.write("\tfunction removeOnblur(rowId, type){\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif (\"plgrp_nm\" == type) {\r\n");
      out.write("\t\t\t//$(\"#plgrp_nm_\"+rowId).attr(\"onblur\", \"\");\r\n");
      out.write("\t\t\t/**\r\n");
      out.write("\t\t\t * @param rowId\r\n");
      out.write("\t\t\t * @param type\r\n");
      out.write("\t\t\t * @returns {Boolean}\r\n");
      out.write("\t\t\t */\r\n");
      out.write("\t\t\ttype = \"comments\";\r\n");
      out.write("\t\t} else if (\"comments\" == type) {\r\n");
      out.write("\t\t\t//$(\"#comments_\"+rowId).attr(\"onblur\", \"\");\r\n");
      out.write("\t\t\ttype = \"sort_seq\";\r\n");
      out.write("\t\t} else if (\"sort_seq\" == type) {\r\n");
      out.write("\t\t\t//$(\"#sort_seq_\"+rowId).attr(\"onblur\", \"\");\r\n");
      out.write("\t\t\trowId = Commons.jqGridGetNextRowId('grid_list', rowId);\t//다음 로우 id 구함\r\n");
      out.write("\t\t\ttype = \"plgrp_nm\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tchangeModifyForm(rowId, type);\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t/**\r\n");
      out.write("\t*\ttext 입력 폼 변경\r\n");
      out.write("\t*/\r\n");
      out.write("\tfunction changeModifyForm(rowId, type){\r\n");
      out.write("\t\tvar divForm = \"\";\r\n");
      out.write("\t\tvar textForm = \"\";\r\n");
      out.write("\t\tvar inputLayer = \"\";\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif (\"plgrp_nm\" == type) { // type에 따른 target 설정\r\n");
      out.write("\t\t\tdivForm = $(\"#plgrpNmLayer_\"+rowId);\r\n");
      out.write("\t\t\ttextForm = $(\"#plgrp_nm_\"+rowId);\r\n");
      out.write("\t\t\tinputLayer = $(\"#plgrpNmInputLayer_\"+rowId);\r\n");
      out.write("\t\t} else if (\"comments\" == type) {\r\n");
      out.write("\t\t\tdivForm = $(\"#commentsLayer_\"+rowId);\r\n");
      out.write("\t\t\ttextForm = $(\"#comments_\"+rowId);\r\n");
      out.write("\t\t\tinputLayer = $(\"#commentsInputLayer_\"+rowId);\r\n");
      out.write("\t\t} else if (\"sort_seq\" == type) {\r\n");
      out.write("\t\t\tdivForm = $(\"#sortSeqLayer_\"+rowId);\r\n");
      out.write("\t\t\ttextForm = $(\"#sort_seq_\"+rowId);\r\n");
      out.write("\t\t\tinputLayer = $(\"#sortSeqInputLayer_\"+rowId);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif (divForm.css(\"display\") == \"none\") { // 입력폼 감추고 영역 보이기  \r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif (\"plgrp_nm\" == type) {\r\n");
      out.write("\t\t\t\tif (formCheck.getByteLength($(\"#plgrp_nm_\"+rowId).val())>100){\r\n");
      out.write("\t\t\t\t\talert('PL그룹명은 한글 50자, 영문 100자로 입력해주세요(100byte)');\r\n");
      out.write("\t\t\t\t\t$(\"#plgrp_nm_\"+rowId).focus();\r\n");
      out.write("\t\t\t\t\ttextForm.attr(\"onblur\", \"changeModifyForm('\"+rowId+\"', '\"+type+\"');\"); // onblur 이벤트 생성\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t$(\"#plgrpNmLayer_\"+rowId).text(textForm.val() + \" \"); // value 셋팅\r\n");
      out.write("\t\t\t} else if (\"comments\" == type) {\r\n");
      out.write("\t\t\t\tif (formCheck.getByteLength($(\"#comments_\"+rowId).val())>100){\r\n");
      out.write("\t\t\t\t\talert('설명은 한글 50자, 영문 100자로 입력해주세요(100byte)');\r\n");
      out.write("\t\t\t\t\t$(\"#comments_\"+rowId).focus();\r\n");
      out.write("\t\t\t\t\ttextForm.attr(\"onblur\", \"changeModifyForm('\"+rowId+\"', '\"+type+\"');\"); // onblur 이벤트 생성\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t$(\"#commentsLayer_\"+rowId).text(textForm.val() + \" \"); // value 셋팅\r\n");
      out.write("\t\t\t} else if (\"sort_seq\" == type) {\r\n");
      out.write("\t\t\t\tif(formCheck.isNumer($(\"#sort_seq_\"+rowId).val())){\r\n");
      out.write("\t\t\t\t\talert(\"정렬순서에는 숫자만 입력가능합니다.\");\r\n");
      out.write("\t\t\t\t\t$(\"#sort_seq_\"+rowId).focus();\r\n");
      out.write("\t\t\t\t\ttextForm.attr(\"onblur\", \"changeModifyForm('\"+rowId+\"', '\"+type+\"');\"); // onblur 이벤트 생성\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t$(\"#sortSeqLayer_\"+rowId).text(textForm.val() + \" \"); // value 셋팅\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\taddRowIdArray(rowId); // 배열에 rowId 담기\r\n");
      out.write("\t\t\tinputLayer.hide(); // 입력폼 감추기\r\n");
      out.write("\t\t\tdivForm.show(); // 영역 보이기\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t} else { // 영역 감추고 입력폼 보이기\r\n");
      out.write("\t\t\ttextForm.width(textForm.parents(\"td\").width() - 1); // input size 변경\r\n");
      out.write("\t\t\ttextForm.val($.trim(divForm.text())); // value 셋팅\r\n");
      out.write("\t\t\ttextForm.attr(\"onblur\", \"changeModifyForm('\"+rowId+\"', '\"+type+\"');\"); // onblur 이벤트 생성\r\n");
      out.write("\t\t\tdivForm.hide(); // 영역 감추기\r\n");
      out.write("\t\t\tinputLayer.show(); // 입력폼 보이기\r\n");
      out.write("\t\t\ttextForm.focus();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t/**\r\n");
      out.write("\t *\t배열에 요소를 담는다.\r\n");
      out.write("\t * @param rowId\t현재 row id\r\n");
      out.write("\t */\r\n");
      out.write("\tfunction addRowIdArray(rowId){\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// 배열에 같은 값 존재여부 검색\r\n");
      out.write("\t\tvar isExist = false; // flag\r\n");
      out.write("\t\tfor (var i = 0; i < rowIdArray.length; i++) { // rowId 위치 검색\r\n");
      out.write("\t\t\tif (rowIdArray[i] == rowId) {\r\n");
      out.write("\t\t\t\tisExist = true;\r\n");
      out.write("\t\t\t\tbreak;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif (!isExist) { // 없을 경우\r\n");
      out.write("\t\t\trowIdArray.push(rowId); // 배열에 현재 rowId 더함\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t/**\r\n");
      out.write("\t * 수정 버튼 클릭시\r\n");
      out.write("\t */\r\n");
      out.write("\tfunction updatePlGroup(){\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif (rowIdArray.length > 0) { // 배열에 담긴 rowId를 기준으로 data들을 form에 담아 넘긴다\r\n");
      out.write("\t\t\tvar frm = $(\"#updateFrm\");\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tfor (var i = 0; i < rowIdArray.length; i++) { // form에 data 동적 생성\r\n");
      out.write("\t\t\t\t$(\"<input></input>\").attr({type:\"hidden\", name:\"plgrp_no\", value: rowIdArray[i]}).appendTo(frm);\r\n");
      out.write("\t\t\t\t$(\"<input></input>\").attr({type:\"hidden\", name:\"plgrp_nm\", value: $(\"#plgrp_nm_\" + rowIdArray[i]).val()}).appendTo(frm);\r\n");
      out.write("\t\t\t\t$(\"<input></input>\").attr({type:\"hidden\", name:\"comments\", value: $(\"#comments_\" + rowIdArray[i]).val()}).appendTo(frm);\r\n");
      out.write("\t\t\t\t$(\"<input></input>\").attr({type:\"hidden\", name:\"sort_seq\", value: $(\"#sort_seq_\" + rowIdArray[i]).val()}).appendTo(frm);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\ttype:\"POST\",\r\n");
      out.write("\t\t\t\tdata: frm.serialize(),\r\n");
      out.write("\t\t\t\turl:\"");
      out.print(ONLINE_ROOT);
      out.write("/business/updatePlGroup.do\",\r\n");
      out.write("\t\t\t\tdataType:\"json\",\r\n");
      out.write("\t\t\t\tsuccess:function(data){\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tif(data.result==\"Y\"){\r\n");
      out.write("\t\t\t\t\t\talert(\"수정되었습니다.\");\t\r\n");
      out.write("\t\t\t\t\t\topener.getGridList();\r\n");
      out.write("\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\talert(\"수정되지 않았습니다. 다시 시도하여 주세요.\");\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t},complete:function(){\r\n");
      out.write("\t\t\t\t\trowIdArray = []; // 배열 초기화\r\n");
      out.write("\t\t\t\t\tfrm.html(\"\"); // 폼 초기화\r\n");
      out.write("\t\t\t\t\tgetGridList(); // 그리드 호출\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\talert(\"변경 사항이 없습니다.\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t/**\r\n");
      out.write("\t * \t삭제 버튼 클릭시\r\n");
      out.write("\t */\r\n");
      out.write("\tfunction deletePlGroup(){\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(!$('#grid_list').getGridParam(\"selrow\")){\r\n");
      out.write("\t\t\talert(\"삭제할 P/L그룹을 선택해주세요.\");\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\ttype:\"POST\",\r\n");
      out.write("\t\t\t\tdata: {plgrp_no: $('#grid_list').getGridParam(\"selrow\")},\r\n");
      out.write("\t\t\t\turl:\"");
      out.print(ONLINE_ROOT);
      out.write("/business/deletePlGroup.do\",\r\n");
      out.write("\t\t\t\tdataType:\"json\",\r\n");
      out.write("\t\t\t\tsuccess:function(data){\r\n");
      out.write("\t\t\t\t\tif(data.result==\"Y\"){\r\n");
      out.write("\t\t\t\t\t\talert(\"삭제되었습니다.\");\t\r\n");
      out.write("\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\talert(\"삭제되지 않았습니다. 다시 시도하여 주세요.\");\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t},complete:function(){\r\n");
      out.write("\t\t\t\t\tgetGridList();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t</script>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<body onKeyDown=\"if(event.keyCode==13 && event.target.name!='grid_count' && event.target.name!='plgrp_nm' && event.target.name!='comments' && event.target.name!='sort_seq'){getGridList();return false;}\">\r\n");
      out.write("\t\r\n");
      out.write("\t\t<div class=\"popup\">\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<!-- ##### content start ##### -->\r\n");
      out.write("\t\t<!-- window size : 560 * 700 -->\r\n");
      out.write("\t\t\t<h1 class=\"tit\">출력 제품리스트<span class=\"subtitle\">출력할 제품리스트의 그룹을 만들어주십시오.</span></h1>\r\n");
      out.write("\t\t\t<form id=\"frm\" name=\"frm\">\r\n");
      out.write("\t\t\t\t<div class=\"wrap_pop_search\">\r\n");
      out.write("\t\t\t\t\t<label>P/L그룹 추가</label>\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" class=\"w100\" placeholder=\"그룹명\" id=\"plgrp_nm\" name=\"pl_nm\" />\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" class=\"w120\" placeholder=\"그룹설명\" id=\"comments\" name=\"pl_comments\" />\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" class=\"w120\" placeholder=\"정렬순서\" id=\"sort_seq\" name=\"pl_sort_seq\" />\r\n");
      out.write("\t\t\t\t\t<div class=\"wrap_pop_search_btn\">\r\n");
      out.write("\t\t\t\t\t\t<button type=\"button\" id=\"p_insert\" onclick=\"javascript:insertPlGroup();\">추가</button>\r\n");
      out.write("\t\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</form>\t\t\t\r\n");
      out.write("\t\t\t<div class=\"ta_r mt10\">\r\n");
      out.write("\t\t\t\t<button type=\"button\" onclick=\"javascript:getGridList();\">조회</button>\r\n");
      out.write("\t\t\t\t<button type=\"button\" onclick=\"javascript:updatePlGroup();\">수정</button>\r\n");
      out.write("\t\t\t\t<button type=\"button\" onclick=\"javascript:deletePlGroup();\">삭제</button>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<p class=\"total\">결과 총 00건</p>\r\n");
      out.write("\t\t\t<div class=\"box_type01 h440\">\r\n");
      out.write("\t\t\t\t<table id=\"grid_list\"></table>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<button class=\"close\"><span class=\"blind\">닫기</span></button>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<!-- ##### content end ##### -->\r\n");
      out.write("\t\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<form id=\"updateFrm\" name=\"updateFrm\" ></form>\r\n");
      out.write("\t");
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<div class=\"wrap_pop_foot\">\r\n");
      out.write("\t<div class=\"footer\">\r\n");
      out.write("\t\t<p>Copyright ⓒ 2014 <span class=\"copy_fc\">HANA PHARM CO.</span>, LTD. All Right Reserved.</p>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
