/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.55
 * Generated at: 2015-05-20 08:02:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsps.order.common;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.hanaph.saleon.member.vo.LoginUserVO;
import com.hanaph.saleon.common.utils.StringUtil;
import com.hanaph.saleon.common.utils.WebUtil;

public final class storeListPopup_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/include/head.jsp", Long.valueOf(1421734197738L));
    _jspx_dependants.put("/common/path.jsp", Long.valueOf(1430124365934L));
    _jspx_dependants.put("/common/sessionCheck.jsp", Long.valueOf(1430193978042L));
    _jspx_dependants.put("/include/footer_pop.jsp", Long.valueOf(1421734197738L));
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	LoginUserVO loginUserVO = (LoginUserVO) session.getAttribute("onlineUser");	//세션생성 세션에서 emp_code를 가져온다.
	
	String userEmpCode  = "";		// 사원 코드
	String userEmpName  = "";		// 사원 이름
	String userEmpGb    = "";		// 사원 구분 
	String userDeptCode = "";		// 부서코드
	String userDeptName = "";		// 부서명
	String userGradeName = "";		// 사원 Grade Name
	String userDeptCd = "";			//hanahr 부서정보
	String userAssgnCd = "";			//직책 코드
	String userAssgnName = "";			//직책 코드명
	/*
	 * 로그인 정보가 있는경우
	 */
	if(loginUserVO != null){
		userEmpCode = StringUtil.nvl(loginUserVO.getEmp_code());    	// 사용자코드
		userEmpName = StringUtil.nvl(loginUserVO.getEmp_name());		// 사용자명
		userEmpGb = StringUtil.nvl(loginUserVO.getEmp_gb());			// 사용자 구분 코드
		userDeptCode = StringUtil.nvl(loginUserVO.getDept_code());  	// 부서 코드
		userDeptName = StringUtil.nvl(loginUserVO.getDept_name());		// 부서 명
		userGradeName = StringUtil.nvl(loginUserVO.getGrade_name());	// 사용자 부서명
		userDeptCd = StringUtil.nvl(loginUserVO.getDept_cd());  	    // 부서 코드
		userAssgnCd = StringUtil.nvl(loginUserVO.getAssgn_cd());  	    // 직책 코드
		userAssgnName = StringUtil.nvl(loginUserVO.getAssgn_name());  	// 직책 코드명
	}
	
	/* 현재 URI에 해당하는 프로그램 No(pgm_no) */
	String currPgmNoByUri = request.getAttribute("pgm_no") == null ? "" : (String) request.getAttribute("pgm_no");

      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');

	com.hanaph.saleon.common.utils.Environment env = new com.hanaph.saleon.common.utils.Environment();	//환경 변수
	
	String HTTPS_ONLINE_WEB_ROOT = env.getValue("https.web_root_dir.url");
	String HTTPS_ONLINE_ROOT = env.getValue("https.root_dir.url");
	String ONLINE_WEB_ROOT = env.getValue("web_root_dir.url");		//URL 프로토콜, 도메인, 포트, 서브컨텍스트명, web디렉토리
	String ONLINE_ROOT = env.getValue("root_dir.url");				//URL 프로토콜, 도메인, 포트, 서브컨텍스트명
	String JDBC_URL = env.getValue("jdbc.url");
	

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\t<title>판매처 검색</title>\r\n");
      out.write("\t");
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tvar ONLINE_ROOT = \"");
      out.print(ONLINE_ROOT );
      out.write("\";\t\t/*환경변수*/\r\n");
      out.write("</script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/jquery-1.11.1.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/jquery-ui-1.10.4.custom.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/jquery.easyui.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/common.js\" charset=\"utf-8\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/default.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/placeholders.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/css/easyui.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/css/main.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/css/jquery-ui.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/css/smoothness/jquery-ui.theme.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/css/fonts.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/css/gw_sample.css\">");
      out.write("\r\n");
      out.write("\t<!--[if lte IE 9]><script src=\"asset/js/IE9.js\"></script><![endif]-->\r\n");
      out.write("\t<!--[if lte IE 9]><script src=\"asset/js/html5.js\"></script><![endif]-->\r\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/css/ui.jqgrid.css\">\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/grid.locale-kr.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/jquery.jqGrid.min.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/order.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t/* 화면의 Dom 객체가 모두 준비되었을 때 */\r\n");
      out.write("\t$(document).ready(function(){\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/* jqGrid의 jsonReader 옵션 전역 설정. row 반복 형태의 json 처리. */\r\n");
      out.write("\t    jsonReader : {\r\n");
      out.write("            repeatitems: false;\r\n");
      out.write("    \t}\r\n");
      out.write("\t\r\n");
      out.write("\t\t/* 거래처 조회 */\r\n");
      out.write("\t\t$(\"#grid_list\").jqGrid({\r\n");
      out.write("\t\t\tmtype:\"get\",\t\t// 요청방식\r\n");
      out.write("\t\t\tdatatype:\"json\",\t// 결과물 받을 데이터 타입\r\n");
      out.write("\t\t\tcolNames:[\"판매처코드\",\"판매처명\",\"사업자번호\",\"대표자명\"],\t\t// 컬럼명\r\n");
      out.write("\t\t\tcolModel:[\r\n");
      out.write("\t\t\t\t\t\t{name:\"cust_id\",\tindex:\"cust_id\", \twidth:100,\talign:\"center\"},\r\n");
      out.write("\t\t\t\t\t\t{name:\"cust_nm\",\tindex:\"cust_nm\", \twidth:200,\talign:\"left\"},\r\n");
      out.write("\t\t\t\t\t\t{name:\"vou_no\",\t\tindex:\"vou_no\", \twidth:120,\talign:\"center\",\tformatter:vouNoFormatter},\r\n");
      out.write("\t\t\t\t\t\t{name:\"president\",\tindex:\"president\", \twidth:120,\talign:\"left\"},\r\n");
      out.write("\t\t\t\t\t],\r\n");
      out.write("\t\t\trowNum: -1,\r\n");
      out.write("\t\t\theight:415,\r\n");
      out.write("\t\t\tautowidth:true,\r\n");
      out.write("\t\t\tbeforeProcessing: function(status){\r\n");
      out.write("\t\t\t\tif (status.records < 1) {\r\n");
      out.write("\t\t\t\t\talert(\"해당 판매처가 없습니다.\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tondblClickRow: function(){\r\n");
      out.write("\t\t\t\tOrder.selectValue();\r\n");
      out.write("\t\t\t},\r\n");
      out.write("   \t\t});\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t/* 브라우저 창의 사이즈가 변경될 때 */\r\n");
      out.write("    $(window).resize(function(){\r\n");
      out.write("\t\t$(\"#grid_list\").setGridWidth($('.pop_grid').width(), true);\t\t//grid 영역의 넓이가 동적으로 조절 \r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("\t/**\r\n");
      out.write("\t * 조회 버튼 클릭시 \r\n");
      out.write("\t */\r\n");
      out.write("\tfunction getGridList(){\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar searchKeyword = $(\"#searchKeyword\").val();\t\t//검색어\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar param = \"searchKeyword=\" + encodeURI(encodeURIComponent(searchKeyword));\t// 파라미터 셋팅\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(\"#grid_list\").jqGrid('setGridParam',{url:\"");
      out.print(ONLINE_ROOT);
      out.write("/order/common/storeGridList.do?\" + param}).trigger(\"reloadGrid\");\t\t// 호출\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t/**\r\n");
      out.write("\t *\t사업자번호 형식 변경 포맷\r\n");
      out.write("\t * @param cellvalue\tformatter가 적용되는 컬럼의 값\r\n");
      out.write("\t * @returns {String}\t사업자번호 \r\n");
      out.write("\t */\r\n");
      out.write("\tfunction vouNoFormatter(cellvalue){\r\n");
      out.write("\t\tvar returnVallue = \"\";\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif (\"\" != cellvalue) {\r\n");
      out.write("\t\t\treturnVallue = cellvalue.substring(\"0\", \"3\") + \"-\" + cellvalue.substring(\"3\", \"5\") + \"-\" + cellvalue.substring(\"5\", \"10\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\treturn returnVallue;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t</script>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<body onKeyPress=\"if(event.keyCode=='13'){getGridList(); return false;}\">\r\n");
      out.write("\t<div class=\"popup\">\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<!-- ##### content start ##### -->\r\n");
      out.write("\t\t<!-- window size : 600 * 655 -->\r\n");
      out.write("\t\t\t<h1 class=\"tit\">판매처</h1>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<div class=\"wrap_pop_search\">\r\n");
      out.write("\t\t\t\t<label>판매처코드/명</label>\r\n");
      out.write("\t\t\t\t<input type=\"text\" class=\"w330\" type=\"text\" id=\"searchKeyword\" name=\"searchKeyword\"/>\r\n");
      out.write("\t\t\t\t<button type=\"button\" onclick=\"javascript:getGridList();\">조회</button>\r\n");
      out.write("\t\t\t\t<button type=\"button\" onclick=\"javascript:Order.selectValue();\" >선택</button>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<div class=\"pop_grid box_type01 h440\">\r\n");
      out.write("\t\t\t\t<table id=\"grid_list\"></table>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<button type=\"button\" class=\"close\"><span class=\"blind\">닫기</span></button>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<!-- ##### content end ##### -->\r\n");
      out.write("\t\r\n");
      out.write("\t</div>\r\n");
      out.write("\t");
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<div class=\"wrap_pop_foot\">\r\n");
      out.write("\t<div class=\"footer\">\r\n");
      out.write("\t\t<p>Copyright ⓒ 2014 <span class=\"copy_fc\">HANA PHARM CO.</span>, LTD. All Right Reserved.</p>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
