/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.55
 * Generated at: 2017-01-16 01:37:35 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsps.mgmt.common;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.net.URLDecoder;
import com.hanaph.saleon.member.vo.LoginUserVO;
import com.hanaph.saleon.common.utils.StringUtil;
import com.hanaph.saleon.common.utils.WebUtil;

public final class userPopup_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/include/head.jsp", Long.valueOf(1421734197738L));
    _jspx_dependants.put("/common/path.jsp", Long.valueOf(1430124365934L));
    _jspx_dependants.put("/common/sessionCheck.jsp", Long.valueOf(1430193978042L));
    _jspx_dependants.put("/include/footer_pop.jsp", Long.valueOf(1421734197738L));
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	LoginUserVO loginUserVO = (LoginUserVO) session.getAttribute("onlineUser");	//세션생성 세션에서 emp_code를 가져온다.
	
	String userEmpCode  = "";		// 사원 코드
	String userEmpName  = "";		// 사원 이름
	String userEmpGb    = "";		// 사원 구분 
	String userDeptCode = "";		// 부서코드
	String userDeptName = "";		// 부서명
	String userGradeName = "";		// 사원 Grade Name
	String userDeptCd = "";			//hanahr 부서정보
	String userAssgnCd = "";			//직책 코드
	String userAssgnName = "";			//직책 코드명
	/*
	 * 로그인 정보가 있는경우
	 */
	if(loginUserVO != null){
		userEmpCode = StringUtil.nvl(loginUserVO.getEmp_code());    	// 사용자코드
		userEmpName = StringUtil.nvl(loginUserVO.getEmp_name());		// 사용자명
		userEmpGb = StringUtil.nvl(loginUserVO.getEmp_gb());			// 사용자 구분 코드
		userDeptCode = StringUtil.nvl(loginUserVO.getDept_code());  	// 부서 코드
		userDeptName = StringUtil.nvl(loginUserVO.getDept_name());		// 부서 명
		userGradeName = StringUtil.nvl(loginUserVO.getGrade_name());	// 사용자 부서명
		userDeptCd = StringUtil.nvl(loginUserVO.getDept_cd());  	    // 부서 코드
		userAssgnCd = StringUtil.nvl(loginUserVO.getAssgn_cd());  	    // 직책 코드
		userAssgnName = StringUtil.nvl(loginUserVO.getAssgn_name());  	// 직책 코드명
	}
	
	/* 현재 URI에 해당하는 프로그램 No(pgm_no) */
	String currPgmNoByUri = request.getAttribute("pgm_no") == null ? "" : (String) request.getAttribute("pgm_no");

      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');

	com.hanaph.saleon.common.utils.Environment env = new com.hanaph.saleon.common.utils.Environment();	//환경 변수
	
	String HTTPS_ONLINE_WEB_ROOT = env.getValue("https.web_root_dir.url");
	String HTTPS_ONLINE_ROOT = env.getValue("https.root_dir.url");
	String ONLINE_WEB_ROOT = env.getValue("web_root_dir.url");		//URL 프로토콜, 도메인, 포트, 서브컨텍스트명, web디렉토리
	String ONLINE_ROOT = env.getValue("root_dir.url");				//URL 프로토콜, 도메인, 포트, 서브컨텍스트명
	String JDBC_URL = env.getValue("jdbc.url");
	

      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');

	String roleNo = StringUtil.nvl((String)request.getParameter("roleNo"),"");		// role no
	String type = StringUtil.nvl((String)request.getParameter("type"),"");			// 페이지 type
	String deptCode = StringUtil.nvl((String)request.getParameter("deptCode"),"");	// 부서 코드
	String deptName = StringUtil.nvl((String)request.getParameter("deptName"),"");	// 부서명
	String empText = URLDecoder.decode(StringUtil.nvl(request.getParameter("empText")), "UTF-8");	// 사용자 이름
	
	String pageTitle = "";	// 페이지 타이틀
	String col1Name = "";	// jqgrid 컬럼에1 노출 될 text
	String col2Name = "";	// jqgrid 컬럼에2 노출 될 text
	String col3Name = "";	// jqgrid 컬럼에3 노출 될 text
	
	boolean multiselectFlag = false;	// 체크박스 여부
	
	// 권한 등록관리의 사원 팝업인 경우
	if(type.equals("roleReg")){
		pageTitle = "사원조회";
		col1Name = "부서";
		col2Name = "사원코드";
		col3Name = "사원명";
		multiselectFlag = false;
	}else{
		pageTitle = "사용자 조회";
		col1Name = "부서";
		col2Name = "사용자 코드";
		col3Name = "사용자명";
		multiselectFlag = true;
	}
	

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("\t");
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tvar ONLINE_ROOT = \"");
      out.print(ONLINE_ROOT );
      out.write("\";\t\t/*환경변수*/\r\n");
      out.write("</script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/jquery-1.11.1.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/jquery-ui-1.10.4.custom.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/jquery.easyui.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/common.js\" charset=\"utf-8\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/default.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/placeholders.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/css/easyui.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/css/main.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/css/jquery-ui.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/css/smoothness/jquery-ui.theme.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/css/fonts.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/css/gw_sample.css\">");
      out.write("\r\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/css/ui.jqgrid.css\">\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/grid.locale-kr.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/jquery.jqGrid.min.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(document).ready(function(){ \r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar lastsel2 = \"\";\t\t\t// 선택 된 행\r\n");
      out.write("\t\t\tvar selectedEmpCode = \"\";\t// 선택 된 사원,사용자 코드\r\n");
      out.write("\t\t\tvar selectedEmpName = \"\";\t// 선택 된 사원,사용자 이름\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t/**\r\n");
      out.write("\t\t\t * window dom load시 최초 호출되는 jqgrid\r\n");
      out.write("\t\t\t */\r\n");
      out.write("\t\t\t$(\"#userList\").jqGrid({\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\turl : \"");
      out.print(ONLINE_ROOT);
      out.write("/mgmt/common/userPopup.do\",\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t// 요청방식\r\n");
      out.write("\t\t\t\tmtype:\"post\",\r\n");
      out.write("\t\t\t\t// 결과물 받을 데이터 타입\r\n");
      out.write("\t\t\t\tdatatype:\"json\",\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\t// 컬럼명\r\n");
      out.write("\t\t\t\tcolNames:[\"");
      out.print(col1Name);
      out.write('"');
      out.write(',');
      out.write('"');
      out.print(col2Name);
      out.write('"');
      out.write(',');
      out.write('"');
      out.print(col3Name);
      out.write("\"],\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tcolModel:[\r\n");
      out.write("\t\t\t\t\t\t\t{name:\"dept_name\",\t\t\tindex:\"dept_name\",\t\t\talign:\"left\"},\t\t\t\t\t// 부서\r\n");
      out.write("\t\t\t\t\t\t\t{name:\"emp_code\",\t\t\tindex:\"emp_code\",\t\t\talign:\"left\", key:true},\t\t// 사원코드 \r\n");
      out.write("\t\t\t\t\t\t\t{name:\"emp_name\",\t\t\tindex:\"emp_name\",\t\t\talign:\"left\"},\t\t\t\t\t// 사원명\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t ],\r\n");
      out.write("\t\t\t\t// 그리드 캡션\r\n");
      out.write("\t\t\t\theight:416,\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\trowNum: -1,\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t//기본 정렬 값 -> 매개변수이름은 sidx(컬럼), sord(차순)로 요청된다\r\n");
      out.write("\t\t\t\tsortname :'dept_name',\r\n");
      out.write("\t\t\t\tsortorder:'desc',\r\n");
      out.write("\t\t\t\tautowidth:true,\r\n");
      out.write("\t\t\t\tmultiselect: ");
      out.print(multiselectFlag);
      out.write(",\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t// 선택된 행의 데이터 가져오기.\r\n");
      out.write("\t\t\t\tonSelectRow: function(id){\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\tif(id && id!==lastsel2){\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t$('#userList').restoreRow(lastsel2);\r\n");
      out.write("\t\t\t\t    \tlastsel2=id;\r\n");
      out.write("\t\t\t\t    \t\r\n");
      out.write("\t\t\t\t    \tvar selectedList = $(\"#userList\").getRowData(lastsel2);\r\n");
      out.write("\t\t\t\t    \t\r\n");
      out.write("\t\t\t\t    \tselectedEmpCode = selectedList.emp_code;\t\t// 사원코드 셋팅\r\n");
      out.write("\t\t\t\t    \tselectedEmpName = selectedList.emp_name;\t\t// 사원명 셋팅\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t/**\r\n");
      out.write("\t\t\t * window resize\r\n");
      out.write("\t\t\t */\r\n");
      out.write("\t\t\t$(window).resize(function(){\r\n");
      out.write("\t\t\t\t$(\"#userList\").setGridWidth($('pop_grid box_type01 h440').width() , false);\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t// 추가 버튼 클릭\r\n");
      out.write("\t\t\t$(\"#uc_save\").bind(\"click\",function(){\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tvar empCode = $(\"#userList\").getGridParam('selarrrow');\r\n");
      out.write("\t\t\t\tvar roleNo = \"");
      out.print(roleNo);
      out.write("\";\t\t\r\n");
      out.write("\t\t\t\tvar type = \"");
      out.print(type);
      out.write("\";\r\n");
      out.write("\t\t\t\tvar locationUrl = \"\";\t\t// 호출 될 url\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif(type == \"roleReg\"){\r\n");
      out.write("\t\t\t\t\topener.userSet(selectedEmpCode,selectedEmpName);\r\n");
      out.write("\t\t\t\t\tself.close();\r\n");
      out.write("\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tif(empCode == \"\"){\r\n");
      out.write("\t\t\t\t\t\talert(\"선택 된 사용자가 없습니다.\");\r\n");
      out.write("\t\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tif(type == \"inquireRole\"){\r\n");
      out.write("\t\t\t\t\t\tlocationUrl = \"");
      out.print(ONLINE_ROOT );
      out.write("/mgmt/userRoleCopyAjax.do?empCode=\"+empCode;\r\n");
      out.write("\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\tlocationUrl = \"");
      out.print(ONLINE_ROOT );
      out.write("/mgmt/insertUserRoleAjax.do?empCode=\"+empCode;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\t\ttype : \"POST\"\r\n");
      out.write("\t\t\t\t\t\t    \t, url : locationUrl\r\n");
      out.write("\t\t\t\t\t\t    \t, dataType : \"json\"\r\n");
      out.write("\t\t\t\t\t\t    \t, data : {roleNo:roleNo}\r\n");
      out.write("\t\t\t\t\t\t, success : function(data) {\r\n");
      out.write("\t\t\t\t\t\t\tif(data.resultCode > 0){\r\n");
      out.write("\t\t\t\t\t\t\t\tif(type == \"inquireRole\"){\r\n");
      out.write("\t\t\t\t\t\t\t\t\talert(\"선택 된 사용자에 ");
      out.print(empText);
      out.write("의 Role이 추가 되었습니다.\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\tself.close();\r\n");
      out.write("\t\t\t\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\t\t\t\talert(\"추가 되었습니다.\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\tself.close();\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\topener.regUserListAjax('");
      out.print(roleNo);
      out.write("');\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t, error : function(request, status, error) {\r\n");
      out.write("\t\t\t\t\t\t\talert(\"code : \" + request.status + \"\\r\\nmessage : \" + request.reponseText);\r\n");
      out.write("\t\t\t\t\t\t\tself.close();\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/**\r\n");
      out.write("\t\t * 조회 버튼 클릭 : 코드,이름 검색 조건이 있는경우와 없는 경우 사용자 조회\t\r\n");
      out.write("\t\t * @param jqgrid\t\t\tselectedType\r\n");
      out.write("\t\t * @param jqgrid\t\t\tcode\r\n");
      out.write("\t\t * @param jqgrid\t\t\tname\r\n");
      out.write("\t\t * @param request\t\t\ttype\r\n");
      out.write("\t\t * @return jqgrid\t\t\tuserList\r\n");
      out.write("\t\t */\r\n");
      out.write("\t\tfunction search(){\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\"#userList\").clearGridData(); \t// 이전 그리드 삭제\r\n");
      out.write("\t\t\t$(\"#userList\").setGridParam({\r\n");
      out.write("\t\t\t\turl : \"");
      out.print(ONLINE_ROOT);
      out.write("/mgmt/common/userPopupGridList.do\",\r\n");
      out.write("\t\t\t\tpostData : {\r\n");
      out.write("\t\t\t\t\tselectedType:$(\"#selectedType\").val(),\t\t// type\r\n");
      out.write("\t\t\t\t\tcode:$(\"#code\").val(),\t\t\t\t\t\t// 사원,사용자 코드\r\n");
      out.write("\t\t\t\t\tname:$(\"#name\").val(),\t\t\t\t\t\t// 사원,사용자 명\r\n");
      out.write("\t\t\t\t\tpageType:\"");
      out.print(type);
      out.write("\"\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}).trigger(\"reloadGrid\");\r\n");
      out.write("\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/**\r\n");
      out.write("\t\t * window load 권한 조회의 사용자 팝업일 경우\r\n");
      out.write("\t\t */\r\n");
      out.write("\t\t$(window).load(function(){\r\n");
      out.write("\t\t\t");
if("inquireRole".equals(type)){
      out.write("\r\n");
      out.write("\t\t\t\tvar empText = \"");
      out.print(empText);
      out.write("\";\r\n");
      out.write("\t\t\t\t$(\"#typeTitle\").text(empText + \"의 Role 복사\");\r\n");
      out.write("\t\t\t");
}
      out.write("\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body onkeydown=\"javascript:if(event.keyCode==13){search(); return false;}\">\r\n");
      out.write("\t<div class=\"popup\" title=\"Main\">\r\n");
      out.write("\t\t<!-- ##### content start ##### -->\r\n");
      out.write("\t\t<!-- window size : 480 * 655 -->\r\n");
      out.write("\t\t\t<h1 class=\"tit\" id=\"typeTitle\">");
      out.print(pageTitle );
      out.write("</h1>\r\n");
      out.write("\t\t\t<div class=\"wrap_pop_search\">\r\n");
      out.write("\t\t\t\t<select name=\"selectedType\" id=\"selectedType\">\r\n");
      out.write("\t\t\t\t\t<option value=\"dept\" ");
if("inquireRole".equals(type)){
      out.write(" selected ");
}
      out.write(">부서</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"emp\">사원/거래처</option>\r\n");
      out.write("\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" class=\"w100\" id=\"code\" name=\"code\" value=\"");
      out.print(deptName );
      out.write("\" />\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" class=\"w100\" id=\"name\" name=\"name\" value=\"");
      out.print(deptCode );
      out.write("\" />\r\n");
      out.write("\t\t\t\t<div class=\"wrap_pop_search_btn\">\r\n");
      out.write("\t\t\t\t\t<button onclick=\"javascript:search();\">조회</button>\r\n");
      out.write("\t\t\t\t\t<button id=\"uc_save\">확인</button>\r\n");
      out.write("\t\t\t\t\t<button id=\"uc_close\" onclick=\"self.close();\">취소</button>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"pop_grid box_type01 h440\">\r\n");
      out.write("\t\t\t\t<table id=\"userList\"></table>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<button class=\"close\"><span class=\"blind\">닫기</span></button>\r\n");
      out.write("\t\t<!-- ##### content end ##### -->\r\n");
      out.write("\t</div>\r\n");
      out.write("\t");
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<div class=\"wrap_pop_foot\">\r\n");
      out.write("\t<div class=\"footer\">\r\n");
      out.write("\t\t<p>Copyright ⓒ 2014 <span class=\"copy_fc\">HANA PHARM CO.</span>, LTD. All Right Reserved.</p>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
