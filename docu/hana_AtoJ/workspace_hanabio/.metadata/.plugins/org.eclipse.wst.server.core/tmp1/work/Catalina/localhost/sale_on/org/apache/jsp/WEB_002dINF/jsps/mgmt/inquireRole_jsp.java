/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.55
 * Generated at: 2015-08-07 01:39:40 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsps.mgmt;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.hanaph.saleon.mgmt.vo.MgmtRoleVO;
import com.hanaph.saleon.common.utils.StringUtil;
import java.util.List;
import com.hanaph.saleon.member.vo.LoginUserVO;
import com.hanaph.saleon.common.utils.StringUtil;
import com.hanaph.saleon.common.utils.WebUtil;

public final class inquireRole_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/include/head.jsp", Long.valueOf(1421734197738L));
    _jspx_dependants.put("/common/path.jsp", Long.valueOf(1430124365934L));
    _jspx_dependants.put("/include/footer.jsp", Long.valueOf(1421734197738L));
    _jspx_dependants.put("/common/sessionCheck.jsp", Long.valueOf(1430193978042L));
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	LoginUserVO loginUserVO = (LoginUserVO) session.getAttribute("onlineUser");	//세션생성 세션에서 emp_code를 가져온다.
	
	String userEmpCode  = "";		// 사원 코드
	String userEmpName  = "";		// 사원 이름
	String userEmpGb    = "";		// 사원 구분 
	String userDeptCode = "";		// 부서코드
	String userDeptName = "";		// 부서명
	String userGradeName = "";		// 사원 Grade Name
	String userDeptCd = "";			//hanahr 부서정보
	String userAssgnCd = "";			//직책 코드
	String userAssgnName = "";			//직책 코드명
	/*
	 * 로그인 정보가 있는경우
	 */
	if(loginUserVO != null){
		userEmpCode = StringUtil.nvl(loginUserVO.getEmp_code());    	// 사용자코드
		userEmpName = StringUtil.nvl(loginUserVO.getEmp_name());		// 사용자명
		userEmpGb = StringUtil.nvl(loginUserVO.getEmp_gb());			// 사용자 구분 코드
		userDeptCode = StringUtil.nvl(loginUserVO.getDept_code());  	// 부서 코드
		userDeptName = StringUtil.nvl(loginUserVO.getDept_name());		// 부서 명
		userGradeName = StringUtil.nvl(loginUserVO.getGrade_name());	// 사용자 부서명
		userDeptCd = StringUtil.nvl(loginUserVO.getDept_cd());  	    // 부서 코드
		userAssgnCd = StringUtil.nvl(loginUserVO.getAssgn_cd());  	    // 직책 코드
		userAssgnName = StringUtil.nvl(loginUserVO.getAssgn_name());  	// 직책 코드명
	}
	
	/* 현재 URI에 해당하는 프로그램 No(pgm_no) */
	String currPgmNoByUri = request.getAttribute("pgm_no") == null ? "" : (String) request.getAttribute("pgm_no");

      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');

	com.hanaph.saleon.common.utils.Environment env = new com.hanaph.saleon.common.utils.Environment();	//환경 변수
	
	String HTTPS_ONLINE_WEB_ROOT = env.getValue("https.web_root_dir.url");
	String HTTPS_ONLINE_ROOT = env.getValue("https.root_dir.url");
	String ONLINE_WEB_ROOT = env.getValue("web_root_dir.url");		//URL 프로토콜, 도메인, 포트, 서브컨텍스트명, web디렉토리
	String ONLINE_ROOT = env.getValue("root_dir.url");				//URL 프로토콜, 도메인, 포트, 서브컨텍스트명
	String JDBC_URL = env.getValue("jdbc.url");
	

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("\t");
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tvar ONLINE_ROOT = \"");
      out.print(ONLINE_ROOT );
      out.write("\";\t\t/*환경변수*/\r\n");
      out.write("</script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/jquery-1.11.1.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/jquery-ui-1.10.4.custom.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/jquery.easyui.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/common.js\" charset=\"utf-8\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/default.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/placeholders.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/css/easyui.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/css/main.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/css/jquery-ui.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/css/smoothness/jquery-ui.theme.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/css/fonts.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/css/gw_sample.css\">");
      out.write("\r\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/css/ui.jqgrid.css\">\r\n");
      out.write("\t<link rel=\"StyleSheet\" href=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/css/dtree.css\" type=\"text/css\" />\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/grid.locale-kr.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/jquery.jqGrid.min.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/dtree.js\"></script>\t\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar roleNo = \"\";\t\t\t//\trole no\r\n");
      out.write("\t\tvar lastsel2 = \"\";\t\t\t// 선택 된 sel데이터를 담기 위한 변수\r\n");
      out.write("\t\tvar selectedPgmNo = \"\";\t\t// 선택 된 프로그램 no를 담기 위한 변수\r\n");
      out.write("\t\tvar roleNoArray = [];\t\t// role no를 담기 위한 배열\r\n");
      out.write("\t\tvar empText = \"\";\t\t\t// 변경될 text\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/**\r\n");
      out.write("\t\t * window dom load시 최초 호출되는 함수\r\n");
      out.write("\t\t */\r\n");
      out.write("\t\t$(document).ready(function(){\r\n");
      out.write("\t\t\t$('#divTabsWrap > li > a').eq(0).on(\"click\", function(){\t// 사용자 탭 클릭 시\r\n");
      out.write("\t\t\t\t$('#pgmTab').hide();\t\t// 프로그램 탭 숨기기\r\n");
      out.write("\t\t\t\t$('#userTab').show();\t\t// 사용자 탭 노출\r\n");
      out.write("\t\t\t\t$('#divTabsWrap > li').eq(0).attr(\"class\",\"active\");\t// 사용자 탭 클래스 활성화\r\n");
      out.write("\t\t\t\t$('#divTabsWrap > li').eq(1).attr(\"class\",\"\");\t\t\t// 프로그램 탭 클래스 비 활성화\r\n");
      out.write("\t\t\t\tresizeJqGrid();\t\t\t\t// jqgrid resize\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$('#divTabsWrap > li > a').eq(1).on(\"click\", function(){\t// 사용자 탭 클릭 시\r\n");
      out.write("\t\t\t\t$('#userTab').hide();\t\t// 사용자 탭 숨기기\r\n");
      out.write("\t\t\t\t$('#pgmTab').show();\t\t// 프로그램 탭 노출\r\n");
      out.write("\t\t\t\t$('#divTabsWrap > li').eq(0).attr(\"class\",\"\");\t\t\t// 사용자 탭 클래스 활성화\r\n");
      out.write("\t\t\t\t$('#divTabsWrap > li').eq(1).attr(\"class\",\"active\");\t// 프로그램 탭 클래스 활성화\r\n");
      out.write("\t\t\t\tresizeJqGrid();\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t// 조회버튼 클릭\r\n");
      out.write("\t\t\t$(\"#lt_search_btn_type02\").on(\"click\",function(){\r\n");
      out.write("\t\t\t\tgetEmpListAjax();\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t//전체프로그램 조회\r\n");
      out.write("\t\t\t$(\"#totPgmTree\").empty();\r\n");
      out.write("\t\t\tCommons.treeMenuLeftAjax(\"IN_USE\");\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/**\r\n");
      out.write("\t\t * window resize함수\r\n");
      out.write("\t\t */\r\n");
      out.write("\t\t$(window).resize(function(){\r\n");
      out.write("\t\t\tresizeJqGrid();\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/**\r\n");
      out.write("\t\t * 엔터 키 입력시 해당 계정의 조회 버튼을 호출 하며 조회 버튼 권한이 있을때만 조회버튼 기능이 동작 하도록 설정\r\n");
      out.write("\t\t */\r\n");
      out.write("\t\t$(window).load(function(){\r\n");
      out.write("\t\t\t$(\"body\").on(\"keydown\", function(event){\r\n");
      out.write("\t\t\t\tif($(\"#lt_search_btn_type02\").prop('disabled') == false){\r\n");
      out.write("\t\t\t\t\tif(event.keyCode==13 && event.target.name!=\"grid_count\"){\r\n");
      out.write("\t\t\t\t\t\tgetEmpListAjax();\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/**\r\n");
      out.write("\t\t * jqgrid resize 함수\r\n");
      out.write("\t\t */\r\n");
      out.write("\t\tvar resizeJqGrid = function(){\r\n");
      out.write("\t\t\tif($(\"#userTab\").css(\"display\") == \"none\"){\t// 트리 선택시 프로그램탭이 활성화되었을 경우만...\r\n");
      out.write("\t\t\t\t$(\"#pgmRoleList\").setGridWidth($(\"#pgmRoleList\").parents('.author_box').width() , false);\r\n");
      out.write("\t\t\t\t$(\"#pgmUserList\").setGridWidth($(\"#pgmUserList\").parents('.author_box').width() , false);\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\t$(\"#empList\").setGridWidth($(\"#empList\").parents('.author_search').width() , false);\r\n");
      out.write("\t\t\t\t$(\"#roleList\").setGridWidth($(\"#roleList\").parents('.author_box').width() , false);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t};\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/**\r\n");
      out.write("\t\t * 사용자 탭의 조회 버튼 클릭 시 호출 되는 함수\r\n");
      out.write("\t\t */\r\n");
      out.write("\t\tvar getEmpListAjax = function(){\r\n");
      out.write("\t\t\t$(\"#empList\").clearGridData(); \t// 이전 그리드 삭제\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar postData = { \r\n");
      out.write("\t\t\t\tselectedType:$(\"#selectedType option:selected\").val(), \r\n");
      out.write("\t\t\t\tcode:$(\"#code\").val(),\r\n");
      out.write("\t\t\t\tname:$(\"#name\").val()\r\n");
      out.write("\t\t\t\t};\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\"#empList\").jqGrid('setGridParam',{url:\"");
      out.print(ONLINE_ROOT);
      out.write("/mgmt/common/userPopupGridList.do\", postData:postData}).trigger(\"reloadGrid\");\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t//jqgrid 설정\r\n");
      out.write("\t\t\t$(\"#empList\").jqGrid({\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\turl : \"");
      out.print(ONLINE_ROOT);
      out.write("/mgmt/common/userPopupGridList.do\",\r\n");
      out.write("\t\t\t\t\t// 요청방식\r\n");
      out.write("\t\t\t\t\tmtype:\"post\",\r\n");
      out.write("\t\t\t\t\t// 결과물 받을 데이터 타입\r\n");
      out.write("\t\t\t\t\tdatatype:\"json\",\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t// parameter\r\n");
      out.write("\t\t\t\t\tpostData : postData,\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\t// 컬럼명\r\n");
      out.write("\t\t\t\t\tcolNames:[\"부서\",\"사용자 코드\",\"사용자명\"],\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tcolModel:[\r\n");
      out.write("\t\t\t\t\t\t\t\t{name:\"dept_name\",\tindex:\"dept_name\",\t\talign:\"left\", width:100},\t// 부서명\t\r\n");
      out.write("\t\t\t\t\t\t\t\t{name:\"emp_code\",\tindex:\"emp_code\",\t\talign:\"left\", width:60},\t// 사원 코드\r\n");
      out.write("\t\t\t\t\t\t\t\t{name:\"emp_name\",\tindex:\"emp_name\",\t\talign:\"left\", width:147}\t// 사원 명\r\n");
      out.write("\t\t\t\t\t\t\t ],\r\n");
      out.write("\t\t\t\t\t\t\t \r\n");
      out.write("\t\t\t\t\trowNum: -1,\t\t  // 페이지 출력 글 수\r\n");
      out.write("\t\t\t\t\theight:410,\r\n");
      out.write("\t\t\t\t\t//autowidth:true,\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t// 선택된 행의 데이터 가져오기.\r\n");
      out.write("\t\t\t\t\tonSelectRow: function(id){\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\tlastsel2=id;\r\n");
      out.write("\t\t\t\t    \t\r\n");
      out.write("\t\t\t\t    \tvar selectedList = $(\"#empList\").getRowData(lastsel2);\r\n");
      out.write("\t\t\t\t    \tempText = selectedList.emp_name;\r\n");
      out.write("\t\t\t\t    \t\r\n");
      out.write("\t\t\t    \t\t$(\"#pgmTree\").empty();\r\n");
      out.write("\t\t\t    \t\tvar empCode = $(\"#empList\").getRowData(id).emp_code;\r\n");
      out.write("\t\t\t    \t\tgetUserPgmTreeAjax(empCode);\t// 사용자 탭의 조회 버튼 클릭 후 사용자 선택 시 사용 프로그램 jqgrid호출\r\n");
      out.write("\t\t\t    \t\tgetUserRoleListAjax(empCode);\t// 사용자 탭의 조회 버튼 클릭 후 사용자 선택 시 사용권한 jqgrid호출\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t/**\r\n");
      out.write("\t\t\t\t\t * 사용자 탭의 조회 버튼 클릭 후 선택 된 사용자 더블클릭 시 호출 되는 role copy팝업\r\n");
      out.write("\t\t\t\t\t */\r\n");
      out.write("\t\t\t\t\tondblClickRow: function(){\r\n");
      out.write("\t\t\t\t\t\tvar roleNoArrayJoin = roleNoArray.join();\r\n");
      out.write("\t\t\t\t\t\tempText = encodeURI(encodeURIComponent(empText));\r\n");
      out.write("\t\t\t\t\t\tCommons.popupOpen(\"userPopup\",\"");
      out.print(ONLINE_ROOT);
      out.write("/mgmt/common/userPopup.do?roleNo=\"+roleNoArrayJoin+\"&type=inquireRole&empText=\"+empText,\"530\",\"675\");\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t};\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/**\r\n");
      out.write("\t\t * 사용자 탭의 조회 버튼 클릭 후 선택 된 사용자의 사용프로그램 jqgrid\r\n");
      out.write("\t\t */\r\n");
      out.write("\t\tvar getUserPgmTreeAjax = function(emp_code){\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\ttype : \"POST\"\r\n");
      out.write("\t\t\t\t       \t, async : true\r\n");
      out.write("\t\t\t\t    \t, url : ONLINE_ROOT+\"/mgmt/getUserPgmListAjax.do\"\r\n");
      out.write("\t\t\t\t    \t, dataType : \"json\"\r\n");
      out.write("\t\t\t\t    \t, data : {emp_code:emp_code}\r\n");
      out.write("\t\t\t\t    \t, success : function(data) {\r\n");
      out.write("\t\t\t\t    \t\tif(data.menuList.length > 0 && typeof data.menuList != \"undefined\"){\r\n");
      out.write("\t\t\t\t\t    \t\td2 = new dTree('d2');\r\n");
      out.write("\t\t\t\t\t    \t\td2.add(0,-1,data.menuList[0].pgm_name);\r\n");
      out.write("\t\t\t\t\t    \t\tfor(var menuIdx=0; menuIdx<data.menuList.length; menuIdx++){\r\n");
      out.write("\t\t\t\t\t    \t\t\td2.add(data.menuList[menuIdx].pgm_no,data.menuList[menuIdx].parent_pgm,data.menuList[menuIdx].pgm_name,data.menuList[menuIdx].pgm_id,\"right\"+data.menuList[menuIdx].pgm_name);\r\n");
      out.write("\t\t\t\t\t    \t\t}\r\n");
      out.write("\t\t\t\t\t    \t\t$(\"#displayTree\").show();\r\n");
      out.write("\t\t\t\t\t    \t\t$('#pgmTree')[0].innerHTML = d2;\r\n");
      out.write("\t\t\t\t\t    \t}\r\n");
      out.write("\t\t\t\t    \t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t};\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/**\r\n");
      out.write("\t\t * 사용자 탭의 조회 버튼 클릭 후 선택 된 사용자의 사용권한 jqgrid\r\n");
      out.write("\t\t */\r\n");
      out.write("\t\tvar getUserRoleListAjax = function(emp_code){\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar postData = {emp_code:emp_code};\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\"#roleList\").clearGridData(); \t// 이전 그리드 삭제\r\n");
      out.write("\t\t\t$(\"#roleList\").jqGrid('setGridParam',{url:\"");
      out.print(ONLINE_ROOT);
      out.write("/mgmt/getUserRoleListAjax.do\", postData:postData}).trigger(\"reloadGrid\");\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t//jqgrid 설정\r\n");
      out.write("\t\t\t$(\"#roleList\").jqGrid({\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\turl : \"");
      out.print(ONLINE_ROOT);
      out.write("/mgmt/getUserRoleListAjax.do\",\r\n");
      out.write("\t\t\t\t\t// 요청방식\r\n");
      out.write("\t\t\t\t\tmtype:\"post\",\r\n");
      out.write("\t\t\t\t\t// 결과물 받을 데이터 타입\r\n");
      out.write("\t\t\t\t\tdatatype:\"json\",\r\n");
      out.write("\t\t\t\t\t// parameter\r\n");
      out.write("\t\t\t\t\tpostData : postData,\r\n");
      out.write("\t\t\t\t\t// 컬럼명\r\n");
      out.write("\t\t\t\t\tcolNames:[\"Role No\",\"구분코드\",\"Role 명\"],\r\n");
      out.write("\t\t\t\t\tcolModel:[\r\n");
      out.write("\t\t\t\t\t\t\t\t{name:\"role_no\",\t\tindex:\"role_no\",\t\t\talign:\"left\", width:55},\t// role no\t\r\n");
      out.write("\t\t\t\t\t\t\t\t{name:\"role_cat_code\",\tindex:\"role_cat_code\",\t\talign:\"left\", width:55},\t// role 카테고리 코드\r\n");
      out.write("\t\t\t\t\t\t\t\t{name:\"role_name\",\t\tindex:\"role_name\",\t\t\talign:\"left\", width:197}\t// role명\r\n");
      out.write("\t\t\t\t\t\t\t ],\r\n");
      out.write("\t\t\t\t\t// 그리드 캡션\r\n");
      out.write("\t\t\t\t\theight:488,\r\n");
      out.write("\t\t\t\t\trowNum: -1,\t\t  // 페이지 출력 글 수\r\n");
      out.write("\t\t\t\t\t//autowidth:true,\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tloadComplete: function(data){\r\n");
      out.write("\t\t\t\t\t\tif (data.records > 0) {\r\n");
      out.write("\t\t\t\t\t\t\troleNoArray = [];\r\n");
      out.write("\t\t\t\t\t\t\tfor(var idx=0; idx<data.records; idx++){\r\n");
      out.write("\t\t\t\t\t\t\t\troleNoArray.push(data.rows[idx].role_no);\t\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t};\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/**\r\n");
      out.write("\t\t * 프로그램 탭의 사용권한 jqgrid 호출\r\n");
      out.write("\t\t */\r\n");
      out.write("\t\tvar getRoleListByPgmnoAjax = function(pgm_no){\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar postData = {pgm_no:pgm_no};\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\"#pgmRoleList\").clearGridData(); \t// 이전 그리드 삭제\r\n");
      out.write("\t\t\t$(\"#pgmRoleList\").jqGrid('setGridParam',{url:\"");
      out.print(ONLINE_ROOT);
      out.write("/mgmt/getRoleListByPgmnoAjax.do\", postData:postData}).trigger(\"reloadGrid\");\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t//jqgrid 설정\r\n");
      out.write("\t\t\t$(\"#pgmRoleList\").jqGrid({\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\turl : \"");
      out.print(ONLINE_ROOT);
      out.write("/mgmt/getRoleListByPgmnoAjax.do\",\r\n");
      out.write("\t\t\t\t\t// 요청방식\r\n");
      out.write("\t\t\t\t\tmtype:\"post\",\r\n");
      out.write("\t\t\t\t\t// 결과물 받을 데이터 타입\r\n");
      out.write("\t\t\t\t\tdatatype:\"json\",\r\n");
      out.write("\t\t\t\t\t// parameter\r\n");
      out.write("\t\t\t\t\tpostData : postData,\r\n");
      out.write("\t\t\t\t\t// 컬럼명\r\n");
      out.write("\t\t\t\t\tcolNames:[\"Role No\",\"구분코드\",\"Role 명\"],\r\n");
      out.write("\t\t\t\t\tcolModel:[\r\n");
      out.write("\t\t\t\t\t\t\t\t{name:\"role_no\",\t\tindex:\"role_no\",\t\talign:\"left\", width:55},\t// role no\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t{name:\"role_cat_code\",\tindex:\"role_cat_code\",\talign:\"left\", width:55},\t// role 카테고리 코드\r\n");
      out.write("\t\t\t\t\t\t\t\t{name:\"role_name\",\t\tindex:\"role_name\",\t\talign:\"left\", width:196}\t// role명\r\n");
      out.write("\t\t\t\t\t\t\t ],\r\n");
      out.write("\t\t\t\t\t// 그리드 캡션\r\n");
      out.write("\t\t\t\t\theight:488,\r\n");
      out.write("\t\t\t\t\trowNum: -1,\t\t  // 페이지 출력 글 수\r\n");
      out.write("\t\t\t\t\t//autowidth:true\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t};\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/**\r\n");
      out.write("\t\t * 프로그램 탭의 프로그램 사용자 jqgrid 호출\r\n");
      out.write("\t\t */\r\n");
      out.write("\t\tvar getEmpListByPgmnoAjax = function(pgm_no){\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar postData = {pgm_no:pgm_no};\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\"#pgmUserList\").clearGridData(); \t// 이전 그리드 삭제\r\n");
      out.write("\t\t\t$(\"#pgmUserList\").jqGrid('setGridParam',{url:\"");
      out.print(ONLINE_ROOT);
      out.write("/mgmt/getEmpListByPgmnoAjax.do\", postData:postData}).trigger(\"reloadGrid\");\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t//jqgrid 설정\r\n");
      out.write("\t\t\t$(\"#pgmUserList\").jqGrid({\r\n");
      out.write("\t\t\t\t\turl : \"");
      out.print(ONLINE_ROOT);
      out.write("/mgmt/getEmpListByPgmnoAjax.do\",\r\n");
      out.write("\t\t\t\t\t// 요청방식\r\n");
      out.write("\t\t\t\t\tmtype:\"post\",\r\n");
      out.write("\t\t\t\t\t// 결과물 받을 데이터 타입\r\n");
      out.write("\t\t\t\t\tdatatype:\"json\",\r\n");
      out.write("\t\t\t\t\t// parameter\r\n");
      out.write("\t\t\t\t\tpostData : postData,\r\n");
      out.write("\t\t\t\t\t// 컬럼명\r\n");
      out.write("\t\t\t\t\tcolNames:[\"부서\",\"사원코드\",\"사원명\"],\r\n");
      out.write("\t\t\t\t\tcolModel:[\r\n");
      out.write("\t\t\t\t\t\t\t\t{name:\"dept_name\",\tindex:\"dept_name\",\t\talign:\"left\", width:120},\t\t// 부서\r\n");
      out.write("\t\t\t\t\t\t\t\t{name:\"emp_code\",\tindex:\"emp_code\",\t\talign:\"left\", width:55},\t\t// 사원코드\r\n");
      out.write("\t\t\t\t\t\t\t\t{name:\"emp_name\",\tindex:\"emp_name\",\t\talign:\"left\", width:131}\t\t// 사원명\r\n");
      out.write("\t\t\t\t\t\t\t ],\r\n");
      out.write("\t\t\t\t\trowNum: -1,\t\t  // 페이지 출력 글 수\r\n");
      out.write("\t\t\t\t\theight:488,\r\n");
      out.write("\t\t\t\t\t//autowidth:true,\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t};\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/**\r\n");
      out.write("\t\t * 메뉴 tree\r\n");
      out.write("\t\t */\r\n");
      out.write("\t\tfunction leftTreeComplete(d){\r\n");
      out.write("\t\t\t$(\"#totPgmTree\")[0].innerHTML = d;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/**\r\n");
      out.write("\t\t * 메뉴 tree의 프로그램 선택 시 호출 되는 함수\r\n");
      out.write("\t\t * @param programNumber\t\t프로그램 no\r\n");
      out.write("\t\t */\r\n");
      out.write("\t\tfunction selectedMenu(programNumber){\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\tif($(\"#userTab\").css(\"display\") == \"none\"){\t// 트리 선택시 프로그램탭이 활성화되었을 경우만...\r\n");
      out.write("\t\t\t\tif(programNumber != \"\"){\r\n");
      out.write("\t\t\t\t\tvar pgmNo = Commons.leadingZeros(programNumber,5);\r\n");
      out.write("\t\t\t\t\tgetRoleListByPgmnoAjax(pgmNo);\t// 프로그램 탭의 사용권한 jqgrid 호출\r\n");
      out.write("\t\t\t\t\tgetEmpListByPgmnoAjax(pgmNo);\t// 프로그램 탭의 프로그램 사용자 jqgrid 호출\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t} \r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/**\r\n");
      out.write("\t\t * 메뉴 tree의 메뉴폴더 선택 시 호출 되는 함수\r\n");
      out.write("\t\t * @param programNumber\t\t프로그램 no\r\n");
      out.write("\t\t */\r\n");
      out.write("\t\tfunction sortSetting(programNumber){\r\n");
      out.write("\t\t\tselectedMenu(programNumber);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/**\r\n");
      out.write("\t\t * 탭 선택 시 text 변경\r\n");
      out.write("\t\t */\r\n");
      out.write("\t\tfunction textChange(){\r\n");
      out.write("\t\t\tvar selectedType = $(\"#selectedType\").val();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(selectedType == \"dept\"){\r\n");
      out.write("\t\t\t\t$(\"#txtGubun\").text(\"부서코드\");\r\n");
      out.write("\t\t\t\t$(\"#txtName\").text(\"부서이름\");\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\t$(\"#txtGubun\").text(\"사용자코드\");\r\n");
      out.write("\t\t\t\t$(\"#txtName\").text(\"사용자이름\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"inner_cont\">\r\n");
      out.write("\t\t<div class=\"wrap_authority\">\r\n");
      out.write("\t\t\t\t<h2>권한조회</h2>\r\n");
      out.write("\t\t\t\t<ul id=\"divTabsWrap\" class=\"search_navi\">\r\n");
      out.write("\t\t\t\t\t<li class=\"active\"><a href=\"#userTab\">사용자</a></li>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"#pgmTab\">프로그램</a></li>\r\n");
      out.write("\t\t\t\t</ul>\r\n");
      out.write("\t\t\t<div id=\"userTab\" class=\"search_cont\">\r\n");
      out.write("\t\t\t\t<div class=\"float_l mr20\">\r\n");
      out.write("\t\t\t\t\t<h2>조회</h2>\r\n");
      out.write("\t\t\t\t\t<div class=\"search_box mt10\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"input_set float_l\">\r\n");
      out.write("\t\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<span id=\"txtGubun\">부서코드</span>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<select name=\"selectedType\" id=\"selectedType\" onChange=\"javascript:textChange();\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<option value=\"dept\">부서</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<option value=\"emp\">사원</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"text\" name=\"code\" id=\"code\"/>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"code_box mt5\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<span id=\"txtName\">부서이름</span>\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"text\" name=\"name\" id=\"name\"/>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t");
      out.print(WebUtil.createButtonArea(currPgmNoByUri, "lt_"));
      out.write("\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"author_search box_type01\">\r\n");
      out.write("\t\t\t\t\t\t<table id=\"empList\"></table>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"float_l mr20\">\r\n");
      out.write("\t\t\t\t\t<h2>사용프로그램</h2>\r\n");
      out.write("\t\t\t\t\t<div class=\"author_pro_box box_type01\">\r\n");
      out.write("\t\t\t\t\t\t<div id=\"displayTree\" class=\"list_button\" style=\"width:92px; margin:10px auto; display:none;\">\r\n");
      out.write("\t\t\t\t\t\t\t<button class=\"type_01\" onclick=\"javascript: d2.openAll();\">펼치기</button>\r\n");
      out.write("\t\t\t\t\t\t\t<button class=\"type_01\" onclick=\"javascript: d2.closeAll();\">접기</button>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div id=\"pgmTree\" class=\"mt10\"></div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"float_l\">\r\n");
      out.write("\t\t\t\t\t<h2>사용권한</h2>\r\n");
      out.write("\t\t\t\t\t<div class=\"author_box box_type01\">\r\n");
      out.write("\t\t\t\t\t\t<table id=\"roleList\"></table>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\t\t\t\t\t\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div id=\"pgmTab\" class=\"search_cont\" style=\"display:none\">\r\n");
      out.write("\t\t\t\t<div class=\"float_l mr20\">\r\n");
      out.write("\t\t\t\t\t<h2>전체 프로그램 메뉴</h2>\r\n");
      out.write("\t\t\t\t\t<div class=\"author_pro_box box_type01\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"list_button\" style=\"width:92px; margin:10px auto\">\r\n");
      out.write("\t\t\t\t\t\t\t<button class=\"type_01\" onclick=\"javascript: d.openAll();\">펼치기</button>\r\n");
      out.write("\t\t\t\t\t\t\t<button class=\"type_01\" onclick=\"javascript: d.closeAll();\">접기</button>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div id=\"totPgmTree\" class=\"mt10\"></div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"float_l mr20\">\r\n");
      out.write("\t\t\t\t\t<h2>사용권한</h2>\r\n");
      out.write("\t\t\t\t\t<div class=\"author_box box_type01\">\r\n");
      out.write("\t\t\t\t\t\t<table id=\"pgmRoleList\"></table>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"float_l\">\r\n");
      out.write("\t\t\t\t\t<h2>프로그램 사용자</h2>\r\n");
      out.write("\t\t\t\t\t<div class=\"author_box box_type01\">\r\n");
      out.write("\t\t\t\t\t\t<table id=\"pgmUserList\"></table>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\t\t\t\t\t\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t");
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<div class=\"wrap_foot\">\r\n");
      out.write("\t<div class=\"footer\">\r\n");
      out.write("\t\tCopyright ⓒ 2014 <span class=\"copy_fc\">HANA PHARM CO.</span>, LTD. All Right Reserved.\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("<!-- 엑셀 다운로드용 iframe -->\r\n");
      out.write("<iframe name=\"excelDownFrame\" frameBorder=\"0\" width=\"0\" height=\"0\" class=\"blind\"></iframe>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
