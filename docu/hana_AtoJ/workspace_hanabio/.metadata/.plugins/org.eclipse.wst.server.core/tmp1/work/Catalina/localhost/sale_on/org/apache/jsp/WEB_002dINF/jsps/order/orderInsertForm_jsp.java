/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.55
 * Generated at: 2017-02-22 08:43:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsps.order;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.hanaph.saleon.member.vo.LoginUserVO;
import com.hanaph.saleon.common.utils.StringUtil;
import com.hanaph.saleon.common.utils.WebUtil;
import javax.servlet.http.HttpSession;
import com.hanaph.saleon.member.vo.LoginUserVO;
import com.hanaph.saleon.order.vo.OrderVO;

public final class orderInsertForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/include/head.jsp", Long.valueOf(1421734197738L));
    _jspx_dependants.put("/common/path.jsp", Long.valueOf(1430124365934L));
    _jspx_dependants.put("/include/footer.jsp", Long.valueOf(1421734197738L));
    _jspx_dependants.put("/common/sessionCheck.jsp", Long.valueOf(1430193978042L));
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	LoginUserVO loginUserVO = (LoginUserVO) session.getAttribute("onlineUser");	//세션생성 세션에서 emp_code를 가져온다.
	
	String userEmpCode  = "";		// 사원 코드
	String userEmpName  = "";		// 사원 이름
	String userEmpGb    = "";		// 사원 구분 
	String userDeptCode = "";		// 부서코드
	String userDeptName = "";		// 부서명
	String userGradeName = "";		// 사원 Grade Name
	String userDeptCd = "";			//hanahr 부서정보
	String userAssgnCd = "";			//직책 코드
	String userAssgnName = "";			//직책 코드명
	/*
	 * 로그인 정보가 있는경우
	 */
	if(loginUserVO != null){
		userEmpCode = StringUtil.nvl(loginUserVO.getEmp_code());    	// 사용자코드
		userEmpName = StringUtil.nvl(loginUserVO.getEmp_name());		// 사용자명
		userEmpGb = StringUtil.nvl(loginUserVO.getEmp_gb());			// 사용자 구분 코드
		userDeptCode = StringUtil.nvl(loginUserVO.getDept_code());  	// 부서 코드
		userDeptName = StringUtil.nvl(loginUserVO.getDept_name());		// 부서 명
		userGradeName = StringUtil.nvl(loginUserVO.getGrade_name());	// 사용자 부서명
		userDeptCd = StringUtil.nvl(loginUserVO.getDept_cd());  	    // 부서 코드
		userAssgnCd = StringUtil.nvl(loginUserVO.getAssgn_cd());  	    // 직책 코드
		userAssgnName = StringUtil.nvl(loginUserVO.getAssgn_name());  	// 직책 코드명
	}
	
	/* 현재 URI에 해당하는 프로그램 No(pgm_no) */
	String currPgmNoByUri = request.getAttribute("pgm_no") == null ? "" : (String) request.getAttribute("pgm_no");

      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');

	com.hanaph.saleon.common.utils.Environment env = new com.hanaph.saleon.common.utils.Environment();	//환경 변수
	
	String HTTPS_ONLINE_WEB_ROOT = env.getValue("https.web_root_dir.url");
	String HTTPS_ONLINE_ROOT = env.getValue("https.root_dir.url");
	String ONLINE_WEB_ROOT = env.getValue("web_root_dir.url");		//URL 프로토콜, 도메인, 포트, 서브컨텍스트명, web디렉토리
	String ONLINE_ROOT = env.getValue("root_dir.url");				//URL 프로토콜, 도메인, 포트, 서브컨텍스트명
	String JDBC_URL = env.getValue("jdbc.url");
	

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	/*
	*	주문 등록에 필요한 거래처 정보 셋팅
	*/
	OrderVO orderInit = new OrderVO();
	orderInit = (OrderVO)request.getAttribute("orderInit");
	
	/*
	*	도매담당자 정보
	*/
	String ls_sawon_info = StringUtil.nvl(orderInit.getLs_sawon_info(),"");
	

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("\t");
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tvar ONLINE_ROOT = \"");
      out.print(ONLINE_ROOT );
      out.write("\";\t\t/*환경변수*/\r\n");
      out.write("</script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/jquery-1.11.1.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/jquery-ui-1.10.4.custom.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/jquery.easyui.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/common.js\" charset=\"utf-8\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/default.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/placeholders.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/css/easyui.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/css/main.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/css/jquery-ui.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/css/smoothness/jquery-ui.theme.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/css/fonts.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/css/gw_sample.css\">");
      out.write("\r\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/css/ui.jqgrid.css\">\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/grid.locale-kr.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/jquery.jqGrid.min.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/formCheck.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/order.js\"></script>\r\n");
      out.write("\t\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\tvar lastSelection=0;\t\t\t//마지막에 선택한 ROW의 ID (제품코드)\r\n");
      out.write("\tvar itemIdArray = '';\t\t\t//수량 입력한 제품 코드명을 구분자(,)를 함께 배열로 넣는다.\r\n");
      out.write("\tvar saleActionFlag = false;\t\t//기능(엑셀, 인쇄) 제어를 위한 전역변수\r\n");
      out.write("\tvar inserYn=0;\t\t\t\t\t//저장버튼 flag\r\n");
      out.write("\r\n");
      out.write("\t/* 화면의 Dom 객체가 모두 준비되었을 때 */\r\n");
      out.write("\t$(document).ready(function(){\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tCommons.setDate('','req_date');\t\t//주문요청일 오늘날짜로 set\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$('#tot_dambo').val(Commons.addComma(");
      out.print((long)orderInit.getLd_tot_dambo());
      out.write("));\t//총 담보액 set\r\n");
      out.write("\t\t$('#rem_dambo').val(Commons.addComma(");
      out.print((long)orderInit.getRem_dambo());
      out.write("));\t\t//주문 가능한 set\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$('#control_rate_day').val(");
      out.print(orderInit.getControl_rate_day());
      out.write("); // 주문제어회전일\r\n");
      out.write("\t\t$('#rate_day').val(");
      out.print(orderInit.getRate_day());
      out.write("); // 회전일\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t");

			/*
			*	파워빌더 wf_credit_chk()
			*	여신한도액 초과여부, 여신규정 자료 유무, 거래처/담당자 정보 유무 체크
			*/
			if(orderInit.isResult()==false){		//여신한도액 초과
				out.println("alert('여신한도액을 초과하였습니다. 담당자에게 문의하세요.');");		//javascript alert
			
			}else{
				if(orderInit.getLd_dambo_rate() == 0 && 
					orderInit.getLd_credit_amt() == 0 && 
						orderInit.getLd_credit_dambo() == 0){	//여신규정 자료 유무 체크
					out.println("alert('여신규정 자료가 없습니다.');");
				}
		
				if(StringUtil.nvl(orderInit.getLs_sawon_id(),"").equals("") &&
					StringUtil.nvl(orderInit.getLs_yeondae(),"").equals("") &&
						StringUtil.nvl(orderInit.getIs_yeondae3(),"").equals(""))	{	//거래처 자료 유무 체크
					out.println("alert('거래처코드: "+userEmpCode+"로 거래처 자료가 없습니다.');");			//javascript alert
				}else{
					if(StringUtil.nvl(orderInit.getLs_sawon_info(),"").equals("")){		//담당자 자료 유무 체크
						out.println("alert('사원코드:"+orderInit.getLs_sawon_id()+"로 담당자 자료가 없습니다.');");			//javascript alert
					}
				}
				if(orderInit.getLl_count() > 1){		//거래처 사업번호 체크
					out.println("alert('이 거래처에 사업자번호가 1개 이상 존재합니다. 관련부서로 문의 바랍니다.');");			//javascript alert
				}
				
				if(StringUtil.nvl(orderInit.getLs_sawon_info(),"").equals("")){		//담당자 자료 유무 체크
					out.println("alert('사원코드: "+userEmpCode+"로 담당자 자료가 없습니다.');");			//javascript alert
				}
			}
		
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t");

			/*
			*	파워빌더 wf_budong_chk()
			*	출하중지처 여부 체크 및 거래처 이메일 유무 체크
			*/
			if(!StringUtil.nvl2(orderInit.getLs_budong_yn(),"").equals("")){		
				if(StringUtil.nvl2(orderInit.getLs_budong_yn(),"").equals("Y")){	
					out.println("alert('주문이 제한 되었습니다.\\n담당자에게 문의하시기 바랍니다.');");			//javascript alert
				}
			
				if (StringUtil.nvl2(orderInit.getLs_email(),"").equals("")){	//E-mail체크
					out.println("alert('해당거래처의 E-mail주소 정보가 없습니다.\\n담당자에게 문의하시기 바랍니다.');");			//javascript alert
				}
				
			}else{
				out.println("alert('거래처코드: "+userEmpCode+"로 거래처 자료가 없습니다.');");			//javascript alert
			}
		
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/* jqGrid의 jsonReader 옵션 전역 설정. row 반복 형태의 json 처리. */\r\n");
      out.write("\t    jsonReader : {\r\n");
      out.write("            repeatitems: false;\r\n");
      out.write("    \t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/* jqGrid 생성 및 options 설정. */\r\n");
      out.write("\t\t$(\"#grid_list\").jqGrid({\r\n");
      out.write("\t\t\tediturl: \"");
      out.print(ONLINE_ROOT);
      out.write("/order/itemGridList.do\",\r\n");
      out.write("\t\t\tmtype:\"post\",\r\n");
      out.write("\t\t\tdatatype:\"json\",\r\n");
      out.write("\t\t\tcolNames:[\"제품코드\",\"제품명\",\"규격\",\"수량\",\"단가\",\"공급가액\",\"세액\",\"합계금액\",\"bas_amt\",\"dc_danga\",\"dc_amt\",\"percent\",\"saupjang_cd\",\"psb_qty\",\"m_qty\"],\r\n");
      out.write("\t\t\tcolModel:[\r\n");
      out.write("\t\t\t\t\t\t{name:\"item_id\",\tindex:\"item_id\",\talign:\"center\",\twidth:120,\tkey:true},\t\t\t\t\t\t\t//제품코드\r\n");
      out.write("\t\t\t\t\t\t{name:\"item_nm\",\tindex:\"item_nm \",\talign:\"left\",\twidth:300,\tformatter:Order.saupjangFormatter},\t//제품명\r\n");
      out.write("\t\t\t\t\t\t{name:\"standard\",\tindex:\"standard\", \talign:\"center\",\twidth:120},\t\t\t\t\t\t\t\t\t\t//규격\r\n");
      out.write("\t\t\t\t\t\t{name:\"qty\",\t\tindex:\"qty\", \t\talign:\"center\", width:100,\teditable: true, editype : \"text\", formatter:\"textbox\",\r\n");
      out.write("\t\t\t\t\t\t\teditoptions : \tCommons.jqgridEditOptions('grid_list', 'N', jqgridEditOptions_callback)\t\r\n");
      out.write("\t\t\t\t\t\t},\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//수량\r\n");
      out.write("\t\t\t\t\t\t{name:\"bal_amt\",\tindex:\"bal_amt\", \talign:\"right\", \twidth:100,\tformatter:Order.amountFormatter},\t//단가\r\n");
      out.write("\t\t\t\t\t\t{name:\"supply_net\",\tindex:\"supply_net\", align:\"right\",  width:120,\tformatter:Order.amountFormatter},\t//공급가액\r\n");
      out.write("\t\t\t\t\t\t{name:\"supply_vat\",\tindex:\"supply_vat\", align:\"right\",\twidth:120,\tformatter:Order.amountFormatter},\t//세액\r\n");
      out.write("\t\t\t\t\t\t{name:\"tot\",\t\tindex:\"tot\",\t\talign:\"right\",\twidth:150,\tformatter:Order.amountFormatter},\t//합계금액\r\n");
      out.write("\t\t\t\t\t\t{name:\"bas_amt\",\tindex:\"bas_amt\", \thidden:true},\t//bas_amt\r\n");
      out.write("\t\t\t\t\t\t{name:\"dc_danga\",\tindex:\"dc_danga\", \thidden:true},\t//dc_danga\r\n");
      out.write("\t\t\t\t\t\t{name:\"dc_amt\",\t\tindex:\"dc_amt\", \thidden:true},\t//dc_amt\r\n");
      out.write("\t\t\t\t\t\t{name:\"percent\",\tindex:\"percent\", \thidden:true},\t//percent\r\n");
      out.write("\t\t\t\t\t\t{name:\"saupjang_cd\",index:\"saupjang_cd\",hidden:true},\t//제품 구분 코드(일반,마약,향정)\r\n");
      out.write("\t\t\t\t\t\t{name:\"psb_qty\",\tindex:\"psb_qty\",\thidden:true},\t//주문한도\r\n");
      out.write("\t\t\t\t\t\t{name:\"m_qty\",\t\tindex:\"m_qty\",\t\thidden:true}\t//m_qty\r\n");
      out.write("\t\t\t\t\t],\r\n");
      out.write("\t\t\trowNum: -1,\r\n");
      out.write("\t\t\tonSelectRow: editRow,\t\t//row를 클릭등으로 selection할 때 editRow 함수를 실행함\r\n");
      out.write("\t\t\theight:461,\r\n");
      out.write("\t\t\tautowidth:true,\r\n");
      out.write("\t\t\tloadComplete: function(data){\t//조회 완료시 호출되는 function\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif(data.records == 0){\t\t//조회 결과가 없을 경우\r\n");
      out.write("\t\t\t\t\talert(\"해당 제품단가 자료가 없습니다.\");\r\n");
      out.write("\t\t\t\t\tsaleActionFlag=false;\r\n");
      out.write("\t\t\t\t}else{\t\t\t\t\t\t//조회 결과가 있을 경우\r\n");
      out.write("\t\t\t\t\tsaleActionFlag=true;\r\n");
      out.write("\t\t\t\t\t$(\"#grid_list\").jqGrid('setSelection', data.rows[0].item_id);\t//첫번째 로우 편집 모드로 변경\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\t\t\t\r\n");
      out.write("   \t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/* 입력 버튼 클릭 */\r\n");
      out.write("\t\t$(\"#p_insert\").on(\"click\",function(){\r\n");
      out.write("\t\t\tsearchStore();\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/* 저장 버튼 클릭 */\r\n");
      out.write("\t\t$(\"#p_save\").on(\"click\",function(){\r\n");
      out.write("\t\t\tsaveRow();\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/* 인쇄 버튼 클릭 */\r\n");
      out.write("\t\t$(\"#p_print\").on(\"click\",function(){\r\n");
      out.write("\t\t\tgridPrint();\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/* 엑셀 버튼 클릭 */\r\n");
      out.write("\t\t$(\"#p_excel\").on(\"click\",function(){\r\n");
      out.write("\t\t\tCommons.extraAction(saleActionFlag, 'excel', '");
      out.print(ONLINE_ROOT);
      out.write("/order/onderInsertGridListExcelDown.do', '');\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/* 닫기 버튼 클릭 */\r\n");
      out.write("\t\t$(\"#p_close\").on(\"click\",function(){\r\n");
      out.write("\t\t\tparent.Commons.closeTab('주문등록');\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t/* 브라우저 창의 사이즈가 변경될 때 */\r\n");
      out.write("    $(window).resize(function(){\r\n");
      out.write("\t\t$(\"#grid_list\").setGridWidth($('.wrap_result_group').width()-2, true);\t//grid 영역의 넓이가 동적으로 조절 \r\n");
      out.write("\t});\r\n");
      out.write("    \r\n");
      out.write("    /* 화면의 모든 객체가 모두 로드되었을 때 */\r\n");
      out.write("\t$(window).load(function(){\r\n");
      out.write("\t\t/* 엔터키를 눌렀을 경우 조회되도록 */\r\n");
      out.write("\t\t$(\"body\").on(\"keydown\", function(event){\r\n");
      out.write("\t\t\tif($(\"#p_insert\").prop('disabled') == false){\r\n");
      out.write("\t\t\t\tif(event.keyCode==13 && event.target.name!=\"grid_count\"){\r\n");
      out.write("\t\t\t\t\tsearchStore();\r\n");
      out.write("\t\t\t\t\treturn false;\t\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\t/**\r\n");
      out.write("\t * 판매처 input에서 포커스 아웃되면 실행.\r\n");
      out.write("\t * 판매처 정보를 조회해서 판매처에 대한 체크를 진행해서 이상이 없을 경우 제품 목록 조회한다.\r\n");
      out.write("\t * @param rcust_id\t판매처 코드\r\n");
      out.write("\t */\r\n");
      out.write("\tfunction storeChkAjax(rcust_id){\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif ((\"\" != $(\"#control_rate_day\").val() && 0 < Number($(\"#control_rate_day\").val())) && Number($(\"#rate_day\").val()) > Number($(\"#control_rate_day\").val())) {\r\n");
      out.write("\t\t\talert(\"회전일이 기준 회전일(\" + $(\"#control_rate_day\").val() + \"일) 보다 초과되었습니다.\");\r\n");
      out.write("\t\t\t$(\"#rcust_id_name\").val(\"\");\r\n");
      out.write("\t\t\t$(\"#rsawon_info\").val(\"\");\r\n");
      out.write("\t\t\t$(\"#rsawon_id\").val(\"\");\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(rcust_id != '' ){\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\ttype:\"POST\",\r\n");
      out.write("\t\t\t\turl:\"");
      out.print(ONLINE_ROOT);
      out.write("/order/common/storeChkAjax.do\",\r\n");
      out.write("\t\t\t\tdata:{ rcust_id : rcust_id },\r\n");
      out.write("\t\t\t\tdataType:\"json\",\r\n");
      out.write("\t\t\t\tsuccess:function(data){\r\n");
      out.write("\t\t\t\t\tif(data.ls_budong_yn=='y'){\r\n");
      out.write("\t\t\t\t\t\talert(\"출하중지처 입니다.\");\r\n");
      out.write("\t\t\t\t\t\t$(\"#rcust_id\").val(\"\");\r\n");
      out.write("\t\t\t\t\t\t$(\"#rcust_id_name\").val(\"\");\r\n");
      out.write("\t\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\tif(data.ls_cust_nm=='' && data.ls_sawon_id==''){\r\n");
      out.write("\t\t\t\t\t\talert(\"등록된 판매처코드가 아닙니다.\");\r\n");
      out.write("\t\t\t\t\t\t$(\"#rcust_id_name\").val(\"\");\r\n");
      out.write("\t\t\t\t\t\t$(\"#rsawon_info\").val(\"\");\r\n");
      out.write("\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\t$(\"#rcust_id_name\").val(data.ls_cust_nm);\r\n");
      out.write("\t\t\t\t\t\tif(data.ls_sawon_info==''){\r\n");
      out.write("\t\t\t\t\t\t\talert(\"사원코드: \"+data.ls_sawon_id+\"로 담당자 자료가 없습니다.\");\r\n");
      out.write("\t\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\t\t$(\"#rsawon_info\").val(Commons.trim(data.ls_sawon_info));\r\n");
      out.write("\t\t\t\t\t\t\t$(\"#rsawon_id\").val(data.ls_sawon_id);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t// 파라미터 셋팅\r\n");
      out.write("\t\t\t\t\t\tvar param = \"rcust_id=\" + $('#rcust_id').val() ;\r\n");
      out.write("\t\t\t\t\t\t// 제품 jqgrid 호출\r\n");
      out.write("\t\t\t\t\t\t$(\"#grid_list\").jqGrid('setGridParam',{url:\"");
      out.print(ONLINE_ROOT);
      out.write("/order/itemGridList.do?\" + param}).trigger(\"reloadGrid\");\r\n");
      out.write("\t\t\t\t\t\tlastSelection=0;\r\n");
      out.write("\t\t\t\t\t\titemIdArray='';\r\n");
      out.write("\t\t\t\t\t\t$(\"#ls_limit_yn\").val('');\r\n");
      out.write("\t\t\t\t\t\t$(\"#ls_pro_date\").val('');\r\n");
      out.write("\t\t\t\t\t\t$(\"#ls_pro_bigo\").val('');\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t},error:function(err){\r\n");
      out.write("\t\t\t\t\talert(\"storeChkAjax 데이터베이스 관련 오류 발생 \"+err.status+'error');\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\t$(\"#rcust_id_name\").val(\"\");\r\n");
      out.write("\t\t\t$(\"#rsawon_info\").val(\"\");\r\n");
      out.write("\t\t\t$(\"#rsawon_id\").val(\"\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("    /**\r\n");
      out.write("     *\tjqGrid에서 제품을 선택했을 시 하단 평균수량, 주문한도 정보등을 DB에서 조회한 후 화면에 셋팅한다.\r\n");
      out.write("     *\t현재 선택한 제품 코드가 lastSelection변수에 저장된 값과 다를 경우 rowItemChk 함수를 호출해서 이전에 입력한 제품의 수량의 유효성을 체크한다.\r\n");
      out.write("     * @param id\t선택한 제품 코드\r\n");
      out.write("     */\r\n");
      out.write("    function editRow(id) {\r\n");
      out.write("\t\tvar grid = $(\"#grid_list\");\r\n");
      out.write("\t\t//하단 평균수량, 주문한도 수량 parameter\r\n");
      out.write("\t\tvar ls_item_id = grid.getRowData(id).item_id;\r\n");
      out.write("       \tvar saupjang_cd = grid.getRowData(id).saupjang_cd;\r\n");
      out.write("       \tvar req_date = $('#req_date').val();\r\n");
      out.write("       \t\r\n");
      out.write("       \tif(!formCheck.isDateFormat(req_date)){\r\n");
      out.write("\t\t\talert('주문요청일 형식(YYYY-MM-DD)을 확인해주세요.');\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("       \tvar ls_ymd = req_date.replace(/-/gi,\"\");\r\n");
      out.write("       \t\r\n");
      out.write("       \tvar lsYn = '';\t\t\t\t\t\t\t\t\t\t\t//허가증 여부\r\n");
      out.write("       \t//하단 평균수량, 주문한도 수량 ajax\r\n");
      out.write("  \t\t$.ajax({\r\n");
      out.write("\t\t\ttype:\"POST\",\r\n");
      out.write("\t\t\turl:\"");
      out.print(ONLINE_ROOT);
      out.write("/order/common/itemGbYnAjax.do\",\r\n");
      out.write("\t\t\tdata:{ ls_item_id : ls_item_id, rcust_id : $('#rcust_id').val(), ls_ymd:ls_ymd, saupjang_cd : saupjang_cd},\r\n");
      out.write("\t\t\tdataType:\"json\",\r\n");
      out.write("\t\t\tasync: false ,\r\n");
      out.write("\t\t\tsuccess:function(data){\r\n");
      out.write("\t\t\t\tlsYn = data.ls_yn;\r\n");
      out.write("\t\t\t\tif(lsYn == 'N'){ \r\n");
      out.write("\t\t\t\t\tgrid.restoreRow(id);\r\n");
      out.write("\t\t\t\t\talert('허가증이 필요합니다.(해당 주문 내역은 저장되지 않습니다.)');\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\tif(data.ll_mavg_qty != 0){\r\n");
      out.write("\t\t\t\t\t\t$(\"#mavg_qty\").val(data.ll_mavg_qty);\r\n");
      out.write("\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\t$(\"#mavg_qty\").val(\"\");\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\tif(data.ll_mqty != 0){\r\n");
      out.write("\t\t\t\t\t\t$(\"#m_qty\").val(data.ll_mqty);\r\n");
      out.write("\t\t\t\t\t\tgrid.setCell(id,\"m_qty\", data.ll_mqty);\r\n");
      out.write("\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\t$(\"#m_qty\").val(\"\");\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\tif(data.ll_psb_qty != 0){\r\n");
      out.write("\t\t\t\t\t\t$(\"#psb_qty\").val(data.ll_psb_qty);\r\n");
      out.write("\t\t\t\t\t\tgrid.setCell(id,\"psb_qty\", data.ll_psb_qty);\r\n");
      out.write("\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\t$(\"#psb_qty\").val(\"\");\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},error:function(err){\r\n");
      out.write("\t\t\t\talert(\"itemGbYnAjax 데이터베이스 관련 오류 발생 \"+err.status+'error');\r\n");
      out.write("\t\t\t}\r\n");
      out.write("      \t});\t\r\n");
      out.write("  \t\t//선택한 row를 수정폼으로 변경하고, 그전에 수량을 입력한 row가 있다면 그 수량에 대한 validation check를 한다.\r\n");
      out.write("  \t\tif (id && id != lastSelection) {\r\n");
      out.write("  \t\t\tif(lsYn != 'N'){\r\n");
      out.write("  \t\t\t\trowItemChk('row', id);\r\n");
      out.write("  \t\t\t} else {\r\n");
      out.write("  \t\t\t\tif(lastSelection != 0){\r\n");
      out.write("  \t\t\t\t\tgrid.setSelection(lastSelection);\r\n");
      out.write("  \t  \t\t\t\trowItemChk('row', lastSelection);\r\n");
      out.write("  \t\t\t\t}\r\n");
      out.write("  \t\t\t}\r\n");
      out.write("  \t\t\t\r\n");
      out.write("        } \r\n");
      out.write("    }\r\n");
      out.write("\t\r\n");
      out.write("\t/**\r\n");
      out.write("\t * tab키나 enter키를 입력했을 경우 현재 로우가 마지막 로우일 경우 현재 로우에서 입력된 수량으로  validation check를 한다.\r\n");
      out.write("\t * @param rowId\t현재 row id\r\n");
      out.write("\t * @param nextRowId\t다음 row id\r\n");
      out.write("\t */\r\n");
      out.write("    function jqgridEditOptions_callback(rowId, nextRowId){\r\n");
      out.write("\t\tif(rowId && rowId != null && !(nextRowId && nextRowId != null)){\r\n");
      out.write("\t\t\trowItemChk('row', rowId);\r\n");
      out.write("\t\t}\r\n");
      out.write("    }\r\n");
      out.write("\t\r\n");
      out.write("\t/**\r\n");
      out.write("\t * \t저장버튼 click시 거래처에 대한 유효성을 판단한 후 rowItemChk 함수를 호출해서 다음 저장 프로세스 진행한다.\r\n");
      out.write("\t *\t함수 호출 흐름을 본다면 saveRow() -> rowItemChk() -> damboCheck() -> insertOrderAjax()\r\n");
      out.write("\t */\r\n");
      out.write("\tfunction saveRow(){\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif('");
      out.print(orderInit.getPre_deposit());
      out.write("' == 'Y'){\r\n");
      out.write("\t\t\t\talert(\"주문금액만큼의 선입금이 필요합니다.\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t//더블클릭 방지\r\n");
      out.write("\t\tif(inserYn==1){\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t");
if(!StringUtil.nvl2(orderInit.getLs_budong_yn(),"").equals("")){
      out.write("\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//출하중지처체크\r\n");
      out.write("\t\t\t");
if(StringUtil.nvl2(orderInit.getLs_budong_yn(),"").equals("Y")){
      out.write("\r\n");
      out.write("\t\t\t\talert(\"주문이 제한 되었습니다.\\n담당자에게 문의하시기 바랍니다.\");\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t");
}
      out.write("\r\n");
      out.write("\t\t\t//E-mail체크\r\n");
      out.write("\t\t\t");
if (StringUtil.nvl2(orderInit.getLs_email(),"").equals("")){
      out.write("\r\n");
      out.write("\t\t\t\talert(\"해당거래처의 E-mail주소 정보가 없습니다.\\n담당자에게 문의하시기 바랍니다.\");\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t");
}
      out.write("\r\n");
      out.write("\t\t");
}
      out.write("\r\n");
      out.write("\t\tif($(\"#rcust_id\").val()==''){\r\n");
      out.write("\t\t\talert(\"판매처를 먼저 선택해주세요.\");\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tvar req_date = $('#req_date');\r\n");
      out.write("       \tif(!formCheck.isDateFormat(req_date.val())){\r\n");
      out.write("\t\t\talert('주문요청일 형식(YYYY-MM-DD)을 확인해주세요.');\r\n");
      out.write("\t\t\treq_date.focus();\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t// DB 80byte 길이 제한\r\n");
      out.write("\t\tif (formCheck.getByteLength($('#bigo').val())>75){\r\n");
      out.write("\t\t\talert('요청사항의 내용은 한글 37자, 영문 80자로 입력해주세요(75byte)');\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tinserYn=1;\r\n");
      out.write("\t\trowItemChk('save',0);\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t/**\r\n");
      out.write("\t * 선택한 row를 수정폼으로 변경하고, 그전에 수량을 입력한 row가 있다면 그 수량에 대한 validation check를 한다.\r\n");
      out.write("\t *\t함수 호출 흐름을 본다면 saveRow() -> rowItemChk() -> damboCheck() -> insertOrderAjax()\r\n");
      out.write("\t * @param proc\tsaveRow에서 호출한건지, editRow함수에서 호출한건지 구분\r\n");
      out.write("\t * @param id\t현재 선택한 제품 코드\r\n");
      out.write("\t */\r\n");
      out.write("\tfunction rowItemChk(proc,id){\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//변수 생성\r\n");
      out.write("\t\tvar grid = $(\"#grid_list\");\r\n");
      out.write("\t\tvar ld_req_qty = 0;\r\n");
      out.write("\t\tvar ld_bas_danga = 0;\r\n");
      out.write("\t\tvar ld_bal_danga = 0;\r\n");
      out.write("\t\tvar ld_dc_danga = 0;\r\n");
      out.write("\t\tvar supply_net = 0;\r\n");
      out.write("\t\tvar supply_vat = 0;\r\n");
      out.write("\t\tvar amt=0;\r\n");
      out.write("\t\tvar vat=0;\r\n");
      out.write("\t\tvar tot_amt=0;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/* 제품 선택 여부*/\r\n");
      out.write("\t\tif(!grid.getGridParam(\"selrow\")){\r\n");
      out.write("\t\t\talert(\"제품을 선택한 뒤 수량을 입력해 주세요.\");\r\n");
      out.write("\t\t\tinserYn=0;\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t/* saveRow에서 호출했을 경우 lastSelection id가 현재 select row id여야 한다. */\r\n");
      out.write("\t\tif(id==0){\r\n");
      out.write("\t\t\tlastSelection=grid.getGridParam(\"selrow\");\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/*\r\n");
      out.write("\t\t*\tlastSelection가 0인 경우 제품선택을 한번도 하지 않았으므로 선택한 제품의 수량 변경할 수 있도록 해주고,\r\n");
      out.write("\t\t*\t0이 아닐 경우 lastSelection에 저장된 제품코드와 입력된 수량으로 가격 계산을 하고, 제품의 상태(재고,출하중지 등)를 DB에서 조회한 후 체크한다. \t\t\t\r\n");
      out.write("\t\t*/\r\n");
      out.write("\t\tif(lastSelection == 0){\t\t//lastSelection가 0인 경우\r\n");
      out.write("\t\t\tgrid.editRow(id);\r\n");
      out.write("\t\t\tlastSelection = id;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}else{\t\t\t\t\t\t//lastSelection가 0이 아닌 경우 \t\t\t\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar row = grid.getRowData(lastSelection);\r\n");
      out.write("\t\t\tld_req_qty = $('#'+row.item_id+'_qty').val();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(ld_req_qty == \"\" || typeof ld_req_qty == \"undefined\"){\r\n");
      out.write("\t\t\t\tld_req_qty = row.qty;\t//editing이 아닐 경우\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(isNaN(ld_req_qty)){\r\n");
      out.write("\t\t\t\talert(\"숫자만 입력가능합니다.\");\r\n");
      out.write("\t\t\t\tgrid.setSelection(lastSelection);\r\n");
      out.write("\t\t\t\t$('#'+row.item_id+'_qty').val(\"\");\r\n");
      out.write("\t\t\t\tinserYn=0;\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tld_bas_danga = row.bas_amt;\r\n");
      out.write("\t\t\tld_bal_danga = (row.bal_amt).replace(/,/gi,\"\");\r\n");
      out.write("\t\t\tld_dc_danga = row.dc_danga;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\r\n");
      out.write("\t\t\t//3,4번대거래처는 기준가로 계산한다.\r\n");
      out.write("\t\t\tvar ls_rcust_id = $('#rcust_id').val();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t//공급가액\r\n");
      out.write("\t\t\tsupply_net = ld_bal_danga * ld_req_qty;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t//세액\r\n");
      out.write("\t\t\tif (ls_rcust_id.charAt(0) == '3' || ls_rcust_id.charAt(0) == '4' ){\r\n");
      out.write("\t\t\t\tsupply_vat = (ld_bas_danga * ld_req_qty) - (ld_bal_danga * ld_req_qty);\t\t\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\tsupply_vat = Math.floor(ld_bal_danga * ld_req_qty * 0.1);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar ll_dc_amt = ld_dc_danga * ld_req_qty;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t//grid cell에 값 셋팅\r\n");
      out.write("\t\t\tgrid.setCell(lastSelection,\"supply_vat\", supply_vat);\r\n");
      out.write("\t\t\tgrid.setCell(lastSelection,\"supply_net\", supply_net);\r\n");
      out.write("\t\t\tgrid.setCell(lastSelection,\"dc_amt\",ll_dc_amt);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t//공급가액+세액 = 합계금액\r\n");
      out.write("\t\t\tgrid.setCell(lastSelection,\"tot\",supply_net + supply_vat);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t//grid 하단 총 공급가액, 세액, 공급총액 구하는 방식\r\n");
      out.write("\t\t\tvar colSupply_net = grid.getCol('supply_net', true);\r\n");
      out.write("\t\t\tvar colSupply_vat = grid.getCol('supply_vat', true);\r\n");
      out.write("\t\t\tvar colTot = grid.getCol('tot', true);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tfor(var colInt=0; colInt < colSupply_net.length;colInt++){\r\n");
      out.write("\t\t\t\tif(colSupply_net[colInt].value!=''){\r\n");
      out.write("\t\t\t\t\tvar str = (colSupply_net[colInt].value).replace(/,/gi,\"\");\r\n");
      out.write("\t\t\t\t\tamt += parseInt(str);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tif(colSupply_net[colInt].value!=''){\r\n");
      out.write("\t\t\t\t\tvar str = (colSupply_vat[colInt].value).replace(/,/gi,\"\");\r\n");
      out.write("\t\t\t\t\tvat += parseInt(str);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tif(colSupply_net[colInt].value!=''){\r\n");
      out.write("\t\t\t\t\tvar str = (colTot[colInt].value).replace(/,/gi,\"\");\r\n");
      out.write("\t\t\t\t\ttot_amt += parseInt(str);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar ld_rem_dambo = parseInt($('#ld_rem_dambo').val()); \r\n");
      out.write("\t\t\t \r\n");
      out.write("\t\t\t//grid 하단 공급가액, 세액, 공급총액, 주문 가능액 value set\r\n");
      out.write("\t\t\t$('#amt').val(Commons.addComma(amt));\r\n");
      out.write("\t\t\t$('#vat').val(Commons.addComma(vat));\r\n");
      out.write("\t\t\t$('#tot_amt').val(Commons.addComma(tot_amt));\r\n");
      out.write("\t\t\t$('#rem_dambo').val(Commons.addComma(parseInt(ld_rem_dambo) - tot_amt));\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar ll_supply_net = parseInt(supply_net);\r\n");
      out.write("\t\t\tif( ll_supply_net > 0 && ll_dc_amt > 0 ){\r\n");
      out.write("\t\t\t\tif( ll_supply_net <= ll_dc_amt ){\r\n");
      out.write("\t\t\t\t\talert('에러가 발생 되었습니다.\\n화면을 닫고 다시열어어서 주문을 시도하여도 계속발생시\\n하나제약 본사로 연락바랍니다.\\n'+\r\n");
      out.write("\t\t\t\t\t\t\t'error code:'+ll_supply_net+':'+ll_dc_amt+':'+ld_req_qty);\r\n");
      out.write("\t\t\t\t\tgrid.setSelection(lastSelection);\r\n");
      out.write("\t\t\t\t\tgrid.editRow(lastSelection,true);\r\n");
      out.write("\t\t\t\t\tinserYn=0;\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t/* 신용담보금액은 기존로직대로 구하고, 주문가능액은 김태안팀장님이 요청한대로 수정함.2015-01-22 \r\n");
      out.write("\t\t\t * 주문가능금액 은 수량을 입력할때마다 변경되어야 하는데...계산식은 다음과 같다.   수정요청=> \r\n");
      out.write("\t      \t\t주문가능금액 = 여신한도액 - 총여신 - 현재접수상태의주문금액- 현재주문액 합계.    \r\n");
      out.write("\t      \t\t이때, 주문가능금액이 마이너스가 되는 순간 여신금액위반이라고 떠야 함. \r\n");
      out.write("\t        \t\t> 총여신     : 메인화면의 여신현황의 총여신 가져오는 로직과 동일\r\n");
      out.write("\t        \t\t> 여신한도액 : sale.sale0003 에 credit_limit_amt (여신한도액)\r\n");
      out.write("\t      \t\tld_rem_dambo => 주문가능액(여신한도액 - 총여신)\r\n");
      out.write("\t\t\t * */\r\n");
      out.write("\t\t\t/*\r\n");
      out.write("\t\t\t선입금 거래처 체크로직이 현재 운영에는 없지만 추가되어야 함\r\n");
      out.write("        \tsale0003.pre_deposit  가 'Y' 이면 \"주문금액만큼의 선입금이 필요합니다.\" 라고 메세지만 보여주고\r\n");
      out.write("              확인하면 주문은 되도록. 여신한도액 체크 안 함.\r\n");
      out.write("\t\t\t*/\r\n");
      out.write("\t\t\tif('");
      out.print(orderInit.getPre_deposit());
      out.write("' == 'N'){\r\n");
      out.write("\t\t\t\tvar v_ld_credit_limit_amt = $('#ld_credit_limit_amt').val().replace(/,/gi,\"\");\r\n");
      out.write("\t\t\t\tvar v_rem_dambo = $('#rem_dambo').val().replace(/,/gi,\"\");\r\n");
      out.write("\t\t\t\tif(v_ld_credit_limit_amt>0 && parseInt(tot_amt)>0){\r\n");
      out.write("\t\t\t\t\tif(v_rem_dambo < 0){\r\n");
      out.write("\t\t\t\t\t\talert('주문금액이 여신 한도액을 초과하였습니다. 담당자에게 문의 바랍니다.');\r\n");
      out.write("\t\t\t\t\t\tgrid.setSelection(lastSelection);\r\n");
      out.write("\t\t\t\t\t\tgrid.editRow(lastSelection,true);\r\n");
      out.write("\t\t\t\t\t\tinserYn=0;\r\n");
      out.write("\t\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\tvar ls_rcust_id = $('#rcust_id').val();\t\t\t\t\t\t\t//판매처 코드\r\n");
      out.write("\t\t\tvar ld_req_qty = parseInt($('#'+row.item_id+'_qty').val());\t\t//사용자가 입력한 수량\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(ld_req_qty == 0 || $('#'+row.item_id+'_qty').val()==''){\t\t//수량이 0 또는 아무것도 입력하지 않았을 경우\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t$('#'+row.item_id+'_qty').val(\"\");\r\n");
      out.write("\t\t\t\tvar arry = itemIdArray.split(',');\t\t\t//주문 등록할 상품 id의 배열값\t\t\r\n");
      out.write("\t\t\t\tvar itemIdArray2 = \"\";\r\n");
      out.write("\t\t\t\tfor(var i=0; i < arry.length; i++ ){\r\n");
      out.write("\t\t\t\t\tif(arry[i] != row.item_id ){\r\n");
      out.write("\t\t\t\t\t\tif(\"\" == itemIdArray2){\r\n");
      out.write("\t\t\t\t\t\t\titemIdArray2=arry[i];\t\r\n");
      out.write("\t\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\t\titemIdArray2 += ','+arry[i];\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\titemIdArray = itemIdArray2;\r\n");
      out.write("\t\t\t\tgrid.saveRow(lastSelection);\r\n");
      out.write("\t\t\t\tlastSelection = id;\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif(proc=='save'){\t\t\t//저장버튼을 클릭했을 경우 damboCheck() 호출해서 다음 저장 프로세스를 진행한다.\r\n");
      out.write("\t\t\t\t\tdamboCheck();\r\n");
      out.write("\t\t\t\t}else{\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tgrid.editRow(id);\r\n");
      out.write("\t\t\t\t\t$('#'+id+'_qty').focus();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}else{\t\t\t\r\n");
      out.write("\t\t\t\t/*\r\n");
      out.write("\t\t\t\t*\t수량이 입력되엇을 경우 제품의 상태(재고,출하중지 등)를 DB에서 조회한 후 체크한다.\r\n");
      out.write("\t\t\t\t*/\r\n");
      out.write("\t\t\t\t//태그 제거 정규식\r\n");
      out.write("\t\t\t\tvar pattern = /<[^>]+>/g;\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t//제품 체크\r\n");
      out.write("\t\t\t\tvar ls_item_cd = row.item_id;\r\n");
      out.write("\t\t\t\tvar ls_item_nm = row.item_nm.replace(pattern, '');\r\n");
      out.write("\t\t\t\tvar ls_standard = row.standard;\r\n");
      out.write("\t\t\t\tvar ldt_jaego = $('#req_date').val().replace(/-/gi,\"\");\r\n");
      out.write("\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\ttype:\"POST\",\r\n");
      out.write("\t\t\t\t\turl:\"");
      out.print(ONLINE_ROOT);
      out.write("/order/itemChkRegAjax.do\",\r\n");
      out.write("\t\t\t\t\tdata:{ls_item_cd:ls_item_cd, ldt_jaego:ldt_jaego, ls_rcust_id:ls_rcust_id},\r\n");
      out.write("\t\t\t\t\tdataType:\"json\",\r\n");
      out.write("\t\t\t\t\tsuccess:function(data){\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\tif (data.ls_chul_yn == '' && data.ls_use_yn == ''){\r\n");
      out.write("\t\t\t\t\t\t\talert('제품코드 : '+ (ls_item_cd) +'\\n' + (ls_item_nm) + ' ' + (ls_standard) + '는 등록된 제품코드가 아닙니다.!');\r\n");
      out.write("\t\t\t\t\t\t\tgrid.setSelection(lastSelection);\r\n");
      out.write("\t\t\t\t\t\t\t$('#'+row.item_id+'_qty').val(\"\");\r\n");
      out.write("\t\t\t\t\t\t\tgrid.editRow(lastSelection,true);\r\n");
      out.write("\t\t\t\t\t\t\tinserYn=0;\r\n");
      out.write("\t\t\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\tif (data.ls_use_yn == 'N'){\r\n");
      out.write("\t\t\t\t\t\t\t\talert('제품코드 : '+ (ls_item_cd)+'\\n' + (ls_item_nm) + ' ' + (ls_standard) + '는 단종된 제품입니다.\\n담당자에게 문의 하시기 바랍니다.');\r\n");
      out.write("\t\t\t\t\t\t\t\tgrid.setSelection(lastSelection);\r\n");
      out.write("\t\t\t\t\t\t\t\t$('#'+row.item_id+'_qty').val(\"\");\r\n");
      out.write("\t\t\t\t\t\t\t\tgrid.editRow(lastSelection,true);\r\n");
      out.write("\t\t\t\t\t\t\t\tinserYn=0;\r\n");
      out.write("\t\t\t\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\tif (data.ls_chul_yn == 'Y'){\r\n");
      out.write("\t\t\t\t\t\t\t\talert('제품코드 : '+ (ls_item_cd) +'\\n' + (ls_item_nm) + ' ' + (ls_standard) + '는 출하중지된 제품입니다.\\n담당자에게 문의 하시기 바랍니다.');\r\n");
      out.write("\t\t\t\t\t\t\t\tgrid.setSelection(lastSelection);\r\n");
      out.write("\t\t\t\t\t\t\t\t$('#'+row.item_id+'_qty').val(\"\");\r\n");
      out.write("\t\t\t\t\t\t\t\tgrid.editRow(lastSelection,true);\r\n");
      out.write("\t\t\t\t\t\t\t\tinserYn=0;\r\n");
      out.write("\t\t\t\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\t\t\t\tif (data.ld_invjaego_qty ==''){\r\n");
      out.write("\t\t\t\t\t\t\talert('제품코드: '+ (ls_item_cd) +'\\n' + (ls_item_nm) + ' ' + (ls_standard) + '는 재고가 없습니다.');\r\n");
      out.write("\t\t\t\t\t\t\tgrid.setSelection(lastSelection);\r\n");
      out.write("\t\t\t\t\t\t\t$('#'+row.item_id+'_qty').val(\"\");\r\n");
      out.write("\t\t\t\t\t\t\tgrid.editRow(lastSelection,true);\r\n");
      out.write("\t\t\t\t\t\t\tinserYn=0;\r\n");
      out.write("\t\t\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\t\tif( parseInt(data.ld_invjaego_qty) >= parseInt(data.ld_jaego_qty) ){\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t//가용재고만큼만\r\n");
      out.write("\t\t\t\t\t\t\t\tif ( parseInt(ld_req_qty) > parseInt(data.ld_jaego_qty) ){\r\n");
      out.write("\t\t\t\t\t\t\t\t\talert('주문수량이 가용 재고 수량을 초과하였습니다.\\n제품코드: '+ (ls_item_cd) +'\\n' + (ls_item_nm) +' '+(ls_standard)+'는 현재고: '+ Commons.addComma(data.ld_jaego_qty)+ ' 입니다.');\r\n");
      out.write("\t\t\t\t\t\t\t\t\tgrid.setSelection(lastSelection);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t$('#'+row.item_id+'_qty').val(\"\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\tgrid.editRow(lastSelection,true);\r\n");
      out.write("\t\t\t\t\t\t\t\t\tinserYn=0;\r\n");
      out.write("\t\t\t\t\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t//창고재고만큼만\r\n");
      out.write("\t\t\t\t\t\t\t\tif( parseInt(ld_req_qty) > parseInt(data.ld_invjaego_qty) ){\r\n");
      out.write("\t\t\t\t\t\t\t\t\talert('주문수량이 창고 재고 수량을 초과하였습니다.\\n제품코드: '+ (ls_item_cd) +'\\n' + (ls_item_nm) +' '+(ls_standard)+'는 현재고: '+ Commons.addComma(data.ld_invjaego_qty)+ ' 입니다.');\r\n");
      out.write("\t\t\t\t\t\t\t\t\tgrid.setSelection(lastSelection);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t$('#'+row.item_id+'_qty').val(\"\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\tgrid.editRow(lastSelection,true);\r\n");
      out.write("\t\t\t\t\t\t\t\t\tinserYn=0;\r\n");
      out.write("\t\t\t\t\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t} \r\n");
      out.write("\t\t\t\t\t\t//kta 2016.05.25\r\n");
      out.write("\t\t\t\t\t\t//아시크라듀오시럽50m 1병  30003 은 40개 단위로만 주문가능하도록 제어\r\n");
      out.write("\t\t\t\t\t\tif (ls_item_cd == '30003'){\r\n");
      out.write("\t\t\t\t\t\t\tif ( (parseInt(ld_req_qty) % 40) != 0) {\r\n");
      out.write("\t\t\t\t\t\t\t\talert('제품코드: '+ (ls_item_cd) +'\\n' + (ls_item_nm) + ' ' +(ls_standard)+ '는 40개 단위로 주문되어야 합니다.\\n ');\r\n");
      out.write("\t\t\t\t\t\t\t\treturn;\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t//제품별 주문한도\r\n");
      out.write("\t\t\t\t\t\tvar psb_qty = row.psb_qty;\t\t//주문한도\r\n");
      out.write("\t\t\t\t\t\tvar m_qty = row.m_qty;\t\t\t//이달 합계수량\r\n");
      out.write("\t\t\t\t\t\tvar tot_m_qty = parseInt(ld_req_qty)  + parseInt(m_qty);\r\n");
      out.write("\t\t\t\t\t\tif( data.li_cnt == 0 ){\t\t//개시후 3개월 초과거래처 => (이달합계수량 + 현재입력수량) > 30 이면 alert\r\n");
      out.write("\t\t\t\t\t\t\t//if((parseInt(ld_req_qty)  + parseInt(m_qty)) > parseInt(psb_qty) ){\r\n");
      out.write("\t\t\t\t\t\t\tif( tot_m_qty > parseInt(psb_qty) ){\t\r\n");
      out.write("\t\t\t\t\t\t\t\talert('제품코드: '+ (ls_item_cd) +'\\n'+(ls_item_nm) + ' ' +(ls_standard)+ ' 는(은) 주문한도 수량(' + parseInt(psb_qty) + ')보다 초과되었습니다.이달총주문수량(' + tot_m_qty + ')\\n승인이 보류 또는 반려될 수 있으니 담당자와 상의바랍니다.1');\r\n");
      out.write("\t\t\t\t\t\t\t}\t\r\n");
      out.write("\t\t\t\t\t\t} else {\t//개시후3개월 이내거래처 => (이달합계수량 + 현재입력수량) > 주문한도 이면 alert\r\n");
      out.write("\t\t\t\t\t\t\t//if( parseInt(ld_req_qty) + parseInt(m_qty) > 30 ){\r\n");
      out.write("\t\t\t\t\t\t\tif( tot_m_qty > 30 ){\r\n");
      out.write("\t\t\t\t\t\t\t\tif (ls_item_cd != '30003'){  //아시크라듀오시럽50m 1병 은 40병 단위로 구매해야 하므로 제외한다\r\n");
      out.write("\t\t\t\t\t\t\t\t\talert('제품코드: '+ (ls_item_cd) +'\\n' + (ls_item_nm) + ' ' +(ls_standard)+ ' 는(은) 주문한도 수량(' + parseInt(psb_qty) + ')보다 초과되었습니다.이달총주문수량(' + tot_m_qty + ')\\n승인이 보류 또는 반려될 수 있으니 담당자와 상의바랍니다.2');\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t//저장할 제품ID , 배열로 넣기\r\n");
      out.write("\t\t\t\t\t\tif(itemIdArray ==''){\r\n");
      out.write("\t\t\t\t\t\t\titemIdArray = row.item_id;\r\n");
      out.write("\t\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\t\tvar yn='N';\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\tvar arry = itemIdArray.split(',');\t\t\r\n");
      out.write("\t\t\t\t\t\t\tfor(var i=0; i < arry.length; i++ ){\r\n");
      out.write("\t\t\t\t\t\t\t\tif(arry[i] == row.item_id ){\r\n");
      out.write("\t\t\t\t\t\t\t\t\tyn='Y';\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\tif(yn=='N'){\r\n");
      out.write("\t\t\t\t\t\t\t\titemIdArray += ','+row.item_id;\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t//$('#'+row.item_id+'_qty').val(Number($('#'+row.item_id+'_qty').val()));\r\n");
      out.write("\t\t\t\t\t\tgrid.saveRow(lastSelection);\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\tif(proc=='save'){\t\t\t\t//저장버튼을 클릭했을 경우 damboCheck() 호출해서 다음 저장 프로세스를 진행한다.\r\n");
      out.write("\t\t\t\t\t\t\tdamboCheck();\r\n");
      out.write("\t\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\t\tgrid.editRow(id);\r\n");
      out.write("\t\t\t\t\t\t\tlastSelection = id;\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t},error:function(err){\r\n");
      out.write("\t\t\t\t\t\talert(\"itemChkAjax 데이터베이스 관련 오류 발생 \"+err.status+'error');\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t/**\r\n");
      out.write("\t * 판매처 검색\r\n");
      out.write("\t */\r\n");
      out.write("\tfunction searchStore(){\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif ((\"\" != $(\"#control_rate_day\").val() && 0 < Number($(\"#control_rate_day\").val())) && Number($(\"#rate_day\").val()) > Number($(\"#control_rate_day\").val())) {\r\n");
      out.write("\t\t\talert(\"회전일이 기준 회전일(\" + $(\"#control_rate_day\").val() + \"일) 보다 초과되었습니다.\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif($('#rcust_id').val()==''){\r\n");
      out.write("\t\t\talert(\"판매처를 먼저 입력하세요.\");\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\tlastSelection=0;\r\n");
      out.write("\t\t\titemIdArray='';\r\n");
      out.write("\t\t\tstoreChkAjax($('#rcust_id').val());\r\n");
      out.write("\t\t\t$(\"#ls_limit_yn\").val('');\r\n");
      out.write("\t\t\t$(\"#ls_pro_date\").val('');\r\n");
      out.write("\t\t\t$(\"#ls_pro_bigo\").val('');\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t/**\r\n");
      out.write("\t * 선입금 거래처 체크, 담보체크\r\n");
      out.write("\t * 담보예의가 아니면서 공급가합계 > 주문가능금액 일 경우 담보제공 약속 등록 팝업\r\n");
      out.write("\t *\t함수 호출 흐름을 본다면 saveRow() -> rowItemChk() -> damboCheck() -> insertOrderAjax()\r\n");
      out.write("\t */\r\n");
      out.write("\tfunction damboCheck(){\r\n");
      out.write("\t\tif(itemIdArray==''){\r\n");
      out.write("\t\t\talert(\"수량 입력된 제품이 없습니다.\");\r\n");
      out.write("\t\t\tvar grid = $(\"#grid_list\");\r\n");
      out.write("\t\t\t//grid.editRow(grid.getGridParam(\"selrow\"),true);\r\n");
      out.write("\t\t\tinserYn=0;\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar ibCredit_Over = false;\r\n");
      out.write("\t\t\tvar ld_supply_tot_sum = $('#tot_amt').val().replace(/,/gi,\"\");\r\n");
      out.write("\r\n");
      out.write("\t\t\tif ('");
      out.print(StringUtil.nvl(orderInit.getIs_yeondae3(),""));
      out.write("' == 'Y'){\t\t//담보예외\r\n");
      out.write("\t\t\t\t$(\"#ls_limit_yn\").val('E');\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\tif (parseInt(ld_supply_tot_sum) > parseInt(");
      out.print(orderInit.getCredit_dambo());
      out.write(")){\t//공급가합계 > 주문가능금액 \r\n");
      out.write("\t\t\t\t\tibCredit_Over = true;\r\n");
      out.write("\t\t\t\t\t$(\"#ls_limit_yn\").val('Y');\t\t//여신초과\r\n");
      out.write("\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t$(\"#ls_limit_yn\").val('N');\t\t//여신이내\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(ibCredit_Over && '");
      out.print(orderInit.getPre_deposit());
      out.write("' != 'Y'){\t\t// 선주문 거래처가 아니거나 담보예의가 아니면서 공급가합계 > 주문가능금액 일 경우 담보제공 약속 등록 팝업\r\n");
      out.write("\t\t\t\tCommons.popupOpen('damboCheck', '");
      out.print(ONLINE_ROOT);
      out.write("/order/common/guaranteePopup.do', '480', '391');\t//팝업 호출\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\tinsertOrderAjax();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t/**\r\n");
      out.write("\t * 담보제공 약속 등록 팝업에서 기일과 약속사항을 입력하고 닫았을 경우 주문 등록 진행\r\n");
      out.write("\t * @param ls_pro_date\t기일\r\n");
      out.write("\t * @param ls_pro_bigo\t약속사항\r\n");
      out.write("\t */\r\n");
      out.write("\tfunction damboValue(ls_pro_date, ls_pro_bigo){\r\n");
      out.write("\t\t$('#ls_pro_date').val(ls_pro_date);\r\n");
      out.write("\t\t$('#ls_pro_bigo').val(ls_pro_bigo);\r\n");
      out.write("\t\r\n");
      out.write("\t\tinsertOrderAjax();\r\n");
      out.write("\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t/**\r\n");
      out.write("\t * 주문 등록.\r\n");
      out.write("\t *\t함수 호출 흐름을 본다면 saveRow() -> rowItemChk() -> damboCheck() -> insertOrderAjax()\r\n");
      out.write("\t */\r\n");
      out.write("\tfunction insertOrderAjax(){\r\n");
      out.write("\t\tvar grid = $(\"#grid_list\");\r\n");
      out.write("\t\tvar arry = itemIdArray.split(',');\r\n");
      out.write("\t\tvar itemFrm = $('#itemFrm');\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$('#itemFrm').empty();\t\t// input tag 생성전에 초기화\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(\"<input></input>\").attr({type:\"hidden\", name:\"ldt_req_date\",\tvalue: $('#req_date').val().replace(/-/gi,\"\")}).appendTo(itemFrm);\r\n");
      out.write("\t\t$(\"<input></input>\").attr({type:\"hidden\", name:\"ls_sawon_id\",\tvalue:'");
      out.print(StringUtil.nvl(orderInit.getLs_sawon_id(),""));
      out.write("'}).appendTo(itemFrm);\r\n");
      out.write("\t\t$(\"<input></input>\").attr({type:\"hidden\", name:\"ls_rsawon_id\",\tvalue:$(\"#rsawon_id\").val()}).appendTo(itemFrm);\r\n");
      out.write("\t\t$(\"<input></input>\").attr({type:\"hidden\", name:\"ls_rcust_cd\",\tvalue:$(\"#rcust_id\").val()}).appendTo(itemFrm);\r\n");
      out.write("\t\t$(\"<input></input>\").attr({type:\"hidden\", name:\"ls_limit_yn\",\tvalue:$(\"#ls_limit_yn\").val()}).appendTo(itemFrm);\r\n");
      out.write("\t\t$(\"<input></input>\").attr({type:\"hidden\", name:\"ls_pro_date\",\tvalue:$(\"#ls_pro_date\").val()}).appendTo(itemFrm);\r\n");
      out.write("\t\t$(\"<input></input>\").attr({type:\"hidden\", name:\"ls_pro_bigo\",\tvalue:$(\"#ls_pro_bigo\").val()}).appendTo(itemFrm);\r\n");
      out.write("\t\t$(\"<input></input>\").attr({type:\"hidden\", name:\"bigo\",\t\t\tvalue:$(\"#bigo\").val()}).appendTo(itemFrm);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar chkQtyCnt = 0;\r\n");
      out.write("\t\tvar firstItemId = \"\";\r\n");
      out.write("\t\tfor(var i=0; i < arry.length; i++ ){\r\n");
      out.write("\t\t\tvar row = grid.getRowData(arry[i]);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\"<input></input>\").attr({type:\"hidden\", name:\"item_id\", \t\tvalue:row.item_id}).appendTo(itemFrm);\r\n");
      out.write("\t\t\t$(\"<input></input>\").attr({type:\"hidden\", name:\"qty\", \t\t\tvalue:row.qty}).appendTo(itemFrm);\r\n");
      out.write("\t\t\t$(\"<input></input>\").attr({type:\"hidden\", name:\"bal_amt\", \t\tvalue:(row.bal_amt).replace(/,/gi,\"\")}).appendTo(itemFrm);\r\n");
      out.write("\t\t\t$(\"<input></input>\").attr({type:\"hidden\", name:\"supply_net\", \tvalue:(row.supply_net).replace(/,/gi,\"\")}).appendTo(itemFrm);\r\n");
      out.write("\t\t\t$(\"<input></input>\").attr({type:\"hidden\", name:\"supply_vat\", \tvalue:(row.supply_vat).replace(/,/gi,\"\")}).appendTo(itemFrm);\r\n");
      out.write("\t\t\t$(\"<input></input>\").attr({type:\"hidden\", name:\"percent\", \t\tvalue:row.percent}).appendTo(itemFrm);\r\n");
      out.write("\t\t\t$(\"<input></input>\").attr({type:\"hidden\", name:\"dc_amt\", \t\tvalue:row.dc_amt}).appendTo(itemFrm);\r\n");
      out.write("\t\t\t$(\"<input></input>\").attr({type:\"hidden\", name:\"dc_danga\", \t\tvalue:row.dc_danga}).appendTo(itemFrm);\r\n");
      out.write("\t\t\t$(\"<input></input>\").attr({type:\"hidden\", name:\"saupjang_cd\", \tvalue:row.saupjang_cd}).appendTo(itemFrm);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar ld_req_qty = row.qty;\r\n");
      out.write("\t\t\tif($.trim(ld_req_qty) == \"\" || isNaN(ld_req_qty)){\r\n");
      out.write("\t\t\t\tchkQtyCnt++;\r\n");
      out.write("\t\t\t\tif(firstItemId == \"\"){\r\n");
      out.write("\t\t\t\t\tfirstItemId = row.item_id;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// 수량이 null 들어가는 케이스가 있어서 저장전에 수량 체크한다.\r\n");
      out.write("\t\tif(chkQtyCnt > 0){\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(firstItemId != \"\"){\r\n");
      out.write("\t\t\t\t$(\"#grid_list\").jqGrid('setSelection', firstItemId);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\talert(\"수량 정보가 제대로 입력되지 않은 항목이 있습니다.\");\r\n");
      out.write("\t\t\t$('#itemFrm').empty();\r\n");
      out.write("\t\t\tinserYn=0;\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\ttype:\"POST\",\r\n");
      out.write("\t\t\tdata: itemFrm.serialize(),\r\n");
      out.write("\t\t\turl:\"");
      out.print(ONLINE_ROOT);
      out.write("/order/insertOrderAjax.do\",\r\n");
      out.write("\t\t\tdataType:\"json\",\r\n");
      out.write("\t\t\tasync: false ,\r\n");
      out.write("\t\t\tsuccess:function(data){\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif(data.result=='Y'){\r\n");
      out.write("\t\t\t\t\talert(\"주문요청 자료를 등록 하였습니다.\");\r\n");
      out.write("\t\t\t\t\tvar rem_dambo = $('#rem_dambo').val().replace(/,/gi,\"\");\r\n");
      out.write("\t\t\t\t\t$('#ld_rem_dambo').val(rem_dambo);\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\talert(\"주문요청 자료 등록이 실패하였습니다.\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t},error:function(err){\r\n");
      out.write("\t\t\t\talert(\"주문등록 데이터베이스 관련 오류 발생 \"+err.status+'error');\r\n");
      out.write("\t\t\t},complete:function(){\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t//저장후 제품 테이블 다시 reload\r\n");
      out.write("\t\t\t\tvar param = \"rcust_id=\" + $('#rcust_id').val() ;\r\n");
      out.write("\t\t\t\t// 제품 jqgrid 호출\r\n");
      out.write("\t\t\t\t$(\"#grid_list\").jqGrid('setGridParam',{url:\"");
      out.print(ONLINE_ROOT);
      out.write("/order/itemGridList.do?\" + param}).trigger(\"reloadGrid\");\r\n");
      out.write("\t\t\t\tlastSelection=0;\r\n");
      out.write("\t\t\t\titemIdArray='';\r\n");
      out.write("\t\t\t\t$(\"#ls_limit_yn\").val('');\r\n");
      out.write("\t\t\t\t$(\"#ls_pro_date\").val('');\r\n");
      out.write("\t\t\t\t$(\"#ls_pro_bigo\").val('');\r\n");
      out.write("\t\t\t\t$('#itemFrm').empty();\r\n");
      out.write("\t\t\t\t$(\"#mavg_qty\").val('');\r\n");
      out.write("\t\t\t\t$(\"#psb_qty\").val('');\r\n");
      out.write("\t\t\t\t$(\"#amt\").val('');\r\n");
      out.write("\t\t\t\t$(\"#vat\").val('');\r\n");
      out.write("\t\t\t\t$(\"#tot_amt\").val('');\r\n");
      out.write("\t\t\t\tinserYn=0;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t/**\r\n");
      out.write("\t * \t인쇄를 하기위해 grid 재생성 \t\r\n");
      out.write("\t */\r\n");
      out.write("\tfunction gridPrint(){\r\n");
      out.write("\t\t$('#orderInsert').html('<table id=\\\"grid_list_clone\\\"></table>');\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar param = \"rcust_id=\" + $('#rcust_id').val() ;\r\n");
      out.write("\t\t$(\"#grid_list_clone\").jqGrid({\r\n");
      out.write("\t\t\turl: \"");
      out.print(ONLINE_ROOT);
      out.write("/order/itemGridList.do?\" + param,\r\n");
      out.write("\t\t\t// 요청방식\r\n");
      out.write("\t\t\tmtype:\"post\",\r\n");
      out.write("\t\t\t// 결과물 받을 데이터 타입\r\n");
      out.write("\t\t\tdatatype:\"json\",\r\n");
      out.write("\t\t\t// 컬럼명\r\n");
      out.write("\t\t\tcolNames:[\"제품코드\",\"제품명\",\"규격\",\"수량\",\"단가\",\"공급가액\",\"세액\",\"합계금액\"],\r\n");
      out.write("\t\t\t// 컬럼 데이터(추가, 삭제, 수정이 가능하게 하려면 autoincrement컬럼을 제외한 모든 컬럼을 editable:true로 지정)\r\n");
      out.write("\t\t\t// edittyped은 text, password, ... input type명을 사용 \r\n");
      out.write("\t\t\tcolModel:[\r\n");
      out.write("\t\t\t\t\t\t{name:\"item_id\",\tindex:\"item_id\",\talign:\"center\",\twidth:120,\tkey:true},\t\t\t\t\t\t\t//제품코드\r\n");
      out.write("\t\t\t\t\t\t{name:\"item_nm\",\tindex:\"item_nm \",\talign:\"left\",\twidth:300,\tformatter:Order.saupjangFormatter},\t//제품명\r\n");
      out.write("\t\t\t\t\t\t{name:\"standard\",\tindex:\"standard\", \talign:\"center\",\twidth:120},\t\t\t\t\t\t\t\t\t\t//규격\r\n");
      out.write("\t\t\t\t\t\t{name:\"qty\",\t\tindex:\"qty\", \t\talign:\"center\", width:100,\teditable: true, editype : \"text\", formatter:\"textbox\"},\t\t\t//수량\r\n");
      out.write("\t\t\t\t\t\t{name:\"bal_amt\",\tindex:\"bal_amt\", \talign:\"right\", \twidth:100,\tformatter:Order.amountFormatter},\t//단가\r\n");
      out.write("\t\t\t\t\t\t{name:\"supply_net\",\tindex:\"supply_net\", align:\"right\",  width:120,\tformatter:Order.amountFormatter},\t//공급가액\r\n");
      out.write("\t\t\t\t\t\t{name:\"supply_vat\",\tindex:\"supply_vat\", align:\"right\",\twidth:120,\tformatter:Order.amountFormatter},\t//세액\r\n");
      out.write("\t\t\t\t\t\t{name:\"tot\",\t\tindex:\"tot\",\t\talign:\"right\",\twidth:150,\tformatter:Order.amountFormatter}\t//합계금액\r\n");
      out.write("\t\t\t\t\t],\r\n");
      out.write("\t\t\t//-1로 하면 전체 갯수 \r\n");
      out.write("\t\t\trowNum: -1,\r\n");
      out.write("\t\t\t//수정할수 있는 폼으로 바뀜\r\n");
      out.write("\t\t\tonSelectRow: editRow,\r\n");
      out.write("\t\t\theight:580,\r\n");
      out.write("\t\t\tloadComplete: function(data){\r\n");
      out.write("\t\t\t\tCommons.extraAction(saleActionFlag, 'print', '");
      out.print(ONLINE_ROOT);
      out.write("/common/commonPrint.do', 'orderInsert');\r\n");
      out.write("\t\t\t}\r\n");
      out.write("   \t\t});\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction initdamboCheck(){\r\n");
      out.write("\t\tvar grid = $(\"#grid_list\");\r\n");
      out.write("\t\tgrid.editRow(grid.getGridParam(\"selrow\"),true);\r\n");
      out.write("\t\tinserYn=0;\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t/* 회전일, 주문제어 회전일 비교 */\r\n");
      out.write("\t/* function rateDayCheck(){\r\n");
      out.write("\t\tvar control_rate_day = $(\"#control_rate_day\").val();\r\n");
      out.write("\t\tvar rate_day = $(\"#rate_day\").val();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\trate_day = \"150\";\r\n");
      out.write("\t\tvar result = \"Y\";\r\n");
      out.write("\t\tif (Number(rate_day) > Number(control_rate_day)) {\r\n");
      out.write("\t\t\talert(\"회전일이 기준 회전일(\" + control_rate_day + \"일) 보다 초과되었습니다.\");\r\n");
      out.write("\t\t\tresult = \"N\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\treturn result;\r\n");
      out.write("\t} */\r\n");
      out.write("\t\r\n");
      out.write("\t/* 거래처 팝업 열기 */\r\n");
      out.write("\tfunction openCustomerPopup() {\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif('");
      out.print(orderInit.getPre_deposit());
      out.write("' == 'N'){         \r\n");
      out.write("\t         if ((\"\" != $(\"#control_rate_day\").val() && 0 < Number($(\"#control_rate_day\").val())) && Number($(\"#rate_day\").val()) > Number($(\"#control_rate_day\").val())) {\r\n");
      out.write("\t            alert(\"회전일이 기준 회전일(\" + $(\"#control_rate_day\").val() + \"일) 보다 초과되었습니다. pop\");\r\n");
      out.write("\t            return false;\r\n");
      out.write("\t         }\r\n");
      out.write("\t      }\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tCommons.popupOpen('rcust_id', '");
      out.print(ONLINE_ROOT);
      out.write("/order/common/storeListPopup.do', '600', '655');\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t</script>\r\n");
      out.write("\t\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<form id=\"frm\" name=\"frm\">\r\n");
      out.write("\t\r\n");
      out.write("\t\t<!-- temp01 -->\r\n");
      out.write("\t\t<input type=\"hidden\" id=\"ld_credit_limit_amt\" name=\"ld_credit_limit_amt\" value=\"");
      out.print((long)orderInit.getLd_credit_limit_amt());
      out.write("\" />\r\n");
      out.write("\t\t<!-- temp02 -->\r\n");
      out.write("\t\t<input type=\"hidden\" id=\"ld_sale_tot_credit\" name=\"ld_sale_tot_credit\" value=\"");
      out.print((long)orderInit.getLd_sale_tot_credit());
      out.write("\" />\r\n");
      out.write("\t\t<input type=\"hidden\" id=\"m_qty\" name=\"m_qty\" value=\"\" />\r\n");
      out.write("\t\t<input type=\"hidden\" id=\"item_seq\" name=\"item_seq\" value=\"\" /> \r\n");
      out.write("\t\t<input type=\"hidden\" id=\"credit_dambo\" name=\"credit_dambo\" value=\"");
      out.print((long)orderInit.getCredit_dambo());
      out.write("\" />\r\n");
      out.write("\t\t<input type=\"hidden\" id=\"ld_rem_dambo\" name=\"ld_rem_dambo\" value=\"");
      out.print((long)orderInit.getLd_rem_dambo());
      out.write("\" />\r\n");
      out.write("\t\t<input type=\"hidden\" id=\"rsawon_id\" name=\"rsawon_id\" value=\"\" />\r\n");
      out.write("\t\t<input type=\"hidden\" id=\"ls_pro_date\" name=\"ls_pro_date\" value=\"\" />\r\n");
      out.write("\t\t<input type=\"hidden\" id=\"ls_pro_bigo\" name=\"ls_pro_bigo\" value=\"\" />\r\n");
      out.write("\t\t<input type=\"hidden\" id=\"ls_limit_yn\" name=\"ls_limit_yn\" value=\"\" />\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<input type=\"hidden\" id=\"control_rate_day\" name=\"control_rate_day\" value=\"\" />\r\n");
      out.write("\t\t<input type=\"hidden\" id=\"rate_day\" name=\"rate_day\" value=\"\" />\r\n");
      out.write("\t\r\n");
      out.write("\t\t<!-- ##### content start ##### -->\t\r\n");
      out.write("\t\t<div class=\"wrap_search\">\r\n");
      out.write("\t\t\t<div class=\"search\">\r\n");
      out.write("\t\t\t\t<div class=\"float_l\">\r\n");
      out.write("\t\t\t\t\t<label class=\"w70\">주문요청일</label>\r\n");
      out.write("\t\t\t\t\t<p class=\"wrap_date\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" id=\"req_date\" name=\"req_date\" maxlength=\"10\" onchange=\"javascript:Commons.setDate('','req_date');\"  readonly class=\"ipt_disable\" />\r\n");
      out.write("\t\t\t\t\t\t<button type=\"button\" class=\"btn_date\"><span class=\"blind\">달력보기</span></button>\r\n");
      out.write("\t\t\t\t\t</p><br />\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<label class=\"w70\">판매처</label>\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" class=\"w140\" id=\"rcust_id\" name=\"rcust_id\"  onchange=\"javascript:storeChkAjax(this.value);\"/>\r\n");
      out.write("\t\t\t\t\t<button type=\"button\" class=\"btn_search\" onclick=\"javascript:openCustomerPopup();\"><span class=\"blind\">찾기</span></button>\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" class=\"w265 ipt_disable\" id=\"rcust_id_name\" name=\"rcust_id_name\" readonly/><br />\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<label class=\"w70\">요청사항</label>\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" class=\"w435\" id=\"bigo\" name=\"bigo\" value=\"\"/>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"float_r\">\r\n");
      out.write("\t\t\t\t\t<label class=\"w70\">도매담당자</label>\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" class=\"w350 ipt_disable\" id=\"sawon_info\" name=\"sawon_info\" value=\"");
      out.print(ls_sawon_info.trim() );
      out.write("\" readonly/><br />\r\n");
      out.write("\t\t\t\t\t<label class=\"w70\">병원담당자</label>\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" class=\"w350 ipt_disable\" id=\"rsawon_info\" name=\"rsawon_info\" value=\"\" readonly/><br />\r\n");
      out.write("\t\t\t\t\t<label class=\"w70\">총담보</label>\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" class=\"w120 ta_right ipt_disable\" id=\"tot_dambo\" name=\"tot_dambo\" value=\"\" readonly/>\r\n");
      out.write("\t\t\t\t\t<label class=\"w70 ml10\">주문가능액</label>\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" class=\"w140 ta_right ipt_disable\" id=\"rem_dambo\" name=\"rem_dambo\" value=\"\" readonly/>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div class=\"wrap_btn_group\">\r\n");
      out.write("\t\t\t<div class=\"btn_group\">\r\n");
      out.write("\t\t\t\t<div class=\"float_l\">\r\n");
      out.write("\t\t\t\t\t[설명] (평균수량=직전3개월평균 * ");
      out.print((long)orderInit.getLs_jumun_limit() );
      out.write("%) (주문한도=평균수량-해당월)\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"float_r ta_r\">\r\n");
      out.write("\t\t\t\t\t");
      out.print(WebUtil.createButtonArea(currPgmNoByUri, "p_"));
      out.write("\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"inner_cont2\">\r\n");
      out.write("\t\t\t<div class=\"wrap_result_group\">\r\n");
      out.write("\t\t\t\t<table id=\"grid_list\"></table>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"wrap_result_group\">\r\n");
      out.write("\t\t\t\t<div class=\"result_group\">\r\n");
      out.write("\t\t\t\t\t<div class=\"float_l\">\r\n");
      out.write("\t\t\t\t\t\t<label class=\"point\">평균수량</label>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" class=\"w100 ta_right ipt_disable\" id=\"mavg_qty\" readonly/>\r\n");
      out.write("\t\t\t\t\t\t<label class=\"point ml10\">주문한도</label>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" class=\"w100 ta_right ipt_disable\" id=\"psb_qty\" readonly/>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"float_r\">\r\n");
      out.write("\t\t\t\t\t\t<label class=\"point\">공급가액</label>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" class=\"w100 ta_right ipt_disable\" id=\"amt\" readonly/>\r\n");
      out.write("\t\t\t\t\t\t<label class=\"point ml10\">세액</label>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" class=\"w100 ta_right ipt_disable\" id=\"vat\" readonly/>\r\n");
      out.write("\t\t\t\t\t\t<label class=\"point ml10\">공급총액</label>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" class=\"w100 ta_right ipt_disable\" id=\"tot_amt\" readonly/>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<!-- ##### content end ##### -->\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t</form>\r\n");
      out.write("\t<div id=\"orderInsert\" style=\"display:none;\"><table id=\"grid_list_clone\"></table></div>\r\n");
      out.write("\t<form id=\"itemFrm\" name=\"itemFrm\">\r\n");
      out.write("\t</form>\r\n");
      out.write("\t");
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<div class=\"wrap_foot\">\r\n");
      out.write("\t<div class=\"footer\">\r\n");
      out.write("\t\tCopyright ⓒ 2014 <span class=\"copy_fc\">HANA PHARM CO.</span>, LTD. All Right Reserved.\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("<!-- 엑셀 다운로드용 iframe -->\r\n");
      out.write("<iframe name=\"excelDownFrame\" frameBorder=\"0\" width=\"0\" height=\"0\" class=\"blind\"></iframe>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
