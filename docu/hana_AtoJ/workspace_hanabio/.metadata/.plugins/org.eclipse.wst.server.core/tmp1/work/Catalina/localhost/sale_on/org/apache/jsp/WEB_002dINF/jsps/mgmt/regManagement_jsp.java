/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.55
 * Generated at: 2015-08-07 01:12:51 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsps.mgmt;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.hanaph.saleon.member.vo.LoginUserVO;
import com.hanaph.saleon.common.utils.StringUtil;
import com.hanaph.saleon.common.utils.WebUtil;

public final class regManagement_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/include/head.jsp", Long.valueOf(1421734197738L));
    _jspx_dependants.put("/common/path.jsp", Long.valueOf(1430124365934L));
    _jspx_dependants.put("/include/footer.jsp", Long.valueOf(1421734197738L));
    _jspx_dependants.put("/common/sessionCheck.jsp", Long.valueOf(1430193978042L));
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	LoginUserVO loginUserVO = (LoginUserVO) session.getAttribute("onlineUser");	//세션생성 세션에서 emp_code를 가져온다.
	
	String userEmpCode  = "";		// 사원 코드
	String userEmpName  = "";		// 사원 이름
	String userEmpGb    = "";		// 사원 구분 
	String userDeptCode = "";		// 부서코드
	String userDeptName = "";		// 부서명
	String userGradeName = "";		// 사원 Grade Name
	String userDeptCd = "";			//hanahr 부서정보
	String userAssgnCd = "";			//직책 코드
	String userAssgnName = "";			//직책 코드명
	/*
	 * 로그인 정보가 있는경우
	 */
	if(loginUserVO != null){
		userEmpCode = StringUtil.nvl(loginUserVO.getEmp_code());    	// 사용자코드
		userEmpName = StringUtil.nvl(loginUserVO.getEmp_name());		// 사용자명
		userEmpGb = StringUtil.nvl(loginUserVO.getEmp_gb());			// 사용자 구분 코드
		userDeptCode = StringUtil.nvl(loginUserVO.getDept_code());  	// 부서 코드
		userDeptName = StringUtil.nvl(loginUserVO.getDept_name());		// 부서 명
		userGradeName = StringUtil.nvl(loginUserVO.getGrade_name());	// 사용자 부서명
		userDeptCd = StringUtil.nvl(loginUserVO.getDept_cd());  	    // 부서 코드
		userAssgnCd = StringUtil.nvl(loginUserVO.getAssgn_cd());  	    // 직책 코드
		userAssgnName = StringUtil.nvl(loginUserVO.getAssgn_name());  	// 직책 코드명
	}
	
	/* 현재 URI에 해당하는 프로그램 No(pgm_no) */
	String currPgmNoByUri = request.getAttribute("pgm_no") == null ? "" : (String) request.getAttribute("pgm_no");

      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');

	com.hanaph.saleon.common.utils.Environment env = new com.hanaph.saleon.common.utils.Environment();	//환경 변수
	
	String HTTPS_ONLINE_WEB_ROOT = env.getValue("https.web_root_dir.url");
	String HTTPS_ONLINE_ROOT = env.getValue("https.root_dir.url");
	String ONLINE_WEB_ROOT = env.getValue("web_root_dir.url");		//URL 프로토콜, 도메인, 포트, 서브컨텍스트명, web디렉토리
	String ONLINE_ROOT = env.getValue("root_dir.url");				//URL 프로토콜, 도메인, 포트, 서브컨텍스트명
	String JDBC_URL = env.getValue("jdbc.url");
	

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("\t");
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tvar ONLINE_ROOT = \"");
      out.print(ONLINE_ROOT );
      out.write("\";\t\t/*환경변수*/\r\n");
      out.write("</script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/jquery-1.11.1.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/jquery-ui-1.10.4.custom.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/jquery.easyui.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/common.js\" charset=\"utf-8\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/default.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/placeholders.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/css/easyui.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/css/main.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/css/jquery-ui.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/css/smoothness/jquery-ui.theme.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/css/fonts.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/css/gw_sample.css\">");
      out.write("\r\n");
      out.write("\t<link rel=\"StyleSheet\" href=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/css/dtree.css\" type=\"text/css\" />\r\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/css/ui.jqgrid.css\">\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/grid.locale-kr.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/jquery.jqGrid.min.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/dtree.js\"></script>\t\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/formCheck.js\"></script>\t\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar oriDataRecode = 0;\t\t// 총 데이터 건수\r\n");
      out.write("\t\tvar addDataRecode = 0;\t\t// 추가 될 데이터 행 번호\r\n");
      out.write("\t\tvar lastsel2 = \"\";\t\t\t// 선택 된 행\r\n");
      out.write("\t\tvar submitted = false;\t\t// 저장 중복방지 변수\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/**\r\n");
      out.write("\t\t * window dom load시 최초 호출되는 role목록 jqgrid\r\n");
      out.write("\t\t */\r\n");
      out.write("\t\t$(document).ready(function(){\r\n");
      out.write("\t\t\t// 버튼 리스트의 jqgrid부분\r\n");
      out.write("\t\t\tjsonReader : {\r\n");
      out.write("\t\t\t    repeatitems: false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\"#btn_list\").jqGrid({\r\n");
      out.write("\t\t\t\t// 요청방식\r\n");
      out.write("\t\t\t\tmtype:\"post\",\r\n");
      out.write("\t\t\t\t// 결과물 받을 데이터 타입\r\n");
      out.write("\t\t\t\tdatatype:\"json\",\r\n");
      out.write("\t\t\t\t// 컬럼명\r\n");
      out.write("\t\t\t\tcolNames:[\"PGM No\",\"버튼 ID\",\"사용\",\"버튼명\"],\r\n");
      out.write("\t\t\t\tcolModel:[\r\n");
      out.write("\t\t\t\t\t\t\t{name:\"pgm_no\",\t\tindex:\"pgm_no\",\t\t\talign:\"left\", width:50},\t\t\t\t\t\t// 프로그램 ID\r\n");
      out.write("\t\t\t\t\t\t\t{name:\"btn_id\",\t\tindex:\"btn_id\",\t\t\talign:\"left\", width:200, type:\"text\", editable: true, edittype:\"text\",formatter: 'textbox', editoptions:{size:50, maxlength: 50}},\t\t// 버튼 ID\r\n");
      out.write("\t\t\t\t\t\t\t{name:\"btn_use_yn\",\tindex:\"btn_use_yn\", \talign:\"center\", width:100,\ttype:\"checkbox\", formatter: 'checkbox', width:30\r\n");
      out.write("\t\t\t\t\t\t\t\t\t,formatoptions:{disabled: true}, editable:true, edittype:\"checkbox\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t,editoptions:{\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t  \tvalue:'Y:N', \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t  \tdataEvents:[{type:'click', fn: function(e){\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t  \t\tvar rowId = $(\"#btn_list\").getGridParam(\"selrow\");  \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t  \t\tvar selectSel = \"\";\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tif(rowId && rowId!==selectSel){\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t    \t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tselectSel=rowId;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t    \tvar selectedCheck = $(\"#btn_list\").getRowData(selectSel);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t    \t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t$(\"#buttonUseYn\").empty();\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t$(\"#buttonUseYn\").val(selectedCheck.btn_use_yn);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t  \t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t        }}]\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}  \r\n");
      out.write("\t\t\t\t\t\t\t},\t\t// 사용 여부\r\n");
      out.write("\t\t\t\t\t\t\t{name:\"btn_nm\", index:\"btn_nm\", align:\"left\", type:\"text\", width:152, editable: true, edittype:\"text\", editrules:{required:true}, formatter: 'textbox', editoptions :  Commons.jqgridEditOptions('btn_list')}\t\t// 버튼 명\r\n");
      out.write("\t\t\t\t\t\t],\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t// 선택된 행의 데이터 가져오기.\r\n");
      out.write("\t\t\t\tonSelectRow: function(id){\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t$('#btn_list').editRow(id,true);\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tif(id && id!==lastsel2){\r\n");
      out.write("\t\t\t\t\t\t$('#btn_list').restoreRow(lastsel2);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tlastsel2=id;\r\n");
      out.write("\t\t\t    \t\r\n");
      out.write("\t\t\t    \tvar selectedList = $(\"#btn_list\").getRowData(lastsel2);\r\n");
      out.write("\t\t\t    \t\r\n");
      out.write("\t\t\t    \t$(\"#rowids\").empty();\t\t\t// row id 빈 값 셋팅\r\n");
      out.write("\t\t\t    \t$(\"#buttonPgmNo\").empty();\t\t// 버튼 프로그램 no 빈 값 셋팅\r\n");
      out.write("\t\t\t\t\t$(\"#buttonId\").empty();\t\t\t// 버튼 id 빈 값 셋팅\r\n");
      out.write("\t\t\t\t\t$(\"#buttonOriId\").empty();\t\t// 버튼 원래 id 빈 값 셋팅\r\n");
      out.write("\t\t\t\t\t$(\"#buttonUseYn\").empty();\t\t// 버튼 사용여부 빈 값 셋팅\r\n");
      out.write("\t\t\t\t\t$(\"#buttonName\").empty();\t\t// 버튼명 빈 값 셋팅\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t$(\"#rowids\").val(lastsel2);\t\t\t\t\t\t\t\t// row id 선택 된  값 셋팅\r\n");
      out.write("\t\t\t    \t$(\"#buttonPgmNo\").val(selectedList.pgm_no);\t\t\t\t// 버튼 프로그램 no 선택 된  값 셋팅\r\n");
      out.write("\t\t\t\t\t$(\"#buttonId\").val($(\"#\"+lastsel2+\"_btn_id\").val());\t// 버튼 id 선택 된  값 셋팅\r\n");
      out.write("\t\t\t\t\t$(\"#buttonOriId\").val($(\"#\"+lastsel2+\"_btn_id\").val());\t// 버튼 원래 id 선택 된 값 셋팅\r\n");
      out.write("\t\t\t\t\t$(\"#buttonUseYn\").val(selectedList.btn_use_yn);\t\t\t// 버튼 사용여부 선택 된 값 셋팅\r\n");
      out.write("\t\t\t\t\t$(\"#buttonName\").val($(\"#\"+lastsel2+\"_btn_nm\").val());\t// 버튼명 선택 된 값 셋팅\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t// 그리드 캡션\r\n");
      out.write("\t\t\t\theight:167,\r\n");
      out.write("\t\t\t\t//autowidth:true,\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tloadComplete: function(data){\r\n");
      out.write("\t\t\t\t\tif (data.records > 0) {\r\n");
      out.write("\t\t\t\t\t\toriDataRecode = data.records;\r\n");
      out.write("\t\t\t\t\t\taddDataRecode = data.records +1;\r\n");
      out.write("\t\t\t\t\t\t$(\"#buttonPgmNo\").val(data.rows[0].pgm_no);\r\n");
      out.write("\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\t$(\"#buttonPgmNo\").val(\"\");\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t// \r\n");
      out.write("\t\t\t/**\r\n");
      out.write("\t\t \t * 프로그램 추가 버튼 클릭\r\n");
      out.write("\t\t \t */\r\n");
      out.write("\t\t\t$(\"#cm_add\").on(\"click\",function(){\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif($(\"#parentPgm\").val() == \"\"){\r\n");
      out.write("\t\t\t\t\talert(\"상위 메뉴 선택 후 메뉴를 추가 해주세요.\");\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif($(\"#pgmNo\").val() != \"\"){\r\n");
      out.write("\t\t\t\t\talert(\"PGM No.가 등록 되어 있습니다.\\n상위 메뉴 선택 후 메뉴를 추가 해주세요.\");\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif($(\"#pgmId\").val() == \"\"){\r\n");
      out.write("\t\t\t\t\talert(\"PGM URL을 입력 해주세요.\");\r\n");
      out.write("\t\t\t\t\t$(\"#pgmId\").focus();\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif($(\"#pgmName\").val() == \"\"){\r\n");
      out.write("\t\t\t\t\talert(\"PGM Name을 입력 해주세요.\");\r\n");
      out.write("\t\t\t\t\t$(\"#pgmName\").focus();\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tprocProgram(\"insert\");\r\n");
      out.write("\t\t\t}); \r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t/**\r\n");
      out.write("\t\t \t * 프로그램 삭제시 호출되는 함수\r\n");
      out.write("\t\t \t */\r\n");
      out.write("\t\t\t$(\"#cm_delete\").on(\"click\",function(){   \r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif($(\"#pgmNo\").val() == \"\"){\r\n");
      out.write("\t\t\t\t\talert(\"PGM No.가 없습니다.\\n메뉴 선택 후 삭제 해주세요.\");\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif(confirm(\"시스템에 영향을 줄수 있습니다.\\삭제 하시겠습니까?\")){\r\n");
      out.write("\t\t\t\t\tprocProgram(\"delete\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t/**\r\n");
      out.write("\t\t \t * 프로그램 저장시 호출되는 함수\r\n");
      out.write("\t\t \t */\r\n");
      out.write("\t\t\t$(\"#cm_save\").on(\"click\",function(){\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif($(\"#parentPgm\").val() == \"\"){\r\n");
      out.write("\t\t\t\t\talert(\"상위 메뉴 code가 존재 하지 않습니다.\");\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif($(\"#pgmId\").val() == \"\"){\r\n");
      out.write("\t\t\t\t\talert(\"PGM URL을 입력 해주세요.\");\r\n");
      out.write("\t\t\t\t\t$(\"#pgmId\").focus();\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif($(\"#pgmName\").val() == \"\"){\r\n");
      out.write("\t\t\t\t\talert(\"PGM Name을 입력 해주세요.\");\r\n");
      out.write("\t\t\t\t\t$(\"#pgmName\").focus();\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tprocProgram(\"save\");\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t/**\r\n");
      out.write("\t\t \t * 버튼 추가 버튼 클릭시 호출되는 함수\r\n");
      out.write("\t\t \t */\r\n");
      out.write("\t\t\t$(\"#cb_add\").on(\"click\",function(){\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif($(\"#pgmNo\").val() == \"\"){\r\n");
      out.write("\t\t\t\t\talert(\"프로그램 추가 후 등록 가능 합니다.\");\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif(addDataRecode == 0){\r\n");
      out.write("\t\t\t\t\taddDataRecode = 1;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif(oriDataRecode+1 == addDataRecode){\r\n");
      out.write("\t\t\t\t\t$(\"#rowids\").val(addDataRecode);\r\n");
      out.write("\t\t\t\t\t$(\"#btn_list\").jqGrid('addRow', {\r\n");
      out.write("\t\t\t           rowID : addDataRecode,          \t\t// 중복되지 않게 rowid설정\r\n");
      out.write("\t\t\t           initdata : {pgm_no:\"\", btn_id:\"\",btn_use_yn:\"\", btn_nm:\"\"},\r\n");
      out.write("\t\t\t           position :\"last\",           \t\t\t// first, last\r\n");
      out.write("\t\t\t           useDefValues : false,\r\n");
      out.write("\t\t\t           useFormatter : false,\r\n");
      out.write("\t\t\t           addRowParams : {extraparam:{}}\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\taddDataRecode = addDataRecode+1;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\t\t}); \r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t/**\r\n");
      out.write("\t\t \t * 삭제버튼 클릭시 호출되는 함수\r\n");
      out.write("\t\t \t */\r\n");
      out.write("\t\t\t$(\"#cb_delete\").on(\"click\",function(){ \r\n");
      out.write("\t\t\t\tvar rowid = $(\"#rowids\").val();\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif(rowid == addDataRecode){\r\n");
      out.write("\t\t\t\t\t//행삭제\r\n");
      out.write("\t\t\t\t\t$(\"#btn_list\").delRowData(rowid);\r\n");
      out.write("\t\t\t\t\t$(\"#rowids\").val(\"\");\r\n");
      out.write("\t\t\t\t\taddDataRecode = addDataRecode-1;\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tif(rowid == \"\"){\r\n");
      out.write("\t\t\t\t\t\talert(\"버튼을 선택 해주세요.\");\r\n");
      out.write("\t\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tif(confirm(\"해당 버튼을 삭제 하시겠습니까?\")){\r\n");
      out.write("\t\t\t\t\t\t//행삭제\r\n");
      out.write("\t\t\t\t\t\t$(\"#btn_list\").delRowData(rowid);\r\n");
      out.write("\t\t\t\t\t\t$(\"#rowids\").val(\"\");\r\n");
      out.write("\t\t\t\t\t\taddDataRecode = addDataRecode-1;\r\n");
      out.write("\t\t\t\t\t\toriDataRecode = oriDataRecode-1;\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t// 데이터 삭제\r\n");
      out.write("\t\t\t\t\t\tprocButton(\"delete\");\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t}\t\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t/**\r\n");
      out.write("\t\t \t * 추가버튼 클릭시 최초 호출되는 함수\r\n");
      out.write("\t\t \t */\r\n");
      out.write("\t\t\t$(\"#cb_save\").on(\"click\",function(){\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tvar buttonId = $(\"#buttonOriId\").val();\r\n");
      out.write("\t\t\t\tvar saveRowId = $(\"#rowids\").val();\r\n");
      out.write("\t\t\t\tvar type = \"\";\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif($(\"input:checkbox[id='\"+saveRowId+\"_btn_use_yn']\").is(\":checked\") == true){\r\n");
      out.write("\t\t\t\t\t$(\"#buttonUseYn\").val(\"Y\");\r\n");
      out.write("\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t$(\"#buttonUseYn\").val(\"N\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t$(\"#buttonId\").val($(\"#\"+saveRowId+\"_btn_id\").val());\r\n");
      out.write("\t\t\t\t$(\"#buttonName\").val($(\"#\"+saveRowId+\"_btn_nm\").val());\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif($(\"#buttonPgmNo\").val() == \"\"){\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\ttype = \"insert\";\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tif($(\"#\"+saveRowId+\"_btn_id\").val() == \"\"){\r\n");
      out.write("\t\t\t\t\t\talert(\"버튼 ID를 입력 해주세요.\");\r\n");
      out.write("\t\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\ttype = \"save\";\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tif(buttonId == \"\"){\r\n");
      out.write("\t\t\t\t\t\talert(\"버튼 ID를 입력 해주세요.\");\r\n");
      out.write("\t\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t// 데이터 추가\r\n");
      out.write("\t\t\t\tprocButton(type);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/**\r\n");
      out.write("\t \t * 프로그램 추가,저장,삭제를 처리하는 함수\r\n");
      out.write("\t \t * @param buttonType\t\t프로그램 버튼 type\r\n");
      out.write("\t \t * @return \t\t\t\t\tresultCode\r\n");
      out.write("\t \t */\r\n");
      out.write("\t\tfunction procProgram(buttonType){\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(submitted == true) {return;}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tsubmitted = true;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\"#procType\").val(buttonType);\r\n");
      out.write("\t\t\tvar parentPgm = $(\"#parentPgm\").val();\r\n");
      out.write("\t\t\tvar formData = $(\"form[name=programFrm]\").serialize();\r\n");
      out.write("\t\t\tvar pgmId = $(\"#pgmId\").val();\r\n");
      out.write("\t\t\tvar pgmName = $(\"#pgmName\").val();\r\n");
      out.write("\t\t\tvar sortOrder = $(\"#sortOrder\").val();\r\n");
      out.write("\t\t\tvar customPgmId = $(\"#pgmId\").val().split(\".\").join(\"\");\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tcustomPgmId = customPgmId.split(\"_\").join(\"\");\r\n");
      out.write("\t\t\tcustomPgmId = customPgmId.split(\"/\").join(\"\");\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(buttonType == \"insert\" || buttonType == \"save\"){\r\n");
      out.write("\t\t\t\tif(parentPgm == \"\"){\r\n");
      out.write("\t\t\t\t\talert(\"상위 메뉴가 없습니다.\");\r\n");
      out.write("\t\t\t\t\tsubmitted = false;\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif(formCheck.getByteLength(pgmId) > 200){\r\n");
      out.write("\t\t\t\t\talert(\"PGM URL은 200byte이하로 입력 해주세요.\");\r\n");
      out.write("\t\t\t\t\t$(\"#pgmId\").focus();\r\n");
      out.write("\t\t\t\t\tsubmitted = false;\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif(formCheck.isAlphaNum(customPgmId)){\r\n");
      out.write("\t\t\t\t\talert(\"PGM URL은 숫자 또는 영문, /, _만 가능합니다.\");\r\n");
      out.write("\t\t\t\t\t$(\"#pgmId\").focus();\r\n");
      out.write("\t\t\t\t\tsubmitted = false;\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif(formCheck.getByteLength(pgmName) > 100){\r\n");
      out.write("\t\t\t\t\talert(\"PGM Name은 100byte이하로 입력 해주세요.\");\r\n");
      out.write("\t\t\t\t\t$(\"#pgmName\").focus();\r\n");
      out.write("\t\t\t\t\tsubmitted = false;\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif(formCheck.isNumer(sortOrder)){\r\n");
      out.write("\t\t\t\t\talert(\"정렬 순서는 숫자만 가능합니다.\");\r\n");
      out.write("\t\t\t\t\t$(\"#sortOrder\").focus();\r\n");
      out.write("\t\t\t\t\tsubmitted = false;\r\n");
      out.write("\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\ttype : \"POST\"\r\n");
      out.write("\t\t\t\t       \t, async : true\r\n");
      out.write("\t\t\t\t    \t, url : \"");
      out.print(ONLINE_ROOT );
      out.write("/mgmt/procProgramAjax.do\"\r\n");
      out.write("\t\t\t\t    \t, dataType : \"json\"\r\n");
      out.write("\t\t\t\t    \t, data : formData\r\n");
      out.write("\t\t\t\t    \t, success : function(data) {\r\n");
      out.write("\t\t\t\t    \t\tif(data.resultCode > 0){\r\n");
      out.write("\t\t\t\t    \t\t\tif(data.resultMsg == \"insert\"){\r\n");
      out.write("\t\t\t\t    \t\t\t\talert(\"추가 되었습니다.\");\r\n");
      out.write("\t\t\t\t    \t\t\t\t\r\n");
      out.write("\t\t\t\t    \t\t\t\tif($(\"input:checkbox[id='pgmUseYn']\").is(\":checked\") == true){\r\n");
      out.write("\t\t\t\t    \t\t\t\t\t$(\"input:checkbox[id='pgmUseYn']\").prop(\"checked\", true);\t\r\n");
      out.write("\t\t\t\t    \t\t\t\t}else{\r\n");
      out.write("\t\t\t\t    \t\t\t\t\t$(\"input:checkbox[id='pgmUseYn']\").prop(\"checked\", false);\t\r\n");
      out.write("\t\t\t\t    \t\t\t\t}\r\n");
      out.write("\t\t\t\t    \t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\tif($(\"input:checkbox[id='menuUseYn']\").is(\":checked\") == true){\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t$(\"input:checkbox[id='menuUseYn']\").prop(\"checked\", true);\t\r\n");
      out.write("\t\t\t\t    \t\t\t\t}else{\r\n");
      out.write("\t\t\t\t    \t\t\t\t\t$(\"input:checkbox[id='menuUseYn']\").prop(\"checked\", false);\r\n");
      out.write("\t\t\t\t    \t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t    \t\t\t}else if(data.resultMsg == \"save\"){\r\n");
      out.write("\t\t\t\t    \t\t\t\talert(\"저장 되었습니다.\");\r\n");
      out.write("\t\t\t\t    \t\t\t}else{\r\n");
      out.write("\t\t\t\t    \t\t\t\talert(\"삭제 되었습니다.\");\r\n");
      out.write("\t\t\t\t    \t\t\t\t$('#programFrm')[0].reset();\r\n");
      out.write("\t\t\t\t    \t\t\t\t$(\"#btn_list\").trigger(\"reloadGrid\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\t$(\"input:checkbox[id='pgmUseYn']\").prop(\"checked\", false);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t$(\"input:checkbox[id='menuUseYn']\").prop(\"checked\", false);\r\n");
      out.write("\t\t\t\t    \t\t\t}\r\n");
      out.write("\t\t\t\t    \t\t\t\r\n");
      out.write("\t\t\t\t    \t\t\taddDataRecode = 0;\r\n");
      out.write("\t\t\t\t    \t\t\t\r\n");
      out.write("\t\t\t\t\t    \t\t$(\"#treeLeft\").empty();\r\n");
      out.write("\t\t\t\t\t    \t\t$(\"#treeRiget\").empty();\r\n");
      out.write("\t\t\t\t\t    \t\tCommons.treeMenuLeftAjax(\"ALL\");\r\n");
      out.write("\t\t\t\t\t    \t\tCommons.treeMenuRightAjax(\"IN_USE\");\r\n");
      out.write("\t\t\t\t    \t\t\r\n");
      out.write("\t\t\t\t    \t\t}else{\r\n");
      out.write("\t\t\t\t    \t\t\talert(\"처리 중 장애가 발생 하였습니다.\");\r\n");
      out.write("\t\t\t\t    \t\t}\r\n");
      out.write("\t\t\t\t    }\r\n");
      out.write("\t\t\t\t    , error : function(request, status, error) {\r\n");
      out.write("\t\t\t\t\t     alert(\"code : \" + request.status + \"\\r\\nmessage : \" + request.reponseText);\r\n");
      out.write("\t\t\t\t    }\r\n");
      out.write("\t\t\t\t    ,\r\n");
      out.write("\t\t \t           complete : function(data) {\r\n");
      out.write("\t\t \t        \t\tsubmitted = false;   \r\n");
      out.write("\t          \t\t}\r\n");
      out.write("\t\t\t\t    \r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/**\r\n");
      out.write("\t \t * 왼쪽 메뉴 tree프로그램 선택시 호출 되는 함수\r\n");
      out.write("\t \t * @param  programNumber 프로그램 no\r\n");
      out.write("\t \t * @return data\r\n");
      out.write("\t \t */\r\n");
      out.write("\t\tfunction selectedMenu(programNumber){\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\taddDataRecode = 0;\r\n");
      out.write("\t\t\toriDataRecode = 0;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\"#rowids\").val(\"\");\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(programNumber != \"\"){\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tvar pgmNo = Commons.leadingZeros(programNumber,5);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t    type : \"POST\"\r\n");
      out.write("\t\t\t\t    , async : true\r\n");
      out.write("\t\t\t\t    , url : \"");
      out.print(ONLINE_ROOT );
      out.write("/mgmt/programDetailAjax.do\" \r\n");
      out.write("\t\t\t\t    , dataType : \"json\"\r\n");
      out.write("\t\t\t\t    , data : {\"pgmNo\":pgmNo}\r\n");
      out.write("\t\t\t\t    , success : function(data) {\r\n");
      out.write("\t\t\t\t    \t\r\n");
      out.write("\t\t\t\t    \t// 값 초기화\r\n");
      out.write("\t\t\t\t    \tformReset(); \r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t// 값이 있는경우 셋팅\r\n");
      out.write("\t\t\t\t\t\t$(\"#pgmNo\").val(data.pgm_no);\r\n");
      out.write("\t\t\t\t\t\t$(\"#parentPgm\").val(data.parent_pgm);\r\n");
      out.write("\t\t\t\t\t\t$(\"#pgmNumber\").val(data.pgm_no);\r\n");
      out.write("\t\t\t\t\t\t$(\"#pgmId\").val(data.pgm_id);\r\n");
      out.write("\t\t\t\t\t\t$(\"#pgmName\").val(data.pgm_name);\r\n");
      out.write("\t\t\t\t\t\t$(\"#pgmKindCode\").val(data.pgm_kind_code).prop(\"selected\", \"selected\");\r\n");
      out.write("\t\t\t\t\t\t$(\"#picture\").val(data.picture).prop(\"selected\", \"selected\");\r\n");
      out.write("\t\t\t\t\t\t$(\"#selectPicture\").val(data.select_picture).prop(\"selected\", \"selected\");\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\tif(data.pgm_use_yn == \"Y\"){\r\n");
      out.write("\t\t\t\t\t\t\t$(\"input:checkbox[id='pgmUseYn']\").prop(\"checked\", true);\t\r\n");
      out.write("\t\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\t\t$(\"input:checkbox[id='pgmUseYn']\").prop(\"checked\", false);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t \r\n");
      out.write("\t\t\t\t\t\tif(data.menu_use_yn == \"Y\"){\r\n");
      out.write("\t\t\t\t\t\t\t$(\"input:checkbox[id='menuUseYn']\").prop(\"checked\", true); \r\n");
      out.write("\t\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\t\t$(\"input:checkbox[id='menuUseYn']\").prop(\"checked\", false);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t$(\"#parentPgmNumber\").val(data.parent_pgm);\r\n");
      out.write("\t\t\t\t\t\t$(\"#sortOrder\").val(data.sort_order);\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t    }, complete : function(data) {\r\n");
      out.write("\t\t\t\t    \tbuttonList(programNumber);\r\n");
      out.write("\t\t\t\t    }, error : function(request, status, error) {\r\n");
      out.write("\t\t\t\t\t     alert(\"code : \" + request.status + \"\\r\\nmessage : \" + request.reponseText);\r\n");
      out.write("\t\t\t\t    }\r\n");
      out.write("\t\t\t\t    \r\n");
      out.write("\t\t\t\t});\t\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/**\r\n");
      out.write("\t \t * 왼쪽 메뉴 tree프로그램 선택 후 추가 될 정렬 순서로 셋팅 하는 함수\r\n");
      out.write("\t \t */\r\n");
      out.write("\t\tfunction sortSetting(programNumber){\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tformReset();\t// form값을 리셋한다.\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\"input:checkbox[id='pgmUseYn']\").prop(\"checked\", false);\t\t// 프로그램 사용여부 체크박스 해재\r\n");
      out.write("\t\t\t$(\"input:checkbox[id='menuUseYn']\").prop(\"checked\", false);\t\t// 메뉴 체크박스 해재\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\taddDataRecode = 0;\r\n");
      out.write("\t\t\t$(\"#btn_list\").clearGridData();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar pgmNo = Commons.leadingZeros(programNumber,5);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\tif(pgmNo != \"\"){\r\n");
      out.write("\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t    type : \"POST\"\r\n");
      out.write("\t\t\t\t    , async : true\r\n");
      out.write("\t\t\t\t    , url : \"");
      out.print(ONLINE_ROOT );
      out.write("/mgmt/programSortNumAjax.do\" \r\n");
      out.write("\t\t\t\t    , dataType : \"json\"\r\n");
      out.write("\t\t\t\t    , data : {\"pgmNo\":pgmNo}\r\n");
      out.write("\t\t\t\t    , success : function(data) {\r\n");
      out.write("\t\t\t\t\t\tif(data.resultCode > 0){\r\n");
      out.write("\t\t\t\t\t\t\t$(\"#sortOrder\").val(data.max_sort);\r\n");
      out.write("\t\t\t\t\t\t\t$(\"#parentPgmNumber\").val(pgmNo);\r\n");
      out.write("\t\t\t\t\t\t\t$(\"#parentPgm\").val(pgmNo);\r\n");
      out.write("\t\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t    \t\t\talert(\"처리 중 장애가 발생 하였습니다.\");\r\n");
      out.write("\t\t\t    \t\t}\r\n");
      out.write("\t\t\t\t    }, error : function(request, status, error) {\r\n");
      out.write("\t\t\t\t\t     alert(\"code : \" + request.status + \"\\r\\nmessage : \" + request.reponseText);\r\n");
      out.write("\t\t\t\t    }\r\n");
      out.write("\t\t\t\t    \r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/**\r\n");
      out.write("\t \t * 버튼 list를 호출하는 jqgrif 함수\r\n");
      out.write("\t \t * @param programNumber\t\t프로그램 no\r\n");
      out.write("\t \t * @return \t\t\t\t\t버튼list jqgrid\r\n");
      out.write("\t \t */\r\n");
      out.write("\t\tfunction buttonList(programNumber){\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar pgmNo = Commons.leadingZeros(programNumber,5);\t// 프로그램 no가 숫자 형태로 넘어와 숫자 앞에 0을 채워주는 함수로 결과 값 return받음.\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\"#buttonInsertPgmNo\").val(pgmNo);\t\t// 프로그램 no셋팅\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(pgmNo != \"\"){\r\n");
      out.write("\t\t\t\t// 파라미터 셋팅\r\n");
      out.write("\t\t\t\tvar param = \"pgmNo=\"+pgmNo;\r\n");
      out.write("\t\t\t\t$(\"#btn_list\").clearGridData(); \t// 이전 그리드 삭제\r\n");
      out.write("\t\t\t\t$(\"#btn_list\").jqGrid('setGridParam',{url:\"");
      out.print(ONLINE_ROOT);
      out.write("/mgmt/buttonListAjax.do?\" + param}).trigger(\"reloadGrid\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/**\r\n");
      out.write("\t \t * FORM RESET : hidden값과 form값을 리셋 해준다.\r\n");
      out.write("\t \t */\r\n");
      out.write("\t\tfunction formReset(){\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\"#pgmNo\").val(\"\");\r\n");
      out.write("\t\t\t$(\"#parentPgm\").val(\"\");\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\"form\").each(function() {  \r\n");
      out.write("\t\t\t\tthis.reset();  \r\n");
      out.write("\t\t\t});\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/**\r\n");
      out.write("\t \t * 버튼 추가,저장,삭제시 호출되는 함수\r\n");
      out.write("\t \t * @param buttonType\t\t버튼 type\r\n");
      out.write("\t \t * @return resultCode \t\t결과 값\r\n");
      out.write("\t \t */\r\n");
      out.write("\t\tfunction procButton(buttonType){\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\"#procButtonType\").val(buttonType);\t//  버튼 type셋팅\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar formData = $(\"form[name=buttonFrm]\").serialize();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\ttype : \"POST\"\r\n");
      out.write("\t\t\t\t       \t, async : true\r\n");
      out.write("\t\t\t\t    \t, url : \"");
      out.print(ONLINE_ROOT );
      out.write("/mgmt/procButtonAjax.do\"\r\n");
      out.write("\t\t\t\t    \t, dataType : \"json\"\r\n");
      out.write("\t\t\t\t    \t, data : formData\r\n");
      out.write("\t\t\t\t    \t, success : function(data) {\r\n");
      out.write("\t\t\t\t    \t\tif(data.resultCode > 0){\r\n");
      out.write("\t\t\t\t    \t\t\tif(data.message == \"insert\"){\r\n");
      out.write("\t\t\t\t    \t\t\t\tif(data.resultCode == 3){\r\n");
      out.write("\t\t\t\t    \t\t\t\t\talert(\"이미 등록된 버튼 ID 입니다.\");\r\n");
      out.write("\t\t\t\t    \t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t    \t\t\t\t}else{\r\n");
      out.write("\t\t\t\t    \t\t\t\t\talert(\"저장 되었습니다.\");\r\n");
      out.write("\t\t\t\t    \t\t\t\t\t$(\"#rowids\").val(\"\");\r\n");
      out.write("\t\t\t\t    \t\t\t\t\tlastsel2 = \"\";\r\n");
      out.write("\t\t\t\t    \t\t\t\t}\r\n");
      out.write("\t\t\t\t    \t\t\t}else if(data.message == \"save\"){\r\n");
      out.write("\t\t\t\t    \t\t\t\talert(\"저장 되었습니다.\");\r\n");
      out.write("\t\t\t\t    \t\t\t\t$(\"#rowids\").val();\r\n");
      out.write("\t\t\t\t    \t\t\t\tlastsel2 = \"\";\r\n");
      out.write("\t\t\t\t    \t\t\t}else{\r\n");
      out.write("\t\t\t\t    \t\t\t\talert(\"삭제 되었습니다.\");\r\n");
      out.write("\t\t\t\t    \t\t\t\t$(\"#rowids\").val(\"\");\r\n");
      out.write("\t\t\t\t    \t\t\t\tlastsel2 = \"\";\r\n");
      out.write("\t\t\t\t    \t\t\t}\r\n");
      out.write("\t\t\t\t    \t\t}else{\r\n");
      out.write("\t\t\t\t    \t\t\talert(\"처리 중 장애가 발생 하였습니다.\");\r\n");
      out.write("\t\t\t\t    \t\t}\r\n");
      out.write("\t\t\t\t    \t\t\r\n");
      out.write("\t\t\t\t    \t\t$(\"#btn_list\").trigger(\"reloadGrid\");\r\n");
      out.write("\t\t\t\t    \t}\r\n");
      out.write("\t\t\t\t    \t, error : function(request, status, error) {\r\n");
      out.write("\t\t\t\t\t     alert(\"code : \" + request.status + \"\\r\\nmessage : \" + request.reponseText);\r\n");
      out.write("\t\t\t\t    \t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/**\r\n");
      out.write("\t \t * window resize 함수\r\n");
      out.write("\t \t */\r\n");
      out.write("\t\t$(window).resize(function(){\r\n");
      out.write("\t\t\t$(\"#btn_list\").setGridWidth($(\".botton_list.box_type01\").width() , false);\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/**\r\n");
      out.write("\t \t * window oad시 왼쪽 메뉴 tree와 오른쪽 menu tree를 호출 하는 함수\r\n");
      out.write("\t \t */\r\n");
      out.write("\t\t$(window).load(function() {\r\n");
      out.write("\t\t\tCommons.treeMenuLeftAjax(\"ALL\");\r\n");
      out.write("\t\t\tCommons.treeMenuRightAjax(\"IN_USE\");\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/**\r\n");
      out.write("\t \t * 왼쪽 메뉴 tree 호출 함수\r\n");
      out.write("\t \t */\r\n");
      out.write("\t\tfunction leftTreeComplete(d){\r\n");
      out.write("\t\t\ttreeLeft.innerHTML = d;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/**\r\n");
      out.write("\t \t *  오른쪽 menu tree 호출 함수\r\n");
      out.write("\t \t */\r\n");
      out.write("\t\tfunction rightTreeComplete(d){\r\n");
      out.write("\t\t\ttreeRight.innerHTML = d;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"inner_cont\">\r\n");
      out.write("\t\t<div class=\"wrap_program_admin\">\r\n");
      out.write("\t\t\t<div class=\"float_l mr10\">\r\n");
      out.write("\t\t\t\t<h2>전체 프로그램 메뉴</h2>\r\n");
      out.write("\t\t\t\t\t<div class=\"program_box box_type01\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"list_button mtn\" style=\"width:92px; margin:10px auto\">\r\n");
      out.write("\t\t\t\t\t\t\t<button class=\"type_01\" onclick=\"javascript: d.openAll();\">펼치기</button>\r\n");
      out.write("\t\t\t\t\t\t\t<button class=\"type_01\" onclick=\"javascript: d.closeAll();\">접기</button>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div id=\"treeLeft\" class=\"mt10\"></div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"float_l mr10\">\r\n");
      out.write("\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t<h2>Program</h2>\r\n");
      out.write("\t\t\t\t\t<div class=\"program_detail box_type01\">\r\n");
      out.write("\t\t\t\t\t<form name=\"programFrm\" id=\"programFrm\" method=\"post\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"hidden\" name=\"pgmNo\" id=\"pgmNo\" value=\"\" />\r\n");
      out.write("\t\t\t\t\t\t<input type=\"hidden\" name=\"parentPgm\" id=\"parentPgm\" value=\"\" />\r\n");
      out.write("\t\t\t\t\t\t<input type=\"hidden\" name=\"procType\" id=\"procType\" value=\"\" />\r\n");
      out.write("\t\t\t\t\t\t<table class=\"type01 re_style\">\r\n");
      out.write("\t\t\t\t\t\t\t<colgroup>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<col style=\"width:30%\" />\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<col style=\"width:70%\" />\r\n");
      out.write("\t\t\t\t\t\t\t</colgroup>\r\n");
      out.write("\t\t\t\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th class=\"no_border_l\">PGM NO.</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td class=\"no_border_r\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"pgmNumber\" id=\"pgmNumber\" disabled class=\"ipt_disable\" />\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th class=\"no_border_l\">PGM URL</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td class=\"no_border_r\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"pgmId\" id=\"pgmId\" maxlength=\"50\" />\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th class=\"no_border_l\">PGM Name</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td class=\"no_border_r\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"pgmName\" id=\"pgmName\" maxlength=\"100\" />\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th class=\"no_border_l\">PGM 구분</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td class=\"no_border_r\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<select name=\"pgmKindCode\" id=\"pgmKindCode\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"P\" selected>Program</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"M\">Menu</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th class=\"no_border_l\">사용여부</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td class=\"no_border_r\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" name=\"pgmUseYn\" id=\"pgmUseYn\" value=\"Y\" />\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<label for=\"check_pro\">프로그램</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" name=\"menuUseYn\" id=\"menuUseYn\" type=\"checkbox\" value=\"Y\" />\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<label for=\"check_menu\">메뉴</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th class=\"no_border_l\">상위메뉴</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td class=\"no_border_r\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"parentPgmNumber\" id=\"parentPgmNumber\" disabled class=\"ipt_disable\" />\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th class=\"no_border_l\">정렬순서</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td class=\"no_border_r\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"sortOrder\" id=\"sortOrder\" maxlength=\"3\" />\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th class=\"no_border_l\">아이콘</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td class=\"no_border_r\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<select name=\"picture\" id=\"picture\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"tree_icon_window.gif\">PROGRAM</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"tree_icon_folder.gif\">MENU</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th class=\"no_border_l no_border_b\">선택 아이콘</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td class=\"no_border_r no_border_b\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<select name=\"selectPicture\" id=\"selectPicture\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"tree_icon_window.gif\">PROGRAM</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"tree_icon_folder.gif\">MENU</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"manager_btn_group\">\r\n");
      out.write("\t\t\t\t\t<div class=\"ta_r\">\r\n");
      out.write("\t\t\t\t\t\t");
      out.print(WebUtil.createButtonArea(currPgmNoByUri, "cm_"));
      out.write("\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\t\r\n");
      out.write("\t\t\t</div>\t\t\t\r\n");
      out.write("\t\t\t\t<div class=\"mt8\">\r\n");
      out.write("\t\t\t\t\t\t<h2>Button List</h2>\r\n");
      out.write("\t\t\t\t\t<div class=\"botton_list box_type01\">\r\n");
      out.write("\t\t\t\t\t\t<form name=\"buttonFrm\" id=\"buttonFrm\">\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"hidden\" name=\"procButtonType\" id=\"procButtonType\" value=\"\" />\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"hidden\" name=\"buttonInsertPgmNo\" id=\"buttonInsertPgmNo\" value=\"\" />\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"hidden\" name=\"buttonPgmNo\" id=\"buttonPgmNo\" value=\"\" />\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"hidden\" name=\"buttonId\" id=\"buttonId\" value=\"\" />\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"hidden\" name=\"buttonOriId\" id=\"buttonOriId\" value=\"\" />\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"hidden\" name=\"buttonUseYn\" id=\"buttonUseYn\" value=\"\" />\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"hidden\" name=\"buttonName\" id=\"buttonName\" value=\"\" />\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"hidden\" name=\"rowids\" id=\"rowids\" value=\"\" />\t\r\n");
      out.write("\t\t\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t\t\t<table id=\"btn_list\"></table>\t\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"manager_btn_group\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"ta_r\">\r\n");
      out.write("\t\t\t\t\t\t\t");
      out.print(WebUtil.createButtonArea(currPgmNoByUri, "cb_"));
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"float_l\">\r\n");
      out.write("\t\t\t\t<h2>사용 프로그램 미리보기</h2>\r\n");
      out.write("\t\t\t\t<div class=\"program_box box_type01\">\r\n");
      out.write("\t\t\t\t\t<div class=\"list_button mtn\" style=\"width:92px; margin:10px auto\">\r\n");
      out.write("\t\t\t\t\t\t\t<button class=\"type_01\" onclick=\"javascript: d2.openAll();\">펼치기</button>\r\n");
      out.write("\t\t\t\t\t\t\t<button class=\"type_01\" onclick=\"javascript: d2.closeAll();\">접기</button>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div id=\"treeRight\" class=\"mt10\"></div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t");
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<div class=\"wrap_foot\">\r\n");
      out.write("\t<div class=\"footer\">\r\n");
      out.write("\t\tCopyright ⓒ 2014 <span class=\"copy_fc\">HANA PHARM CO.</span>, LTD. All Right Reserved.\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("<!-- 엑셀 다운로드용 iframe -->\r\n");
      out.write("<iframe name=\"excelDownFrame\" frameBorder=\"0\" width=\"0\" height=\"0\" class=\"blind\"></iframe>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
