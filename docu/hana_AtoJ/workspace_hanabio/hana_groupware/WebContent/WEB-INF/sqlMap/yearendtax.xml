<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="yearendtax"> 
	
	<select id="getYearendtaxList" parameterType="hashmap" resultType="com.hanaph.gw.yt.yearendtax.vo.YearendtaxVO">
		<if test="page != null">
			SELECT *
			FROM (SELECT 
					T0.*, FLOOR((ROWNUM - 1) / #{perPageRow,jdbcType=INTEGER} + 1) PAGE
				FROM (
		</if>
		SELECT COM.VOU_NO AS VOU_NO,
		       BAS.ENCMPY_DT,
		       <![CDATA[
		       CASE
		          WHEN TO_DATE (BAS.ENCMPY_DT) <
		                                      TO_DATE (OUTF.YEAR || '0101')
		             THEN OUTF.YEAR || '0101'
		          ELSE BAS.ENCMPY_DT
		       ]]>   
		       END BAS_START_DT,
		       DECODE(BAS.RETIR_DT ,'' ,OUTF.YEAR||'1231' ,BAS.RETIR_DT) AS BAS_END_DT,
		       (NVL (WITHH.PAY_SUM, 0) - NVL (WITHH.FREE_TAX_SUM, 0)) AS PAY_SUM,
		       WITHH.BONUS_SUM AS BONUS_SUM,
		       WITHH.FREE_OVERTIME_SUM AS FREE_OVERTIME_SUM,
		       WITHH.FREE_TAX_SUM AS FREE_TAX_SUM,
		       OUTF.DETERMINE_INCOME_TAX AS DETERMINE_INCOME_TAX,
		       OUTF.DETERMINE_JUMIN_TAX AS DETERMINE_JUMIN_TAX,
		       OUTF.DETERMINE_NONG_TAX AS DETERMINE_NONG_TAX,
		       OUTF.DEDUCTION_INCOME_TAX AS DEDUCTION_INCOME_TAX,
		       OUTF.DEDUCTION_JUMIN_TAX AS DEDUCTION_JUMIN_TAX,
		       OUTF.DEDUCTION_NONG_TAX AS DEDUCTION_NONG_TAX,
		       OUTF.ADJST_DIV AS ADJST_DIV,
		       OUTF.YEAR AS YEAR,
		       INF.PAY_SUM AS PAY_SUM_TOTAL, INF.KUK_YEON_AMT AS KUK_YEON_AMT,
		       INF.INSURANCE_HEALTH_AMT AS INSURANCE_HEALTH_AMT,
		       INF.INSURANCE_EMPLOY_AMT AS INSURANCE_EMPLOY_AMT,
		       INF.JING_INCOME_TAX AS JING_INCOME_TAX,
		       INF.JING_JUMIN_TAX AS JING_JUMIN_TAX,
		       INF.JING_NONG_TAX AS JING_NONG_TAX,
		       INF.JING_JONG_INCOME_TAX AS JING_JONG_INCOME_TAX,
		       INF.JING_JONG_JUMIN_TAX AS JING_JONG_JUMIN_TAX,
		       INF.JING_JONG_NONG_TAX AS JING_JONG_NONG_TAX,
		       FAMILY.FOREIGN_CD AS FOREIGN_CD
		  FROM HANAHR.HR_YT_OUT_FNDATA_1 OUTF,
		       HANAHR.HR_YT_IN_FNDATA_0 INF,
		       HANAHR.HR_YT_IN_FAMILY_0 FAMILY,
		       (SELECT   YEAR, ADJST_DIV, EMP_NO, SUM (PAY_SUM) AS PAY_SUM,
		                 SUM (BONUS_SUM) AS BONUS_SUM,
		                 SUM (FREE_OVERTIME_SUM) AS FREE_OVERTIME_SUM,
		                 SUM (FREE_TAX_SUM) AS FREE_TAX_SUM
		            FROM HANAHR.HR_YT_OUT_WITHHOLDING_0
		        GROUP BY YEAR, ADJST_DIV, EMP_NO) WITHH,
		       HANAHR.HR_YT_BAS_COMPANY_0 COM,
		       HANAHR.HR_HC_EMPBAS_0 BAS,
		       (SELECT *
		          FROM HANAHR.HR_YT_IN_PREVIOUS_0
		         WHERE SEQ = 1) PREV,
		       (SELECT *
		          FROM HANAHR.HR_YT_IN_PREVIOUS_0
		         WHERE SEQ = 2) PREV2
		 WHERE OUTF.EMP_NO = #{emp_no}
		   AND OUTF.YEAR = INF.YEAR
		   AND OUTF.ADJST_DIV = INF.ADJST_DIV
		   AND OUTF.EMP_NO = INF.EMP_NO
		   AND OUTF.YEAR = WITHH.YEAR
		   AND OUTF.ADJST_DIV = WITHH.ADJST_DIV
		   AND OUTF.EMP_NO = WITHH.EMP_NO
		   AND OUTF.EMP_NO = BAS.EMP_NO
		   AND OUTF.YEAR = PREV.YEAR(+)
		   AND OUTF.ADJST_DIV = PREV.ADJST_DIV(+)
		   AND OUTF.EMP_NO = PREV.EMP_NO(+)
		   AND OUTF.YEAR = PREV2.YEAR(+)
		   AND OUTF.ADJST_DIV = PREV2.ADJST_DIV(+)
		   AND OUTF.EMP_NO = PREV2.EMP_NO(+)
		   AND OUTF.YEAR = FAMILY.YEAR
		   AND OUTF.ADJST_DIV = FAMILY.ADJST_DIV
		   AND OUTF.EMP_NO = FAMILY.EMP_NO
		   AND FAMILY.REL_CD = '0'
		<if test="page != null">
					) T0
				)
			WHERE PAGE = #{page,jdbcType=INTEGER}
		</if>
	</select>
	
	<select id="getYearendtaxCount" parameterType="hashmap" resultType="int">
		SELECT COUNT(*)
		  FROM HANAHR.HR_YT_OUT_FNDATA_1 OUTF,
		       HANAHR.HR_YT_IN_FNDATA_0 INF,
		       HANAHR.HR_YT_IN_FAMILY_0 FAMILY,
		       (SELECT   YEAR, ADJST_DIV, EMP_NO, SUM (PAY_SUM) AS PAY_SUM,
		                 SUM (BONUS_SUM) AS BONUS_SUM,
		                 SUM (FREE_OVERTIME_SUM) AS FREE_OVERTIME_SUM,
		                 SUM (FREE_TAX_SUM) AS FREE_TAX_SUM
		            FROM HANAHR.HR_YT_OUT_WITHHOLDING_0
		        GROUP BY YEAR, ADJST_DIV, EMP_NO) WITHH,
		       HANAHR.HR_YT_BAS_COMPANY_0 COM,
		       HANAHR.HR_HC_EMPBAS_0 BAS,
		       (SELECT *
		          FROM HANAHR.HR_YT_IN_PREVIOUS_0
		         WHERE SEQ = 1) PREV,
		       (SELECT *
		          FROM HANAHR.HR_YT_IN_PREVIOUS_0
		         WHERE SEQ = 2) PREV2
		 WHERE OUTF.EMP_NO = #{emp_no}
		   AND OUTF.YEAR = INF.YEAR
		   AND OUTF.ADJST_DIV = INF.ADJST_DIV
		   AND OUTF.EMP_NO = INF.EMP_NO
		   AND OUTF.YEAR = WITHH.YEAR
		   AND OUTF.ADJST_DIV = WITHH.ADJST_DIV
		   AND OUTF.EMP_NO = WITHH.EMP_NO
		   AND OUTF.EMP_NO = BAS.EMP_NO
		   AND OUTF.YEAR = PREV.YEAR(+)
		   AND OUTF.ADJST_DIV = PREV.ADJST_DIV(+)
		   AND OUTF.EMP_NO = PREV.EMP_NO(+)
		   AND OUTF.YEAR = PREV2.YEAR(+)
		   AND OUTF.ADJST_DIV = PREV2.ADJST_DIV(+)
		   AND OUTF.EMP_NO = PREV2.EMP_NO(+)
		   AND OUTF.YEAR = FAMILY.YEAR
		   AND OUTF.ADJST_DIV = FAMILY.ADJST_DIV
		   AND OUTF.EMP_NO = FAMILY.EMP_NO
		   AND FAMILY.REL_CD = '0'
	</select>
	
	<select id="getYearendtaxDetail" parameterType="hashmap" resultType="com.hanaph.gw.yt.yearendtax.vo.YearendtaxVO">
		SELECT COM.COMP_NAME AS COMP_NAME
	           ,COM.PRESIDENT AS PRESIDENT  
	           ,COM.VOU_NO AS VOU_NO
	           ,COM.COMP_NO AS COMP_NO
	           ,COM.ADDR AS COM_ADDR  
	           ,BAS.EMP_KO_NM AS EMP_KO_NM
	           ,SUBSTR(BAS.RESID_NO,1,6) ||'-'||SUBSTR(BAS.RESID_NO,7,15) AS RESID_NO	           
	           ,BAS.ADDR1||'-'||ADDR2 AS BAS_ADDR
     		   <![CDATA[
	           ,CASE WHEN TO_DATE(BAS.ENCMPY_DT) < TO_DATE(#{year}||'0101') THEN #{year}||'0101'
	                     ELSE BAS.ENCMPY_DT
	            END BAS_START_DT					            
	           ,CASE WHEN NVL(TRIM(BAS.RETIR_DT), 'EMPTY') = 'EMPTY' THEN #{year}||'1231'
	                     WHEN SUBSTR(BAS.RETIR_DT, 1,4) <> #{year} THEN #{year}||'1231'
	                     ELSE BAS.RETIR_DT
	            END BAS_END_DT
	            ]]>
	           ,PREV.CORPORATE_NM AS CORPORATE_NM
	           ,PREV.CORPORATE_NO AS CORPORATE_NO            
	           ,PREV.START_WORK_DT AS START_WORK_DT  
	           ,PREV.END_WORK_DT AS END_WORK_DT   
	           ,PREV.START_REDUCE_DT AS START_REDUCE_DT  
	           ,PREV.END_REDUCE_DT AS END_REDUCE_DT  
	           ,PREV.SALARY_AMT AS SALARY_AMT   
	           ,PREV.BONUS_AMT AS BONUS_AMT
	           ,PREV.CONSTRUCTIVE_BONUS_AMT AS CONSTRUCTIVE_BONUS_AMT     
	           ,PREV.STOCK_OPTION_AMT AS STOCK_OPTION_AMT
	           ,PREV.EMPLOY_STOCK_AMT AS EMPLOY_STOCK_AMT 
	           ,PREV.DERECTOR_RETIREMENT_AMT AS DERECTOR_RETIREMENT_AMT 
	           ,PREV.TOTAL_SALARY AS TOTAL_SALARY
	           ,PREV.FOREIGN_WORK_AMT AS FOREIGN_WORK_AMT   
	           ,PREV.OEVRTIME_AMT AS OEVRTIME_AMT
	           ,PREV.METERNITY_AMT AS METERNITY_AMT  
	           ,PREV.RESEARCH_AMT AS RESEARCH_AMT     
	           ,PREV.SCHOOL_EXPENSES_AMT AS SCHOOL_EXPENSES_AMT     
	           ,PREV.COLLECT_AMT AS COLLECT_AMT
	           ,PREV.REMOTE_RURAL_AREA_AMT AS REMOTE_RURAL_AREA_AMT
	           ,PREV.NATURAL_DISASTER_AMT AS NATURAL_DISASTER_AMT    
	           ,PREV.LEGISLATION_AMT AS LEGISLATION_AMT       
	           ,PREV.OPERATION_AMT AS OPERATION_AMT   
	           ,PREV.STOCK_PURCHASE_AMT AS STOCK_PURCHASE_AMT     
	           ,PREV.FOREIGNER_AMT AS FOREIGNER_AMT
	           ,PREV.EMPLOY_STOCK_AMT1 AS EMPLOY_STOCK_AMT1      
	           ,PREV.EMPLOY_STOCK_AMT2 AS EMPLOY_STOCK_AMT2 
	           ,PREV.SUBMARINE_MINERAL_AMT AS SUBMARINE_MINERAL_AMT     
	           ,PREV.GUARD_EMBARK_AMT AS GUARD_EMBARK_AMT   
	           ,PREV.ORGANIZATION_AMT AS ORGANIZATION_AMT     
	           ,PREV.SCHOLARSHIP_AMT AS SCHOLARSHIP_AMT   
	           ,PREV.CHILDCARE_AMT AS CHILDCARE_AMT   
	           ,PREV.KINDERGARTEN_TEACHER_AMT AS KINDERGARTEN_TEACHER_AMT
	           ,PREV.SMIYMJTC_AMT AS SMIYMJTC_AMT   
	           ,PREV.TEACHE_CLAUSE_AMT AS TEACHE_CLAUSE_AMT          
	           ,PREV.MOVE_AMT AS MOVE_AMT
	           ,PREV.MAJOR_AMT AS MAJOR_AMT
	           ,PREV.TOTAL_FREE AS TOTAL_FREE    
	           ,PREV.REDUCTION_AMT AS PREV_REDUCTION_AMT         
	           ,PREV.HEALTH_AMT AS PREV_HEALTH_AMT            
	           ,PREV.EMPLOY_AMT AS PREV_EMPLOY_AMT  
	           ,PREV.KUK_YEON_AMT AS PREV_KUK_YEON_AMT  
	           ,PREV.ANNUITY_AMT AS PREV_ANNUITY_AMT
	           ,PREV.INCOME_AMT AS PREV_INCOME_AMT   
	           ,PREV.JUMIN_AMT AS PREV_JUMIN_AMT 
	           ,PREV.NONG_AMT AS PREV_NONG_AMT 
	           ,PREV2.CORPORATE_NM AS CORPORATE_NM2
	           ,PREV2.CORPORATE_NO AS CORPORATE_NO2            
	           ,PREV2.START_WORK_DT AS START_WORK_DT2  
	           ,PREV2.END_WORK_DT AS END_WORK_DT2   
	           ,PREV2.START_REDUCE_DT AS START_REDUCE_DT2  
	           ,PREV2.END_REDUCE_DT AS END_REDUCE_DT2  
	           ,PREV2.SALARY_AMT AS SALARY_AMT2   
	           ,PREV2.BONUS_AMT AS BONUS_AMT2
	           ,PREV2.CONSTRUCTIVE_BONUS_AMT AS CONSTRUCTIVE_BONUS_AMT2
	           ,PREV2.STOCK_OPTION_AMT AS STOCK_OPTION_AMT2
	           ,PREV2.EMPLOY_STOCK_AMT AS EMPLOY_STOCK_AMT_2 
	           ,PREV2.DERECTOR_RETIREMENT_AMT AS DERECTOR_RETIREMENT_AMT2 
	           ,PREV2.TOTAL_SALARY AS TOTAL_SALARY2
	           ,PREV2.FOREIGN_WORK_AMT AS FOREIGN_WORK_AMT2   
	           ,PREV2.OEVRTIME_AMT AS OEVRTIME_AMT2
	           ,PREV2.METERNITY_AMT AS METERNITY_AMT2  
	           ,PREV2.RESEARCH_AMT AS RESEARCH_AMT2  
	           ,PREV2.SCHOOL_EXPENSES_AMT AS SCHOOL_EXPENSES_AMT2     
	           ,PREV2.COLLECT_AMT AS COLLECT_AMT2
	           ,PREV2.REMOTE_RURAL_AREA_AMT AS REMOTE_RURAL_AREA_AMT2
	           ,PREV2.NATURAL_DISASTER_AMT AS NATURAL_DISASTER_AMT2    
	           ,PREV2.LEGISLATION_AMT AS LEGISLATION_AMT2       
	           ,PREV2.OPERATION_AMT AS OPERATION_AMT2   
	           ,PREV2.STOCK_PURCHASE_AMT AS STOCK_PURCHASE_AMT2     
	           ,PREV2.FOREIGNER_AMT AS FOREIGNER_AMT2
	           ,PREV2.EMPLOY_STOCK_AMT1 AS EMPLOY_STOCK_AMT1_2      
	           ,PREV2.EMPLOY_STOCK_AMT2 AS EMPLOY_STOCK_AMT2_2 
	           ,PREV2.SUBMARINE_MINERAL_AMT AS SUBMARINE_MINERAL_AMT2     
	           ,PREV2.GUARD_EMBARK_AMT AS GUARD_EMBARK_AMT2   
	           ,PREV2.ORGANIZATION_AMT AS ORGANIZATION_AMT2     
	           ,PREV2.SCHOLARSHIP_AMT AS SCHOLARSHIP_AMT2   
	           ,PREV2.CHILDCARE_AMT AS CHILDCARE_AMT2   
	           ,PREV2.KINDERGARTEN_TEACHER_AMT AS KINDERGARTEN_TEACHER_AMT2
	           ,PREV2.SMIYMJTC_AMT AS SMIYMJTC_AMT2   
	           ,PREV2.TEACHE_CLAUSE_AMT AS TEACHE_CLAUSE_AMT2          
	           ,PREV2.MOVE_AMT AS MOVE_AMT2
	           ,PREV2.MAJOR_AMT AS MAJOR_AMT2
	           ,PREV2.TOTAL_FREE AS TOTAL_FREE2    
	           ,PREV2.REDUCTION_AMT AS PREV_REDUCTION_AMT2         
	           ,PREV2.HEALTH_AMT AS PREV_HEALTH_AMT2            
	           ,PREV2.EMPLOY_AMT AS PREV_EMPLOY_AMT2  
	           ,PREV2.KUK_YEON_AMT AS PREV_KUK_YEON_AMT2  
	           ,PREV2.ANNUITY_AMT AS PREV_ANNUITY_AMT2
	           ,PREV2.INCOME_AMT AS PREV_INCOME_AMT2   
	           ,PREV2.JUMIN_AMT AS PREV_JUMIN_AMT2 
	           ,PREV2.NONG_AMT AS PREV_NONG_AMT2 
	           ,(NVL( WITHH.PAY_SUM, 0) - NVL(WITHH.FREE_TAX_SUM, 0)) AS PAY_SUM   
	           ,WITHH.BONUS_SUM AS BONUS_SUM           
	           ,WITHH.FREE_OVERTIME_SUM AS FREE_OVERTIME_SUM
	           ,WITHH.FREE_TAX_SUM AS FREE_TAX_SUM 
	           ,OUTF.DETERMINE_INCOME_TAX AS DETERMINE_INCOME_TAX   
	           ,OUTF.DETERMINE_JUMIN_TAX AS DETERMINE_JUMIN_TAX
	           ,OUTF.DETERMINE_NONG_TAX AS DETERMINE_NONG_TAX
	           ,OUTF.DEDUCTION_INCOME_TAX AS DEDUCTION_INCOME_TAX
	           ,OUTF.DEDUCTION_JUMIN_TAX AS DEDUCTION_JUMIN_TAX 
	           ,OUTF.DEDUCTION_NONG_TAX AS DEDUCTION_NONG_TAX
	           ,INF.PAY_SUM AS PAY_SUM_TOTAL
	           ,INF.KUK_YEON_AMT AS KUK_YEON_AMT
	           ,INF.INSURANCE_HEALTH_AMT AS INSURANCE_HEALTH_AMT
	           ,INF.INSURANCE_EMPLOY_AMT AS INSURANCE_EMPLOY_AMT
	           ,INF.JING_INCOME_TAX AS JING_INCOME_TAX    
	           ,INF.JING_JUMIN_TAX AS JING_JUMIN_TAX   
	           ,INF.JING_NONG_TAX AS JING_NONG_TAX                             
	           ,INF.JING_JONG_INCOME_TAX AS JING_JONG_INCOME_TAX     
	           ,INF.JING_JONG_JUMIN_TAX AS JING_JONG_JUMIN_TAX 
	           ,INF.JING_JONG_NONG_TAX AS JING_JONG_NONG_TAX    
	
	FROM HANAHR.HR_YT_OUT_FNDATA_1 OUTF
	         ,HANAHR.HR_YT_IN_FNDATA_0 INF
	         ,HANAHR.HR_YT_IN_FAMILY_0 FAMILY
	         ,(
	                SELECT YEAR ,ADJST_DIV ,EMP_NO 
	                ,SUM(PAY_SUM) AS PAY_SUM ,SUM(BONUS_SUM) AS BONUS_SUM
	                ,SUM(FREE_OVERTIME_SUM) AS FREE_OVERTIME_SUM ,SUM(FREE_TAX_SUM) AS FREE_TAX_SUM
	                FROM HANAHR.HR_YT_OUT_WITHHOLDING_0 
	                GROUP BY YEAR, ADJST_DIV, EMP_NO
	         ) WITHH
	         ,HANAHR.HR_YT_BAS_COMPANY_0 COM
	         ,HANAHR.HR_HC_EMPBAS_0 BAS
	         ,(SELECT * FROM HANAHR.HR_YT_IN_PREVIOUS_0 WHERE SEQ = 1)  PREV
	         ,(SELECT * FROM HANAHR.HR_YT_IN_PREVIOUS_0 WHERE SEQ = 2)  PREV2
	WHERE OUTF.YEAR = #{year}
      AND OUTF.ADJST_DIV = #{adjst_div}
	  AND OUTF.EMP_NO = #{emp_no}
	  AND OUTF.YEAR = INF.YEAR
	  AND OUTF.ADJST_DIV = INF.ADJST_DIV
	  AND OUTF.EMP_NO = INF.EMP_NO
	  AND OUTF.YEAR = WITHH.YEAR
	  AND OUTF.ADJST_DIV = WITHH.ADJST_DIV
	  AND OUTF.EMP_NO = WITHH.EMP_NO
	  AND OUTF.EMP_NO = BAS.EMP_NO
	  AND OUTF.YEAR = PREV.YEAR(+)
	  AND OUTF.ADJST_DIV = PREV.ADJST_DIV(+)
	  AND OUTF.EMP_NO = PREV.EMP_NO(+)
	  AND OUTF.YEAR = PREV2.YEAR(+)
	  AND OUTF.ADJST_DIV = PREV2.ADJST_DIV(+)
	  AND OUTF.EMP_NO = PREV2.EMP_NO(+)
	  AND OUTF.YEAR = FAMILY.YEAR
	  AND OUTF.ADJST_DIV = FAMILY.ADJST_DIV
      AND OUTF.EMP_NO = FAMILY.EMP_NO
  	  AND FAMILY.REL_CD = '0'  
	</select>
	
	<select id="getYearendtaxDetail2" parameterType="hashmap" resultType="com.hanaph.gw.yt.yearendtax.vo.YearendtaxVO">
		SELECT OUTF.YT_SALARY AS YT_SALARY             
			  ,OUTF.YT_WORK_DEDUCT_AMT AS YT_WORK_DEDUCT_AMT
			  ,OUTF.YT_WORK_INCOME_AMT AS YT_WORK_INCOME_AMT            
			  ,OUTF.FAMILY_PERSON_AMT AS FAMILY_PERSON_AMT     
			  ,OUTF.FAMILY_MATE_AMT AS FAMILY_MATE_AMT 
			  ,OUTF.FAMILY_DEPENDENT_AMT AS FAMILY_DEPENDENT_AMT
			  ,INF.KUK_YEON_AMT AS KUK_YEON_AMT
			  ,INF.INSURANCE_HEALTH_AMT AS INSURANCE_HEALTH_AMT
			  ,INF.INSURANCE_EMPLOY_AMT AS INSURANCE_EMPLOY_AMT
			  ,INF.FAMILY_DIRECT_ANCESTOR_CNT + INF.FAMILY_DIRECT_DESCENDANT_CNT + INF.FAMILY_BROTHER_CNT AS  FAMILY_DEPENDENT_CNT                 
			  ,OUTF.FAMILY_OLD_AMT AS FAMILY_OLD_AMT    
			  ,INF.FAMILY_OLD2_CNT AS FAMILY_OLD2_CNT
			  ,OUTF.FAMILY_DISABLED_PERSON_AMT AS FAMILY_DISABLED_PERSON_AMT
			  ,INF.FAMILY_DISABLED_PERSON_CNT AS FAMILY_DISABLED_PERSON_CNT            
			  ,OUTF.FAMILY_WOMEN_AMT AS FAMILY_WOMEN_AMT
			  ,OUTF.FAMILY_SINGLE_PARENT_AMT AS FAMILY_SINGLE_PARENT_AMT              
			  ,OUTF.TOTAL_FAMILY_AMT AS TOTAL_FAMILY_AMT            
			  ,OUTF.KUK_YEON_AMT AS KUK_YEON_AMT  
			  ,OUTF.INSURANCE_HEALTH_AMT AS INSURANCE_HEALTH_AMT 
			  ,OUTF.INSURANCE_EMPLOY_AMT AS INSURANCE_EMPLOY_AMT  
			  ,OUTF.HOUSE_LEASE_LOAN_AMT AS HOUSE_LEASE_LOAN_AMT
			  ,OUTF.HOUSE_SECURITY_LOAN1_AMT AS HOUSE_SECURITY_LOAN1_AMT  
			  ,OUTF.HOUSE_SECURITY_LOAN2_AMT AS HOUSE_SECURITY_LOAN2_AMT
			  ,OUTF.HOUSE_SECURITY_LOAN3_AMT AS HOUSE_SECURITY_LOAN3_AMT   
			  ,OUTF.HOUSE_SECURITY_LOAN4_AMT AS HOUSE_SECURITY_LOAN4_AMT
			  ,OUTF.HOUSE_SECURITY_LOAN5_AMT AS HOUSE_SECURITY_LOAN5_AMT            
			  ,OUTF.TOTAL_HOUSE_AMT AS TOTAL_HOUSE_AMT
			  ,OUTF.YT_SPECIAL_DEDUCT_AMT AS YT_SPECIAL_DEDUCT_AMT
			  ,OUTF.YT_DEDUCTION_AMT AS YT_DEDUCTION_AMT       
			  ,OUTF.PERSONAL_ANNUITY_AMT AS PERSONAL_ANNUITY_AMT   
			  ,OUTF.ETC_SUBSCRIPTION_DEPOSIT_AMT AS ETC_SUBSCRIPTION_DEPOSIT_AMT 
			  ,OUTF.ETC_HOME_MORTGAGE_AMT AS ETC_HOME_MORTGAGE_AMT        
			  ,OUTF.ETC_HOUSE_SUBSCR_DEPOSIT_AMT AS ETC_HOUSE_SUBSCR_DEPOSIT_AMT
			  ,OUTF.ETC_CREDT_AMT AS ETC_CREDT_AMT     
			  ,OUTF.ETC_CASH_RECEIPT_AMT AS ETC_CASH_RECEIPT_AMT     
			  ,OUTF.ETC_DIRECT_AMT AS ETC_DIRECT_AMT   
			  ,OUTF.ETC_MARKET_AMT AS ETC_MARKET_AMT
			  ,OUTF.ETC_PUBRIC_TRANSPORT_AMT AS ETC_PUBRIC_TRANSPORT_AMT
			  ,OUTF.TOTAL_USE_AMT AS TOTAL_USE_AMT    
			  ,OUTF.ETC_EMPLOY_STOCK_AMT AS ETC_EMPLOY_STOCK_AMT
			  ,OUTF.ETC_CHUNK_MONEY_AMT AS ETC_CHUNK_MONEY_AMT   
			  ,OUTF.ETC_LONG_INVEST_STOCK_AMT    AS ETC_LONG_INVEST_STOCK_AMT        
			  ,OUTF.TOTAL_ETC_AMT AS TOTAL_ETC_AMT  
			  ,OUTF.ETC_EXCEED_LIMIT_AMT AS ETC_EXCEED_LIMIT_AMT    
			  ,OUTF.YT_INCOME_TAX_STANDARD_AMT AS YT_INCOME_TAX_STANDARD_AMT  
			  ,OUTF.YT_CALCULATE_AMT AS YT_CALCULATE_AMT   
			  ,OUTF.ETC_INCOME_TAX_REDUCTION_AMT AS ETC_INCOME_TAX_REDUCTION_AMT     
			  ,OUTF.ETC_SMIYMJTC_AMT AS ETC_SMIYMJTC_AMT
			  ,OUTF.YT_EARNED_INCOME_AMT AS YT_EARNED_INCOME_AMT
			  ,OUTF.ETC_CHILDREN_AMT AS ETC_CHILDREN_AMT
			  ,OUTF.ANNUITY_RETIRE_AMT_O AS ANNUNITY_RETIRE_AMT_O
			  ,OUTF.ANNUITY_RETIRE_AMT AS ANNUITY_RETIRE_AMT  
			  ,OUTF.ANNUITY_SAVING_AMT_O AS ANNUITY_SAVING_AMT_O 
			  ,OUTF.ANNUITY_SAVNG_AMT AS ANNUITY_SAVNG_AMT
			  ,OUTF.TOTAL_ANNUITY_AMT AS TOTAL_ANNUITY_AMT           
			  ,OUTF.INSURANCE_SECRITY_AMT AS INSURANCE_SECRITY_AMT   
			  ,OUTF.INSURANCE_AMT_O AS INSURANCE_AMT_O
			  ,OUTF.INSURANCE_DISABLED_PERSON_AMT AS INSURANCE_DISABLED_PERSON_AMT
			  ,OUTF.TOTAL_INSURANCE_AMT AS TOTAL_INSURANCE_AMT              
			  ,OUTF.TOTAL_MEDICAL_AMT AS TOTAL_MEDICAL_AMT
			  ,OUTF.MEDICAL_AMT_O AS MEDICAL_AMT_O
			  ,OUTF.TOTAL_EDCATE_AMT AS TOTAL_EDCATE_AMT
			  ,OUTF.EDCATE_AMT_O AS EDCATE_AMT_O
			  ,OUTF.CONTRIBUE_POLITIC_AMT AS CONTRIBUE_POLITIC_AMT      
			  ,OUTF.CONTRIBUE_POLITIC_AMT_O    AS CONTRIBUE_POLITIC_AMT_O
			  ,OUTF.CONTRIBUE_POLITIC_OVER_AMT     AS CONTRIBUE_POLITIC_OVER_AMT
			  ,OUTF.CONTRIBUE_POLITIC_OVER_AMT_O AS CONTRIBUE_POLITIC_OVER_AMT_O
			  ,OUTF.CONTRIBUE_LAW_AMT AS CONTRIBUE_LAW_AMT    
			  ,OUTF.CONTRIBUE_LAW_AMT_O AS CONTRIBUE_LAW_AMT_O
			  ,OUTF.CONTRIBUTE_EXCEPTION_AMT AS CONTRIBUTE_EXCEPTION_AMT     
			  ,OUTF.CONTRIBUTE_TRUST_AMT AS CONTRIBUTE_TRUST_AMT      
			  ,OUTF.CONTRIBUE_EMPLOY_STOCK_AMT AS CONTRIBUE_EMPLOY_STOCK_AMT   
			  ,OUTF.CONTRIBUE_DESIGNATE_AMT AS CONTRIBUE_DESIGNATE_AMT
			  ,OUTF.CONTRIBUE_DESIGNATE_AMT_O AS CONTRIBUE_DESIGNATE_AMT_O
			  ,OUTF.CONTRIBUE_RELIGION_AMT AS CONTRIBUE_RELIGION_AMT
			  ,OUTF.TOTAL_CONTRIBUE_AMT AS TOTAL_CONTRIBUE_AMT 
			  ,OUTF.YT_SPECIAL_TAX_DEDUCT_AMT AS YT_SPECIAL_TAX_DEDUCT_AMT 
			  ,OUTF.YT_STANDARD_DEDUCT_AMT AS YT_STANDARD_DEDUCT_AMT
			  ,OUTF.ETC_SEWORK_TX_AMT AS ETC_SEWORK_TX_AMT    
			  ,OUTF.ETC_HOUSE_LAON_INTEREST_AMT AS ETC_HOUSE_LAON_INTEREST_AMT
			  ,OUTF.ETC_CONTRIBUE_POLITIC_AMT AS ETC_CONTRIBUE_POLITIC_AMT  
			  ,OUTF.ETC_FOREIGNER_INCOME AS ETC_FOREIGNER_INCOME  
			  ,OUTF.ETC_FOREIGNER_PAY AS ETC_FOREIGNER_PAY
			  ,OUTF.HOUSE_MONTH_LENT_AMT AS HOUSE_MONTH_LENT_AMT     
			  ,OUTF.YT_TAX_DEDUCT_AMT AS YT_TAX_DEDUCT_AMT 
			  ,OUTF.YT_DETERMINE_TAX AS YT_DETERMINE_TAX                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
		  FROM HANAHR.HR_YT_OUT_FNDATA_1 OUTF
			  		,HANAHR.HR_YT_IN_FNDATA_0 INF
		 WHERE OUTF.YEAR = #{year}
		   AND OUTF.ADJST_DIV = #{adjst_div}
		   AND OUTF.EMP_NO = #{emp_no}
		   AND OUTF.YEAR = INF.YEAR
		   AND OUTF.ADJST_DIV = INF.ADJST_DIV
		   AND OUTF.EMP_NO = INF.EMP_NO
	</select>
	
	<select id="getYearendtaxDetail3" parameterType="hashmap" resultType="com.hanaph.gw.yt.yearendtax.vo.YearendtaxVO">
		SELECT DECODE(FAMILY.REL_CD ,'7' ,'0', FAMILY.REL_CD) AS REL_CD 
		      ,FAMILY.FOREIGN_CD AS FOREIGN_CD            
		      ,FAMILY.REL_NM AS REL_NM
		      ,SUBSTR(FAMILY.REL_JUMIN_NO,1,6) ||'-'||SUBSTR(FAMILY.REL_JUMIN_NO,7,15) AS REL_JUMIN_NO
		      ,DECODE(FAMILY.REL_CD,'0','근로자본인','1','소득자직계존속','2','배우자직계존속','3','배우자','4','직계비속(자녀입양자)','5','직계비속(코드4제외)','6','형제자매','7','수급자(코드1-6제외)','8','위탁아동','') AS REL_CD
		      ,FAMILY.CHOOSE_YN AS CHOOSE_YN            
		      ,FAMILY.WOMAN_YN AS WOMAN_YN
		      ,FAMILY.SINGLE_PARENTS_YN AS SINGLE_PARENTS_YN
		      ,FAMILY.RESPECT_AGED_YN AS RESPECT_AGED_YN      
		      ,FAMILY.DISABLED_PERSON_YN AS DISABLED_PERSON_YN           
		      ,FAMILY.BIRTH_YN AS BIRTH_YN   
		      ,FAMILY.SIXYEAR_YN AS SIXYEAR_YN
		      ,FAMILY.INSURANCE_PERSON_1 AS INSURANCE_PERSON_1 
		      ,FAMILY.INSURANCE_PERSON_2  AS INSURANCE_PERSON_2                
		      ,FAMILY.INSURANCE_DISABLED_PERSON_1    AS INSURANCE_DISABLED_PERSON_1
		      ,FAMILY.INSURANCE_DISABLED_PERSON_2    AS INSURANCE_DISABLED_PERSON_2
		      ,FAMILY.MEDICAL_1 AS MEDICAL_1 
		      ,FAMILY.MEDICAL_2 AS MEDICAL_2  
		      ,FAMILY.EDUCATE_1 AS EDUCATE_1   
		      ,FAMILY.EDUCATE_2 AS EDUCATE_2 
		      ,NVL(FAMILY.CREDIT_1, 0) + NVL(FAMILY.CREDIT_1_SH, 0) AS CREDIT_1
		      ,NVL(FAMILY.CREDIT_2, 0) + NVL(FAMILY.CREDIT_2_SH, 0) AS CREDIT_2
		      ,NVL(FAMILY.DIRECT_1, 0) + NVL(FAMILY.DIRECT_1_SH, 0) AS DIRECT_1  
		      ,NVL(FAMILY.DIRECT_2, 0) + NVL(FAMILY.DIRECT_2_SH, 0)  AS DIRECT_2      
		      ,NVL(FAMILY.CASH_1, 0) + NVL(FAMILY.CASH_1_SH, 0) AS CASH_1      
		      ,NVL(FAMILY.CASH_2, 0) + NVL(FAMILY.CASH_2_SH, 0) AS CASH_2
		      ,NVL(FAMILY.MARKET_1, 0) + NVL(FAMILY.MARKET_1_SH, 0) AS MARKET_1         
		      ,NVL(FAMILY.MARKET_2, 0) + NVL(FAMILY.MARKET_2_SH, 0) AS MARKET_2
		      ,NVL(FAMILY.PUBRIC_TRANSPORT_1, 0) + NVL(FAMILY.PUBRIC_TRANSPORT_1_SH, 0) AS PUBRIC_TRANSPORT_1
		      ,NVL(FAMILY.PUBRIC_TRANSPORT_2, 0) + NVL(FAMILY.PUBRIC_TRANSPORT_2_SH, 0) AS PUBRIC_TRANSPORT_2        
		      ,FAMILY.CONTRIBUTE_1 AS CONTRIBUTE_1
		      ,FAMILY.CONTRIBUTE_2 AS CONTRIBUTE_2  
		      ,INF.DAJAYEON_CNT AS DAJAYEON_CNT        
		      ,DECODE(FAMILY.REL_CD,'0',NVL(INF.INSURANCE_HEALTH_AMT,0), 0) AS INSURANCE_HEALTH_AMT
		      ,DECODE(FAMILY.REL_CD,'0',NVL(INF.INSURANCE_EMPLOY_AMT,0), 0) AS INSURANCE_EMPLOY_AMT
		  FROM HANAHR.HR_YT_IN_FNDATA_0 INF   
		              ,HANAHR.HR_YT_IN_FAMILY_0 FAMILY
		 WHERE INF.YEAR = #{year}
		   AND INF.ADJST_DIV = #{adjst_div}
		   AND INF.EMP_NO = #{emp_no}
		   AND INF.YEAR = FAMILY.YEAR
		   AND INF.ADJST_DIV = FAMILY.ADJST_DIV
		   AND INF.EMP_NO = FAMILY.EMP_NO
		   ORDER BY FAMILY.REL_CD ASC
	</select>
	
	<select id="getYearendtaxPreviousWorkplaceList" parameterType="hashmap" resultType="com.hanaph.gw.yt.yearendtax.vo.YearendtaxVO">
		  SELECT A.SEQ AS SEQ
				,A.YEAR AS YEAR
				,A.ADJST_DIV AS ADJST_DIV 
				,A.EMP_NO AS EMP_NO
				,A.FIRST_EMP_NO AS FIRST_EMP_NO 
				,A.FIRST_REGDATE AS FIRST_REGDATE
				,A.LAST_EMP_NO AS LAST_EMP_NO
				,A.LAST_REGDATE AS LAST_REGDATE
				,A.LAST_IP AS LAST_IP
				,A.ENT_UNO AS ENT_UNO
				,A.UPD_UNO AS UPD_UNO
				,A.CORPORATE_NM AS CORPORATE_NM
				,A.CORPORATE_NO AS CORPORATE_NO
				,A.PRESIDENT AS PRESIDENT
				,A.START_WORK_DT AS START_WORK_DT
				,A.END_WORK_DT AS END_WORK_DT
				,A.START_REDUCE_DT AS START_REDUCE_DT
				,A.END_REDUCE_DT AS END_REDUCE_DT
				,A.SALARY_DT AS SALARY_DT
				,A.SALARY_AMT AS SALARY_AMT
				,A.BONUS_AMT AS BONUS_AMT
				,A.CONSTRUCTIVE_BONUS_AMT AS CONSTRUCTIVE_BONUS_AMT
				,A.STOCK_OPTION_AMT AS STOCK_OPTION_AMT
				,A.EMPLOY_STOCK_AMT AS EMPLOY_STOCK_AMT
				,A.DERECTOR_RETIREMENT_AMT AS DERECTOR_RETIREMENT_AMT
				,A.TOTAL_SALARY AS TOTAL_SALARY
				,A.FOREIGN_WORK_AMT AS FOREIGN_WORK_AMT
				,A.OEVRTIME_AMT AS OEVRTIME_AMT
				,A.METERNITY_AMT AS METERNITY_AMT
				,A.RESEARCH_AMT AS RESEARCH_AMT
				,A.SCHOOL_EXPENSES_AMT AS SCHOOL_EXPENSES_AMT
				,A.COLLECT_AMT AS COLLECT_AMT
				,A.REMOTE_RURAL_AREA_AMT AS REMOTE_RURAL_AREA_AMT
				,A.NATURAL_DISASTER_AMT AS NATURAL_DISASTER_AMT
				,A.LEGISLATION_AMT AS LEGISLATION_AMT
				,A.OPERATION_AMT AS OPERATION_AMT
				,A.STOCK_PURCHASE_AMT AS STOCK_PURCHASE_AMT
				,A.FOREIGNER_AMT AS FOREIGNER_AMT
				,A.EMPLOY_STOCK_AMT1 AS EMPLOY_STOCK_AMT1
				,A.EMPLOY_STOCK_AMT2 AS EMPLOY_STOCK_AMT2
				,A.SUBMARINE_MINERAL_AMT AS SUBMARINE_MINERAL_AMT
				,A.GUARD_EMBARK_AMT AS GUARD_EMBARK_AMT
				,A.ORGANIZATION_AMT AS ORGANIZATION_AMT
				,A.SCHOLARSHIP_AMT AS SCHOLARSHIP_AMT
				,A.CHILDCARE_AMT AS CHILDCARE_AMT
				,A.KINDERGARTEN_TEACHER_AMT AS KINDERGARTEN_TEACHER_AMT
				,A.SMIYMJTC_AMT AS SMIYMJTC_AMT
				,A.SMIYMJTC_RATE AS SMIYMJTC_RATE
				,A.TEACHE_CLAUSE_AMT AS TEACHE_CLAUSE_AMT
				,A.MOVE_AMT AS MOVE_AMT
				,A.MAJOR_AMT AS MAJOR_AMT
				,A.TOTAL_FREE AS TOTAL_FREE
				,A.REDUCTION_AMT AS REDUCTION_AMT
				,A.HEALTH_AMT AS HEALTH_AMT
				,A.EMPLOY_AMT AS EMPLOY_AMT
				,A.KUK_YEON_AMT AS KUK_YEON_AMT
				,A.ANNUITY_AMT AS ANNUITY_AMT
				,A.INCOME_AMT AS INCOME_AMT
				,A.JUMIN_AMT AS JUMIN_AMT
				,A.NONG_AMT AS NONG_AMT
		   FROM HANAHR.HR_YT_IN_PREVIOUS_0 A
		  WHERE A.YEAR = #{year}
		    AND A.ADJST_DIV = #{adjst_div}
		    AND A.EMP_NO = #{emp_no}
	</select>
	
	<select id="getYearendtaxFamilyList" parameterType="hashmap" resultType="com.hanaph.gw.yt.yearendtax.vo.YearendtaxVO">
			SELECT A.YEAR AS YEAR
					,A.ADJST_DIV AS ADJST_DIV
					,A.EMP_NO AS EMP_NO
					,A.REL_CD AS REL_CD
					,A.REL_JUMIN_NO AS REL_JUMIN_NO
					,A.REL_NM AS REL_NM         
					,A.FOREIGN_CD AS FOREIGN_CD       
					,A.CHOOSE_YN AS CHOOSE_YN      
					,A.PENSIONER_YN AS PENSIONER_YN
					,A.FOSTER_CHILD_YN AS FOSTER_CHILD_YN     
					,A.RESPECT_AGED_YN AS RESPECT_AGED_YN
					,A.DISABLED_PERSON_YN AS DISABLED_PERSON_YN
					,A.WOMAN_YN AS WOMAN_YN
					,A.SIXYEAR_YN AS SIXYEAR_YN                 
					,A.BIRTH_YN AS BIRTH_YN 
					,A.INSULANCE_YN AS INSULANCE_YN
					,A.MEDICAL_YN AS MEDICAL_YN         
					,A.EDUCATION_YN AS EDUCATION_YN
					,A.CARD_YN AS CARD_YN
					,A.CONTRIBUTION_YN AS CONTRIBUTION_YN  
					,A.SINGLE_PARENTS_YN AS SINGLE_PARENTS_YN                   
			 FROM HANAHR.HR_YT_IN_FAMILY_0 A
			WHERE A.YEAR = #{year}
			  AND A.ADJST_DIV = #{adjst_div}
			  AND A.EMP_NO  = #{emp_no}
			ORDER BY A.REL_CD ASC
	</select>
	
	<select id="getYearendtaxHouseList" parameterType="hashmap" resultType="com.hanaph.gw.yt.yearendtax.vo.YearendtaxVO">
		  SELECT A.YEAR AS YEAR
				,A.ADJST_DIV AS ADJST_DIV
		        ,A.EMP_NO AS EMP_NO
		        ,A.SEQ AS SEQ
		        ,A.HOUSE_GB AS HOUSE_GB
			    ,A.HOUSE_NM     AS HOUSE_NM 
			    ,A.HOUSE_JUMIN AS HOUSE_JUMIN
			    ,A.HOUSE_START_DT AS HOUSE_START_DT    
			    ,A.HOUSE_END_DT AS HOUSE_END_DT
			    ,A.HOUSE_AMT1 AS HOUSE_AMT1
			    ,A.HOUSE_AMT2 AS HOUSE_AMT2
			    ,A.HOUSE_AMT3 AS HOUSE_AMT3
			    ,A.HOUSE_AMT4 AS HOUSE_AMT4
			    ,A.HOUSE_AMT5 AS HOUSE_AMT5
			    ,A.HOUSE_ADDR AS HOUSE_ADDR
			    ,A.FIRST_EMP_NO
			    ,A.FIRST_REGDATE
			    ,A.LAST_EMP_NO
			    ,A.LAST_REGDATE
			    ,A.LAST_IP
			FROM HANAHR.HR_YT_IN_HOUSE_0 A
		   WHERE A.YEAR = #{year}
			 AND A.ADJST_DIV = #{adjst_div}
			 AND A.EMP_NO  = #{emp_no}
		<choose>
			<when test="searchType eq 'housingFund'"> <!-- 주택자금 -->
			 AND A.SEQ IN ('2', '3')
			</when>
			<when test="searchType eq 'rent'"> <!-- 월세액 -->
			 AND A.SEQ = '1'
			</when>
		</choose>
	</select>
	
	<select id="getYearendtaxCreditCardList" parameterType="hashmap" resultType="com.hanaph.gw.yt.yearendtax.vo.YearendtaxVO">
			SELECT A.YEAR AS YEAR
					,A.ADJST_DIV AS ADJST_DIV
					,A.EMP_NO AS EMP_NO
					,A.REL_CD AS REL_CD
					,A.REL_JUMIN_NO AS REL_JUMIN_NO
					,A.REL_NM AS REL_NM         
					,A.FOREIGN_CD AS FOREIGN_CD       
					,A.CREDIT_1 AS CREDIT_1
					,A.CREDIT_2 AS CREDIT_2
					,A.CASH_1 AS CASH_1
					,A.CASH_2 AS CASH_2
					,A.DIRECT_1 AS DIRECT_1
					,A.DIRECT_2 AS DIRECT_2
					,A.MARKET_1 AS MARKET_1
					,A.MARKET_2 AS MARKET_2
					,A.PUBRIC_TRANSPORT_1 AS PUBRIC_TRANSPORT_1
					,A.PUBRIC_TRANSPORT_2 AS PUBRIC_TRANSPORT_2 
					,A.CREDIT_1_LY AS CREDIT_1_LY
					,A.CREDIT_2_LY AS CREDIT_2_LY
					,A.CASH_1_LY AS CASH_1_LY
					,A.CASH_2_LY AS CASH_2_LY    
					,A.DIRECT_1_LY AS DIRECT_1_LY
					,A.DIRECT_2_LY AS DIRECT_2_LY
					,A.MARKET_1_LY AS MARKET_1_LY
					,A.MARKET_2_LY AS MARKET_2_LY  
					,A.PUBRIC_TRANSPORT_1_LY AS PUBRIC_TRANSPORT_1_LY
					,A.PUBRIC_TRANSPORT_2_LY AS PUBRIC_TRANSPORT_2_LY 
					,A.CREDIT_1_SH AS CREDIT_1_SH
					,A.CREDIT_2_SH AS CREDIT_2_SH
					,A.CASH_1_SH AS CASH_1_SH
					,A.CASH_2_SH AS CASH_2_SH
					,A.DIRECT_1_SH AS DIRECT_1_SH
					,A.DIRECT_2_SH AS DIRECT_2_SH
					,A.MARKET_1_SH AS MARKET_1_SH
					,A.MARKET_2_SH AS MARKET_2_SH
					,A.PUBRIC_TRANSPORT_1_SH AS PUBRIC_TRANSPORT_1_SH
					,A.PUBRIC_TRANSPORT_2_SH AS PUBRIC_TRANSPORT_2_SH
			 FROM HANAHR.HR_YT_IN_FAMILY_0 A
			WHERE A.YEAR = #{year}
			  AND A.ADJST_DIV = #{adjst_div}
			  AND A.EMP_NO  = #{emp_no}
			  AND A.CARD_YN = 'Y'
			ORDER BY A.REL_CD ASC
	</select>
	
	<select id="getYearendtaxInsuranceList" parameterType="hashmap" resultType="com.hanaph.gw.yt.yearendtax.vo.YearendtaxVO">
			SELECT A.YEAR AS YEAR
			        ,A.ADJST_DIV AS ADJST_DIV
			        ,A.EMP_NO AS EMP_NO
			        ,A.REL_CD AS REL_CD
			        ,A.REL_JUMIN_NO AS REL_JUMIN_NO
			        ,A.REL_NM AS REL_NM         
			        ,A.FOREIGN_CD AS FOREIGN_CD       
			        ,A.INSURANCE_PERSON_1 AS INSURANCE_PERSON_1
			        ,A.INSURANCE_PERSON_2 AS INSURANCE_PERSON_2
			        ,A.INSURANCE_DISABLED_PERSON_1 AS INSURANCE_DISABLED_PERSON_1
			        ,A.INSURANCE_DISABLED_PERSON_2 AS INSURANCE_DISABLED_PERSON_2
			 FROM HANAHR.HR_YT_IN_FAMILY_0 A
			WHERE A.YEAR = #{year}
			  AND A.ADJST_DIV = #{adjst_div}
			  AND A.EMP_NO  = #{emp_no}
			  AND A.INSULANCE_YN = 'Y'
			ORDER BY A.REL_CD ASC
	</select>
	
	<select id="getYearendtaxMedicalList" parameterType="hashmap" resultType="com.hanaph.gw.yt.yearendtax.vo.YearendtaxVO">
			SELECT A.YEAR
				,A.ADJST_DIV
				,A.EMP_NO
				,A.SEQ
				,A.REL_CD
				,A.REL_JUMIN_NO
				,CASE
				    WHEN SUBSTR(A.REL_JUMIN_NO, 7, 1) BETWEEN '1' AND '2' THEN '19'
				    WHEN SUBSTR(A.REL_JUMIN_NO, 7, 1) BETWEEN '3' AND '4' THEN '20'
				    ELSE '18'
				 END || SUBSTR(A.REL_JUMIN_NO, 0, 6) AS BIRTHDAY
				,B.REL_NM AS REL_NM    
				,A.HDC_OLD_YN
				,A.MEDI_GB
				,A.VENDOR_NM
				,A.VENDOR_NO
				,A.EXPNS_CNT
				,A.EXPNS_AMT
				,A.CARD_CNT
				,A.CARD_AMT
				,A.FIRST_EMP_NO
				,A.FIRST_REGDATE
				,A.LAST_EMP_NO
				,A.LAST_REGDATE
				,A.LAST_IP
			  FROM HANAHR.HR_YT_IN_MEDICAL_0 A 
				  ,HANAHR.HR_YT_IN_FAMILY_0 B 
			 WHERE A.YEAR = #{year}
			   AND A.ADJST_DIV = #{adjst_div}
			   AND A.EMP_NO = #{emp_no}
			   AND A.YEAR = B.YEAR  
			   AND A.ADJST_DIV = B.ADJST_DIV
			   AND A.EMP_NO = B.EMP_NO
			   AND B.MEDICAL_YN = 'Y'
			   AND TRIM(A.REL_JUMIN_NO) = TRIM(B.REL_JUMIN_NO)
		  ORDER BY BIRTHDAY ASC
	</select>
	
	<select id="getYearendtaxEducateList" parameterType="hashmap" resultType="com.hanaph.gw.yt.yearendtax.vo.YearendtaxVO">
			SELECT A.YEAR AS YEAR
				,A.ADJST_DIV AS ADJST_DIV
				,A.EMP_NO AS EMP_NO
				,A.REL_JUMIN_NO AS REL_JUMIN_NO
				,B.REL_NM AS REL_NM     
				,A.SEQ AS SEQ         
				,A.EDU_ORG AS EDU_ORG
				,A.PUBLIC_TX_AMT AS PUBLIC_TX_AMT
				,A.FIRST_EMP_NO AS FIRST_EMP_NO
				,A.FIRST_REGDATE AS FIRST_REGDATE
				,A.LAST_EMP_NO AS LAST_EMP_NO
				,A.LAST_REGDATE AS LAST_REGDATE
				,A.LAST_IP AS LAST_IP    
			  FROM HANAHR.HR_YT_IN_EDUCATE_0 A  
				  ,HANAHR.HR_YT_IN_FAMILY_0 B        
			 WHERE A.YEAR = #{year}
			   AND A.ADJST_DIV = #{adjst_div}
			   AND A.EMP_NO = #{emp_no}
			   AND A.YEAR = B.YEAR  
			   AND A.ADJST_DIV = B.ADJST_DIV
			   AND A.EMP_NO = B.EMP_NO
			   AND TRIM(A.REL_JUMIN_NO) = TRIM(B.REL_JUMIN_NO)
			   AND B.EDUCATION_YN = 'Y'
	</select>
	
	<select id="getYearendtaxContributeList" parameterType="hashmap" resultType="com.hanaph.gw.yt.yearendtax.vo.YearendtaxVO">
			SELECT A.YEAR AS YEAR
	            ,A.ADJST_DIV AS ADJST_DIV
	            ,A.EMP_NO AS EMP_NO
	            ,A.REL_JUMIN_NO AS REL_JUMIN_NO
	            ,A.SEQ AS SEQ
	            ,B.REL_NM AS REL_NM
	            ,A.YR_DON_DIV AS YR_DON_DIV
	            ,A.DON_AMT AS DON_AMT
	            ,A.DON_NM AS DON_NM
	            ,A.DON_NO AS DON_NO
	            ,A.DON_RECEIPT_NO AS DON_RECEIPT_NO
	            ,A.GUBUN AS GUBUN 
			  FROM HANAHR.HR_YT_IN_CONTRIBUTE_0 A 
				  ,HANAHR.HR_YT_IN_FAMILY_0 B
			 WHERE A.YEAR = #{year}
			   AND A.ADJST_DIV = #{adjst_div}
			   AND A.EMP_NO = #{emp_no}
			   AND A.YEAR = B.YEAR
			   AND A.EMP_NO = B.EMP_NO
			   AND TRIM(A.REL_JUMIN_NO) = TRIM(B.REL_JUMIN_NO)
			   AND A.ADJST_DIV = B.ADJST_DIV
			   AND B.CONTRIBUTION_YN = 'Y'
			 ORDER BY SEQ ASC
	</select>
	
	<select id="getYearendtaxSavingList" parameterType="hashmap" resultType="com.hanaph.gw.yt.yearendtax.vo.YearendtaxVO">
			SELECT A.YEAR AS YEAR
			     , A.ADJST_DIV AS ADJST_DIV
			     , A.EMP_NO AS EMP_NO
			     , A.SEQ AS SEQ
			     , A.GONGJE_GB AS GONGJE_GB
			     , A.BANK_CD AS BANK_CD 
			     , A.BANK_NM AS BANK_NM
			     , A.ACCOUNT_NO AS ACCOUNT_NO    
			     , A.IN_AMT AS IN_AMT
			     , A.GONGJE_AMT AS GONGJE_AMT
			     , A.FIRST_EMP_NO
			     , A.FIRST_REGDATE
			     , A.LAST_EMP_NO
			     , A.LAST_REGDATE
			     , A.LAST_IP
			FROM HANAHR.HR_YT_IN_SAVING_0 A
		   WHERE A.YEAR        = #{year}
			 AND A.ADJST_DIV   = #{adjst_div}
			 AND A.EMP_NO      = #{emp_no}
		<choose>
			<when test="searchType != null and (searchType eq 'P'.toString())"> <!-- 개인연금 -->
			 AND A.GONGJE_GB IN ('P1')
			</when>
			<when test="searchType != null and (searchType eq 'E'.toString())"> <!-- 주택저축 -->
			 AND A.GONGJE_GB IN ('E1', 'E2', 'E3')
			</when>
			<when test="searchType != null and (searchType eq 'L'.toString())"> <!-- 증권저축 -->
			 AND A.GONGJE_GB IN ('L1')
			</when>
			<when test="searchType != null and (searchType eq 'A'.toString())"> <!-- 연금저축 -->
			 AND A.GONGJE_GB IN ('A1')
			</when>
		</choose>
			ORDER BY SEQ
	</select>
	
	<select id="getYearendtaxFinancialList" parameterType="hashmap" resultType="com.hanaph.gw.yt.yearendtax.vo.YearendtaxVO">
		SELECT BANK_CD, BANK_NM
		  FROM HANAHR.HR_YT_BAS_BANKCD_0
		 WHERE YEAR = #{year}
		   AND ADJST_DIV = #{adjst_div}
		<if test="searchCode != ''">
		   AND BANK_CD LIKE '%'||#{searchCode}||'%'
		</if>
		<if test="searchName != ''">
		   AND BANK_NM LIKE '%'||#{searchName}||'%'
		</if>
	</select>
	
	<select id="getYearendtaxDependentsList" parameterType="hashmap" resultType="com.hanaph.gw.yt.yearendtax.vo.YearendtaxVO">
		SELECT REL_NM, REL_JUMIN_NO,
			   DECODE(REL_CD,'0','소득자본인','1','소득자의 직계존속','2','배우자의 직계존속','3','배우자','4','직계비속(자녀입양자)','5','직계비속(위 항목 제외)','6','형제자매','7','수급자','8','위탁아동') REL_CD_NM, REL_CD
		  FROM HANAHR.HR_YT_IN_FAMILY_0
		 WHERE YEAR = #{year}
		   AND EMP_NO = #{emp_no}
		<choose>
			<when test="searchType != null and (searchType eq 'contribute'.toString())"> <!-- 기부금 -->
			AND CONTRIBUTION_YN = 'Y'
			</when>
			<when test="searchType != null and (searchType eq 'educate'.toString())"> <!-- 교육비 -->
			AND EDUCATION_YN = 'Y'
			</when>
			<when test="searchType != null and (searchType eq 'medical'.toString())"> <!-- 의료비 -->
			AND MEDICAL_YN = 'Y'
			</when>
		</choose>
		<if test="searchCode != ''">
		   AND REL_JUMIN_NO LIKE '%'||#{searchCode}||'%'
		</if>
		<if test="searchName != ''">
		   AND REL_NM LIKE '%'||#{searchName}||'%'
		</if>
	</select>
	
	<select id="getYearendtaxInfo1" parameterType="hashmap" resultType="com.hanaph.gw.yt.yearendtax.vo.YearendtaxVO">
		SELECT A.YEAR AS YEAR
			,A.ADJST_DIV AS ADJST_DIV
			,A.EMP_NO AS EMP_NO
			,A.PAY_SUM AS PAY_SUM
			,A.JING_INCOME_TAX AS INCOME_TAX 
			,A.JING_JUMIN_TAX AS JING_JUMIN_TAX             
			,A.JING_JONG_INCOME_TAX AS PRIVOUS_INCOME_TAX  
			,A.JING_JONG_JUMIN_TAX AS PRIVOUS_JUMIN_TAX  
			,B.WORK_AMT + ((A.PAY_SUM - B.WORK_MIN_AMT) * (B.WORK_RATE / 100)) AS WORK_AMT 
			,A.PAY_SUM - (B.WORK_AMT + ((A.PAY_SUM - B.WORK_MIN_AMT) * (B.WORK_RATE / 100))) AS WORK_PAY                              
		FROM HANAHR.HR_YT_IN_FNDATA_0 A
	         ,HANAHR.HR_YT_BAS_DEDUCT_1 B         
		WHERE A.YEAR = #{year}
		AND A.ADJST_DIV = #{adjst_div}
		AND A.EMP_NO = #{emp_no}
		AND A.YEAR = B.YEAR
		AND A.ADJST_DIV = B.ADJST_DIV
		AND A.PAY_SUM BETWEEN B.WORK_MIN_AMT AND B.WORK_MAX_AMT
	</select>
	
	<select id="getYearendtaxInfo2" parameterType="hashmap" resultType="com.hanaph.gw.yt.yearendtax.vo.YearendtaxVO">
		SELECT A.YEAR
			,A.ADJST_DIV
			,A.EMP_NO
			,A.FAMILY_PERSON_AMT AS FAMILY_PERSON_AMT  --기본공제          
			,A.FAMILY_MATE_AMT AS FAMILY_MATE_AMT   --배우자     
			,A.FAMILY_DIRECT_ANCESTOR_CNT AS FAMILY_DIRECT_ANCESTOR_CNT  --존속
			,A.FAMILY_DIRECT_DESCENDANT_CNT AS FAMILY_DIRECT_DESCENDANT_CNT --비속
			,A.FAMILY_BROTHER_CNT AS FAMILY_BROTHER_CNT --형제
			,A.FAMILY_PENSIONER_CNT AS PENSIONER_CNT  -- 수급자
			,A.FAMILY_FOSTER_CHILD_CNT AS FOSTER_CHILD_CNT --위탁아동 
		FROM HANAHR.HR_YT_IN_FNDATA_0 A         
		WHERE A.YEAR = #{year}
		AND A.ADJST_DIV = #{adjst_div}
		AND A.EMP_NO = #{emp_no}
	</select>
	
	<select id="getYearendtaxInfo3" parameterType="hashmap" resultType="com.hanaph.gw.yt.yearendtax.vo.YearendtaxVO">
		SELECT A.FAMILY_OLD2_CNT AS FAMILY_OLD2_CNT                  
           ,A.FAMILY_DISABLED_PERSON_CNT AS FAMILY_DISABLED_PERSON_CNT       
           ,A.FAMILY_WOMEN_AMT AS FAMILY_WOMEN_AMT         
           ,A.FAMILY_SIXYEAR_CNT AS FAMILY_SIXYEAR_CNT                 
           ,A.FAMILY_BIRTH_CNT AS FAMILY_BIRTH_CNT
           ,A.FAMILY_SINGLE_PARENT_AMT AS FAMILY_SINGLE_PARENT_AMT
		FROM HANAHR.HR_YT_IN_FNDATA_0 A       
		WHERE A.YEAR = #{year}
		AND A.ADJST_DIV = #{adjst_div}
		AND A.EMP_NO = #{emp_no}
	</select>
	
	<select id="getYearendtaxInfo4" parameterType="hashmap" resultType="com.hanaph.gw.yt.yearendtax.vo.YearendtaxVO">
		SELECT A.KUK_YEON_AMT AS KUK_YEON_AMT  
           ,A.ANNUITY_SAVNG_AMT AS ANNUITY_SAVNG_AMT            	     
		FROM HANAHR.HR_YT_IN_FNDATA_0 A        
		WHERE A.YEAR = #{year}
		AND A.ADJST_DIV = #{adjst_div}
		AND A.EMP_NO = #{emp_no}
	</select>
	
	<select id="getYearendtaxInfo5" parameterType="hashmap" resultType="com.hanaph.gw.yt.yearendtax.vo.YearendtaxVO">
		SELECT A.INSURANCE_HEALTH_AMT AS INSURANCE_HEALTH_AMT    
           ,A.INSURANCE_EMPLOY_AMT AS INSURANCE_EMPLOY_AMT
           ,A.INSURANCE_SECRITY_AMT AS INSURANCE_SECRITY_AMT
           ,A.INSURANCE_DISABLED_PERSON_AMT AS INSURANCE_DISABLED_PERSON_AMT                       
		FROM HANAHR.HR_YT_IN_FNDATA_0 A   
		WHERE A.YEAR = #{year}
		AND A.ADJST_DIV = #{adjst_div}
		AND A.EMP_NO = #{emp_no}
	</select>
	
	<select id="getYearendtaxInfo6" parameterType="hashmap" resultType="com.hanaph.gw.yt.yearendtax.vo.YearendtaxVO">
		SELECT A.YEAR AS YEAR 
	         ,A.ADJST_DIV AS ADJST_DIV
	         ,A.EMP_NO AS EMP_NO 
	         ,A.HOUSE_LEASE_LOAN_AMT AS HOUSE_LEASE_LOAN_AMT       
	         ,A.HOUSE_SECURITY_LOAN1_AMT AS HOUSE_SECURITY_LOAN1_AMT
	         ,A.HOUSE_SECURITY_LOAN2_AMT AS HOUSE_SECURITY_LOAN2_AMT
	         ,A.HOUSE_SECURITY_LOAN3_AMT AS HOUSE_SECURITY_LOAN3_AMT                                    
	         ,A.HOUSE_SECURITY_LOAN4_AMT AS HOUSE_SECURITY_LOAN4_AMT
	         ,A.HOUSE_SECURITY_LOAN5_AMT AS HOUSE_SECURITY_LOAN5_AMT
	         ,A.FIRST_EMP_NO
	         ,A.FIRST_REGDATE
	         ,A.LAST_EMP_NO
	         ,A.LAST_REGDATE 
	         ,A.LAST_IP
		FROM HANAHR.HR_YT_IN_FNDATA_0 A
		WHERE A.YEAR = #{year}
		AND A.ADJST_DIV = #{adjst_div}
		AND A.EMP_NO = #{emp_no}
	</select>
	
	<select id="getYearendtaxInfo7" parameterType="hashmap" resultType="com.hanaph.gw.yt.yearendtax.vo.YearendtaxVO">
		SELECT PERSONAL_ANNUITY_AMT AS PERSONAL_ANNUITY_AMT
		FROM HANAHR.HR_YT_IN_FNDATA_0 A
		WHERE A.YEAR = #{year}
		AND A.ADJST_DIV = #{adjst_div}
		AND A.EMP_NO = #{emp_no}
	</select>
	
	<select id="getYearendtaxInfo8" parameterType="hashmap" resultType="com.hanaph.gw.yt.yearendtax.vo.YearendtaxVO">
		SELECT ETC_SUBSCRIPTION_DEPOSIT_AMT AS ETC_SUBSCRIPTION_DEPOSIT_AMT
			,ETC_HOME_MORTGAGE_AMT AS ETC_HOME_MORTGAGE_AMT
			,ETC_HOUSE_SUBSCR_DEPOSIT_AMT AS ETC_HOUSE_SUBSCR_DEPOSIT_AMT            
		FROM HANAHR.HR_YT_IN_FNDATA_0 A
		WHERE A.YEAR = #{year}
		AND A.ADJST_DIV = #{adjst_div}
		AND A.EMP_NO = #{emp_no}
	</select>
	
	<select id="getYearendtaxInfo9" parameterType="hashmap" resultType="com.hanaph.gw.yt.yearendtax.vo.YearendtaxVO">
		SELECT A.ETC_CREDT_AMT AS ETC_CREDT_AMT 
			,A.ETC_CASH_RECEIPT_AMT AS ETC_CASH_RECEIPT_AMT
			,A.ETC_DIRECT_AMT AS ETC_DIRECT_AMT             
			,A.ETC_MARKET_AMT AS ETC_MARKET_AMT      
			,A.ETC_PUBRIC_TRANSPORT_AMT AS ETC_PUBRIC_TRANSPORT_AMT  
			,A.ETC_CREDT_AMT_LY    AS ETC_CREDT_AMT_LY
			,A.ETC_CASH_RECEIPT_AMT_LY AS ETC_CASH_RECEIPT_AMT_LY
			,A.ETC_DIRECT_AMT_LY     AS ETC_DIRECT_AMT_LY
			,A.ETC_MARKET_AMT_LY AS ETC_MARKET_AMT_LY
			,A.ETC_PUBRIC_TRANSPORT_AMT_LY AS ETC_PUBRIC_TRANSPORT_AMT_LY
			,(NVL(B.CREDIT_1,0) + NVL(B.CREDIT_2,0)) AS ETC_CREDT_AMT_FH
			,(NVL(B.CASH_1,0) + NVL(B.CASH_2,0)) AS ETC_CASH_AMT_FH
			,(NVL(B.DIRECT_1,0) + NVL(B.DIRECT_2,0)) AS ETC_DIRECT_AMT_FH
			,(NVL(B.MARKET_1,0) + NVL(B.MARKET_2,0)) AS ETC_MARKET_AMT_FH
			,(NVL(B.PUBRIC_TRANSPORT_1,0) + NVL(B.PUBRIC_TRANSPORT_2,0)) AS ETC_PUBRIC_TRANSPORT_AMT_FH
			,(NVL(B.CREDIT_1_SH,0) + NVL(B.CREDIT_2_SH,0)) AS ETC_CREDT_AMT_SH
			,(NVL(B.CASH_1_SH,0) + NVL(B.CASH_2_SH,0)) AS ETC_CASH_AMT_SH
			,(NVL(B.DIRECT_1_SH,0) + NVL(B.DIRECT_2_SH,0)) AS ETC_DIRECT_AMT_SH
			,(NVL(B.MARKET_1_SH,0) + NVL(B.MARKET_2_SH,0)) AS ETC_MARKET_AMT_SH
			,(NVL(B.PUBRIC_TRANSPORT_1_SH,0) + NVL(B.PUBRIC_TRANSPORT_2_SH,0)) AS ETC_PUBRIC_TRANSPORT_AMT_SH
		FROM HANAHR.HR_YT_IN_FNDATA_0 A
	         ,HANAHR.HR_YT_IN_FAMILY_0 B
		WHERE A.YEAR = #{year}
		AND A.ADJST_DIV = #{adjst_div}
		AND A.EMP_NO = #{emp_no}
		AND A.YEAR = B.YEAR
		AND A.ADJST_DIV = B.ADJST_DIV
		AND A.EMP_NO = B.EMP_NO
		AND B.REL_CD = '0'
	</select>
	
	<select id="getYearendtaxInfo10" parameterType="hashmap" resultType="com.hanaph.gw.yt.yearendtax.vo.YearendtaxVO">
		SELECT A.YEAR AS YEAR 
	         ,A.ADJST_DIV AS ADJST_DIV
	         ,A.EMP_NO AS EMP_NO 
	         ,A.ETC_EMPLOY_STOCK_AMT AS ETC_EMPLOY_STOCK_AMT
	         ,A.ETC_CHUNK_MONEY_AMT AS ETC_CHUNK_MONEY_AMT
			 ,A.ETC_LONG_INVEST_STOCK_AMT AS ETC_LONG_INVEST_STOCK_AMT
	         ,A.FIRST_EMP_NO
	         ,A.FIRST_REGDATE
	         ,A.LAST_EMP_NO
	         ,A.LAST_REGDATE 
	         ,A.LAST_IP
		FROM HANAHR.HR_YT_IN_FNDATA_0 A
		WHERE A.YEAR = #{year}
		AND A.ADJST_DIV = #{adjst_div}
		AND A.EMP_NO = #{emp_no}
	</select>
	
	<select id="getYearendtaxInfo11" parameterType="hashmap" resultType="com.hanaph.gw.yt.yearendtax.vo.YearendtaxVO">
		SELECT A.YEAR AS YEAR 
	         ,A.ADJST_DIV AS ADJST_DIV
	         ,A.EMP_NO AS EMP_NO 
	         ,A.ETC_INCOME_TAX_REDUCTION_AMT AS ETC_INCOME_TAX_REDUCTION_AMT
	         ,A.ETC_SEWORK_TX_AMT AS ETC_SEWORK_TX_AMT
	         ,A.SMIYMJTC_100 AS SMIYMJTC_100
	         ,A.SMIYMJTC_50 AS SMIYMJTC_50
	         ,B.YT_SALARY AS YT_SALARY
	         ,B.ETC_SMIYMJTC_AMT AS ETC_SMIYMJTC_AMT
	         ,A.ETC_HOUSE_LAON_INTEREST_AMT AS ETC_HOUSE_LAON_INTEREST_AMT
	         ,A.ETC_CONTRIBUE_POLITIC_AMT AS ETC_CONTRIBUE_POLITIC_AMT
	         ,A.ETC_FOREIGNER_INCOME AS ETC_FOREIGNER_INCOME
	         ,A.ETC_FOREIGNER_PAY AS ETC_FOREIGNER_PAY
	         ,B.YT_EARNED_INCOME_AMT AS YT_EARNED_INCOME_AMT            
	         ,A.ETC_CHILDREN_AMT AS ETC_CHILDREN_AMT 
	         ,A.ANNUITY_SAVNG_AMT AS ANNUITY_SAVNG_AMT
	         ,A.INSURANCE_SECRITY_AMT AS INSURANCE_SECRITY_AMT
	         ,A.INSURANCE_DISABLED_PERSON_AMT AS INSURANCE_DISABLED_PERSON_AMT        
	         ,A.MEDICAL_PERSON_AMT AS MEDICAL_PERSON_AMT    
	         ,A.MEDICAL_OLD_AMT AS MEDICAL_OLD_AMT
	         ,A.MEDICAL_DISABLED_PERSON_AMT AS MEDICAL_DISABLED_PERSON_AMT
	         ,A.MEDICAL_ETC_AMT AS MEDICAL_ETC_AMT
	         ,HANAHR.F_HR_YT_IN_GET_MEDICAL_CALC_14(A.YEAR ,A.ADJST_DIV ,A.EMP_NO) AS MEDICAL_CALC  
	         ,B.TOTAL_MEDICAL_AMT AS TOTAL_MEDICAL_AMT
	         ,B.MEDICAL_AMT_O AS MEDICAL_AMT_O
	         ,A.EDUCATE_PERSON_AMT AS EDUCATE_PERSON_AMT
	         ,A.EDUCATE_KINDERGARTEN_CNT AS EDUCATE_KINDERGARTEN_CNT  
	        ,A.EDUCATE_KINDERGARTEN_AMT AS EDUCATE_KINDERGARTEN_AMT   
	        ,A.EDUCATE_SCHOOL_CNT AS EDUCATE_SCHOOL_CNT
	        ,A.EDUCATE_SCHOOL_AMT AS EDUCATE_SCHOOL_AMT 
	        ,A.EDUCATE_UNIV_CNT AS EDUCATE_UNIV_CNT    
	        ,A.EDUCATE_UNIV_AMT AS EDUCATE_UNIV_AMT    
	        ,A.EDUCATE_DISABLED_PERSON_CNT AS EDUCATE_DISABLED_PERSON_CNT    
	        ,A.EDUCATE_DISABLED_PERSON_AMT AS EDUCATE_DISABLED_PERSON_AMT
	        ,1 AS KINDERGARTEN 
	        ,2 AS SCHOOL 
	        ,3 AS UNIV   
	        ,B.EDCATE_AMT_O AS EDCATE_AMT_O
	        ,B.TOTAL_EDCATE_AMT AS TOTAL_EDCATE_AMT
	        ,A.CONTRIBUE_POLITIC_AMT AS CONTRIBUE_POLITIC_AMT
	        ,A.CONTRIBUE_LAW_AMT AS CONTRIBUE_LAW_AMT
	        ,A.CONTRIBUTE_EXCEPTION_AMT AS CONTRIBUTE_EXCEPTION_AMT
	        ,A.CONTRIBUTE_TRUST_AMT AS CONTRIBUTE_TRUST_AMT
	        ,A.CONTRIBUE_EMPLOY_STOCK_AMT AS CONTRIBUE_EMPLOY_STOCK_AMT
	        ,A.CONTRIBUE_DESIGNATE_AMT AS CONTRIBUE_DESIGNATE_AMT 
	        ,A.CONTRIBUE_RELIGION_AMT AS CONTRIBUE_RELIGION_AMT
	         ,B.YT_STANDARD_DEDUCT_AMT AS YT_STANDARD_DEDUCT_AMT
	         ,A.HOUSE_MONTH_LENT_AMT AS HOUSE_MONTH_LENT_AMT
	         ,A.FIRST_EMP_NO
	         ,A.FIRST_REGDATE
	         ,A.LAST_EMP_NO
	         ,A.LAST_REGDATE 
	         ,A.LAST_IP
		FROM HANAHR.HR_YT_IN_FNDATA_0 A
	          ,HANAHR.HR_YT_OUT_FNDATA_1 B        
		WHERE A.YEAR = #{year}
		AND A.ADJST_DIV = #{adjst_div}
		AND A.EMP_NO = #{emp_no}
		AND A.YEAR = B.YEAR
		AND A.ADJST_DIV = B.ADJST_DIV 
		AND A.EMP_NO = B.EMP_NO
	</select>
	
	<select id="getSearchAddressList" parameterType="hashmap" resultType="com.hanaph.gw.yt.yearendtax.vo.YearendtaxAddressVO">
		SELECT ZIPCODE ZIP_CD, SIDO, GUNGU, LAW_DONG_NM, DORO_NM, BLDG_NO1, BLDG_NO2 
		  FROM HANACOMM.CO_POSTNO_0
		<if test="searchKeyword !=''">
		<choose>
			<when test="searchType == 'dong'">
				 WHERE LAW_DONG_NM LIKE '%' || #{searchKeyword} || '%'
			</when>
			<when test="searchType == 'doro'">
				 WHERE DORO_NM LIKE '%' || #{searchKeyword} || '%'
			</when>
		</choose>
		</if>
	</select>
	
	<!-- 계산 프로시저 -->
	<parameterMap type="hashmap" id="familyProcedure">
		<parameter property="year" jdbcType="VARCHAR" javaType="string" mode="IN" />
		<parameter property="adjst_div" jdbcType="VARCHAR" javaType="string" mode="IN" />
		<parameter property="emp_no" jdbcType="VARCHAR" javaType="string" mode="IN" />
	</parameterMap>
	<select id="getFamilyProcedureCall" statementType="CALLABLE" parameterMap="familyProcedure">
		{call HANAHR.P_HR_YT_IN_FAMILY_14(?, ?, ?)}
	</select>
	
	<parameterMap type="hashmap" id="payProcedure">
		<parameter property="year" jdbcType="VARCHAR" javaType="string" mode="IN" />
		<parameter property="adjst_div" jdbcType="VARCHAR" javaType="string" mode="IN" />
	</parameterMap>
	<select id="getPayProcedureCall" statementType="CALLABLE" parameterMap="payProcedure">
		{call HANAHR.P_HR_YT_IN_PAY_SUM_14(?, ?)}
	</select>
	
	<!-- 주택계약 내용 삭제 -->
	<delete id="deleteYearendtaxHouse" parameterType="com.hanaph.gw.yt.yearendtax.vo.YearendtaxVO">
		DELETE FROM HANAHR.HR_YT_IN_HOUSE_0
		WHERE YEAR = #{year}
		AND ADJST_DIV = #{adjst_div}
		AND EMP_NO  = #{emp_no}
		<choose>
			<when test="searchType eq 'housingFund'"> <!-- 주택자금 -->
			AND SEQ IN ('2', '3')
			</when>
			<when test="searchType eq 'rent'"> <!-- 월세액 -->
			AND SEQ = '1'
			</when>
		</choose>
	</delete>
	
	<!-- 주택계약 내용 등록 -->
	<insert id="insertYearendtaxHouse" parameterType="com.hanaph.gw.yt.yearendtax.vo.YearendtaxVO">
		INSERT INTO HANAHR.HR_YT_IN_HOUSE_0(YEAR, ADJST_DIV, EMP_NO, SEQ, FIRST_EMP_NO, FIRST_REGDATE, LAST_EMP_NO, LAST_REGDATE,
											LAST_IP, HOUSE_GB, HOUSE_NM, HOUSE_JUMIN, HOUSE_START_DT, HOUSE_END_DT, HOUSE_AMT1, HOUSE_AMT2, HOUSE_ADDR)
		VALUES(#{year}, #{adjst_div}, #{emp_no}, #{house_gb}, #{emp_no}, SYSDATE, #{emp_no}, SYSDATE,
			   '', #{house_gb}, #{house_nm}, #{house_jumin}, #{house_start_dt}, #{house_end_dt}, #{house_amt1}, #{house_amt2}, #{house_addr})
	</insert>
	
	<!-- 개인연금 내용 삭제 -->
	<delete id="deleteYearendtaxSaving" parameterType="com.hanaph.gw.yt.yearendtax.vo.YearendtaxVO">
		DELETE FROM HANAHR.HR_YT_IN_SAVING_0
		WHERE YEAR = #{year}
		AND ADJST_DIV = #{adjst_div}
		AND EMP_NO  = #{emp_no}
		<choose>
			<when test="searchType != null and (searchType eq 'P'.toString())"> <!-- 개인연금 -->
			AND GONGJE_GB IN ('P1')
			</when>
			<when test="searchType != null and (searchType eq 'E'.toString())"> <!-- 주택저축 -->
			AND GONGJE_GB IN ('E1', 'E2', 'E3')
			</when>
			<when test="searchType != null and (searchType eq 'L'.toString())"> <!-- 증권저축 -->
			AND GONGJE_GB IN ('L1')
			</when>
			<when test="searchType != null and (searchType eq 'A'.toString())"> <!-- 연금저축 -->
			AND GONGJE_GB IN ('A1')
			</when>
		</choose>
	</delete>
	
	<!-- 개인연금 내용 등록 -->
	<insert id="insertYearendtaxSaving" parameterType="com.hanaph.gw.yt.yearendtax.vo.YearendtaxVO">
		INSERT INTO HANAHR.HR_YT_IN_SAVING_0(YEAR, ADJST_DIV, EMP_NO, SEQ, GONGJE_GB, BANK_CD, BANK_NM, ACCOUNT_NO, IN_AMT)
		VALUES(#{year}, #{adjst_div}, #{emp_no}, #{seq}, #{gongje_gb}, #{bank_cd}, #{bank_nm}, #{account_no}, #{in_amt})
	</insert>
	
	<!-- 부양가족 수정 -->
	<update id="updateYearendtaxFamily" parameterType="com.hanaph.gw.yt.yearendtax.vo.YearendtaxVO">
		UPDATE HANAHR.HR_YT_IN_FAMILY_0
		SET REL_JUMIN_NO		= #{rel_jumin_no},
			REL_CD				= #{rel_cd},
			REL_NM				= #{rel_nm},
			FOREIGN_CD			= #{foreign_cd},
			CHOOSE_YN			= #{choose_yn},
			PENSIONER_YN		= #{pensioner_yn},
			FOSTER_CHILD_YN		= #{foster_child_yn},
			RESPECT_AGED_YN		= #{respect_aged_yn},
			DISABLED_PERSON_YN	= #{disabled_person_yn},
			WOMAN_YN			= #{woman_yn},
			SINGLE_PARENTS_YN	= #{single_parents_yn},
			INSULANCE_YN		= #{insulance_yn},
			MEDICAL_YN			= #{medical_yn},
			EDUCATION_YN		= #{education_yn},
			CARD_YN				= #{card_yn},
			CONTRIBUTION_YN		= #{contribution_yn}
		WHERE YEAR           = #{year}
		AND ADJST_DIV        = #{adjst_div}
		AND EMP_NO           = #{emp_no}
		AND REL_JUMIN_NO     = #{org_rel_jumin_no}
	</update>
	
	<!-- 부양가족 삭제 -->
	<delete id="deleteYearendtaxFamily" parameterType="com.hanaph.gw.yt.yearendtax.vo.YearendtaxVO">
		DELETE
		FROM HANAHR.HR_YT_IN_FAMILY_0
		WHERE YEAR       = #{year}
		AND ADJST_DIV    = #{adjst_div}
		AND EMP_NO       = #{emp_no}
		AND REL_JUMIN_NO = #{org_rel_jumin_no}
	</delete>
	
	<!-- 부양가족 등록 -->
	<insert id="insertYearendtaxFamily" parameterType="com.hanaph.gw.yt.yearendtax.vo.YearendtaxVO">
		INSERT INTO HANAHR.HR_YT_IN_FAMILY_0(YEAR, ADJST_DIV, EMP_NO, REL_CD, REL_JUMIN_NO, REL_NM, FOREIGN_CD, CHOOSE_YN
					, PENSIONER_YN, FOSTER_CHILD_YN, RESPECT_AGED_YN, DISABLED_PERSON_YN, WOMAN_YN, INSULANCE_YN
					, MEDICAL_YN, EDUCATION_YN, CARD_YN, CONTRIBUTION_YN, SINGLE_PARENTS_YN)
          VALUES (#{year}, #{adjst_div}, #{emp_no}, #{rel_cd}, #{rel_jumin_no}, #{rel_nm}, #{foreign_cd}, #{choose_yn}
          			, #{pensioner_yn}, #{foster_child_yn}, #{respect_aged_yn}, #{disabled_person_yn}, #{woman_yn}, #{insulance_yn}
          			, #{medical_yn}, #{education_yn}, #{card_yn}, #{contribution_yn}, #{single_parents_yn})
	</insert>
	
	<!-- 보험료 수정 -->
	<update id="updateYearendtaxInsurance" parameterType="com.hanaph.gw.yt.yearendtax.vo.YearendtaxVO">
		UPDATE HANAHR.HR_YT_IN_FAMILY_0
		SET INSURANCE_PERSON_1        = #{insurance_person_1},
		  INSURANCE_PERSON_2          = #{insurance_person_2},
		  INSURANCE_DISABLED_PERSON_1 = #{insurance_disabled_person_1},
		  INSURANCE_DISABLED_PERSON_2 = #{insurance_disabled_person_2}
		WHERE YEAR                    = #{year}
		AND ADJST_DIV                 = #{adjst_div}
		AND EMP_NO                    = #{emp_no}
		AND REL_JUMIN_NO              = #{rel_jumin_no}
	</update>
	
	<!-- 신용카드 수정 -->
	<update id="updateYearendtaxCreditCard" parameterType="com.hanaph.gw.yt.yearendtax.vo.YearendtaxVO">
		UPDATE HANAHR.HR_YT_IN_FAMILY_0
		SET CREDIT_1            = #{credit_1},
		  CREDIT_2              = #{credit_2},
		  CASH_1                = #{cash_1},
		  CASH_2                = #{cash_2},
		  DIRECT_1              = #{direct_1},
		  DIRECT_2              = #{direct_2},
		  MARKET_1              = #{market_1},
		  MARKET_2              = #{market_2},
		  PUBRIC_TRANSPORT_1    = #{pubric_transport_1},
		  PUBRIC_TRANSPORT_2    = #{pubric_transport_2},
		  CREDIT_1_SH           = #{credit_1_sh},
		  CREDIT_2_SH           = #{credit_2_sh},
		  CASH_1_SH             = #{cash_1_sh},
		  CASH_2_SH             = #{cash_2_sh},
		  DIRECT_1_SH           = #{direct_1_sh},
		  DIRECT_2_SH           = #{direct_2_sh},
		  MARKET_1_SH           = #{market_1_sh},
		  MARKET_2_SH           = #{market_2_sh},
		  PUBRIC_TRANSPORT_1_SH = #{pubric_transport_1_sh},
		  PUBRIC_TRANSPORT_2_SH = #{pubric_transport_2_sh},
		  CREDIT_1_LY           = #{credit_1_ly},
		  CREDIT_2_LY           = #{credit_2_ly},
		  CASH_1_LY             = #{cash_1_ly},
		  CASH_2_LY             = #{cash_2_ly},
		  DIRECT_1_LY           = #{direct_1_ly},
		  DIRECT_2_LY           = #{direct_2_ly},
		  MARKET_1_LY           = #{market_1_ly},
		  MARKET_2_LY           = #{market_2_ly},
		  PUBRIC_TRANSPORT_1_LY = #{pubric_transport_1_ly},
		  PUBRIC_TRANSPORT_2_LY = #{pubric_transport_2_ly}
		WHERE YEAR              = #{year}
		AND ADJST_DIV           = #{adjst_div}
		AND EMP_NO              = #{emp_no}
		AND REL_JUMIN_NO        = #{rel_jumin_no}
	</update>
	
	<!-- 교육비 삭제 -->
	<delete id="deleteYearendtaxEducate" parameterType="com.hanaph.gw.yt.yearendtax.vo.YearendtaxVO">
		DELETE
		FROM HANAHR.HR_YT_IN_EDUCATE_0
		WHERE YEAR       = #{year}
		AND ADJST_DIV    = #{adjst_div}
		AND EMP_NO       = #{emp_no}
	</delete>
	
	<!-- 교육비 등록 -->
	<insert id="insertYearendtaxEducate" parameterType="com.hanaph.gw.yt.yearendtax.vo.YearendtaxVO">
		INSERT INTO HANAHR.HR_YT_IN_EDUCATE_0(YEAR, ADJST_DIV, EMP_NO, REL_JUMIN_NO, SEQ, EDU_ORG, PUBLIC_TX_AMT)
		VALUES(#{year}, #{adjst_div}, #{emp_no}, #{rel_jumin_no}, #{seq}, #{edu_org}, #{public_tx_amt})
	</insert>
	
	<!-- 주소 조회 -->
	<select id="getYearendtaxAddressList" parameterType="hashmap" resultType="com.hanaph.gw.yt.yearendtax.vo.YearendtaxAddressVO">
		SELECT EMP_NO, ADDR1 ADDRESS1, ADDR2 ADDRESS2, ZIP_CD, TEL_NO 
		  FROM HANAHR.HR_HC_EMPBAS_UPDATE
		 WHERE EMP_NO = #{emp_no}
	</select>
	
	<!-- 의료비 삭제 -->
	<delete id="deleteYearendtaxMedical" parameterType="com.hanaph.gw.yt.yearendtax.vo.YearendtaxVO">
		DELETE
		FROM HANAHR.HR_YT_IN_MEDICAL_0
		WHERE YEAR       = #{year}
		AND ADJST_DIV    = #{adjst_div}
		AND EMP_NO       = #{emp_no}
	</delete>
	
	<!-- 의료비 등록 -->
	<insert id="insertYearendtaxMedical" parameterType="com.hanaph.gw.yt.yearendtax.vo.YearendtaxVO">
		INSERT INTO HANAHR.HR_YT_IN_MEDICAL_0(YEAR, ADJST_DIV, EMP_NO, REL_JUMIN_NO, SEQ, MEDI_GB, VENDOR_NO, VENDOR_NM, CARD_CNT, CARD_AMT)
		VALUES(#{year}, #{adjst_div}, #{emp_no}, #{rel_jumin_no}, #{seq}, #{medi_gb}, #{vendor_no}, #{vendor_nm}, #{card_cnt}, #{card_amt})
	</insert>
	
	<!-- 기부금 삭제 -->
	<delete id="deleteYearendtaxContribute" parameterType="com.hanaph.gw.yt.yearendtax.vo.YearendtaxVO">
		DELETE
		FROM HANAHR.HR_YT_IN_CONTRIBUTE_0
		WHERE YEAR       = #{year}
		AND ADJST_DIV    = #{adjst_div}
		AND EMP_NO       = #{emp_no}
	</delete>
	
	<!-- 기부금 등록 -->
	<insert id="insertYearendtaxContribute" parameterType="com.hanaph.gw.yt.yearendtax.vo.YearendtaxVO">
		INSERT INTO HANAHR.HR_YT_IN_CONTRIBUTE_0(YEAR, ADJST_DIV, EMP_NO, REL_JUMIN_NO, SEQ, YR_DON_DIV, DON_AMT, DON_NM, DON_NO, DON_RECEIPT_NO, GUBUN)
		VALUES(#{year}, #{adjst_div}, #{emp_no}, #{rel_jumin_no}, #{seq}, #{yr_don_div}, #{don_amt}, #{don_nm}, #{don_no}, #{don_receipt_no}, #{gubun})
	</insert>
	
	<!-- 주소 등록 -->
	<insert id="insertYearendtaxAddress" parameterType="com.hanaph.gw.yt.yearendtax.vo.YearendtaxAddressVO">
		INSERT INTO HANAHR.HR_HC_EMPBAS_UPDATE (EMP_NO, ADDR1, ADDR2, ZIP_CD, TEL_NO)
		VALUES (#{emp_no},#{address1},#{address2},#{zip_cd},#{tel_no})
	</insert>
	
	<!-- 주소 삭제 -->
	<delete id="deleteYearendtaxAddress" parameterType="com.hanaph.gw.yt.yearendtax.vo.YearendtaxAddressVO">
		DELETE HANAHR.HR_HC_EMPBAS_UPDATE
	     WHERE EMP_NO = #{emp_no} 
	</delete>
	
	<!-- 종전근무지 삭제 -->
	<delete id="deleteYearendtaxPreviousWorkplace" parameterType="com.hanaph.gw.yt.yearendtax.vo.YearendtaxVO">
		DELETE
		FROM HANAHR.HR_YT_IN_PREVIOUS_0
		WHERE YEAR       = #{year}
		AND ADJST_DIV    = #{adjst_div}
		AND EMP_NO       = #{emp_no}
	</delete>
	
	<!-- 종전근무지 등록 -->
	<insert id="insertYearendtaxPreviousWorkplace" parameterType="com.hanaph.gw.yt.yearendtax.vo.YearendtaxAddressVO">
		INSERT
		INTO HANAHR.HR_YT_IN_PREVIOUS_0
		  (SEQ, YEAR, ADJST_DIV, EMP_NO, CORPORATE_NM, PRESIDENT, CORPORATE_NO, START_WORK_DT,
		    END_WORK_DT, START_REDUCE_DT, END_REDUCE_DT, SALARY_DT, SALARY_AMT, BONUS_AMT, CONSTRUCTIVE_BONUS_AMT, HEALTH_AMT,
		    EMPLOY_AMT, KUK_YEON_AMT, ANNUITY_AMT, INCOME_AMT, JUMIN_AMT, NONG_AMT, TOTAL_SALARY, STOCK_OPTION_AMT,
		    EMPLOY_STOCK_AMT, DERECTOR_RETIREMENT_AMT, TOTAL_FREE, REDUCTION_AMT, FOREIGN_WORK_AMT, OEVRTIME_AMT, METERNITY_AMT, RESEARCH_AMT,
		    SCHOOL_EXPENSES_AMT, COLLECT_AMT, REMOTE_RURAL_AREA_AMT, NATURAL_DISASTER_AMT, STOCK_PURCHASE_AMT, FOREIGNER_AMT, EMPLOY_STOCK_AMT1, EMPLOY_STOCK_AMT2,
		    GUARD_EMBARK_AMT, SMIYMJTC_AMT, MAJOR_AMT, SUBMARINE_MINERAL_AMT, SCHOLARSHIP_AMT, ORGANIZATION_AMT, KINDERGARTEN_TEACHER_AMT, CHILDCARE_AMT,
		    TEACHE_CLAUSE_AMT, MOVE_AMT, LEGISLATION_AMT, OPERATION_AMT, SMIYMJTC_RATE
		  )
		  VALUES
		  (#{seq}, #{year}, #{adjst_div}, #{emp_no}, #{corporate_nm}, #{president}, #{corporate_no}, #{start_work_dt},
		    #{end_work_dt}, #{start_reduce_dt}, #{end_reduce_dt}, #{salary_dt}, #{salary_amt}, #{bonus_amt}, #{constructive_bonus_amt}, #{health_amt},
		    #{employ_amt}, #{kuk_yeon_amt}, #{annuity_amt}, #{income_amt}, #{jumin_amt}, #{nong_amt}, #{total_salary}, #{stock_option_amt},
		    #{employ_stock_amt}, #{derector_retirement_amt}, #{total_free}, #{reduction_amt}, #{foreign_work_amt}, #{oevrtime_amt}, #{meternity_amt}, #{research_amt},
		    #{school_expenses_amt}, #{collect_amt}, #{remote_rural_area_amt}, #{natural_disaster_amt}, #{stock_purchase_amt}, #{foreigner_amt}, #{employ_stock_amt1}, #{employ_stock_amt2},
		    #{guard_embark_amt}, #{smiymjtc_amt}, #{major_amt}, #{submarine_mineral_amt}, #{scholarship_amt}, #{organization_amt}, #{kindergarten_teacher_amt}, #{childcare_amt},
		    #{teache_clause_amt}, #{move_amt}, #{legislation_amt}, #{operation_amt}, #{smiymjtc_rate}
		  )
	</insert>
	
	<!-- 연말정산 입력 화면 저장 -->
	<update id="updateYearendtaxInfo" parameterType="com.hanaph.gw.yt.yearendtax.vo.YearendtaxVO">
		UPDATE HANAHR.HR_YT_IN_FNDATA_0
		SET HOUSE_LEASE_LOAN_AMT       = #{house_lease_loan_amt},
		  HOUSE_SECURITY_LOAN1_AMT     = #{house_security_loan1_amt},
		  HOUSE_SECURITY_LOAN2_AMT     = #{house_security_loan2_amt},
		  HOUSE_SECURITY_LOAN3_AMT     = #{house_security_loan3_amt},
		  HOUSE_SECURITY_LOAN4_AMT     = #{house_security_loan4_amt},
		  HOUSE_SECURITY_LOAN5_AMT     = #{house_security_loan5_amt},
		  ETC_EMPLOY_STOCK_AMT         = #{etc_employ_stock_amt},
		  ETC_CHUNK_MONEY_AMT          = #{etc_chunk_money_amt},
		  ETC_INCOME_TAX_REDUCTION_AMT = #{etc_income_tax_reduction_amt},
		  ETC_CONTRIBUE_POLITIC_AMT    = #{etc_contribue_politic_amt},
		  ETC_SEWORK_TX_AMT            = #{etc_sework_tx_amt},
		  ETC_HOUSE_LAON_INTEREST_AMT  = #{etc_house_laon_interest_amt},
		  ETC_FOREIGNER_INCOME         = #{etc_foreigner_income},
		  ETC_FOREIGNER_PAY            = #{etc_foreigner_pay}
		WHERE YEAR                     = #{year}
		AND ADJST_DIV                  = #{adjst_div}
		AND EMP_NO                     = #{emp_no}
	</update>
</mapper>