<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 
  * @파일명 : main.xml      
  * @메뉴명 : 온라인 주문 main      
  * @최초작성일 : 2015/01/16            
  * @author : 김재갑                  
  * @수정내역 :	
 -->
<mapper namespace="main"> 
	
	<!-- 
	<select id="getNoticeList" parameterType="hashmap" resultType="com.hanaph.saleon.main.vo.NoticeVO">
		<if test="rownum != null">
			SELECT *
			FROM (
		</if>
		<choose>
			<when test="totalCountYn != null">
				SELECT COUNT(NOTICE_ID) TOTAL_CNT
	        		FROM (
			</when>
			<when test="page != null">
				SELECT *
				FROM (SELECT T0.*, FLOOR((ROWNUM - 1) / #{perPageRow,jdbcType=INTEGER} + 1) PAGE
	        		FROM (
			</when>
		</choose>
			SELECT 
				   A.NOTICE_ID, 
			       A.GROUPCD, 
			       A.NOTICE_TITLE, 
			       A.NOTICE_DESC, 
			       TO_CHAR(A.INPUT_DATE, 'YYYY-MM-DD AM HH12:MI:SS') INPUT_DATE, 
			       A.INPUT_USERID,
			       B.SAWON_NM
			  FROM SALE.PDA_NOTICE A, SALE.SALE0007 B
			 WHERE A.INPUT_USERID = B.SAWON_ID(+)
			 <if test="searchType != null and searchType == 'title'">
			   AND A.NOTICE_TITLE LIKE '%'||#{keyword,jdbcType=VARCHAR}||'%'
			 </if>
			 <if test="searchType != null and searchType == 'desc'">
			   AND A.NOTICE_DESC LIKE '%'||#{keyword,jdbcType=VARCHAR}||'%'
			 </if>
			 <if test="searchType != null and searchType == 'titleDesc'">
			   AND A.NOTICE_TITLE LIKE '%'||#{keyword,jdbcType=VARCHAR}||'%'
			   AND A.NOTICE_DESC LIKE '%'||#{keyword,jdbcType=VARCHAR}||'%'
			 </if>
			 <if test="searchType != null and searchType == 'sawonNm'">
			   AND B.SAWON_NM LIKE '%'||#{keyword,jdbcType=VARCHAR}||'%'
			 </if>
			 <if test="searchType != null and sttDate != null and endDate != null">
			   AND A.INPUT_DATE BETWEEN TO_DATE(#{sttDate}, 'YYYYMMDD') AND TO_DATE(#{endDate}, 'YYYYMMDD') + 0.99999
			 </if>
			 <if test="notice_id != null and notice_id != ''">
			   AND A.NOTICE_ID = #{notice_id}
			 </if>
			 <choose>
			 	<when test="sidx != null and sidx != ''">
			 		ORDER BY ${sidx} ${sord}
			 	</when>
			 	<otherwise>
			 		ORDER BY A.NOTICE_ID DESC
			 	</otherwise>
			 </choose>
		<choose>
			<when test="totalCountYn != null">
				)
			</when>
			<when test="page != null">
					) T0
				)
				WHERE PAGE = #{page,jdbcType=INTEGER}
			</when>
		</choose>
		<if test="rownum != null">
		   ) Z
		   WHERE ROWNUM BETWEEN 1 AND #{rownum}
		 </if>
	</select>
	 -->
	<!-- 임원진/관리자용 메인 화면(대쉬보드) 호출 // 공지사항 목록 조회 // MainController -->
	<select id="getNoticeList" parameterType="hashmap" resultType="com.hanaph.saleon.main.vo.NoticeVO">
		-- 임원진/관리자용 메인 화면(대쉬보드) 호출 // 공지사항 목록 조회 // MainController
		<if test="rownum != null">
			SELECT *
			FROM (
		</if>
		<choose>
			<when test="totalCountYn != null">
				SELECT COUNT(notice_title) TOTAL_CNT
				FROM (
			</when>
			<when test="page != null">
				SELECT *
				FROM (SELECT T0.*, FLOOR((ROWNUM - 1) / #{perPageRow,jdbcType=INTEGER} + 1) PAGE
				FROM (
			</when>
		</choose>
		SELECT
		A.NOTICEID     						AS notice_id,
		A.NOTICEEMP      					AS groupcd,
		A.TITLE          					AS notice_title,
		A.NOTICECONTENTS 					AS notice_desc,
		A.NOTICEDATE 						AS input_date,
		TO_CHAR(A.NOTICEEMP)			    AS input_userid,
		B.EMPNAME        					AS sawon_nm,
		A.NOTICEPERIOD        				AS period_date
		FROM ORAGMP.NOTICEMANAGE A, ORAGMP.CMEMPM B
		WHERE TO_CHAR(A.NOTICEEMP) = B.EMPCODE(+)
		AND A.ON_LINE = 'Y'
		<if test="searchType != null and searchType == 'title'">
			AND A.TITLE LIKE '%'||#{keyword,jdbcType=VARCHAR}||'%' 			-- 공지사항 제목 검색
		</if>
		<if test="searchType != null and searchType == 'desc'">
			AND A.NOTICECONTENTS LIKE '%'||#{keyword,jdbcType=VARCHAR}||'%' -- 공지사항 내용 검색
		</if>
		<if test="searchType != null and searchType == 'titleDesc'">
			AND A.TITLE LIKE '%'||#{keyword,jdbcType=VARCHAR}||'%'			-- 공지사항 제목 and 내용 검색
			AND A.NOTICECONTENTS LIKE '%'||#{keyword,jdbcType=VARCHAR}||'%'
		</if>
		<if test="searchType != null and searchType == 'sawonNm'">
			AND B.EMPNAME LIKE '%'||#{keyword,jdbcType=VARCHAR}||'%'		-- 공지사항 작성자 검색
		</if>
		<if test="searchType != null and sttDate != null and endDate != null">
			AND TO_DATE(A.NOTICEDATE, 'YYYY-MM-DD') BETWEEN TO_DATE(#{sttDate}, 'YYYY-MM-DD') AND TO_DATE(#{endDate}, 'YYYY-MM-DD') + 0.99999 -- 공지사항 기간 검색
		</if>
		<if test="notice_id != null and notice_id != ''">
			AND A.NOTICEID = #{notice_id}									-- 공지사항 작성자 아이디 검색
		</if>
		<choose>
			<when test="sidx != null and sidx != ''">
				ORDER BY ${sidx} ${sord}
			</when>
			<otherwise>
				ORDER BY A.NOTICEDATE DESC
			</otherwise>
		</choose>
		<choose>
			<when test="totalCountYn != null">
				)
			</when>
			<when test="page != null">
				) T0
				)
				WHERE PAGE = #{page,jdbcType=INTEGER}
			</when>
		</choose>
		<if test="rownum != null">
			) Z
			WHERE ROWNUM BETWEEN 1 AND #{rownum}
		</if>
	</select>
	
	<!-- 
	<select id="getCustInfo" parameterType="hashmap" resultType="com.hanaph.saleon.main.vo.CustDashboardVO">
		SELECT 
			CUST_ID, CUST_NM,VOU_NO,ADDR1||' '||ADDR2 ADDR, PRESIDENT, EMAIL 
		FROM SALE.SALE0003 
		WHERE CUST_ID = #{custId}
	</select>
	 -->
	<!-- 거래처용 메인 화면(대쉬보드) 호출 // 거래처 정보 조회 // MainController -->
	<!-- 어떠한 계정으로 로그인해도 처음 보여지는 메인화면의 '기본사항' 메뉴(6가지 정보) -->
	<select id="getCustInfo" parameterType="hashmap" resultType="com.hanaph.saleon.main.vo.CustDashboardVO">
		-- 거래처용 메인 화면(대쉬보드) 호출 // 거래처 정보 조회 // MainController
		SELECT CUSTCODE		  AS CUST_ID,
		       CUSTNAME		  AS CUST_NM,		
		       BUSINESSNO     AS VOU_NO,
		       ADDR1
		              ||' '
		              ||ADDR2 AS ADDR,
		       CEONAME		  AS PRESIDENT,
		       EMAIL
		FROM   ORAGMP.CMCUSTM A
		WHERE  A.CUSTCODE = #{custId}
	</select>
	

	<!-- 거래처용 메인 화면(대쉬보드)-여신현황 호출 // 거래처 정보 조회 // MainController -->
	<!--<select id="getCustLoanPresentCondition" parameterType="hashmap" resultType="com.hanaph.saleon.main.vo.CustDashboardVO">-->
		<!--SELECT-->
		    <!--BEFORE_AMT-->
		    <!--, SALE_AMT-->
		    <!--, CASH_AMT-->
		    <!--, CUR_AMT-->
		    <!--, BILL_AMT-->
		    <!--, JASU_AMT-->
		    <!--, TASU_AMT-->
		    <!--, CUR_AMT + JASU_AMT AS TOTAL_AMT-->
		    <!--, DAMBO-->
		    <!--, (CASE WHEN BILL_CNT > 1 THEN BILL_KIND || ' 外 ' || (BILL_CNT - 1) || ' 건'-->
		            <!--ELSE BILL_KIND-->
		            <!--END)  DAMBO_KIND-->
		    <!--, SALE_DAMBO_AMT-->
		    <!--, (ROUND( NVL((SALE_DAMBO_AMT  / NULLIF(( CUR_AMT  +  JASU_AMT ), 0)), 0) * 100,2)) ||' %' AS DAMBO_PER-->
		    <!--, SAWON_NM-->
		    <!--, RATE_DAY-->
		    <!--, LOAN_LIMIT-->
		<!--FROM(-->
		  <!--SELECT NVL(F.BEFORE_AMT,0)          BEFORE_AMT,-->
		        <!--NVL(F.MISU_AMT,0)            SALE_AMT,-->
		        <!--NVL(F.BEFORE_AMT,0) + NVL(F.MISU_AMT,0) - NVL(F.SU_AMT,0)  CUR_AMT,-->
		        <!--NVL(F.SU_AMT,0)              SU_AMT,-->
		        <!--NVL(I.CASH_AMT,0)             CASH_AMT,-->
		        <!--NVL(L.BILL_010_AMT,0) + NVL(L.BILL_020_AMT,0) + NVL(L.BILL_025_AMT,0) + NVL(L.BILL_030_AMT,0) + NVL(L.BILL_035_AMT,0) + NVL(L.BILL_040_AMT,0) + NVL(L.BILL_100_AMT,0) + NVL(L.BILL_900_AMT,0)   BILL_AMT,-->
		        <!--NVL(L.BILL_010_AMT,0) + NVL(L.BILL_020_AMT,0) + NVL(L.BILL_030_AMT,0) + NVL(L.BILL_100_AMT,0) + NVL(L.BILL_900_AMT,0)               JASU_AMT,-->
		        <!--NVL(L.BILL_025_AMT,0) + NVL(L.BILL_035_AMT,0) + NVL(L.BILL_040_AMT,0)                                                               TASU_AMT,-->
		        <!--NVL(H.SALE_DAMBO_AMT,0)      SALE_DAMBO_AMT,-->
		        <!--CASE A.YEONDAE_2 WHEN 'Y' THEN (SELECT TO_NUMBER(BIGO) FROM SALE.SALE0001 WHERE CODE_GB = '4001'  AND CODE1 = '04') ELSE 0 END      DAMBO,-->
		        <!--H.BILL_CNT                   BILL_CNT,-->
		        <!--H.BILL_KIND                  BILL_KIND,-->
		        <!--SALE.F_GET_NAME('SALE0007',A.SAWON_ID,'')  SAWON_NM,-->
		        <!--SALE.F_RATE_DAY_BEFOREMONTH(to_char(add_months(sysdate,-1),'yyyymm'),A.CUST_ID) AS rate_day,-->
		        <!--A.CREDIT_LIMIT_AMT LOAN_LIMIT-->
		   <!--FROM SALE.SALE0003 A,-->
		        <!--( SELECT CUST_ID ,-->
		                 <!--SUM(BEFORE_AMT)  BEFORE_AMT,-->
		                 <!--SUM(MISU_AMT)    MISU_AMT,-->
		                 <!--SUM(SU_AMT)      SU_AMT-->
		            <!--FROM SALE.SALE0306-->
		           <!--WHERE YMD        = TO_DATE(SUBSTR(#{ymd},0,6)||'01','YYYYMMDD')-->
		             <!--AND CUST_ID    = #{custId}-->
		           <!--GROUP BY CUST_ID-->
		        <!--) F,-->
		        <!--( SELECT X.CUST_ID, NVL(SUM(X.SALE_DAMBO_AMT),0) SALE_DAMBO_AMT, COUNT(BILL_GB) BILL_CNT,-->
		                 <!--(SELECT (SELECT CODE1_NM FROM SALE.SALE0001 WHERE CODE_GB = '0022' AND CODE1 = X.BILL_GB ) BILL_GB-->
		                    <!--FROM SALE.SALE0404 X-->
		                   <!--WHERE X.CUST_ID    = #{custId}-->
		                     <!--AND NVL(X.CHULGO_YMD,TO_DATE('2999/01/01','YYYY/MM/DD')) = TO_DATE('2999/01/01','YYYY/MM/DD')-->
		                     <!--AND X.DAM_BOYU_STAT = 'Y'-->
		                     <!--AND ROWNUM = 1)  BILL_KIND-->
		            <!--FROM SALE.SALE0404 X-->
		           <!--WHERE X.CUST_ID    = #{custId}-->
		             <!--AND NVL(X.CHULGO_YMD,TO_DATE('2999/01/01','YYYY/MM/DD')) = TO_DATE('2999/01/01','YYYY/MM/DD')-->
		             <!--AND X.DAM_BOYU_STAT = 'Y'-->
		           <!--GROUP BY X.CUST_ID-->
		        <!--) H,-->
		        <!--( SELECT X.CUST_ID , NVL(SUM(CASH_AMT),0) + NVL(SUM(BILL_AMT),0) CASH_AMT-->
		            <!--FROM SALE.SALE0401 X-->
		           <!--WHERE X.CUST_ID = #{custId}-->
		             <!--AND X.YMD BETWEEN TO_DATE(SUBSTR(#{ymd},0,6)||'01','YYYYMMDD')-->
		                           <!--AND LAST_DAY(TO_DATE(#{ymd},'YYYYMMDD'))-->
		           <!--GROUP BY X.CUST_ID-->
		        <!--) I,-->
		        <!--(-->
		             <!--SELECT X.CUST_ID        CUST_ID ,-->
		                   <!--NVL(SUM(DECODE(Y.BILL_GB,'010',Y.AMT)),0)  BILL_010_AMT,-->
		                 <!--NVL(SUM(DECODE(Y.BILL_GB,'020',Y.AMT)),0)  BILL_020_AMT,-->
		                 <!--NVL(SUM(DECODE(Y.BILL_GB,'025',Y.AMT)),0)  BILL_025_AMT,-->
		                 <!--NVL(SUM(DECODE(Y.BILL_GB,'030',Y.AMT)),0)  BILL_030_AMT,-->
		                 <!--NVL(SUM(DECODE(Y.BILL_GB,'035',Y.AMT)),0)  BILL_035_AMT,-->
		                 <!--NVL(SUM(DECODE(Y.BILL_GB,'040',Y.AMT)),0)  BILL_040_AMT,-->
		                 <!--NVL(SUM(DECODE(Y.BILL_GB,'100',Y.AMT)),0)  BILL_100_AMT,-->
		                 <!--NVL(SUM(DECODE(Y.BILL_GB,'900',Y.AMT)),0)  BILL_900_AMT-->
		            <!--FROM SALE.SALE0401 X ,-->
		                    <!--SALE.SALE0402 Y-->
		           <!--WHERE X.YMD       = Y.YMD-->
		             <!--AND X.JUNPYO_NO = Y.JUNPYO_NO-->
		             <!--AND Y.END_YMD  >= SYSDATE-->
		           <!--GROUP BY X.CUST_ID-->
		          <!--) L-->
		  <!--WHERE A.CUST_ID    = #{custId}-->
		    <!--AND A.CUST_ID    = F.CUST_ID(+)-->
		    <!--AND A.CUST_ID    = H.CUST_ID(+)-->
		    <!--AND A.CUST_ID    = I.CUST_ID(+)-->
		    <!--AND A.CUST_ID    = L.CUST_ID(+)-->
		<!--)-->
	<!--</select>-->
	<select id="getCustLoanPresentCondition" parameterType="hashmap" resultType="com.hanaph.saleon.main.vo.CustDashboardVO">
		-- 거래처 메인화면 여신 현황 / getCustLoanPresentCondition / @main.xml /
		<![CDATA[
		SELECT
		  A.*,
		  (SELECT sum(BALANCE) FROM oragmp.SLRESULTM WHERE YEARMONTH = TO_CHAR(ADD_MONTHS(SYSDATE, -1), 'YYYY-MM') AND CUSTCODE = #{custId}) AS BEFORE_AMT,                        -- 전월 잔고 (180103 완료)
		  (SELECT sum(BALANCE) FROM ORAGMP.SLRESULTM WHERE YEARMONTH = (SELECT TO_CHAR(SYSDATE, 'YYYY-MM') FROM dual) AND CUSTCODE = #{custId}) AS CUR_AMT, 		               -- 현잔고 (180103 완료)
		  (SELECT SUM(scrtamt) FROM oragmp.CMCUSTSCRTD WHERE CUSTCODE = #{custId} AND NVL(returnyn, ' ') <> 'Y' AND expdate >= TO_CHAR(SYSDATE, 'YYYY-MM-DD') ) AS SALE_DAMBO_AMT, -- 담보가치액 합계 (180103 완료)
		  (SELECT NVL(ORAGMP.fnSLcustTURN_HN(TO_CHAR(ADD_MONTHS(SYSDATE, -1), 'YYYY-MM'), '1110003'), '999')
		     FROM (SELECT turndccnt FROM TABLE(oragmp.fnSLcustTURN('1000', '1110003', '%',  '%', SYSDATE, 0)))) AS RATE_DAY,                                                          -- 당월 회전일 (180103 일단 보류)
		  (SELECT NVL(creditlmt, 0) creditlmt FROM oragmp.CMCUSTM A WHERE a.custcode = #{custId}) AS LOAN_LIMIT,                                                                    -- 여신 한도액 (180103 완료)
		  (SELECT ROUND
                  (CASE WHEN B+C = 0 THEN 0
                        ELSE A / (B+C)
                        END * 100, 2 )AS RES
             FROM(
                  SELECT (SELECT NVL(SUM(SCRTAMT), 0)
	                        FROM ORAGMP.CMCUSTSCRTD
	                       WHERE CUSTCODE = #{custId}
	                         AND NVL(RETURNYN, ' ') <> 'Y'
	                         AND NVL(EXPDATE, TO_CHAR(SYSDATE, 'YYYY-MM-DD')) >= TO_CHAR(SYSDATE, 'YYYY-MM-DD') ) A
	                   , (SELECT (NVL(SUM(NVL(BALANCE, 0)), 0))
		                    FROM ORAGMP.SLRESULTM WHERE CUSTCODE = #{custId} AND YEARMONTH = TO_CHAR(SYSDATE, 'YYYY-MM')) B
	                   , (SELECT (NVL(SUM(NVL(PENDBILLCOLJ, 0)), 1))
		                    FROM ORAGMP.SLRESULTM WHERE CUSTCODE = #{custId} AND YEARMONTH = TO_CHAR(SYSDATE, 'YYYY-MM')) C
                    FROM DUAL
                )
          ) AS DAMBO_PER -- 담보확보율
		FROM (
       SELECT
         NVL(SUM(totamt), 0) AS SALE_AMT,                                                                                                                                  -- 당월매출액 금월판매
         NVL(SUM(totcol), 0) AS CASH_AMT,                                                                                                                                  -- 당월수금액
         '' AS BILL_AMT,                                                                                                                                                   --
         NVL(SUM(PENDBILLCOLJ), 0)  AS JASU_AMT,                                                                                                                           -- 자수 (180103 완료)
         NVL(SUM(PENDBILLCOLT), 0)  AS TASU_AMT,                                                                                                                           -- 타수 (180103 완료)
         NVL(SUM(balance), 0) + NVL(SUM(PENDBILLCOLJ), 0) AS TOTAL_AMT,                                                                                                    -- 총 여신(총잔고)
         '' AS DAMBO_KIND,                                                                                                                                                 -- 담보 종류
         '' AS DAMBO,                                                                                                                                                      -- 담보
		 -- rtrim(TO_CHAR(ROUND((CASE WHEN NVL(SUM(balance) , 0) = 0 THEN 0 ELSE NVL(SUM(balance) , 0) / CASE WHEN NVL(SUM(pendbillcol), 1) = 0 THEN 1 ELSE NVL(SUM(pendbillcol), 1) END * 100 END), 2), 'FM9990D99'), '.')  AS DAMBO_PER, -- 담보확보율
         '' AS SAWON_NM
       FROM ORAGMP.SLRESULTM WHERE custcode = #{custId} AND yearmonth = TO_CHAR(sysdate, 'YYYY-MM')
     ) A
		]]>
	</select>

	<!-- 
	<select id="getCustOrderPresentCondition" parameterType="hashmap" resultType="com.hanaph.saleon.main.vo.CustDashboardVO">
		SELECT   MAX(YMD) YMD, TO_CHAR(YMD,'mm') MONTH                                                       
	         ,SUM(AMT_SUM + VAT_SUM) AS MONTH_AMT
	     FROM SALE.SALE0207 A                                                            
	    WHERE YMD BETWEEN #{ymdFr} AND #{ymdTo}                               
	      AND CUST_ID = #{custId}                                            
	    GROUP BY TO_CHAR(YMD,'mm')
	    ORDER BY 1
	</select>
	 -->
	<!-- 거래처 주문현황 조회 ajax // 메인화면에서 거래처 '연간 주문 현황' // 부드러운 곡선 그래프 // MainController -->
	<select id="getCustOrderPresentCondition" parameterType="hashmap" resultType="com.hanaph.saleon.main.vo.CustDashboardVO">
		  -- 거래처 주문현황 조회 ajax // 메인화면에서 거래처 '연간 주문 현황' // 부드러운 곡선 그래프 // MainController
		  SELECT   MAX(A.ORDERDATE)         AS YMD ,
		           SUBSTR(A.ORDERDATE,6,2)  AS MONTH ,
		           SUM(B.SALAMT + B.SALVAT) AS MONTH_AMT
		  FROM     ORAGMP.SLORDM A,
		           ORAGMP.SLORDD B
		  WHERE    A.ORDERNO = B.ORDERNO
		  AND      TO_DATE(A.ORDERDATE,'YYYY-MM-DD') between TO_DATE(#{ymdFr},'YYYYMMDD') and TO_DATE(#{ymdTo},'YYYYMMDD')
		  AND      A.CUSTCODE = #{custId}
		  GROUP BY SUBSTR(A.ORDERDATE,6,2)
		  ORDER BY 1		
	</select>

	<!-- 
	<select id="getCustOrderTotal" parameterType="hashmap" resultType="com.hanaph.saleon.main.vo.CustDashboardVO">
		SELECT  MAX(YMD) YMD, '99' MONTH, SUM(AMT_SUM + VAT_SUM) AS TOTAL_AMT
     	FROM SALE.SALE0207 A                                                            
    	WHERE YMD BETWEEN #{ymdFr} AND #{ymdTo}                                     
      	AND CUST_ID = #{custId} 
	</select>
	 -->
	<!-- 거래처 주문 현황 합계 조회 // 메인화면에서 거래처 '연간 주문 현황' 밑 토탈 금액 // custId : 거래처ID, ymdFr : 조회기간 시작 년월일, ymdTo : 조회기간 끝 년월일 // MainBoardServiceImpl -->
	<select id="getCustOrderTotal" parameterType="hashmap" resultType="com.hanaph.saleon.main.vo.CustDashboardVO">
		-- 거래처 주문 현황 합계 조회 // 메인화면에서 거래처 '연간 주문 현황' 밑 토탈 금액 // custId : 거래처ID, ymdFr : 조회기간 시작 년월일, ymdTo : 조회기간 끝 년월일 // MainBoardServiceImpl
		SELECT MAX(A.ORDERDATE)			AS YMD,
		       '99'						AS MONTH,
		       SUM(B.SALAMT + B.SALVAT) AS TOTAL_AMT
		FROM   ORAGMP.SLORDM A,
		       ORAGMP.SLORDD B
		WHERE  A.ORDERNO = B.ORDERNO
		AND    TO_DATE(A.ORDERDATE,'YYYY-MM-DD') between TO_DATE(#{ymdFr},'YYYYMMDD') AND TO_DATE(#{ymdTo},'YYYYMMDD')
		AND    A.CUSTCODE = #{custId}
	</select>

	<!--
	<select id="getEmpInfo" parameterType="hashmap" resultType="com.hanaph.saleon.main.vo.EmpDashboardVO">
		&#45;&#45; 사원 정보 / getEmpInfo / @main.xml / 스키마가 SALE로 되어 있어서 제대로 값을 못 가져왔음
		SELECT A.SAWON_NM, A.SIL_SAWON_ID EMP_ID, A.PART_GB PART_GB, CODE1_NM PART_NM, A.DEPT_CD, C.DEPT_NM
		FROM SALE.SALE0007 A, SALE.SALE0001 B, SALE.SALE0008 C
		WHERE A.SAWON_ID = #{empId} AND A.GUBUN = 'Y'
		AND B.CODE_GB = '0013' AND B.CODE1 = A.PART_GB
		AND C.DEPT_CD = A.DEPT_CD
	</select>
	-->
	<select id="getEmpInfo" parameterType="hashmap" resultType="com.hanaph.saleon.main.vo.EmpDashboardVO">
		-- 사원 정보 / getEmpInfo / @main.xml / 스키마가 SALE로 되어 있어서 제대로 값을 못 가져왔음
		SELECT
		  A.EMPNAME                                  AS SAWON_NM,
		  A.EMPCODE                                  AS EMP_ID,
		  A.PARTDIV                                  AS PART_GB,
		  oragmp.fncommonnm('comm', 'SL90', partdiv) AS PART_NAME,
		  A.DEPTCODE                                 AS DEPT_CD,
		  oragmp.fncommonnm('dept', deptcode, '')    AS DEPT_NAME
		FROM ORAGMP.CMEMPM A, ORAGMP.ELECTRONICSIGN B
		WHERE A.EMPCODE = B.ID
        AND B.ID = #{empId}
	</select>


	<!-- 영업사원용 메인 화면(대쉬보드) 호출 // 영업사원 정보 // MainController -->
	<!-- 
	<select id="getEmpInfo" parameterType="hashmap" resultType="com.hanaph.saleon.main.vo.EmpDashboardVO">
		 SELECT A.EMPNAME AS SAWON_NM,
		        B.ID      AS EMP_ID,
		        A.PARTDIV AS PART_GB,
		        oragmp.fncommonnm('comm','SL90',partdiv) AS PART_NAME,
		        A.DEPTCODE AS DEPT_CD,
			      C.DEPTNAME AS DEPT_NAME
		 FROM   ORAGMP.CMEMPM A,
		        ORAGMP.ELECTRONICSIGN B,
		        ORAGMP.CMDEPTM C
		 WHERE  A.EMPCODE = B.EMPCODE
		 AND	A.DEPTCODE = C.DEPTCODE
		 AND    B.ID      = #{empId}
	</select>
	 -->

	<!--<select id="getEmpResultYear" parameterType="hashmap" resultType="com.hanaph.saleon.main.vo.EmpDashboardVO">-->
		<!--SELECT-->
				<!--SUBSTR(DATE_TIME,5,2) AS MONTH, 									&#45;&#45; YEARMONTH-->
	          <!--SUM(SALE_AMT) AS SALE_GOAL_AMT,  												&#45;&#45; SAL_TAG_AMT-->
	          <!--ROUND((SUM(SALE_AMT_SILJUK) + SUM(SALE_AMT_HALINS02) )  * ( NVL(#{AS_SILJUKYUL_IN},100) * 0.01 ) ,0)  AS SALE_RESULT_AMT,  &#45;&#45; SAL_ACT_AMT-->
	          <!--AVG(SALE_PERCENT) AS SALE_PERCENT,-->
	          <!--SUM(IN_AMT) AS IN_SALE_GOAL_AMT,  &#45;&#45; COL_TAG_AMT-->
	          <!--ROUND(SUM(IN_AMT_SILJUK) * ( NVL(#{AS_SILJUKYUL_IN_SU},100) * 0.01), 0) AS IN_SALE_RESULT_AMT, &#45;&#45; COL_ACT_AMT-->
	          <!--SUM(IN_PERCENT) AS IN_PERCENT-->
	     <!--FROM SALE.SALEPART_BATCH2-->
	    <!--WHERE SUBSTR(DATE_TIME,1,4) = #{year}-->
	      <!--AND EMP_NO = #{empId}-->
	    <!--GROUP BY SUBSTR(DATE_TIME,5,2)-->
	    <!--ORDER BY MONTH-->
	<!--</select>-->
	<select id="getEmpResultYear" parameterType="hashmap" resultType="com.hanaph.saleon.main.vo.EmpDashboardVO">
		-- 영업사업 년간 실적 조회 / getEmpResultYear / @main.xml / 영업사원 로그인 시 메인 그리드
		SELECT EEEEE.emp_id                                                           AS emp_id    ,   --사원번호
		   SUBSTR(EEEEE.month, 6,7)                                               AS month  ,   --년월
		   SUM(EEEEE.sale_goal_amt)                                               AS sale_goal_amt,   --판매목표
		   SUM(EEEEE.sale_result_amt)                                             AS sale_result_amt,   --판매실적
		   SUM(EEEEE.in_sale_goal_amt)                                            AS in_sale_goal_amt,   --수금목표
		   SUM(EEEEE.in_sale_result_amt)                                          AS in_sale_result_amt    --수금실적
	FROM
	  ( SELECT A.EMPCODE                                                       AS emp_id    ,   --사원번호
			   A.YEARMONTH                                                     AS month  ,   --년월
			   (CASE WHEN A.SALDIV = 'A' THEN A.TARGETAMT ELSE 0 END)          AS sale_goal_amt,   --판매목표
			   0                                                               AS sale_result_amt,   --판매실적
			   (CASE WHEN A.SALDIV = 'C' THEN A.TARGETAMT ELSE 0 END)          AS in_sale_goal_amt,   --수금목표
			   0                                                               AS in_sale_result_amt    --수금실적
		FROM ORAGMP.SLTARGETSALEM A
		WHERE SUBSTR(A.YEARMONTH,1,4) = #{year}
			  AND A.EMPCODE = #{empId}
		UNION ALL
		SELECT NVL(CCC.EMPCODE,BB.EMPCODE)                                        AS emp_id    ,   --사원번호
			   SUBSTR(BB.ORDERDATE,1,7)                                         AS month  ,   --년월
			   0                                                               AS sale_goal_amt,   --판매목표
			   CASE WHEN BB.SALDIV LIKE 'A%' THEN CCC.TOTAMT ELSE -CCC.TOTAMT END   AS sale_result_amt,   --판매실적
			   0                                                               AS in_sale_goal_amt,   --수금목표
			   0                                                               AS in_sale_result_amt    --수금실적
		FROM ORAGMP.SLORDM  BB,
		  ORAGMP.SLORDD  CCC
		WHERE BB.STATEDIV = '09'
			  AND BB.ORDERNO  = CCC.ORDERNO
			  AND SUBSTR(BB.ORDERDATE,1,4) = #{year}
			  AND BB.EMPCODE  = #{empId}
		UNION ALL
		SELECT DDDD.EMPCODE                                                       AS emp_id    ,   --사원코드
			   SUBSTR(DDDD.COLDATE,1,7)                                           AS month  ,   --년월
			   0                                                               AS sale_goal_amt,   --판매목표
			   CASE WHEN DDDD.COLDIV     IN ('52','59') THEN -DDDD.COLAMT ELSE 0 END AS sale_result_amt,   --판매실적
			   0                                                               AS in_sale_goal_amt,   --수금목표
			   CASE WHEN DDDD.COLDIV NOT IN ('52','59') THEN DDDD.COLAMT ELSE 0 END  AS in_sale_result_amt    --수금실적
		FROM ORAGMP.SLCOLM  DDDD
		WHERE DDDD.STATEDIV = '09'
			  AND SUBSTR(DDDD.COLDATE,1,4) = #{year}
			  AND DDDD.EMPCODE  = #{empId}
	  ) EEEEE
	GROUP BY EEEEE.emp_id, EEEEE.month
	ORDER BY EEEEE.month
	</select>

	<select id="getPartResultYear" parameterType="hashmap" resultType="com.hanaph.saleon.main.vo.EmpDashboardVO">
		SELECT 
			  SUBSTR(DATE_TIME,5,2)  AS MONTH,
	          SUM(SALE_AMT) AS SALE_GOAL_AMT,  
	          ROUND((SUM(SALE_AMT_SILJUK) + SUM(SALE_AMT_HALINS02) )  * ( NVL(#{AS_SILJUKYUL_IN},100) * 0.01 ) ,0)  AS SALE_RESULT_AMT,  
	          AVG(SALE_PERCENT) AS SALE_PERCENT,
	          SUM(IN_AMT) AS IN_SALE_GOAL_AMT,  
	          ROUND(SUM(IN_AMT_SILJUK) * ( NVL(#{AS_SILJUKYUL_IN_SU},100) * 0.01), 0) AS IN_SALE_RESULT_AMT,
	          SUM(IN_PERCENT) AS IN_PERCENT   
	     FROM SALE.SALEPART_BATCH2
	    WHERE SUBSTR(DATE_TIME,1,4) = #{year} 
	      AND PART_CD = #{partCd}
	    GROUP BY SUBSTR(DATE_TIME,5,2) 
	    ORDER BY MONTH 
	</select>

	<!--
	<select id="getTeamResultYear" parameterType="hashmap" resultType="com.hanaph.saleon.main.vo.EmpDashboardVO">
		&#45;&#45; 팀 년간 실적 조회 / getTeamResultYear / @main.xml / 영업사원 로그인 시 팀 실적 차트
		SELECT
			  SUBSTR(DATE_TIME,5,2)  AS MONTH,
	          SUM(SALE_AMT) AS SALE_GOAL_AMT,  
	          ROUND((SUM(SALE_AMT_SILJUK) + SUM(SALE_AMT_HALINS02) )  * ( NVL(#{AS_SILJUKYUL_IN},100) * 0.01 ) ,0)  AS SALE_RESULT_AMT,  
	          AVG(SALE_PERCENT) AS SALE_PERCENT,
	          SUM(IN_AMT) AS IN_SALE_GOAL_AMT,  
	          ROUND(SUM(IN_AMT_SILJUK) * ( NVL(#{AS_SILJUKYUL_IN_SU},100) * 0.01), 0) AS IN_SALE_RESULT_AMT,
	          SUM(IN_PERCENT) AS IN_PERCENT   
	     FROM SALE.SALEPART_BATCH2
	    WHERE SUBSTR(DATE_TIME,1,4) = #{year}  
	      AND PART_CD = #{partCd}
	      AND TEAM_CD = #{teamCd}
	    GROUP BY SUBSTR(DATE_TIME,5,2) 
	    ORDER BY MONTH 
	</select>
	-->
	<select id="getTeamResultYear" parameterType="hashmap" resultType="com.hanaph.saleon.main.vo.EmpDashboardVO">
		-- 팀 년간 실적 조회 / getTeamResultYear / @main.xml / 영업사원 로그인 시 팀 실적 차트
				SELECT A.part_gb                                                              AS part_gb   ,   --부서코드
			   SUBSTR(A.month, 6,7)                                                   AS month  ,   --년월
			   SUM(A.sale_goal_amt)                                                   AS sale_goal_amt,   --판매목표
			   SUM(A.sale_result_amt)                                                 AS sale_result_amt,   --판매실적
			   SUM(A.in_sale_goal_amt)                                                AS in_sale_goal_amt,   --수금목표
			   SUM(A.in_sale_result_amt)                                              AS in_sale_result_amt    --수금실적
		FROM
		  ( SELECT A.DEPTCODE                                                      AS part_gb   ,   --부서코드
				   A.YEARMONTH                                                     AS month  ,   --년월
				   (CASE WHEN A.SALDIV = 'A' THEN A.TARGETAMT ELSE 0 END)          AS sale_goal_amt,   --판매목표
				   0                                                               AS sale_result_amt,   --판매실적
				   (CASE WHEN A.SALDIV = 'C' THEN A.TARGETAMT ELSE 0 END)          AS in_sale_goal_amt,   --수금목표
				   0                                                               AS in_sale_result_amt    --수금실적
			FROM ORAGMP.SLTARGETSALEM A
			WHERE SUBSTR(A.YEARMONTH,1,4) = #{year}
				  AND A.DEPTCODE = #{teamCd}
			UNION ALL
			SELECT A.DEPTCODE                                                      AS part_gb   ,   --부서코드
				   SUBSTR(A.ORDERDATE,1,7)                                         AS month  ,   --년월
				   0                                                               AS sale_goal_amt,   --판매목표
				   CASE WHEN A.SALDIV LIKE 'A%' THEN B.TOTAMT ELSE -B.TOTAMT END   AS sale_result_amt,   --판매실적
				   0                                                               AS in_sale_goal_amt,   --수금목표
				   0                                                               AS in_sale_result_amt    --수금실적
			FROM ORAGMP.SLORDM  A,
			  ORAGMP.SLORDD  B
			WHERE A.STATEDIV = '09'
				  AND A.ORDERNO  = B.ORDERNO
				  AND SUBSTR(A.ORDERDATE,1,4) = #{year}
				  AND A.DEPTCODE = #{teamCd}
			UNION ALL
			SELECT A.DEPTCODE                                                      AS part_gb   ,   --부서코드
				   SUBSTR(A.COLDATE,1,7)                                           AS month  ,   --년월
				   0                                                               AS sale_goal_amt,   --판매목표
				   CASE WHEN A.COLDIV     IN ('52','59') THEN -A.COLAMT ELSE 0 END AS sale_result_amt,   --판매실적
				   0                                                               AS in_sale_goal_amt,   --수금목표
				   CASE WHEN A.COLDIV NOT IN ('52','59') THEN A.COLAMT ELSE 0 END  AS in_sale_result_amt    --수금실적
			FROM ORAGMP.SLCOLM  A
			WHERE A.STATEDIV = '09'
				  AND SUBSTR(A.COLDATE,1,4) = #{year}
				  AND A.DEPTCODE = #{teamCd}
		  ) A
		GROUP BY A.part_gb, A.month
		ORDER BY A.month
	</select>

	<select id="getCompanyResultYear" parameterType="hashmap" resultType="com.hanaph.saleon.main.vo.EmpDashboardVO">
		SELECT 	
				SUBSTR(DATE_TIME,5,2) AS MONTH,
	          SUM(SALE_AMT) AS SALE_GOAL_AMT,  
	          ROUND((SUM(SALE_AMT_SILJUK) + SUM(SALE_AMT_HALINS02) )  * ( NVL(#{AS_SILJUKYUL_IN},100) * 0.01 ), 0)  AS SALE_RESULT_AMT,  
	          AVG(SALE_PERCENT) AS SALE_PERCENT,
	          SUM(IN_AMT) AS IN_SALE_GOAL_AMT,  
	          ROUND(SUM(IN_AMT_SILJUK) * ( NVL(#{AS_SILJUKYUL_IN_SU},100) * 0.01),0) AS IN_SALE_RESULT_AMT,
	          SUM(IN_PERCENT) AS IN_PERCENT   
	     FROM SALE.SALEPART_BATCH2
	    WHERE SUBSTR(DATE_TIME,1,4) = #{year} 
	      AND PART_CD not in ('09','11','12','13')
	    GROUP BY SUBSTR(DATE_TIME,5,2)
	    ORDER BY MONTH
	</select>
	
	<select id="getCompanyResultMonthByPart" parameterType="hashmap" resultType="com.hanaph.saleon.main.vo.EmpDashboardVO">
		SELECT PART_CD PART_GB,
	          (SELECT NVL(CODE1_NM, '미지정' ) FROM SALE.SALE0001 WHERE code_gb = '0013' AND PART_CD = CODE1 ) AS PART_NM,
	          SUM(SALE_AMT) AS SALE_GOAL_AMT,  
	          ROUND((SUM(SALE_AMT_SILJUK) + SUM(SALE_AMT_HALINS02) )  * ( NVL(#{AS_SILJUKYUL_IN},100) * 0.01 ) ,0) AS SALE_RESULT_AMT,  
	          AVG(SALE_PERCENT) AS SALE_PERCENT,
	          SUM(IN_AMT) AS IN_SALE_GOAL_AMT,  
	          ROUND(SUM(IN_AMT_SILJUK) * ( NVL(#{AS_SILJUKYUL_IN_SU},100) * 0.01) ,0)AS IN_SALE_RESULT_AMT,
	          SUM(IN_PERCENT) AS IN_PERCENT   
	     FROM SALE.SALEPART_BATCH2
	    WHERE SUBSTR(DATE_TIME,1,6) = #{year}  
	      AND PART_CD not in ('09','11','12','13')
	    GROUP BY PART_CD
	    ORDER BY PART_CD 
	</select>
</mapper>
	
