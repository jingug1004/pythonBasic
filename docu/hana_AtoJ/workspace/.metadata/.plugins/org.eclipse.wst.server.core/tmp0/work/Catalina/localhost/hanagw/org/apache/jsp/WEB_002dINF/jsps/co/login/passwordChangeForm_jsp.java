/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.55
 * Generated at: 2015-06-16 01:16:20 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsps.co.login;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.hanaph.gw.pe.member.vo.MemberVO;
import javax.servlet.http.HttpSession;

public final class passwordChangeForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/include/head.jsp", Long.valueOf(1424677116691L));
    _jspx_dependants.put("/common/path.jsp", Long.valueOf(1429838623000L));
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
com.hanaph.gw.co.common.utils.Environment env = new com.hanaph.gw.co.common.utils.Environment();
	
	String HTTPS_GROUP_WEB_ROOT = env.getValue("https.web_root_dir.url");
	String HTTPS_GROUP_ROOT = env.getValue("https.root_dir.url");
	String GROUP_WEB_ROOT = env.getValue("web_root_dir.url");
	String GROUP_ROOT = env.getValue("root_dir.url");
	String JDBC_URL = env.getValue("jdbc.url");
	
	
      out.write('\r');
      out.write('\n');

	//비밀번호 변경 대상체크
	boolean pass_change_chk = (Boolean)request.getAttribute("pass_change_chk");

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write("  \r\n");
      out.write("\r\n");
      out.write("\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\r\n");
      out.write("\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\r\n");
      out.write("\t\r\n");
      out.write("\t<title>하나제약 그룹웨어</title>\r\n");
      out.write("\r\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(GROUP_WEB_ROOT);
      out.write("/css/main.css\" />\r\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(GROUP_WEB_ROOT);
      out.write("/css/fonts.css\" />\r\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(GROUP_WEB_ROOT);
      out.write("/css/dtree.css\" />\r\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(GROUP_WEB_ROOT);
      out.write("/css/smoothness/jquery-ui-1.10.4.custom.css\" />\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"");
      out.print(GROUP_WEB_ROOT);
      out.write("/js/jquery-1.11.1.min.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"");
      out.print(GROUP_WEB_ROOT);
      out.write("/js/jquery-ui-1.10.4.custom.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"");
      out.print(GROUP_WEB_ROOT);
      out.write("/js/jquery.bpopup.min.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"");
      out.print(GROUP_WEB_ROOT);
      out.write("/js/default.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"");
      out.print(GROUP_WEB_ROOT);
      out.write("/js/common.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"");
      out.print(GROUP_WEB_ROOT);
      out.write("/js/dtree.js\" ></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"");
      out.print(GROUP_WEB_ROOT);
      out.write("/js/formCheck.js\" ></script>\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(GROUP_WEB_ROOT);
      out.write("/js/formCheck.js\" ></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\t\r\n");
      out.write("\tfunction passwordChange(){\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/*\r\n");
      out.write("\t\t\t2015-06-04 비밀번호 유효성 체크는 서버단에서 프로시저 호출하여 체크하는 것으로 변경함\r\n");
      out.write("\t\t\t클라이언트단에서는 value 유무 판단과 비교만 하도록 수정\r\n");
      out.write("\t\t*/\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(formCheck.isNull(document.getElementById(\"old_password\"), \"현재 비밀번호를 입력 하세요.\")){\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(formCheck.isNull(document.getElementById(\"new_password\"), \"새 비밀번호를 입력 하세요.\")){\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/* if(!/^[a-zA-Z0-9]{5,12}$/.test(document.getElementById(\"new_password\").value)){\r\n");
      out.write("\t\t  \talert('비밀번호는 숫자와 영문자 조합으로 5~12자리를 사용해야 합니다.');\r\n");
      out.write("\t\t  \tdocument.getElementById(\"new_password\").value = \"\";\r\n");
      out.write("\t\t\tdocument.getElementById(\"new_rePassword\").value = \"\";\r\n");
      out.write("\t\t  \treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar chk_num = document.getElementById(\"new_password\").value.search(/[0-9]/g); \r\n");
      out.write("\t    var chk_eng = document.getElementById(\"new_password\").value.search(/[a-z]/ig);\r\n");
      out.write("\t    if(chk_num < 0 || chk_eng < 0)\r\n");
      out.write("\t    { \r\n");
      out.write("\t        alert('비밀번호는 숫자와 영문자를 혼용하여야 합니다.'); \r\n");
      out.write("\t        return false;\r\n");
      out.write("\t    } */\r\n");
      out.write("\t\t    \r\n");
      out.write("\t\tif(document.getElementById(\"old_password\").value == document.getElementById(\"new_password\").value){\r\n");
      out.write("\t\t\talert(\"현재 비밀번호와 새 비밀번호가 동일 합니다.\");\r\n");
      out.write("\t\t\tdocument.getElementById(\"new_password\").value = \"\";\r\n");
      out.write("\t\t\tdocument.getElementById(\"new_rePassword\").value = \"\";\r\n");
      out.write("\t\t\tnewPassword.focus();\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(formCheck.isNull(document.getElementById(\"new_rePassword\"), \"새 비밀번호 확인을 입력 하세요.\")){\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(document.getElementById(\"new_password\").value != document.getElementById(\"new_rePassword\").value){\r\n");
      out.write("\t\t\talert(\"새 비밀번호가 일치 하지 않습니다.\");\r\n");
      out.write("\t\t\tdocument.getElementById(\"new_password\").value = \"\";\r\n");
      out.write("\t\t\tdocument.getElementById(\"new_rePassword\").value = \"\";\r\n");
      out.write("\t\t\tnewPassword.focus();\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tdocument.getElementById(\"passFrm\").action=\"");
      out.print(GROUP_ROOT);
      out.write("/co/login/updatePassword.do\";\r\n");
      out.write("\t\tdocument.getElementById(\"passFrm\").submit();\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t//비번 강제변경시\r\n");
      out.write("\tfunction logOut(){\r\n");
      out.write("\t\tif(confirm(\"비빌번호를 변경하지 않으면 사이트 이용이 제한됩니다.\")){\r\n");
      out.write("\t\t\twindow.parent.location.href = \"");
      out.print(GROUP_ROOT);
      out.write("/co/login/logOut.do\";  // 이동할주소\r\n");
      out.write("\t\t\twindow.parent.layerClose();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"wrap_reset_pass\">\r\n");
      out.write("\t<div class=\"pass_menu\">\r\n");
      out.write("\t\t<h3>비밀번호변경</h3>\r\n");
      out.write("\t\t<form name=\"passFrm\" id=\"passFrm\" method=\"post\">\r\n");
      out.write("\t\t<ul class=\"input_txt\">\r\n");
      out.write("\t\t\t<li>\r\n");
      out.write("\t\t\t\t<span class=\"txt_name\">현재비밀번호</span>\r\n");
      out.write("\t\t\t\t<input type=\"password\" name=\"old_password\" id=\"old_password\" onKeyPress=\"if(event.keyCode=='13'){passwordChange(); return false;}\"/>\r\n");
      out.write("\t\t\t</li>\r\n");
      out.write("\t\t\t<li>\r\n");
      out.write("\t\t\t\t<span class=\"txt_name\">새비밀번호</span>\r\n");
      out.write("\t\t\t\t<input type=\"password\" name=\"new_password\" id=\"new_password\" onKeyPress=\"if(event.keyCode=='13'){passwordChange(); return false;}\"/>\r\n");
      out.write("\t\t\t</li>\r\n");
      out.write("\t\t\t<li>\r\n");
      out.write("\t\t\t\t<span class=\"txt_name\">새비밀번호확인</span>\r\n");
      out.write("\t\t\t\t<input type=\"password\" name=\"new_rePassword\" id=\"new_rePassword\" onKeyPress=\"if(event.keyCode=='13'){passwordChange(); return false;}\"/> \r\n");
      out.write("\t\t\t</li>\r\n");
      out.write("\t\t</ul>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t\t<div class=\"btn_box mt20\">\r\n");
      out.write("\t\t\t<button type=\"button\" class=\"type_02\" onclick=\"javascript:passwordChange();\">확인</button>\r\n");
      out.write("\t\t");
if(pass_change_chk){ 
      out.write("\t\r\n");
      out.write("\t\t\t<button type=\"button\" class=\"type_02\" onclick=\"javascript:logOut();\">취소</button>\r\n");
      out.write("\t\t");
} else { 
      out.write("\r\n");
      out.write("\t\t\t<button type=\"button\" class=\"type_02\" onclick=\"javascript:self.close();\">취소</button>\t\r\n");
      out.write("\t\t");
} 
      out.write("\t\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t");
if(pass_change_chk){ 
      out.write("\t\r\n");
      out.write("\t\t<button type=\"button\" class=\"close\" onclick=\"javascript:logOut();\"><span class=\"blind\">닫기</span></button>\r\n");
      out.write("\t\t");
} else { 
      out.write("\r\n");
      out.write("\t\t<button type=\"button\" class=\"close\" onclick=\"javascript:self.close();\"><span class=\"blind\">닫기</span></button>\r\n");
      out.write("\t\t");
} 
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
