/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.55
 * Generated at: 2015-06-15 05:57:48 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsps.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.hanaph.saleon.member.vo.LoginUserVO;
import com.hanaph.saleon.common.utils.StringUtil;
import com.hanaph.saleon.common.utils.WebUtil;

public final class pwForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/include/head.jsp", Long.valueOf(1421734197738L));
    _jspx_dependants.put("/common/path.jsp", Long.valueOf(1430124365934L));
    _jspx_dependants.put("/common/sessionCheck.jsp", Long.valueOf(1430193978042L));
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	LoginUserVO loginUserVO = (LoginUserVO) session.getAttribute("onlineUser");	//세션생성 세션에서 emp_code를 가져온다.
	
	String userEmpCode  = "";		// 사원 코드
	String userEmpName  = "";		// 사원 이름
	String userEmpGb    = "";		// 사원 구분 
	String userDeptCode = "";		// 부서코드
	String userDeptName = "";		// 부서명
	String userGradeName = "";		// 사원 Grade Name
	String userDeptCd = "";			//hanahr 부서정보
	String userAssgnCd = "";			//직책 코드
	String userAssgnName = "";			//직책 코드명
	/*
	 * 로그인 정보가 있는경우
	 */
	if(loginUserVO != null){
		userEmpCode = StringUtil.nvl(loginUserVO.getEmp_code());    	// 사용자코드
		userEmpName = StringUtil.nvl(loginUserVO.getEmp_name());		// 사용자명
		userEmpGb = StringUtil.nvl(loginUserVO.getEmp_gb());			// 사용자 구분 코드
		userDeptCode = StringUtil.nvl(loginUserVO.getDept_code());  	// 부서 코드
		userDeptName = StringUtil.nvl(loginUserVO.getDept_name());		// 부서 명
		userGradeName = StringUtil.nvl(loginUserVO.getGrade_name());	// 사용자 부서명
		userDeptCd = StringUtil.nvl(loginUserVO.getDept_cd());  	    // 부서 코드
		userAssgnCd = StringUtil.nvl(loginUserVO.getAssgn_cd());  	    // 직책 코드
		userAssgnName = StringUtil.nvl(loginUserVO.getAssgn_name());  	// 직책 코드명
	}
	
	/* 현재 URI에 해당하는 프로그램 No(pgm_no) */
	String currPgmNoByUri = request.getAttribute("pgm_no") == null ? "" : (String) request.getAttribute("pgm_no");

      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');

	com.hanaph.saleon.common.utils.Environment env = new com.hanaph.saleon.common.utils.Environment();	//환경 변수
	
	String HTTPS_ONLINE_WEB_ROOT = env.getValue("https.web_root_dir.url");
	String HTTPS_ONLINE_ROOT = env.getValue("https.root_dir.url");
	String ONLINE_WEB_ROOT = env.getValue("web_root_dir.url");		//URL 프로토콜, 도메인, 포트, 서브컨텍스트명, web디렉토리
	String ONLINE_ROOT = env.getValue("root_dir.url");				//URL 프로토콜, 도메인, 포트, 서브컨텍스트명
	String JDBC_URL = env.getValue("jdbc.url");
	

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<title>하나제약 온라인 비밀번호 변경</title>\r\n");
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tvar ONLINE_ROOT = \"");
      out.print(ONLINE_ROOT );
      out.write("\";\t\t/*환경변수*/\r\n");
      out.write("</script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/jquery-1.11.1.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/jquery-ui-1.10.4.custom.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/jquery.easyui.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/common.js\" charset=\"utf-8\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/default.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/js/placeholders.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/css/easyui.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/css/main.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/css/jquery-ui.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/css/smoothness/jquery-ui.theme.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/css/fonts.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(ONLINE_WEB_ROOT);
      out.write("/css/gw_sample.css\">");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tvar passwordFlag = false;\t\t//기존 비밀번호 확인 여부 \r\n");
      out.write("\t\r\n");
      out.write("\t/* 화면의 모든 DOM객체가 준비되었을 때 */\r\n");
      out.write("\t$(document).ready(function(){\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$('#btnConfirm').on('click', function(e){passwordChange();});\t//확인 버튼에 클릭 이벤트\r\n");
      out.write("\t\t$('#btnClose').on('click', function(e){cancel();});\t\t\t\t//닫기 버튼에 클릭 이벤트\r\n");
      out.write("\t\t$('.close').on('click', function(e){cancel();});\t\t\t\t//close 라는 class를 가진 객체들에게 클릭 이벤트\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/* 기존 비밀번호 텍스트 박스에 focusout 이벤트 발생시 입력된 값이 있으면  \r\n");
      out.write("\t\t*  ajax로 기존 비밀번호를 DB에서 조회해서 입력된 값과 비교해서 맞다면 passwordFlag를 true로 변경한다. \r\n");
      out.write("\t\t*/\r\n");
      out.write("\t\t$(\"#oldPassword\").on('focusout', function(){\t\r\n");
      out.write("\t\t\tif($(\"#oldPassword\").val().length > 0){\r\n");
      out.write("\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t           type:\"POST\",\r\n");
      out.write("\t\t\t           /* data : \"oldPassword=\"+$(\"#oldPassword\").val(), */\r\n");
      out.write("\t\t\t           data : {oldPassword : $(\"#oldPassword\").val()},\r\n");
      out.write("\t\t\t           url:\"");
      out.print(ONLINE_ROOT);
      out.write("/member/passwordCheck.do\",\r\n");
      out.write("\t\t\t           dataType:\"json\",\r\n");
      out.write("\t\t\t           \r\n");
      out.write("\t\t\t           success : function(data) {\r\n");
      out.write("\t\t\t        \t   if(data.resultcode == 1){\r\n");
      out.write("\t\t\t        \t\t   $(\"#newPassword\").focus();\r\n");
      out.write("\t\t\t        \t\t   passwordFlag = true;\r\n");
      out.write("\t\t\t        \t   } else if(data.resultcode == 2){\r\n");
      out.write("\t\t\t        \t\t   alert(\"온라인 주문 회원 데이터가 존재하지 않습니다.\\n전산팀에게 문의 하세요.\");\r\n");
      out.write("\t\t\t        \t\t   $(\"#oldPassword\").focus();\r\n");
      out.write("\t\t\t        \t\t   $(\"#oldPassword\").val(\"\");\r\n");
      out.write("\t\t\t        \t\t   passwordFlag = false;\r\n");
      out.write("\t\t\t        \t   }else{\r\n");
      out.write("\t\t\t        \t\t   alert(\"현재 사용중인 비밀번호와 입력한 현재 비밀번호가 다릅니다.\");\r\n");
      out.write("\t\t\t        \t\t   $(\"#oldPassword\").focus();\r\n");
      out.write("\t\t\t        \t\t   $(\"#oldPassword\").val(\"\");\r\n");
      out.write("\t\t\t        \t\t   passwordFlag = false;\r\n");
      out.write("\t\t\t        \t   }\r\n");
      out.write("\t\t\t           },\r\n");
      out.write("\t\t\t           error : function(xhr, status, error) {\r\n");
      out.write("\t\t\t                 alert(\"장애가 발생하였습니다.\\n잠시 후 다시 시도해주세요.\");\r\n");
      out.write("\t\t\t                 passwordFlag = false;\r\n");
      out.write("\t\t\t           }\r\n");
      out.write("\t\t\t     });\t\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t/**\r\n");
      out.write("\t*\t비밀번호 변경\r\n");
      out.write("\t*/\r\n");
      out.write("\tfunction passwordChange(){\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar oldPassword = $(\"#oldPassword\").val();\r\n");
      out.write("\t\tvar newPassword = $(\"#newPassword\").val();\r\n");
      out.write("\t\tvar newRePassword =\t$(\"#newRePassword\").val();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(oldPassword == \"\"){\r\n");
      out.write("\t\t\talert(\"현재 비밀번호를 입력 하세요.\");\r\n");
      out.write("\t\t\t$(\"#oldPassword\").focus();\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(newPassword == \"\"){\r\n");
      out.write("\t\t\talert(\"새 비밀번호를 입력 하세요.\");\r\n");
      out.write("\t\t\t$(\"#newPassword\").focus();\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/* if(!isValidFormPassword(newPassword)){\r\n");
      out.write("\t\t\t$(\"#newPassword\").val(\"\");\r\n");
      out.write("\t\t\t$(\"#newRePassword\").val(\"\");\r\n");
      out.write("\t\t\t$(\"#newPassword\").focus();\r\n");
      out.write("\t\t\treturn; \r\n");
      out.write("\t\t} */\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(newRePassword == \"\"){\r\n");
      out.write("\t\t\talert(\"새 비밀번호 확인을 입력 하세요.\");\r\n");
      out.write("\t\t\t$(\"#newRePassword\").focus();\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(newPassword != newRePassword){\r\n");
      out.write("\t\t\talert(\"입력한 두개의 패스워드가 일치 하지 않습니다.\");\r\n");
      out.write("\t\t\t$(\"#newPassword\").focus();\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(oldPassword == newPassword){\r\n");
      out.write("\t\t\talert(\"현재 패스워드와 새로 입력한 패스워드가 같습니다.\");\r\n");
      out.write("\t\t\t$(\"#newPassword\").focus();\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(passwordFlag){\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t           type:\"POST\",\r\n");
      out.write("\t\t           data : {oldPassword : oldPassword, newPassword : newPassword},\r\n");
      out.write("\t\t           url:\"");
      out.print(ONLINE_ROOT);
      out.write("/member/updatePassword.do\",\r\n");
      out.write("\t\t           dataType:\"json\",\r\n");
      out.write("\t\t           \r\n");
      out.write("\t\t           success : function(data) {\r\n");
      out.write("\t\t        \t   if(data.resultcode > 0){\r\n");
      out.write("\t\t        \t\t   alert(\"비밀번호가 변경 되었습니다.\");\r\n");
      out.write("\t\t        \t\t   pwFormClose();\r\n");
      out.write("\t\t        \t   }else if(data.resultcode == -2){ // 비밀번호 유효성 체크 false\r\n");
      out.write("\t\t        \t\t   alert(data.out_MSG);\r\n");
      out.write("\t\t        \t\t   $(\"#newPassword\").val(\"\");\r\n");
      out.write("\t\t        \t\t   $(\"#newRePassword\").val(\"\");\r\n");
      out.write("\t\t        \t\t   $(\"#newPassword\").focus();\r\n");
      out.write("\t\t        \t\t   return;\r\n");
      out.write("\t\t        \t   }else{\r\n");
      out.write("\t\t        \t\t   alert(\"비밀번호가 변경되지 않았습니다.\\n 잠시 후 다시 시도해주세요.\");\r\n");
      out.write("\t\t        \t\t   return;\r\n");
      out.write("\t\t        \t   }\r\n");
      out.write("\t\t           },\r\n");
      out.write("\t\t           error : function(xhr, status, error) {\r\n");
      out.write("\t\t                 alert(\"장애가 발생하였습니다.\\n잠시 후 다시 시도해주세요.\");\r\n");
      out.write("\t\t           }\r\n");
      out.write("\t\t     });\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\talert(\"현재 사용중인 비밀번호와 입력한 현재 비밀번호가 다릅니다.\");\r\n");
      out.write("\t\t\t$(\"#oldPassword\").focus();\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t/**\r\n");
      out.write("\t *\t새 비밀번호의 규칙 체크\r\n");
      out.write("\t * @param pw\t입력한 비밀번호\r\n");
      out.write("\t * @returns {Boolean}\r\n");
      out.write("\t */\r\n");
      out.write("\tfunction isValidFormPassword(pw) {\r\n");
      out.write("\t\tvar regex = /^[a-zA-Z0-9]{6,20}$/;\r\n");
      out.write("\t\tif (!regex.test(pw))     {\r\n");
      out.write("\t\t    alert(\"6~20자의 영문 대소문자, 숫자만 혼용 사용할 수 있습니다.\");\r\n");
      out.write("\t\t    return false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t         \r\n");
      out.write("\t    return true;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t/**\r\n");
      out.write("\t * 비밀번호 팝업/레이어 닫기\r\n");
      out.write("\t */\r\n");
      out.write("\tfunction pwFormClose(){\r\n");
      out.write("\t\tif(opener){\r\n");
      out.write("\t\t\twindow.self.close();\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tparent.popPassChangelayerClose();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t/**\r\n");
      out.write("\t * 비밀번호 레이어일 경우 사이트 이용 제한 알림 띄우기\r\n");
      out.write("\t */\r\n");
      out.write("\tfunction cancel(){\r\n");
      out.write("\t\tif(opener){\r\n");
      out.write("\t\t\tpwFormClose();\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tif(confirm(\"비빌번호를 변경하지 않으면 사이트 이용이 제한됩니다.\")){\r\n");
      out.write("\t\t\t\tparent.location.href = \"");
      out.print(ONLINE_ROOT );
      out.write("/member/logOut.do\";\r\n");
      out.write("\t\t\t\tparent.popPassChangelayerClose();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"popup pw_bg\" title=\"Main\">\r\n");
      out.write("\t<!-- ##### content start ##### -->\r\n");
      out.write("\t<!-- window size : 500 * 400 -->\r\n");
      out.write("\t\t<h1 class=\"tit\">비밀번호 변경</h1>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div class=\"wrap_pw\">\r\n");
      out.write("\t\t\t<form name=\"loginFrm\">\r\n");
      out.write("\t\t\t<div class=\"pw h200\">\r\n");
      out.write("\t\t\t\t<dl>\r\n");
      out.write("\t\t\t\t\t<dt>현재비밀번호</dt>\r\n");
      out.write("\t\t\t\t\t<dd><input type=\"password\" class=\"w115\" name=\"oldPassword\" id=\"oldPassword\"/></dd>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<dt>새비밀번호</dt>\r\n");
      out.write("\t\t\t\t\t<dd><input type=\"password\" class=\"w115\" name=\"newPassword\" id=\"newPassword\"/></dd>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<dt>새비밀번호확인</dt>\r\n");
      out.write("\t\t\t\t\t<dd><input type=\"password\" class=\"w115\" name=\"newRePassword\" id=\"newRePassword\"/></dd>\r\n");
      out.write("\t\t\t\t</dl>\r\n");
      out.write("\t\t\t\t<p class=\"txt ta_c mt30\">\r\n");
      out.write("\t\t\t\t\t보안규정에 따라 공백없이 숫자,영문자,특수문자 포함 5 ~ 20 <br />\r\n");
      out.write("\t\t\t\t\t자리로 입력해 주세요 <br /> <br /> \r\n");
      out.write("\t\t\t\t\t사용불가한 특수문자는  \"  %  &  +  `  <  >  \\  ^  {  |  } 입니다\r\n");
      out.write("\t\t\t\t</p>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t\t<div class=\"wrap_confirm\">\r\n");
      out.write("\t\t\t\t<button id=\"btnConfirm\">확인</button>\r\n");
      out.write("\t\t\t\t<button id=\"btnClose\">취소</button>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<button class=\"close\"><span class=\"blind\">닫기</span></button>\r\n");
      out.write("\t<!-- ##### content end ##### -->\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
