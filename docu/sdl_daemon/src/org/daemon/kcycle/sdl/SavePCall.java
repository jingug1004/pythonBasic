package org.daemon.kcycle.sdl;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;

public class SavePCall {
	
	private static String URL = "http://160.100.51.199:19080/rbm/handle.do?ServiceName=rsm1020%2Dservice&savePcall=1&ActionName=savePcall";
	
	private static byte[] POST_DATA = { 0x00, 0x02, (byte)0xFE, 0x10, 0x0F, (byte)0xA0, 0x00, (byte)0x92, 0x00, 0x07, 0x00, 0x07, 0x44, 0x41, 0x59, 0x5F, 0x4F, 0x52, 0x44, 0x00, 0x08, 0x00, 0x01, 0x31, 0x00, 0x0A, 0x4A, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4F, 0x4E, 0x49, 0x44, 0x00, 0x08, 0x00, 0x20, 0x32, 0x39, 0x39, 0x44, 0x36, 0x30, 0x46, 0x30, 0x43, 0x43, 0x44, 0x30, 0x37, 0x37, 0x35, 0x41, 0x42, 0x33, 0x41, 0x38, 0x30, 0x34, 0x32, 0x44, 0x37, 0x42, 0x38, 0x32, 0x44, 0x35, 0x38, 0x46, 0x00, 0x07, 0x4D, 0x45, 0x45, 0x54, 0x5F, 0x43, 0x44, 0x00, 0x08, 0x00, 0x03, 0x30, 0x30, 0x31, 0x00, 0x04, 0x50, 0x61, 0x74, 0x68, 0x00, 0x08, 0x00, 0x04, 0x2F, 0x72, 0x62, 0x6D, 0x00, 0x08, 0x52, 0x41, 0x43, 0x45, 0x5F, 0x44, 0x41, 0x59, 0x00, 0x08, 0x00, 0x08, 0x32, 0x30, 0x31, 0x37, 0x31, 0x31, 0x33, 0x30, 0x00, 0x09, 0x53, 0x54, 0x4E, 0x44, 0x5F, 0x59, 0x45, 0x41, 0x52, 0x00, 0x08, 0x00, 0x04, 0x32, 0x30, 0x31, 0x37, 0x00, 0x03, 0x54, 0x4D, 0x53, 0x00, 0x08, 0x00, 0x02, 0x37, 0x38, (byte)0xFE, 0x01, 0x0F, (byte)0xA0, 0x01, 0x69, 0x00, 0x07, 0x67, 0x64, 0x73, 0x55, 0x73, 0x65, 0x72, (byte)0xFE, 0x10, 0x0F, (byte)0xA0, 0x00, 0x02, 0x00, 0x00, 0x00, 0x17, 0x00, 0x07, 0x55, 0x53, 0x45, 0x52, 0x5F, 0x49, 0x44, 0x00, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00, 0x07, 0x55, 0x53, 0x45, 0x52, 0x5F, 0x4E, 0x4D, 0x00, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00, 0x04, 0x50, 0x53, 0x57, 0x44, 0x00, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00, 0x07, 0x41, 0x53, 0x53, 0x4F, 0x5F, 0x43, 0x44, 0x00, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00, 0x07, 0x44, 0x45, 0x50, 0x54, 0x5F, 0x43, 0x44, 0x00, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00, 0x07, 0x44, 0x45, 0x50, 0x54, 0x5F, 0x4E, 0x4D, 0x00, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00, 0x07, 0x54, 0x45, 0x41, 0x4D, 0x5F, 0x43, 0x44, 0x00, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00, 0x07, 0x54, 0x45, 0x41, 0x4D, 0x5F, 0x4E, 0x4D, 0x00, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00, 0x04, 0x46, 0x4C, 0x4F, 0x43, 0x00, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00, 0x06, 0x46, 0x47, 0x52, 0x41, 0x44, 0x45, 0x00, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00, 0x06, 0x54, 0x45, 0x4C, 0x5F, 0x4E, 0x4F, 0x00, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00, 0x06, 0x43, 0x52, 0x41, 0x5F, 0x43, 0x44, 0x00, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00, 0x07, 0x49, 0x53, 0x56, 0x41, 0x4C, 0x49, 0x44, 0x00, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00, 0x07, 0x42, 0x52, 0x4E, 0x43, 0x5F, 0x43, 0x44, 0x00, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00, 0x05, 0x48, 0x50, 0x5F, 0x4E, 0x4F, 0x00, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00, 0x0C, 0x54, 0x45, 0x41, 0x4D, 0x5F, 0x44, 0x45, 0x54, 0x4C, 0x5F, 0x43, 0x44, 0x00, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00, 0x0C, 0x41, 0x55, 0x54, 0x48, 0x5F, 0x54, 0x45, 0x41, 0x4D, 0x5F, 0x43, 0x44, 0x00, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00, 0x07, 0x4C, 0x4F, 0x47, 0x5F, 0x53, 0x45, 0x51, 0x00, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00, 0x03, 0x47, 0x42, 0x4E, 0x00, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00, 0x09, 0x43, 0x48, 0x4E, 0x47, 0x5F, 0x50, 0x53, 0x57, 0x44, 0x00, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00, 0x08, 0x50, 0x53, 0x57, 0x44, 0x5F, 0x43, 0x48, 0x4B, 0x00, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00, 0x08, 0x4C, 0x4F, 0x47, 0x49, 0x4E, 0x5F, 0x44, 0x54, 0x00, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00, 0x05, 0x4D, 0x4E, 0x5F, 0x49, 0x44, 0x00, 0x01, 0x01, 0x00, 0x00, 0x01, 0x01, (byte)0x96, 0x00, 0x01, 0x00, 0x17, 0x00, 0x08, 0x00, 0x08, 0x47, 0x41, 0x31, 0x32, 0x30, 0x30, 0x30, 0x30, 0x00, 0x08, 0x00, 0x08, 0x47, 0x41, 0x31, 0x32, 0x34, 0x39, 0x37, 0x30, 0x00, 0x08, 0x00, 0x02, 0x30, 0x30, 0x00, 0x08, 0x00, 0x01, 0x46, 0x00, 0x08, 0x00, 0x03, 0x30, 0x30, 0x31, 0x00, 0x08, 0x00, 0x08, 0x47, 0x41, 0x31, 0x32, 0x41, 0x30, 0x33, 0x36, 0x00, 0x08, 0x00, 0x0F, (byte)0xEC, (byte)0xA0, (byte)0x84, (byte)0xEC, (byte)0x82, (byte)0xB0, (byte)0xEB, (byte)0xB0, (byte)0xA9, (byte)0xEC, (byte)0x86, (byte)0xA1, (byte)0xEC, (byte)0x8B, (byte)0xA4, 0x00, 0x08, 0x00, 0x04, 0x35, (byte)0xEA, (byte)0xB8, (byte)0x89, 0x00, 0x08, 0x00, 0x06, (byte)0xEA, (byte)0xB3, (byte)0xBC, (byte)0xEC, (byte)0x9E, (byte)0xA5, 0x00, 0x08, 0x00, 0x03, 0x30, 0x30, 0x35, 0x00, 0x08, 0x00, 0x0D, 0x30, 0x31, 0x30, 0x2D, 0x34, 0x33, 0x30, 0x36, 0x2D, 0x31, 0x37, 0x32, 0x35, 0x00, 0x08, 0x00, 0x01, 0x54, 0x00, 0x08, 0x00, 0x06, 0x31, 0x36, 0x38, 0x30, 0x31, 0x36, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x6F, 0x52, 0x42, 0x42, 0x31, 0x30, 0x31, 0x30, 0x7C, 0x52, 0x42, 0x53, 0x34, 0x30, 0x31, 0x30, 0x7C, 0x52, 0x53, 0x4D, 0x31, 0x30, 0x31, 0x30, 0x7C, 0x52, 0x53, 0x59, 0x31, 0x30, 0x31, 0x30, 0x7C, 0x52, 0x53, 0x59, 0x31, 0x30, 0x31, 0x30, 0x7C, 0x52, 0x53, 0x59, 0x31, 0x30, 0x31, 0x30, 0x7C, 0x52, 0x53, 0x59, 0x31, 0x30, 0x31, 0x30, 0x7C, 0x52, 0x53, 0x59, 0x31, 0x30, 0x31, 0x30, 0x7C, 0x52, 0x53, 0x59, 0x31, 0x30, 0x31, 0x30, 0x7C, 0x52, 0x53, 0x59, 0x31, 0x30, 0x31, 0x30, 0x7C, 0x52, 0x53, 0x59, 0x31, 0x30, 0x31, 0x30, 0x7C, 0x52, 0x53, 0x59, 0x33, 0x30, 0x38, 0x30, 0x7C, 0x52, 0x53, 0x59, 0x33, 0x30, 0x38, 0x30, 0x7C, 0x52, 0x53, 0x59, 0x33, 0x30, 0x39, 0x30, 0x00, 0x08, 0x00, 0x40, 0x66, 0x39, 0x38, 0x32, 0x63, 0x37, 0x38, 0x39, 0x31, 0x62, 0x62, 0x62, 0x35, 0x39, 0x61, 0x39, 0x35, 0x30, 0x35, 0x65, 0x30, 0x64, 0x64, 0x61, 0x62, 0x65, 0x36, 0x35, 0x34, 0x36, 0x65, 0x39, 0x63, 0x35, 0x34, 0x61, 0x62, 0x64, 0x34, 0x34, 0x64, 0x39, 0x34, 0x35, 0x66, 0x65, 0x30, 0x38, 0x33, 0x35, 0x61, 0x37, 0x36, 0x31, 0x61, 0x33, 0x33, 0x34, 0x61, 0x38, 0x37, 0x62, 0x38, 0x35, 0x00, 0x08, 0x00, 0x01, 0x30, 0x00, 0x08, 0x00, 0x08, 0x47, 0x41, 0x31, 0x32, 0x34, 0x39, 0x37, 0x30, 0x00, 0x08, 0x00, 0x07, 0x41, 0x31, 0x32, 0x34, 0x39, 0x37, 0x30, 0x00, 0x08, 0x00, 0x0F, (byte)0xEC, (byte)0xA0, (byte)0x95, (byte)0xEB, (byte)0xB3, (byte)0xB4, (byte)0xEC, (byte)0xA7, (byte)0x80, (byte)0xEC, (byte)0x9B, (byte)0x90, (byte)0xED, (byte)0x8C, (byte)0x80, 0x00, 0x08, 0x00, 0x0C, 0x30, 0x32, 0x2D, 0x32, 0x30, 0x36, 0x37, 0x2D, 0x35, 0x35, 0x32, 0x31, 0x00, 0x08, 0x00, 0x05, 0x30, 0x35, 0x30, 0x37, 0x34, 0x00, 0x08, 0x00, 0x09, (byte)0xEC, (byte)0xA1, (byte)0xB0, (byte)0xEC, (byte)0x84, (byte)0xB1, (byte)0xEB, (byte)0xAC, (byte)0xB8, 0x00, 0x00, 0x00, 0x00 };
	
	private static Map<String, String> HEADER_MAP = new HashMap<String, String>();
	static{
		HEADER_MAP.put("User-Agent", "MiPlatform 3.2;win32;1920x1080");
		HEADER_MAP.put("Accept-Charset", "euc-kr");
		HEADER_MAP.put("Accept-Language", "ko-KR");
		HEADER_MAP.put("Cookie", "JSESSIONID=299D60F0CCD0775AB3A8042D7B82D58F; Path=/rbm");
		HEADER_MAP.put("Content-Type", "application/octet-stream");
	}
	
	public static int callUrl(String meetCd, String raceDay) throws Exception{
		System.arraycopy(meetCd.getBytes(), 0, POST_DATA, 85, 3);
		System.arraycopy(raceDay.getBytes(), 0, POST_DATA, 116, 8);

		URL url = new URL(URL);
		HttpURLConnection con = (HttpURLConnection) url.openConnection();

		Iterator<String> iter = HEADER_MAP.keySet().iterator();
		while(iter.hasNext()){
		String key = iter.next();
		String value = HEADER_MAP.get(key);
		con.setRequestProperty(key, value);
		}

		con.setDoOutput(true);
		OutputStream os = con.getOutputStream();
		os.write(POST_DATA);
		os.flush();
		os.close();

		return con.getResponseCode();
		}
	
}
