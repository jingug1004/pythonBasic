
[I][UbiForm][2012-07-22 11:07:09][REQUEST FILE]
[I][UbiForm][2012-07-22 11:07:09]	- Report : /web/waspage/usrbm/report/rsm/rsm2020.jrf
[I][UbiForm][2012-07-22 11:07:09]	- Common : /web/waspage/usrbm/report/rsm/property/commonitem.xml [Not found]
--------------------------------------------------------------------------------


[I][UbiData][2012-07-22 11:07:10][REQUEST FILE]
[I][UbiData][2012-07-22 11:07:10]	- Report : rsm2020.jrf
--------------------------------------------------------------------------------
[I][UbiData][2012-07-22 11:07:10][DB CONNECT]
[I][UbiData][2012-07-22 11:07:10]	- Type : nonlookup
[I][UbiData][2012-07-22 11:07:10]	- Db id : rbm
[I][UbiData][2012-07-22 11:07:10]	- Sql id : rsm2020_s06Today
[I][UbiData][2012-07-22 11:07:10]	- Datasource : jdbc/RBM
[I][UbiData][2012-07-22 11:07:10]	- Status : Success
--------------------------------------------------------------------------------
[I][UbiData][2012-07-22 11:07:10][DATA QUERY START]
[I][UbiData][2012-07-22 11:07:10]	- sql id : rsm2020_s06Today
[I][UbiData][2012-07-22 11:07:10]	- Db charset : KSC5601
[I][UbiData][2012-07-22 11:07:10]	- Sql
<
WITH J 
 AS
 (SELECT    
         '전회' AS COL_DESC  
     , tms                                                                                       
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='12' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_02    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='16' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_06    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='22'  THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_12    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='20' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_10    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='23' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_13    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='24' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_14    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='13' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_03    
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='25'  THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_15    
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='19' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_09    
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='14' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_05    
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='26' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_16    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='27' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_17    
     , SUM(                                                                              
           CASE                                                                          
              WHEN COMM_NO='06'  THEN NVL(DIV_TOTAL, 0)                                  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_01_06_01    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='28' THEN NVL(DIV_TOTAL, 0) 
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_01_07_18    
         , SUM(                                                                              
               CASE                                                                          
                  WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_04_07_01    
         , SUM(                                                                              
               CASE                                                                          
                  WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='02' THEN NVL(DIV_TOTAL, 0)  
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_04_07_02    
        , SUM(                                                                              
               CASE                                                                          
                  WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='03' THEN NVL(DIV_TOTAL, 0)  
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_04_07_03    
         , SUM(                                                                              
               CASE                                                                          
                  WHEN SELL_CD='02' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_02_07_01    
 
         , SUM(                                                                              
               CASE                                                                          
                  WHEN COMM_NO NOT IN ('01','02','03','04','08') THEN NVL(DIV_TOTAL, 0)                         
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_JIJUM    
         , SUM(DIV_TOTAL)/100 DIV_TOTAL                                                             
  FROM   VW_SDL_DT_SUM                                                                         
  WHERE  1=1                                                                                    
    AND STND_YEAR  = ?                                                            
    AND MEET_CD    = ?                                                        
    AND TMS        BETWEEN ?  - 1 AND ? 
    AND DAY_ORD    = ? 
  GROUP BY TMS 
 )
 SELECT  DECODE(TMS, ? , '합계','전회') COL_DESC
        , TMS
        ,'1' AS GUBN
        ,DIV_01_07_02 
        ,DIV_01_07_06 
        ,DIV_01_07_12 
        ,DIV_01_07_10 
        ,DIV_01_07_13 
        ,DIV_01_07_14 
        ,DIV_01_07_03 
        ,DIV_01_07_15 
        ,DIV_01_07_09 
        ,DIV_01_07_05 
        ,DIV_01_07_16 
        ,DIV_01_07_17 
        ,DIV_01_06_01 
        ,DIV_01_07_18 
        ,DIV_04_07_01 
        ,DIV_04_07_02 
        ,DIV_04_07_03 
        ,DIV_02_07_01
        ,DIV_JIJUM
        ,1
 FROM J
 UNION ALL
 SELECT '점유율'
       , TMS
       , '2'
       , ROUND(DIV_01_07_02 / DIV_TOTAL * 100, 2) 
       , ROUND(DIV_01_07_06 / DIV_TOTAL * 100, 2)   
       , ROUND(DIV_01_07_12 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_10 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_13 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_14 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_03 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_15 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_09 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_05 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_16 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_17 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_06_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_18 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_02 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_03 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_02_07_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_JIJUM / DIV_TOTAL * 100, 2)    
       , 100
 FROM J
 WHERE tms = ? 
 UNION ALL
 SELECT '전회차'
       , TMS
       , '2'
       , ROUND(DIV_01_07_02 / DIV_TOTAL * 100, 2) 
       , ROUND(DIV_01_07_06 / DIV_TOTAL * 100, 2)   
       , ROUND(DIV_01_07_12 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_10 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_13 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_14 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_03 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_15 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_09 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_05 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_16 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_17 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_06_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_18 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_02 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_03 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_02_07_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_JIJUM / DIV_TOTAL * 100, 2)    
       , 100
 FROM J
 WHERE TMS = ?  -1
 ORDER BY 3, 2 DESC
 #String#2012#String#003#String#17#String#17#String#1#String#17#String#17#String#17#
>
[I][UbiData][2012-07-22 11:07:10]	- Row size : 4
[I][UbiData][2012-07-22 11:07:10]	- Data
<
합계^t17^t1^t5759243^t6768872^t3464367^t4581356^t3964638^t6685253^t3899352^t3606854^t6970537^t6270105^t3005424^t6179547^t172346^t2917226^t1910858^t2796109^t0^t0^t68952087^t1^t^n전회^t16^t1^t5110145^t6625240^t3652284^t4516474^t4532647^t6596680^t4323166^t3600994^t7080707^t6011354^t3246328^t5786326^t150613^t2709578^t1871131^t2728615^t0^t0^t68542282^t1^t^n점유율^t17^t2^t7.06^t8.29^t4.25^t5.61^t4.86^t8.19^t4.78^t4.42^t8.54^t7.68^t3.68^t7.57^t.21^t3.57^t2.34^t3.43^t0^t0^t84.5^t100^t^n전회차^t16^t2^t6.31^t8.17^t4.51^t5.57^t5.59^t8.14^t5.33^t4.44^t8.74^t7.42^t4.01^t7.14^t.19^t3.34^t2.31^t3.37^t0^t0^t84.57^t100^t^n
>
[I][UbiData][2012-07-22 11:07:10][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-07-22 11:07:10][DATA QUERY START]
[I][UbiData][2012-07-22 11:07:10]	- sql id : rsm2020_s11
[I][UbiData][2012-07-22 11:07:10]	- Db charset : KSC5601
[I][UbiData][2012-07-22 11:07:10]	- Sql
<
SELECT 
         '0~'||BB.RACE_NO||'R' AS RACE_DESC,
         DECODE(LEV,1,'인원','점유율') AS MANA_DESC,
         CASE 
             WHEN LEV='2' AND IN_PRSN_NUM > 0 AND TOT_PRSN_NUM > 0 THEN ROUND(IN_PRSN_NUM / TOT_PRSN_NUM *100,2)    
             ELSE IN_PRSN_NUM
        END AS IN_PRSN_NUM, 
        CASE 
             WHEN LEV='2' AND BRNC_PRSN_NUM > 0 AND TOT_PRSN_NUM > 0 THEN ROUND(BRNC_PRSN_NUM / TOT_PRSN_NUM *100,2)    
             ELSE BRNC_PRSN_NUM
        END AS BRNC_PRSN_NUM, 
        CASE 
             WHEN LEV='2' AND TOT_PRSN_NUM > 0 THEN ROUND(TOT_PRSN_NUM / TOT_PRSN_NUM *100,2)    
             ELSE TOT_PRSN_NUM
        END AS TOT_PRSN_NUM, 
        CASE 
             WHEN LEV='1' THEN B_TOT_PRSN_NUM
        END AS B_TOT_PRSN_NUM, 
        CASE 
             WHEN LEV='1' THEN MINUS_PRSN_NUM
        END AS MINUS_PRSN_NUM, 
        CASE 
 
             WHEN LEV='1' AND TOT_PRSN_NUM>0 AND B_TOT_PRSN_NUM >0 THEN ROUND((TOT_PRSN_NUM - B_TOT_PRSN_NUM) / B_TOT_PRSN_NUM*100,2)
        END AS PER_PRSN_NUM 
 FROM
 (
      SELECT DU.LEV,
             SUM(CASE WHEN R.TMS =DU.TMS AND BRNC_CD = '98' THEN E.ENT_PRSN_NUM END) AS IN_PRSN_NUM,    
              SUM(CASE WHEN R.TMS =DU.TMS AND BRNC_CD <> '98' THEN E.ENT_PRSN_NUM END) AS BRNC_PRSN_NUM,    
              SUM(CASE WHEN R.TMS =DU.TMS THEN E.ENT_PRSN_NUM END) AS TOT_PRSN_NUM,    
              SUM(CASE WHEN R.TMS =DU.B_TMS THEN E.ENT_PRSN_NUM END) AS B_TOT_PRSN_NUM,    
              (SUM(CASE WHEN R.TMS =DU.TMS THEN E.ENT_PRSN_NUM END) - SUM(CASE WHEN R.TMS =DU.B_TMS THEN E.ENT_PRSN_NUM END)) AS MINUS_PRSN_NUM    
                      
          FROM                                                   
              TBRC_STAY_MANA E,    
              TBRK_SPEC_CD C,
              VW_SDL_INFO R,       
              (SELECT LEVEL AS LEV, ?  AS TMS,(?  - 1) AS B_TMS FROM DUAL CONNECT BY LEVEL<=2) DU 
          WHERE  1=1                
            AND E.BRNC_CD    = C.CD
            AND E.RACE_DT    = R.RACE_DAY                 
            AND C.GRP_CD        IN ('018','032')    
            AND R.MEET_CD    = '003'   
            AND R.STND_YEAR    = ?         
            AND R.TMS IN (? , ?  - 1)    
            AND R.DAY_ORD ='2'             
          GROUP BY DU.LEV
 )AA,
 (
     SELECT                                                                   
          MAX(RACE_NO)  AS RACE_NO
       FROM   (                                                                 
                   SELECT                                                       
                            TOR.RACE_NO                                         
                          , TOR.RACE_REG_NO                                     
                          , TOR.RACER_NO                                        
                          , TOR.RANK                                            
                          , TRM.NM_KOR                                          
                          , RANK() OVER (PARTITION BY TOR.RACE_NO               
                                                    , TOR.RANK                  
                                             ORDER BY TOR.RACE_REG_NO) SEQ      
                   FROM     TBEB_ORGAN@MRASYSLINK        TOR                        
                          , TBEC_RACER_MASTER@MRASYSLINK TRM                        
                   WHERE 1=1                                                        
                           
                   AND    TOR.RACER_NO   = TRM.RACER_NO                         
                   AND    TOR.STND_YEAR  = ?         
                   AND    TOR.MBR_CD     = '001'                                
                   AND    TOR.TMS        = ?         
                           
                   AND    TOR.RANK BETWEEN 1                                    
                                       AND 3                                    
              )                                                                 
       START WITH SEQ = 1                                                       
       CONNECT BY PRIOR SEQ = SEQ - 1                                           
       AND PRIOR RACE_NO = RACE_NO AND RANK = RANK     
 )BB
 ORDER BY AA.LEV
 #String#17#String#17#String#2012#String#17#String#17#String#2012#String#17#
>
[I][UbiData][2012-07-22 11:07:10]	- Row size : 2
[I][UbiData][2012-07-22 11:07:10]	- Data
<
0~15R^t인원^t^t^t^t34771^t^t^t^n0~15R^t점유율^t^t^t^t^t^t^t^n
>
[I][UbiData][2012-07-22 11:07:10][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-07-22 11:07:10][DATA QUERY START]
[I][UbiData][2012-07-22 11:07:10]	- sql id : rsm2020_s01
[I][UbiData][2012-07-22 11:07:10]	- Db charset : KSC5601
[I][UbiData][2012-07-22 11:07:10]	- Sql
<
SELECT 
           AA.MEET_CD,      
           AA.STND_YEAR,    
           AA.TMS,          
           AA.DAY_ORD,      
           TO_CHAR(TO_DATE(AA.RACE_DAY,'YYYYMMDD'),'YYYY-MM-DD') AS RACE_DAY, 
           AA.RACE_YOIL,    
           TO_CHAR(TO_DATE(AA.RACE_DAY,'YYYYMMDD'),'YYYY')||'년 '||AA.TMS||'회차 '||AA.DAY_ORD||'일차 ('|| TO_CHAR(TO_DATE(AA.RACE_DAY,'YYYYMMDD'),'YYYY-MM-DD')||') 경주 개최 결과'  
           AS RACE_DAY_INFO  
     
       FROM (         
             SELECT                              
             MEET_CD,      
             STND_YEAR,    
             TMS,          
             DAY_ORD,      
             RACE_DAY,     
             RACE_YOIL,    
             DECODE(RACE_YOIL,'MON','월','TUE','화','WED','수','THE','목','FRI','금','SAT','토','SUN','일','일') AS RACE_YOIL_KOR, 
             TO_CHAR(TO_DATE(RACE_DAY,'YYYYMMDD'),'YYYY-MM-DD')||
             ' ('||RACE_YOIL||') '||TMS||'회차 '||DAY_ORD||'일차'  
             AS RACE_INFO  
      FROM                                
             VW_SDL_INFO      
      WHERE  1=1                             
             AND MEET_CD = ?   
            AND STND_YEAR = ?   
            AND TMS= ?     
            AND DAY_ORD = ?        
    )AA
 #String#003#String#2012#String#17#String#1#
>
[I][UbiData][2012-07-22 11:07:10]	- Row size : 1
[I][UbiData][2012-07-22 11:07:10]	- Data
<
003^t2012^t17^t1^t2012-06-07^tTHU^t2012년 17회차 1일차 (2012-06-07) 경주 개최 결과^t^n
>
[I][UbiData][2012-07-22 11:07:10][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-07-22 11:07:10][DATA QUERY START]
[I][UbiData][2012-07-22 11:07:10]	- sql id : rsm2020_s05Today
[I][UbiData][2012-07-22 11:07:10]	- Db charset : KSC5601
[I][UbiData][2012-07-22 11:07:10]	- Sql
<
SELECT                                                                                      
       DECODE(GROUPING(RACE_NO),0,RACE_NO,'TOTAL') RACE_NO 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='12' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_02 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='16' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_06 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='22'  THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_12 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='20' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_10 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='23' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_13 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='24' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_14 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='13' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_03 
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='25'  THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_15 
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='19' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_09 
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='14' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_05 
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='26' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_16 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='27' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_17 
     , SUM(                                                                              
           CASE                                                                          
              WHEN COMM_NO='06'  THEN NVL(DIV_TOTAL, 0)                                  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_01_06_01 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='28' THEN NVL(DIV_TOTAL, 0) 
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_01_07_18 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_04_07_01 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='02' THEN NVL(DIV_TOTAL, 0)  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_04_07_02 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='03' THEN NVL(DIV_TOTAL, 0)  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_04_07_03    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='02' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_02_07_01 
     , SUM(                                                                              
           CASE                                                                          
              WHEN  COMM_NO NOT IN ('01','02','03','04','08') THEN NVL(DIV_TOTAL, 0)                         
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_JIJUM  
 
     , SUM(DIV_TOTAL)/100 DIV_TOTAL                                                          
 FROM   VW_SDL_DT                                                                         
 WHERE   1=1                                                                                   
      AND STND_YEAR  = ?                                                             
      AND    MEET_CD    = ?                                                        
      AND    TMS        = ?                                                            
      AND    DAY_ORD    = ?                                                        
 
 GROUP BY RACE_NO                                                                                   
       
 ORDER BY RACE_NO
 #String#2012#String#003#String#17#String#1#
>
[I][UbiData][2012-07-22 11:07:11]	- Row size : 15
[I][UbiData][2012-07-22 11:07:11]	- Data
<
01^t140920^t197602^t96849^t127436^t119903^t187379^t128299^t116374^t219027^t183487^t108516^t160073^t7355^t93039^t59949^t93886^t0^t0^t2040094^t2396211^t^n02^t191278^t267508^t123529^t187360^t147399^t249704^t155747^t145620^t287810^t240820^t134529^t231415^t9365^t106436^t78894^t112202^t0^t0^t2669616^t3119757^t^n03^t218916^t312291^t160473^t214643^t185000^t303210^t189537^t171252^t321899^t281904^t151802^t275390^t11275^t162159^t84773^t131614^t0^t0^t3176138^t3739571^t^n04^t280723^t349162^t162668^t220723^t205104^t363694^t198947^t193854^t366506^t314797^t163251^t307239^t11636^t153198^t99509^t147397^t0^t0^t3538408^t4222315^t^n05^t293914^t356666^t179380^t247835^t236853^t376743^t193986^t198487^t385927^t363196^t170821^t362879^t10456^t178289^t114597^t157145^t0^t0^t3827174^t4600038^t^n06^t320577^t410766^t191760^t262742^t239275^t397830^t224139^t213663^t422296^t374549^t185676^t384443^t13418^t167359^t119122^t168329^t0^t0^t4095944^t4848817^t^n07^t373535^t432760^t204667^t303599^t258807^t408985^t246625^t214315^t457794^t408705^t182639^t417527^t12501^t187942^t128436^t184125^t0^t0^t4422962^t5262700^t^n08^t401087^t454010^t227928^t317354^t270820^t432896^t260257^t226171^t475649^t433911^t198906^t420465^t13274^t209941^t132238^t183879^t0^t0^t4658786^t5538248^t^n09^t437100^t484053^t233189^t323376^t300022^t463847^t282180^t288344^t503532^t460256^t213710^t426704^t12038^t218223^t137100^t184059^t0^t0^t4967733^t5873616^t^n10^t470862^t541950^t272328^t368669^t328440^t540666^t313885^t273198^t534426^t520280^t238905^t480109^t11995^t217489^t148525^t221558^t0^t0^t5483285^t6538531^t^n11^t466591^t561617^t317067^t365940^t318869^t591737^t323108^t316413^t577350^t534047^t224160^t502776^t13236^t222034^t156791^t213870^t0^t0^t5705606^t6735069^t^n12^t517154^t573936^t314455^t371388^t339082^t549091^t330869^t298274^t572163^t534089^t257848^t538886^t9827^t224241^t153182^t226909^t0^t0^t5811394^t6964681^t^n13^t526295^t583973^t330714^t397538^t324448^t593547^t335641^t314764^t598821^t528560^t248840^t537767^t13014^t243974^t168937^t238429^t0^t0^t5985262^t7085157^t^n14^t544820^t611235^t322648^t422943^t330535^t594065^t339607^t303922^t617748^t541795^t257654^t539796^t11784^t260972^t158394^t255072^t0^t0^t6112990^t7164971^t^n15^t575471^t631343^t326712^t449810^t360081^t631859^t376525^t332203^t629589^t549709^t268167^t594078^t11172^t271930^t170411^t277635^t0^t0^t6456695^t7513552^t^n
>
[I][UbiData][2012-07-22 11:07:11][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-07-22 11:07:11][DATA QUERY START]
[I][UbiData][2012-07-22 11:07:11]	- sql id : rsm2020_s03Today
[I][UbiData][2012-07-22 11:07:11]	- Db charset : KSC5601
[I][UbiData][2012-07-22 11:07:11]	- Sql
<
SELECT                                                                                    
      Z.RACE_NO, 
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          FC_GET_RSLT_RANK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO)                
      END RSLT_RANK, 
      R.RANK_1,  
      R.RANK_2,  
      R.RANK_3,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '001', NULL) 
      END WIN,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '002', '1')  
      END PLC,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '002', '2')  
      END PLC2,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '004', NULL) 
      END EX,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '005', NULL) 
      END QU,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '006', NULL) 
      END TRI,  
      D.BONJANG_TOTAL/1000 AS BONJANG_TOTAL, 
      D.JIJUM_TOTAL/1000 AS JIJUM_TOTAL,  
      D.DIV_TOTAL/1000 AS DIV_TOTAL,  
      NVL(D.REFUND,0)/1000 AS REFUND, 
      NVL(B.B_DIV_TOTAL,0)/1000 AS B_DIV_TOTAL,    
      NVL2(D.DIV_TOTAL, NVL((C.DIV_TOTAL-B.B_DIV_TOTAL),0),0)/1000 AS PLUS_MINUS, 
      CASE                                                                                  
          WHEN B.B_DIV_TOTAL<>0 THEN                                                        
          ROUND((C.DIV_TOTAL-B.B_DIV_TOTAL)/B.B_DIV_TOTAL*100,2)                            
          ELSE 0                                                                            
      END RATE,   
      SAME_PAYOFF_TOTAL,  
      SAME_PAYOFF_001, 
   SAME_PAYOFF_002, 
   SAME_PAYOFF_004, 
   SAME_PAYOFF_005, 
   SAME_PAYOFF_006 
  FROM   
   
      (   
                                                                 
          SELECT                                                                            
                D.MEET_CD,                                                                   
                D.STND_YEAR,                                                                 
                D.TMS,                                                                       
                D.DAY_ORD,                                                                   
                DECODE(D.RACE_NO,NULL,'TOTAL',D.RACE_NO) RACE_NO,                              
                SUM(                                                                        
                    CASE                                                                    
                      WHEN D.SELL_CD='03' THEN D.DIV_TOTAL                                    
                      ELSE 0                                                                
                    END                                                                     
                ) BONJANG_TOTAL,                                                            
                SUM(                                                                        
                    CASE                                                                    
                      WHEN D.SELL_CD !='03' THEN D.DIV_TOTAL                                     
                    END                                                                     
                ) JIJUM_TOTAL,                                                              
                SUM(D.REFUND) REFUND,
                SUM(D.DIV_TOTAL) AS DIV_TOTAL                                                         
          FROM   VW_SDL_DT D                                                              
          WHERE 1=1                                                                             
              AND D.STND_YEAR(+)  = ? 
              AND D.MEET_CD(+)    = ? 
              AND D.TMS(+)        = ? 
              AND D.DAY_ORD(+)    = ? 
          GROUP BY                                                                          
                D.MEET_CD,                                                                   
                D.STND_YEAR,                                                                 
                D.TMS,                                                                       
                D.DAY_ORD,                                                                   
                ROLLUP(D.RACE_NO)                                                           
      ) D,                                                                                  
      (                                                                                     
         SELECT                                                                             
            P.MEET_CD,                                                                      
            P.STND_YEAR,                                                                    
            P.TMS,                                                                          
            P.DAY_ORD,                                                                      
            DECODE(P.RACE_NO,NULL,'TOTAL',P.RACE_NO) RACE_NO,                               
            SUM(POOL_TOTAL) DIV_TOTAL                                                       
         FROM                                                                               
             VW_SDL_PT P                                                                  
         WHERE 1=1                                                                              
             AND P.STND_YEAR  = ? 
             AND P.MEET_CD    = ? 
             AND P.TMS        = ? 
             AND P.DAY_ORD    = ? 
         GROUP BY                                                                           
            P.MEET_CD,                                                                      
            P.STND_YEAR,                                                                    
            P.TMS,                                                                          
            P.DAY_ORD,                                                                      
            ROLLUP(P.RACE_NO)                                                               
      ) C,                                                                                  
      (                                                                                     
          SELECT                                                                            
                DECODE(RACE_NO,NULL,'TOTAL',RACE_NO) RACE_NO,                               
                SUM(DIV_TOTAL) B_DIV_TOTAL                                                  
          FROM   VW_SDL_DT                                                                
          WHERE 1=1                                                                            
              AND  STND_YEAR  = ? 
              AND    MEET_CD    = ? 
              AND    TMS        = ?  -1                                                    
              AND    DAY_ORD    = ? 
          GROUP BY                                                                          
                ROLLUP(RACE_NO)                                                             
      ) B,                                                                                  
      (                                                                                     
          SELECT                                                                            
                RACE_NO                                                                     
              , MIN(DECODE(RANK, '1', NM_KOR)) RANK_1                                       
              , MIN(DECODE(RANK, '2', NM_KOR)) RANK_2                                       
              , MIN(DECODE(RANK, '3', NM_KOR)) RANK_3                                       
          FROM   (                                                                          
                   SELECT                                                                   
                            RACE_NO                                                         
                          , RANK                                                            
                          , SUBSTR(MAX(SYS_CONNECT_BY_PATH (NM_KOR, '/')), 2) NM_KOR        
                   FROM   (                                                                 
                               SELECT                                                       
                                        TOR.RACE_NO                                         
                                      , TOR.RACE_REG_NO                                     
                                      , TOR.RACER_NO                                        
                                      , TOR.RANK                                            
                                      , TRM.NM_KOR                                          
                                      , RANK() OVER (PARTITION BY TOR.RACE_NO               
                                                                , TOR.RANK                  
                                                         ORDER BY TOR.RACE_REG_NO) SEQ      
                               FROM     TBEB_ORGAN@MRASYSLINK        TOR                        
                                      , TBEC_RACER_MASTER@MRASYSLINK TRM                        
                               WHERE 1=1                
                               AND    TOR.RACER_NO   = TRM.RACER_NO                         
                               AND    TOR.STND_YEAR  = ? 
                               AND    TOR.MBR_CD     = '001'                                
                               AND    TOR.TMS        = ? 
                               AND    TOR.DAY_ORD    = ? 
                               AND    TOR.RANK BETWEEN 1                                    
                                                   AND 3                                    
                          )                                                                 
                   START WITH SEQ = 1                                                       
                   CONNECT BY PRIOR SEQ = SEQ - 1                                           
                   AND PRIOR RACE_NO = RACE_NO AND RANK = RANK                              
                   GROUP BY                                                                 
                            RACE_NO                                                         
                          , RANK                                                            
               )                                                                            
          GROUP BY RACE_NO                                                                  
          UNION ALL                                                                         
          SELECT 'TOTAL', '', '', '' FROM DUAL                                              
      ) R, 
      (   
     
       SELECT                                                                         
          RACE_NO,
            SUM(CASE 
                     WHEN POOL_CD = '001' AND RS_SEQ >= '2' THEN PAYOFF 
                     WHEN POOL_CD = '002' AND RS_SEQ >= '3' THEN PAYOFF 
                     WHEN POOL_CD = '004' AND RS_SEQ >= '2' THEN PAYOFF 
                     WHEN POOL_CD = '005' AND RS_SEQ >= '2' THEN PAYOFF 
                     WHEN POOL_CD = '006' AND RS_SEQ >= '2' THEN PAYOFF 
            END) AS SAME_PAYOFF_TOTAL, 
                               
            SUM(CASE WHEN POOL_CD = '001' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_001, 
            SUM(CASE WHEN POOL_CD = '002' AND RS_SEQ >= '3' THEN PAYOFF END) AS SAME_PAYOFF_002, 
            SUM(CASE WHEN POOL_CD = '004' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_004, 
            SUM(CASE WHEN POOL_CD = '005' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_005, 
            SUM(CASE WHEN POOL_CD = '006' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_006 
      FROM VW_SDL_RS                                                                
      WHERE 1=1                                                                          
          AND MEET_CD  = '003'                                                              
          AND STND_YEAR = ?      
          AND TMS   = ?      
          AND DAY_ORD  = ?      
      GROUP BY          
       RACE_NO                                                              
 
   ) E,                                                                                  
  (                                       
    SELECT DISTINCT RACE_NO           
    FROM TBEB_RACE_DOC@MRASYSLINK D        
      WHERE 1=1                          
          AND D.STND_YEAR= ? 
          AND D.TMS=? 
           AND D.DAY_ORD=? 
 
   ) Z                                   
  WHERE 1=1                                                                                    
      AND C.RACE_NO(+)=Z.RACE_NO                                                                
      AND B.RACE_NO(+)=Z.RACE_NO                                                            
      AND R.RACE_NO(+)=Z.RACE_NO                                                            
      AND D.RACE_NO(+)=Z.RACE_NO
      AND E.RACE_NO(+)=Z.RACE_NO                                                            
  ORDER BY Z.RACE_NO
 #String#2012#String#003#String#17#String#1#String#2012#String#003#String#17#String#1#String#2012#String#003#String#17#String#1#String#2012#String#17#String#1#String#2012#String#17#String#1#String#2012#String#17#String#1#
>
[I][UbiData][2012-07-22 11:07:12]	- Row size : 15
[I][UbiData][2012-07-22 11:07:12]	- Data
<
01^t3-5-6^t윤영근^t배혜민^t박광혁^t4.9^t1.5^t2.5^t15.2^t9.6^t12.6^t35611.7^t204009.4^t239621.1^t0^t241173.8^t-1552.7^t-.64^t^t^t^t^t^t^t^n02^t2-1-6^t사재준^t김민길^t이주영^t1.3^t1^t2.3^t5^t3.6^t8.6^t45014.1^t266961.6^t311975.7^t0^t306515.1^t5460.6^t1.78^t^t^t^t^t^t^t^n03^t5-1-3^t심상철^t최재원^t서지혜^t2.6^t1.2^t1.5^t4.1^t2^t1.8^t56343.3^t317613.8^t373957.1^t0^t367015.4^t6941.7^t1.89^t^t^t^t^t^t^t^n04^t3-6-4^t정인교^t유해광^t진석현^t3.5^t1.4^t3.7^t17.9^t13.6^t6.7^t68390.7^t353840.8^t422231.5^t0^t425410.1^t-3178.6^t-.75^t^t^t^t^t^t^t^n05^t6-5-1^t이승일^t강창효^t이종우^t7.8^t2.7^t4^t58.7^t25^t32.3^t77286.4^t382717.4^t460003.8^t0^t479149.9^t-19146.1^t-4^t^t^t^t^t^t^t^n06^t1-4-6^t이지수^t서화모^t오승철^t2.1^t1.2^t1.5^t5.1^t2.8^t23.3^t75287.3^t409594.4^t484881.7^t0^t469081.7^t15800^t3.37^t^t^t^t^t^t^t^n07^t6-2-1^t황이태^t민영건^t배혜민^t21.1^t7.4^t3.4^t84.1^t48^t14.6^t83973.8^t442296.2^t526270^t0^t515496.2^t10773.8^t2.09^t^t^t^t^t^t^t^n08^t4-1-6^t신동길^t우진수^t구현구^t1.5^t1.2^t2^t5^t3^t6.1^t87946.2^t465878.6^t553824.8^t0^t556565.3^t-2740.5^t-.49^t^t^t^t^t^t^t^n09^t2-4-1^t김정구^t손동민^t이흥우^t1.7^t1.2^t1.9^t4.5^t3.2^t3.3^t90588.3^t496773.3^t587361.6^t0^t548482.3^t38879.3^t7.09^t^t^t^t^t^t^t^n10^t1-6-5^t김영욱^t사재준^t윤영근^t1.9^t1.3^t1.5^t4.4^t2.6^t3.6^t105524.6^t548328.5^t653853.1^t0^t669189.8^t-15336.7^t-2.29^t^t^t^t^t^t^t^n11^t1-4-2^t심상철^t김민길^t박광혁^t1.8^t1.3^t3.6^t11.9^t8.6^t7.4^t102946.3^t570560.6^t673506.9^t0^t707765.4^t-34258.5^t-4.84^t^t^t^t^t^t^t^n12^t1-4-6^t경상수^t김선필^t최재원^t2.4^t1.4^t8.3^t30.6^t24.2^t21.1^t115328.7^t581139.4^t696468.1^t0^t682622.6^t13845.5^t2.03^t^t^t^t^t^t^t^n13^t5-3-1^t김효년^t문주엽^t주은석^t6^t2.3^t1.3^t14.7^t6.5^t3.3^t109989.5^t598526.2^t708515.7^t0^t702342.9^t6172.8^t.88^t^t^t^t^t^t^t^n14^t2-4-3^t구현구^t장영태^t강창효^t1.7^t1.5^t1.7^t5.2^t3.7^t4.2^t105198.1^t611299^t716497.1^t0^t698218.3^t18278.8^t2.62^t^t^t^t^t^t^t^n15^t3-5-1^t이태희^t어선규^t유해광^t2.2^t1.3^t1.5^t4^t2.5^t2.4^t105685.7^t645669.5^t751355.2^t0^t735842.1^t15513.1^t2.11^t^t^t^t^t^t^t^n
>
[I][UbiData][2012-07-22 11:07:12][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-07-22 11:07:12][DATA QUERY START]
[I][UbiData][2012-07-22 11:07:12]	- sql id : rsm2020_s02Today
[I][UbiData][2012-07-22 11:07:12]	- Db charset : KSC5601
[I][UbiData][2012-07-22 11:07:12]	- Sql
<
SELECT                                                                                          
           MST.GBN       
         , YEAR.DIV_TOTAL AS YEAR_TOTAL 
         , YEAR.REFUND    AS YEAR_REFUND 
         , TMS.D_1 
         , TMS.D_2   
         , TMS.D_3   
         , TMS.D_4   
         , TMS.D_5   
         , TMS.D_6   
         , TMS.D_7   
         , TMS.TOTAL 
         , PRE.TOTAL AS PRE_TOTAL 
         , NVL(TMS.TOTAL, 0) - NVL(PRE .TOTAL, 0) ADD_POOL 
         , CASE WHEN (NVL(PRE.TOTAL, 0) = 0) AND (NVL(TMS.TOTAL, 0) = 0) THEN 0                  
                WHEN NVL(PRE.TOTAL, 0) = 0                               THEN 100                
                WHEN NVL(TMS.TOTAL, 0) = 0                                THEN -100              
                ELSE ROUND((NVL(TMS.TOTAL, 0) - NVL(PRE.TOTAL, 0)) / NVL(PRE.TOTAL, 0) * 100, 2) 
           END ADD_RATE 
  FROM                                                                                           
           (                                                                                     
              SELECT                                                                             
                       ?  STND_YEAR                                                      
                     , '매출총액' GBN                                                            
              FROM   DUAL                                                                        
           ) MST                                                                                 
         , (                                                                                     
              SELECT                                                                             
                       TMS.STND_YEAR                                                             
                     , MIN(DECODE(TMS.D, 1, TMS.AMOUNT)) D_1                                     
                     , MIN(DECODE(TMS.D, 2, TMS.AMOUNT)) D_2                                     
                     , MIN(DECODE(TMS.D, 3, TMS.AMOUNT)) D_3                                     
                     , MIN(DECODE(TMS.D, 4, TMS.AMOUNT)) D_4                                     
                     , MIN(DECODE(TMS.D, 5, TMS.AMOUNT)) D_5                                     
                     , MIN(DECODE(TMS.D, 6, TMS.AMOUNT)) D_6                                     
                     , MIN(DECODE(TMS.D, 7, TMS.AMOUNT)) D_7                                     
                     , SUM(TMS.AMOUNT)                   TOTAL                                   
              FROM   (                                                                           
                          SELECT                                                                 
                                   TSP.STND_YEAR                                                 
                                 , TO_CHAR(TO_DATE(INFO.RACE_DAY, 'YYYYMMDD'), 'D') D            
                                 , SUM(TSP.POOL_TOTAL) AMOUNT                                    
                          FROM     VW_SDL_INFO INFO                                              
                                 , VW_SDL_PT       TSP                                         
                          WHERE  1=1
                          AND    INFO.STND_YEAR = TSP.STND_YEAR                                  
                          AND    INFO.MEET_CD    = TSP.MEET_CD                                   
                          AND    INFO.TMS       = TSP.TMS                                        
                          AND    INFO.DAY_ORD   = TSP.DAY_ORD                                    
                          AND    TSP.STND_YEAR  = ?   
                          AND    TSP.MEET_CD    = ?       
                          AND    TSP.TMS        = ?       
                          GROUP BY                                                               
                                   TSP.STND_YEAR                                                 
                                 , INFO.RACE_DAY                                                 
                     ) TMS                                                                       
              GROUP BY TMS.STND_YEAR                                                             
           ) TMS                                                                                 
         , (                                                                                     
              SELECT                                                                             
                       STND_YEAR                                                                 
                     , SUM(TSP.DIV_TOTAL) DIV_TOTAL                                              
                     , SUM(TSP.REFUND    ) REFUND                                                
              FROM   VW_SDL_DT_SUM       TSP                                                       
              WHERE  TSP.STND_YEAR  = ?                                                  
              AND    TSP.MEET_CD    = ?                                                    
              AND    TSP.TMS       <= ?                                                        
              GROUP BY                                                                           
                       STND_YEAR                                                                 
           ) YEAR                                                                                
         , (                                                                                     
              SELECT                                                                             
                       STND_YEAR                                                                 
                     , TMS                                                                       
                     , NVL(SUM(TSP.POOL_TOTAL), 0)  TOTAL                                        
              FROM   VW_SDL_PT       TSP                                                       
              WHERE  1=1
              AND TSP.STND_YEAR  = ? 
              AND    TSP.MEET_CD    = ?                                                    
              AND    TSP.TMS        = ?  - 1                                                   
              GROUP BY                                                                           
                       STND_YEAR                                                                 
                     , TMS                                                                       
           ) PRE                                                                                 
  WHERE  1=1
  AND   MST.STND_YEAR = TMS .STND_YEAR(+)                                                       
  AND    MST.STND_YEAR = YEAR.STND_YEAR(+)                                                       
  AND    MST.STND_YEAR = PRE .STND_YEAR(+)                                                       
  UNION ALL                                                                                      
  SELECT                                                                                         
           MST.GBN                                                                               
         , YEAR.DIV_TOTAL                   YEAR_TOTAL                                           
         , YEAR.REFUND                      YEAR_REFUND                                          
         , TMS.D_1                                                                               
         , TMS.D_2                                                                               
         , TMS.D_3                                                                               
         , TMS.D_4                                                                               
         , TMS.D_5                                                                               
         , TMS.D_6                                                                               
         , TMS.D_7                                                                               
         , TMS.TOTAL                                                                             
         , 0 PRE_TOTAL                                                                           
         , NVL(PRE .TOTAL, 0) - NVL(TMS.TOTAL, 0) ADD_POOL                                       
         , CASE WHEN (NVL(PRE.TOTAL, 0) = 0) AND (NVL(TMS.TOTAL, 0) = 0) THEN 0                  
                WHEN NVL(PRE.TOTAL, 0) = 0                               THEN -100               
                WHEN NVL(TMS.TOTAL, 0) = 0                                THEN 100               
                ELSE ROUND((NVL(PRE.TOTAL, 0) - NVL(TMS.TOTAL, 0)) / NVL(TMS.TOTAL, 0) * 100, 2) 
           END ADD_RATE                                                                          
  FROM                                                                                           
           (                                                                                     
              SELECT                                                                             
                       ?  -1 STND_YEAR                                                    
                     , '전년대비' GBN                                                            
              FROM   DUAL                                                                        
           ) MST                                                                                 
         , (                                                                                     
              SELECT                                                                             
                       TMS.STND_YEAR                                                             
                     , MIN(DECODE(TMS.D, 1, TMS.AMOUNT)) D_1                                     
                     , MIN(DECODE(TMS.D, 2, TMS.AMOUNT)) D_2                                     
                     , MIN(DECODE(TMS.D, 3, TMS.AMOUNT)) D_3                                     
                     , MIN(DECODE(TMS.D, 4, TMS.AMOUNT)) D_4                                     
                     , MIN(DECODE(TMS.D, 5, TMS.AMOUNT)) D_5                                     
                     , MIN(DECODE(TMS.D, 6, TMS.AMOUNT)) D_6                                     
                     , MIN(DECODE(TMS.D, 7, TMS.AMOUNT)) D_7                                     
                     , SUM(TMS.AMOUNT)                   TOTAL                                   
              FROM   (                                                                           
                          SELECT                                                                 
                                   TSP.STND_YEAR                                                 
                                 , TO_CHAR(TO_DATE(INFO.RACE_DAY, 'YYYYMMDD'), 'D') D            
                                 , SUM(TSP.POOL_TOTAL) AMOUNT                                    
                          FROM     VW_SDL_INFO INFO                                              
                                 , VW_SDL_PT       TSP                                         
                          WHERE  1=1
                          AND  INFO.STND_YEAR = TSP.STND_YEAR                                  
                          AND    INFO.MEET_CD    = TSP.MEET_CD                                   
                          AND    INFO.TMS       = TSP.TMS                                        
                          AND    INFO.DAY_ORD   = TSP.DAY_ORD                                    
                          AND    TSP.STND_YEAR  =  ?  -1                                   
                          AND    TSP.MEET_CD    = ?                                        
                          AND    TSP.TMS        = ?                                            
                          GROUP BY                                                               
                                   TSP.STND_YEAR                                                 
                                 , INFO.RACE_DAY                                                 
                     ) TMS                                                                       
              GROUP BY TMS.STND_YEAR                                                             
           ) TMS                                                                                 
         , (                                                                                     
              SELECT                                                                             
                       STND_YEAR                                                                 
                     , SUM(TSP.DIV_TOTAL) DIV_TOTAL                                              
                     , SUM(TSP.REFUND    ) REFUND                                                
              FROM   VW_SDL_DT_SUM       TSP                                                       
              WHERE  1=1
              AND TSP.STND_YEAR  = ?  -1                                               
              AND    TSP.MEET_CD    = ?                                                    
              AND    TSP.TMS       <= ?                                                        
              GROUP BY                                                                           
                       STND_YEAR                                                                 
           ) YEAR                                                                                
         , (                                                                                     
              SELECT                                                                             
                       STND_YEAR-1 STND_YEAR                                                     
                     , TMS                                                                       
                     , NVL(SUM(TSP.POOL_TOTAL), 0)  TOTAL                                        
              FROM   VW_SDL_PT       TSP                                                       
              WHERE  1=1
              AND TSP.STND_YEAR  = ?                                                  
              AND    TSP.MEET_CD    = ?                                                    
              AND    TSP.TMS        = ?                                                        
              GROUP BY                                                                           
                       STND_YEAR                                                                 
                     , TMS                                                                       
           ) PRE                                                                                 
  WHERE  1=1
  AND MST.STND_YEAR = TMS.STND_YEAR(+)                                                        
  AND    MST.STND_YEAR = YEAR.STND_YEAR(+)                                                       
  AND    MST.STND_YEAR = PRE.STND_YEAR(+)
 #String#2012#String#2012#String#003#String#17#String#2012#String#003#String#17#String#2012#String#003#String#17#String#2012#String#2012#String#003#String#17#String#2012#String#003#String#17#String#2012#String#003#String#17#
>
[I][UbiData][2012-07-22 11:07:12]	- Row size : 2
[I][UbiData][2012-07-22 11:07:12]	- Data
<
매출총액^t255807593000^t4674302200^t^t^t^t^t8160323400^t^t^t8160323400^t16874921600^t-8714598200^t-51.64^t^n전년대비^t298819077500^t5513386200^t^t^t^t8970408300^t10464906900^t^t^t19435315200^t0^t-11274991800^t-58.01^t^n
>
[I][UbiData][2012-07-22 11:07:12][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-07-22 11:07:12][DATA QUERY START]
[I][UbiData][2012-07-22 11:07:12]	- sql id : rsm2020_s04
[I][UbiData][2012-07-22 11:07:12]	- Db charset : KSC5601
[I][UbiData][2012-07-22 11:07:12]	- Sql
<
SELECT 
   ROW_ORDER,
   MANA_DESC, 
   TOTAL        
        ,SUN_NUM     
        ,TUE_NUM     
        ,WEN_NUM     
        ,THU_NUM     
        ,TOT_PRSN_NUM,    
        
        B_TOT_PRSN_NUM,          
        
        CASE 
              WHEN ROW_ORDER='2' THEN N_TOT_PRSN_NUM - TOT_PRSN_NUM
              ELSE PRSN_NUM_MINUS
        END PRSN_NUM_MINUS,          
        
        ROUND(CASE 
              WHEN ROW_ORDER='2' THEN (N_TOT_PRSN_NUM - TOT_PRSN_NUM)/TOT_PRSN_NUM*100
              ELSE PER
        END,2) AS PER             
  FROM
 (
  
  SELECT '1' AS ROW_ORDER,
    '입장인원' AS MANA_DESC,
     A.TMS                                                               
        ,TOT_PRSN_NUM                     
        ,MON_NUM 
              ,TUE_NUM 
              ,WEN_NUM 
              ,THU_NUM 
              ,FRI_NUM 
              ,SAT_NUM 
              ,SUN_NUM 
              ,B_TOT_PRSN_NUM
              ,(TOT_PRSN_NUM-B_TOT_PRSN_NUM) AS PRSN_NUM_MINUS
              ,DECODE(B_TOT_PRSN_NUM,0,0,(TOT_PRSN_NUM-B_TOT_PRSN_NUM)/B_TOT_PRSN_NUM*100)  AS PER
              ,TOTAL          
  
    FROM
    
    
    (
    
     SELECT   MAX(TMS) TMS
           ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
           ,NVL(SUM(A.ENT_PRSN_NUM ),0)         TOT_PRSN_NUM                                                      
           
          
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'2', A.ENT_PRSN_NUM,0 )) ,0) MON_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'3', A.ENT_PRSN_NUM,0 )) ,0) TUE_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'4', A.ENT_PRSN_NUM,0 )) ,0) WEN_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'5', A.ENT_PRSN_NUM,0 )) ,0) THU_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'6', A.ENT_PRSN_NUM,0 )) ,0) FRI_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'7', A.ENT_PRSN_NUM,0 )) ,0) SAT_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'1', A.ENT_PRSN_NUM,0 )) ,0) SUN_NUM       
    
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) =  ?  
                AND MEET_CD = ?   
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE 1=1
             AND STND_YEAR = ?  
                AND MEET_CD = ? 
                AND TMS  = ?  
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    GROUP BY B.TMS
    ) A,
    
    
    (
    
     SELECT   
            MAX(TMS) TMS
           ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
           ,NVL(SUM(A.ENT_PRSN_NUM ),0)         B_TOT_PRSN_NUM  
           
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) =  ?  
                AND MEET_CD = ?    
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE 1=1
             AND STND_YEAR = ?    
                AND MEET_CD = ? 
                AND TMS  = ?  - 1   
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    GROUP BY B.TMS
    ) B,
    
    (
    
     SELECT NVL(SUM(A.ENT_PRSN_NUM ),0)         TOTAL  
           
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) = ?  
                AND MEET_CD = ?   
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE STND_YEAR = ?  
                AND MEET_CD = ? 
                AND TMS <= ?  
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    )C
  UNION ALL 
  
  
  SELECT '2' AS ROW_ORDER,
    '전년대비' AS MANA_DESC,
     A.TMS                                                               
        ,TOT_PRSN_NUM                     
        ,MON_NUM 
              ,TUE_NUM 
              ,WEN_NUM 
              ,THU_NUM 
              ,FRI_NUM 
              ,SAT_NUM 
              ,SUN_NUM 
              ,B_TOT_PRSN_NUM
              ,(TOT_PRSN_NUM-B_TOT_PRSN_NUM) AS PRSN_NUM_MINUS
              ,DECODE(B_TOT_PRSN_NUM,0,0,(TOT_PRSN_NUM-B_TOT_PRSN_NUM)/B_TOT_PRSN_NUM*100)  AS PER
              ,TOT          
  
    FROM
    
    
    (
    
     SELECT   MAX(TMS) TMS
           ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
           ,NVL(SUM(A.ENT_PRSN_NUM ),0)         TOT_PRSN_NUM                                                      
           
          
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'2', A.ENT_PRSN_NUM,0 )) ,0) MON_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'3', A.ENT_PRSN_NUM,0 )) ,0) TUE_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'4', A.ENT_PRSN_NUM,0 )) ,0) WEN_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'5', A.ENT_PRSN_NUM,0 )) ,0) THU_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'6', A.ENT_PRSN_NUM,0 )) ,0) FRI_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'7', A.ENT_PRSN_NUM,0 )) ,0) SAT_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'1', A.ENT_PRSN_NUM,0 )) ,0) SUN_NUM       
    
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) = ?  - 1  
                AND MEET_CD    = ?   
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE STND_YEAR = ?  - 1  
                AND MEET_CD =?  
                AND TMS  = ?    
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    GROUP BY B.TMS
    ) A,
    
    
    (
    
     SELECT   
            MAX(TMS) TMS
           ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
           ,NVL(SUM(A.ENT_PRSN_NUM ),0)         B_TOT_PRSN_NUM  
           
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) = ?  -1 
                AND MEET_CD = ?     
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE STND_YEAR = ?  - 1  
                AND MEET_CD = ? 
                AND TMS  = ?  - 1  
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    GROUP BY B.TMS
    ) B,
    
    (
    
     SELECT NVL(SUM(A.ENT_PRSN_NUM ),0)         TOT  
           
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) =  ?  -1 
                AND MEET_CD = '003'
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE STND_YEAR = ?  -1  
                AND MEET_CD = ? 
                AND TMS  <= ?   
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    )C
  ),
  (
  SELECT SUM(A.ENT_PRSN_NUM ) AS N_TOT_PRSN_NUM
      FROM 
          TBRC_STAY_MANA  A,       
          VW_SDL_INFO B
      WHERE 1 =1
        AND A.RACE_DT(+) = B.RACE_DAY
        AND B.STND_YEAR =  ?  
        AND B.MEET_CD = ?    
        AND B.TMS  = ?       
  )BB  
 ORDER BY MANA_DESC
 #String#2012#String#003#String#2012#String#003#String#17#String#2012#String#003#String#2012#String#003#String#17#String#2012#String#003#String#2012#String#003#String#17#String#2012#String#003#String#2012#String#003#String#17#String#2012#String#003#String#2012#String#003#String#17#String#2012#String#2012#String#003#String#17#String#2012#String#003#String#17#
>
[I][UbiData][2012-07-22 11:07:14]	- Row size : 2
[I][UbiData][2012-07-22 11:07:14]	- Data
<
1^t입장인원^t1028491^t0^t0^t0^t33456^t33456^t69203^t-35747^t-51.66^t^n2^t전년대비^t1417977^t0^t0^t44040^t44345^t88385^t80393^t-54929^t-62.15^t^n
>
[I][UbiData][2012-07-22 11:07:14][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-07-22 11:07:14][DATA QUERY START]
[I][UbiData][2012-07-22 11:07:14]	- sql id : rsm2020_s07
[I][UbiData][2012-07-22 11:07:14]	- Db charset : KSC5601
[I][UbiData][2012-07-22 11:07:14]	- Sql
<
SELECT  
   '0~'||BB.RACE_NO||'R' AS RACE_DESC,
   DECODE(LEV,1,'인원','점유율') AS MANA_DESC,
      DECODE(LEV,1,INWON_12,DECODE(INWON_TOTAL,0,0,ROUND(INWON_12/INWON_TOTAL*100,2))) AS INWON_12, 
      DECODE(LEV,1,INWON_13,DECODE(INWON_TOTAL,0,0,ROUND(INWON_13/INWON_TOTAL*100,2))) AS INWON_13, 
      DECODE(LEV,1,INWON_14,DECODE(INWON_TOTAL,0,0,ROUND(INWON_14/INWON_TOTAL*100,2))) AS INWON_14, 
      DECODE(LEV,1,INWON_16,DECODE(INWON_TOTAL,0,0,ROUND(INWON_16/INWON_TOTAL*100,2))) AS INWON_16, 
      DECODE(LEV,1,INWON_19,DECODE(INWON_TOTAL,0,0,ROUND(INWON_19/INWON_TOTAL*100,2))) AS INWON_19, 
      DECODE(LEV,1,INWON_20,DECODE(INWON_TOTAL,0,0,ROUND(INWON_20/INWON_TOTAL*100,2))) AS INWON_20, 
      DECODE(LEV,1,INWON_22,DECODE(INWON_TOTAL,0,0,ROUND(INWON_22/INWON_TOTAL*100,2))) AS INWON_22, 
      DECODE(LEV,1,INWON_23,DECODE(INWON_TOTAL,0,0,ROUND(INWON_23/INWON_TOTAL*100,2))) AS INWON_23, 
      DECODE(LEV,1,INWON_24,DECODE(INWON_TOTAL,0,0,ROUND(INWON_24/INWON_TOTAL*100,2))) AS INWON_24, 
      DECODE(LEV,1,INWON_25,DECODE(INWON_TOTAL,0,0,ROUND(INWON_25/INWON_TOTAL*100,2))) AS INWON_25, 
      DECODE(LEV,1,INWON_26,DECODE(INWON_TOTAL,0,0,ROUND(INWON_26/INWON_TOTAL*100,2))) AS INWON_26, 
      DECODE(LEV,1,INWON_27,DECODE(INWON_TOTAL,0,0,ROUND(INWON_27/INWON_TOTAL*100,2))) AS INWON_27, 
      DECODE(LEV,1,INWON_28,DECODE(INWON_TOTAL,0,0,ROUND(INWON_28/INWON_TOTAL*100,2))) AS INWON_28, 
      DECODE(LEV,1,INWON_100,DECODE(INWON_TOTAL,0,0,ROUND(INWON_100/INWON_TOTAL*100,2))) AS INWON_100, 
      DECODE(LEV,1,INWON_101,DECODE(INWON_TOTAL,0,0,ROUND(INWON_101/INWON_TOTAL*100,2))) AS INWON_101, 
      DECODE(LEV,1,INWON_102,DECODE(INWON_TOTAL,0,0,ROUND(INWON_102/INWON_TOTAL*100,2))) AS INWON_102, 
      DECODE(LEV,1,INWON_103,DECODE(INWON_TOTAL,0,0,ROUND(INWON_103/INWON_TOTAL*100,2))) AS INWON_103, 
      DECODE(LEV,1,INWON_SUM,DECODE(INWON_TOTAL,0,0,ROUND(INWON_SUM/INWON_TOTAL*100,2))) AS INWON_TOTAL 
  FROM
 (
             SELECT  
        SUM(CASE WHEN BRNC_CD='12' THEN INWON END) AS INWON_12, 
        SUM(CASE WHEN BRNC_CD='13' THEN INWON END) AS INWON_13, 
        SUM(CASE WHEN BRNC_CD='14' THEN INWON END) AS INWON_14, 
        SUM(CASE WHEN BRNC_CD='16' THEN INWON END) AS INWON_16, 
        SUM(CASE WHEN BRNC_CD='19' THEN INWON END) AS INWON_19, 
        SUM(CASE WHEN BRNC_CD='20' THEN INWON END) AS INWON_20, 
        SUM(CASE WHEN BRNC_CD='22' THEN INWON END) AS INWON_22, 
        SUM(CASE WHEN BRNC_CD='23' THEN INWON END) AS INWON_23, 
        SUM(CASE WHEN BRNC_CD='24' THEN INWON END) AS INWON_24, 
        SUM(CASE WHEN BRNC_CD='25' THEN INWON END) AS INWON_25, 
        SUM(CASE WHEN BRNC_CD='26' THEN INWON END) AS INWON_26, 
        SUM(CASE WHEN BRNC_CD='27' THEN INWON END) AS INWON_27, 
        SUM(CASE WHEN BRNC_CD='28' THEN INWON END) AS INWON_28, 
        SUM(CASE WHEN BRNC_CD='100' THEN INWON END) AS INWON_100, 
        SUM(CASE WHEN BRNC_CD='101' THEN INWON END) AS INWON_101, 
        SUM(CASE WHEN BRNC_CD='102' THEN INWON END) AS INWON_102, 
        SUM(CASE WHEN BRNC_CD='103' THEN INWON END) AS INWON_103, 
        SUM(INWON ) AS INWON_TOTAL,
        SUM(CASE WHEN BRNC_CD='12' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='13' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='14' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='16' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='19' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='20' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='22' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='23' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='24' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='25' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='26' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='27' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='28' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='100' THEN INWON END) + 
                 SUM(CASE WHEN BRNC_CD='101' THEN INWON END) + 
                 SUM(CASE WHEN BRNC_CD='102' THEN INWON END) +
                 SUM(CASE WHEN BRNC_CD='103' THEN INWON END)  AS INWON_SUM 
     FROM
    (
    SELECT C.CD_NM, 
           E.BRNC_CD,                                      
            SUM( E.ENT_PRSN_NUM) INWON 
        FROM                                                   
         VW_SDL_INFO R       
         ,TBRC_STAY_MANA E, 
         TBRK_SPEC_CD C                      
        WHERE  1=1
           AND R.MEET_CD  = ?  
        AND R.STND_YEAR(+) = ?  
          AND R.TMS(+)   = ?  
          AND R.DAY_ORD(+) = ?  
         AND E.MEET_CD='003'                        
         AND E.RACE_DT=R.RACE_DAY                 
         AND C.GRP_CD IN ('018','032')                      
         AND C.CD=E.BRNC_CD                
         
        GROUP BY E.BRNC_CD,C.CD_NM          
        ORDER BY E.BRNC_CD
    )A
   )AA,
 (
  SELECT                                                                   
          MAX(RACE_NO)  AS RACE_NO
          
   FROM   (                                                                 
               SELECT                                                       
                        TOR.RACE_NO                                         
                      , TOR.RACE_REG_NO                                     
                      , TOR.RACER_NO                                        
                      , TOR.RANK                                            
                      , TRM.NM_KOR                                          
                      , RANK() OVER (PARTITION BY TOR.RACE_NO               
                                                , TOR.RANK                  
                                         ORDER BY TOR.RACE_REG_NO) SEQ      
               FROM     TBEB_ORGAN@MRASYSLINK        TOR                        
                      , TBEC_RACER_MASTER@MRASYSLINK TRM                        
               WHERE 1=1                                                        
               
               AND    TOR.RACER_NO   = TRM.RACER_NO                         
               AND    TOR.STND_YEAR  = ?  
               AND    TOR.MBR_CD     = '001'                                
               AND    TOR.TMS        = ?  
               
               AND    TOR.RANK BETWEEN 1                                    
                                   AND 3                                    
          )                                                                 
   START WITH SEQ = 1                                                       
   CONNECT BY PRIOR SEQ = SEQ - 1                                           
   AND PRIOR RACE_NO = RACE_NO AND RANK = RANK                           
 )BB , (SELECT LEVEL LEV FROM DUAL CONNECT BY LEVEL <=2 ) DU
 #String#003#String#2012#String#17#String#1#String#2012#String#17#
>
[I][UbiData][2012-07-22 11:07:14]	- Row size : 2
[I][UbiData][2012-07-22 11:07:14]	- Data
<
0~15R^t인원^t2680^t2455^t3022^t3198^t3442^t2948^t1271^t1987^t1627^t1257^t988^t3289^t1143^t445^t503^t^t^t^t^n0~15R^t점유율^t8.01^t7.34^t9.03^t9.56^t10.29^t8.81^t3.8^t5.94^t4.86^t3.76^t2.95^t9.83^t3.42^t1.33^t1.5^t^t^t^t^n
>
[I][UbiData][2012-07-22 11:07:14][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-07-22 11:07:14][DATA QUERY START]
[I][UbiData][2012-07-22 11:07:14]	- sql id : rsm2020_s08
[I][UbiData][2012-07-22 11:07:14]	- Db charset : KSC5601
[I][UbiData][2012-07-22 11:07:14]	- Sql
<
SELECT                                       
       STND_YEAR,  
       TMS,           
       DAY_ORD,   
       SPEC_DESC   
  FROM TBRD_RACE_SPEC_DESC 
  WHERE 1=1
       AND STND_YEAR = ?  
       AND TMS  = ?  
       AND DAY_ORD = ?  
       AND MEET_CD   = ?  
 UNION ALL
 SELECT 
       ' ', 999, 999, ' '
 FROM DUAL          
 ORDER BY TMS
 #String#2012#String#17#String#1#String#003#
>
[I][UbiData][2012-07-22 11:07:14]	- Row size : 1
[I][UbiData][2012-07-22 11:07:14]	- Data
<
 ^t999^t999^t ^t^n
>
[I][UbiData][2012-07-22 11:07:14][DATA QUERY END]
--------------------------------------------------------------------------------


[I][UbiForm][2012-07-22 11:07:19][REQUEST FILE]
[I][UbiForm][2012-07-22 11:07:19]	- Report : /web/waspage/usrbm/report/rsm/rsm2020_1.jrf
[I][UbiForm][2012-07-22 11:07:19]	- Common : /web/waspage/usrbm/report/rsm/property/commonitem.xml [Not found]
--------------------------------------------------------------------------------


[I][UbiData][2012-07-22 11:07:19][REQUEST FILE]
[I][UbiData][2012-07-22 11:07:19]	- Report : rsm2020_1.jrf
--------------------------------------------------------------------------------
[I][UbiData][2012-07-22 11:07:19][DB CONNECT]
[I][UbiData][2012-07-22 11:07:19]	- Type : nonlookup
[I][UbiData][2012-07-22 11:07:19]	- Db id : RBM
[I][UbiData][2012-07-22 11:07:19]	- Sql id : SQL
[I][UbiData][2012-07-22 11:07:19]	- Datasource : jdbc/RBM
[I][UbiData][2012-07-22 11:07:19]	- Status : Success
--------------------------------------------------------------------------------
[I][UbiData][2012-07-22 11:07:19][DATA QUERY START]
[I][UbiData][2012-07-22 11:07:19]	- sql id : SQL
[I][UbiData][2012-07-22 11:07:19]	- Db charset : KSC5601
[I][UbiData][2012-07-22 11:07:19]	- Sql
<
SELECT TO_CHAR(TO_NUMBER(RACE_NO))||'경주' AS RACE_NO,
                ROW_NUM as gbn,
                GBN_DESC AS GBN_DESC,
                SUM(POOL_TOTAL) - SUM(REFUND) AS TOT      
         FROM TBES_SDL_PT P,
             (
                 SELECT ROWNUM AS ROW_NUM, A.*
                 FROM   (
                     SELECT MEET_CD, STND_YEAR, TMS, DAY_ORD, SUBSTR(STND_YEAR,3,2)||'년 '||TMS||'회 '||DAY_ORD||'일차' AS GBN_DESC
                     FROM (
                         SELECT MEET_CD, STND_YEAR, TMS, DAY_ORD
                         FROM VW_SDL_INFO
                         WHERE MEET_CD = '003' 
                          AND  STND_YEAR||TMS||DAY_ORD <= ? ||? ||? 
                         ORDER BY STND_YEAR DESC, TMS DESC
                     )
                     WHERE ROWNUM < 4
                     UNION ALL
                     SELECT MEET_CD, STND_YEAR, TMS, DAY_ORD, SUBSTR(STND_YEAR,3,2)||'년 '||TMS||'회 '||DAY_ORD||'일차' AS GBN_DESC
                     FROM VW_SDL_INFO
                     WHERE MEET_CD = '003' 
                     AND   STND_YEAR= ?  -1
                     AND   TMS = ? 
                     AND   DAY_ORD = ? 
                     ORDER BY 1,2,3
                     ) A
             ) I
         WHERE P.MEET_CD(+)     = I.MEET_CD
           AND P.STND_YEAR(+)   = I.STND_YEAR
           AND P.TMS(+)         = I.TMS
           AND P.DAY_ORD(+)     = I.DAY_ORD
         GROUP BY ROW_NUM, RACE_NO, GBN_DESC  
         ORDER BY P.RACE_NO, I.ROW_NUM
 #String#2012#String#17#String#1#String#2012#String#17#String#1#
>
[I][UbiData][2012-07-22 11:07:19]	- Row size : 60
[I][UbiData][2012-07-22 11:07:19]	- Data
<
1경주^t1^t11년 17회 1일차^t268660300^t^n1경주^t2^t12년 16회 1일차^t241173800^t^n1경주^t3^t12년 16회 2일차^t259282100^t^n1경주^t4^t12년 17회 1일차^t239621100^t^n2경주^t1^t11년 17회 1일차^t350562300^t^n2경주^t2^t12년 16회 1일차^t306515100^t^n2경주^t3^t12년 16회 2일차^t231469800^t^n2경주^t4^t12년 17회 1일차^t311975700^t^n3경주^t1^t11년 17회 1일차^t14313200^t^n3경주^t2^t12년 16회 1일차^t367015400^t^n3경주^t3^t12년 16회 2일차^t321854900^t^n3경주^t4^t12년 17회 1일차^t373957100^t^n4경주^t1^t11년 17회 1일차^t459300500^t^n4경주^t2^t12년 16회 1일차^t425410100^t^n4경주^t3^t12년 16회 2일차^t463079300^t^n4경주^t4^t12년 17회 1일차^t422231500^t^n5경주^t1^t11년 17회 1일차^t552993900^t^n5경주^t2^t12년 16회 1일차^t479149900^t^n5경주^t3^t12년 16회 2일차^t490714300^t^n5경주^t4^t12년 17회 1일차^t460003800^t^n6경주^t1^t11년 17회 1일차^t559787300^t^n6경주^t2^t12년 16회 1일차^t469081700^t^n6경주^t3^t12년 16회 2일차^t532748500^t^n6경주^t4^t12년 17회 1일차^t484881700^t^n7경주^t1^t11년 17회 1일차^t592684400^t^n7경주^t2^t12년 16회 1일차^t515496200^t^n7경주^t3^t12년 16회 2일차^t582173200^t^n7경주^t4^t12년 17회 1일차^t526270000^t^n8경주^t1^t11년 17회 1일차^t596478400^t^n8경주^t2^t12년 16회 1일차^t556565300^t^n8경주^t3^t12년 16회 2일차^t623594000^t^n8경주^t4^t12년 17회 1일차^t553824800^t^n9경주^t1^t11년 17회 1일차^t672283400^t^n9경주^t2^t12년 16회 1일차^t548482300^t^n9경주^t3^t12년 16회 2일차^t632774600^t^n9경주^t4^t12년 17회 1일차^t587361600^t^n10경주^t1^t11년 17회 1일차^t800152200^t^n10경주^t2^t12년 16회 1일차^t669189800^t^n10경주^t3^t12년 16회 2일차^t731305300^t^n10경주^t4^t12년 17회 1일차^t653853100^t^n11경주^t1^t11년 17회 1일차^t769875300^t^n11경주^t2^t12년 16회 1일차^t707765400^t^n11경주^t3^t12년 16회 2일차^t783729800^t^n11경주^t4^t12년 17회 1일차^t673506900^t^n12경주^t1^t11년 17회 1일차^t815432500^t^n12경주^t2^t12년 16회 1일차^t682622600^t^n12경주^t3^t12년 16회 2일차^t720005800^t^n12경주^t4^t12년 17회 1일차^t696468100^t^n13경주^t1^t11년 17회 1일차^t844542300^t^n13경주^t2^t12년 16회 1일차^t702342900^t^n13경주^t3^t12년 16회 2일차^t759862200^t^n13경주^t4^t12년 17회 1일차^t708515700^t^n14경주^t1^t11년 17회 1일차^t817777100^t^n14경주^t2^t12년 16회 1일차^t698218300^t^n14경주^t3^t12년 16회 2일차^t786822900^t^n14경주^t4^t12년 17회 1일차^t716497100^t^n15경주^t1^t11년 17회 1일차^t855565200^t^n15경주^t2^t12년 16회 1일차^t735842100^t^n15경주^t3^t12년 16회 2일차^t850634000^t^n15경주^t4^t12년 17회 1일차^t751355200^t^n
>
[I][UbiData][2012-07-22 11:07:19][DATA QUERY END]
--------------------------------------------------------------------------------


[I][UbiForm][2012-07-22 11:07:40][REQUEST FILE]
[I][UbiForm][2012-07-22 11:07:40]	- Report : /web/waspage/usrbm/report/rsm/rsm2020_2.jrf
[I][UbiForm][2012-07-22 11:07:40]	- Common : /web/waspage/usrbm/report/rsm/property/commonitem.xml [Not found]
--------------------------------------------------------------------------------


[I][UbiData][2012-07-22 11:07:40][REQUEST FILE]
[I][UbiData][2012-07-22 11:07:40]	- Report : rsm2020_2.jrf
--------------------------------------------------------------------------------
[I][UbiData][2012-07-22 11:07:40][DB CONNECT]
[I][UbiData][2012-07-22 11:07:40]	- Type : nonlookup
[I][UbiData][2012-07-22 11:07:40]	- Db id : RBM
[I][UbiData][2012-07-22 11:07:40]	- Sql id : SQL
[I][UbiData][2012-07-22 11:07:40]	- Datasource : jdbc/RBM
[I][UbiData][2012-07-22 11:07:40]	- Status : Success
--------------------------------------------------------------------------------
[I][UbiData][2012-07-22 11:07:40][DATA QUERY START]
[I][UbiData][2012-07-22 11:07:40]	- sql id : SQL
[I][UbiData][2012-07-22 11:07:40]	- Db charset : KSC5601
[I][UbiData][2012-07-22 11:07:40]	- Sql
<
SELECT TO_CHAR(TO_NUMBER(RACE_NO))||'경주' AS RACE_NO,
                ROW_NUM as gbn,
                GBN_DESC AS GBN_DESC,
                SUM(POOL_TOTAL) - SUM(REFUND) AS TOT      
         FROM VW_SDL_PT P,
             (
                 SELECT ROWNUM AS ROW_NUM, A.*
                 FROM   (
                     SELECT MEET_CD, STND_YEAR, TMS, DAY_ORD, SUBSTR(STND_YEAR,3,2)||'년 '||TMS||'회 '||DAY_ORD||'일차' AS GBN_DESC
                     FROM (
                         SELECT MEET_CD, STND_YEAR, TMS, DAY_ORD
                         FROM VW_SDL_INFO
                         WHERE MEET_CD = '003' 
                          AND  STND_YEAR||TMS||DAY_ORD <= ? ||? ||? 
                         ORDER BY STND_YEAR DESC, TMS DESC
                     )
                     WHERE ROWNUM < 5
                     UNION ALL
                     SELECT MEET_CD, STND_YEAR, TMS, DAY_ORD, SUBSTR(STND_YEAR,3,2)||'년 '||TMS||'회 '||DAY_ORD||'일차' AS GBN_DESC
                     FROM VW_SDL_INFO
                     WHERE MEET_CD = '003' 
                     AND   STND_YEAR= ?  -1
                     AND   TMS = ? 
                     AND   DAY_ORD = ? 
                     ORDER BY 1,2,3
                     ) A
             ) I
         WHERE P.MEET_CD(+)     = I.MEET_CD
           AND P.STND_YEAR(+)   = I.STND_YEAR
           AND P.TMS(+)         = I.TMS
           AND P.DAY_ORD(+)     = I.DAY_ORD
         GROUP BY ROW_NUM, RACE_NO, GBN_DESC  
         ORDER BY P.RACE_NO, I.ROW_NUM
 #String#2012#String#16#String#2#String#2012#String#16#String#2#
>
[I][UbiData][2012-07-22 11:07:40]	- Row size : 75
[I][UbiData][2012-07-22 11:07:40]	- Data
<
1경주^t1^t11년 16회 2일차^t249782800^t^n1경주^t2^t12년 15회 1일차^t234492400^t^n1경주^t3^t12년 15회 2일차^t232560800^t^n1경주^t4^t12년 16회 1일차^t241173800^t^n1경주^t5^t12년 16회 2일차^t259282100^t^n2경주^t1^t11년 16회 2일차^t314015300^t^n2경주^t2^t12년 15회 1일차^t295234400^t^n2경주^t3^t12년 15회 2일차^t296139000^t^n2경주^t4^t12년 16회 1일차^t306515100^t^n2경주^t5^t12년 16회 2일차^t231469800^t^n3경주^t1^t11년 16회 2일차^t384118300^t^n3경주^t2^t12년 15회 1일차^t359416000^t^n3경주^t3^t12년 15회 2일차^t339825700^t^n3경주^t4^t12년 16회 1일차^t367015400^t^n3경주^t5^t12년 16회 2일차^t321854900^t^n4경주^t1^t11년 16회 2일차^t431433200^t^n4경주^t2^t12년 15회 1일차^t406931400^t^n4경주^t3^t12년 15회 2일차^t407353300^t^n4경주^t4^t12년 16회 1일차^t425410100^t^n4경주^t5^t12년 16회 2일차^t463079300^t^n5경주^t1^t11년 16회 2일차^t493936900^t^n5경주^t2^t12년 15회 1일차^t451307700^t^n5경주^t3^t12년 15회 2일차^t474905000^t^n5경주^t4^t12년 16회 1일차^t479149900^t^n5경주^t5^t12년 16회 2일차^t490714300^t^n6경주^t1^t11년 16회 2일차^t491476200^t^n6경주^t2^t12년 15회 1일차^t464751000^t^n6경주^t3^t12년 15회 2일차^t475840000^t^n6경주^t4^t12년 16회 1일차^t469081700^t^n6경주^t5^t12년 16회 2일차^t532748500^t^n7경주^t1^t11년 16회 2일차^t569601400^t^n7경주^t2^t12년 15회 1일차^t528288800^t^n7경주^t3^t12년 15회 2일차^t534964200^t^n7경주^t4^t12년 16회 1일차^t515496200^t^n7경주^t5^t12년 16회 2일차^t582173200^t^n8경주^t1^t11년 16회 2일차^t600974300^t^n8경주^t2^t12년 15회 1일차^t568572300^t^n8경주^t3^t12년 15회 2일차^t593699400^t^n8경주^t4^t12년 16회 1일차^t556565300^t^n8경주^t5^t12년 16회 2일차^t623594000^t^n9경주^t1^t11년 16회 2일차^t635879400^t^n9경주^t2^t12년 15회 1일차^t536810900^t^n9경주^t3^t12년 15회 2일차^t595029100^t^n9경주^t4^t12년 16회 1일차^t548482300^t^n9경주^t5^t12년 16회 2일차^t632774600^t^n10경주^t1^t11년 16회 2일차^t700021300^t^n10경주^t2^t12년 15회 1일차^t647283800^t^n10경주^t3^t12년 15회 2일차^t691130400^t^n10경주^t4^t12년 16회 1일차^t669189800^t^n10경주^t5^t12년 16회 2일차^t731305300^t^n11경주^t1^t11년 16회 2일차^t766648900^t^n11경주^t2^t12년 15회 1일차^t697448800^t^n11경주^t3^t12년 15회 2일차^t717573400^t^n11경주^t4^t12년 16회 1일차^t707765400^t^n11경주^t5^t12년 16회 2일차^t783729800^t^n12경주^t1^t11년 16회 2일차^t753234100^t^n12경주^t2^t12년 15회 1일차^t706560800^t^n12경주^t3^t12년 15회 2일차^t699808300^t^n12경주^t4^t12년 16회 1일차^t682622600^t^n12경주^t5^t12년 16회 2일차^t720005800^t^n13경주^t1^t11년 16회 2일차^t787348300^t^n13경주^t2^t12년 15회 1일차^t704730200^t^n13경주^t3^t12년 15회 2일차^t743755500^t^n13경주^t4^t12년 16회 1일차^t702342900^t^n13경주^t5^t12년 16회 2일차^t759862200^t^n14경주^t1^t11년 16회 2일차^t871575300^t^n14경주^t2^t12년 15회 1일차^t706761400^t^n14경주^t3^t12년 15회 2일차^t769820300^t^n14경주^t4^t12년 16회 1일차^t698218300^t^n14경주^t5^t12년 16회 2일차^t786822900^t^n15경주^t1^t11년 16회 2일차^t870905800^t^n15경주^t2^t12년 15회 1일차^t743318600^t^n15경주^t3^t12년 15회 2일차^t829662200^t^n15경주^t4^t12년 16회 1일차^t735842100^t^n15경주^t5^t12년 16회 2일차^t850634000^t^n
>
[I][UbiData][2012-07-22 11:07:40][DATA QUERY END]
--------------------------------------------------------------------------------


[I][UbiForm][2012-07-22 11:31:35][REQUEST FILE]
[I][UbiForm][2012-07-22 11:31:35]	- Report : /web/waspage/usrbm/report/rsm/rsm2020_1.jrf
[I][UbiForm][2012-07-22 11:31:35]	- Common : /web/waspage/usrbm/report/rsm/property/commonitem.xml [Not found]
--------------------------------------------------------------------------------


[I][UbiData][2012-07-22 11:31:35][REQUEST FILE]
[I][UbiData][2012-07-22 11:31:35]	- Report : rsm2020_1.jrf
--------------------------------------------------------------------------------
[I][UbiData][2012-07-22 11:31:35][DB CONNECT]
[I][UbiData][2012-07-22 11:31:35]	- Type : nonlookup
[I][UbiData][2012-07-22 11:31:35]	- Db id : RBM
[I][UbiData][2012-07-22 11:31:35]	- Sql id : SQL
[I][UbiData][2012-07-22 11:31:35]	- Datasource : jdbc/RBM
[I][UbiData][2012-07-22 11:31:35]	- Status : Success
--------------------------------------------------------------------------------
[I][UbiData][2012-07-22 11:31:35][DATA QUERY START]
[I][UbiData][2012-07-22 11:31:35]	- sql id : SQL
[I][UbiData][2012-07-22 11:31:35]	- Db charset : KSC5601
[I][UbiData][2012-07-22 11:31:35]	- Sql
<
SELECT TO_CHAR(TO_NUMBER(RACE_NO))||'경주' AS RACE_NO,
                ROW_NUM as gbn,
                GBN_DESC AS GBN_DESC,
                SUM(POOL_TOTAL) - SUM(REFUND) AS TOT      
         FROM TBES_SDL_PT P,
             (
                 SELECT ROWNUM AS ROW_NUM, A.*
                 FROM   (
                     SELECT MEET_CD, STND_YEAR, TMS, DAY_ORD, SUBSTR(STND_YEAR,3,2)||'년 '||TMS||'회 '||DAY_ORD||'일차' AS GBN_DESC
                     FROM (
                         SELECT MEET_CD, STND_YEAR, TMS, DAY_ORD
                         FROM VW_SDL_INFO
                         WHERE MEET_CD = '003' 
                          AND  STND_YEAR||TMS||DAY_ORD <= ? ||? ||? 
                         ORDER BY STND_YEAR DESC, TMS DESC
                     )
                     WHERE ROWNUM < 4
                     UNION ALL
                     SELECT MEET_CD, STND_YEAR, TMS, DAY_ORD, SUBSTR(STND_YEAR,3,2)||'년 '||TMS||'회 '||DAY_ORD||'일차' AS GBN_DESC
                     FROM VW_SDL_INFO
                     WHERE MEET_CD = '003' 
                     AND   STND_YEAR= ?  -1
                     AND   TMS = ? 
                     AND   DAY_ORD = ? 
                     ORDER BY 1,2,3
                     ) A
             ) I
         WHERE P.MEET_CD(+)     = I.MEET_CD
           AND P.STND_YEAR(+)   = I.STND_YEAR
           AND P.TMS(+)         = I.TMS
           AND P.DAY_ORD(+)     = I.DAY_ORD
         GROUP BY ROW_NUM, RACE_NO, GBN_DESC  
         ORDER BY P.RACE_NO, I.ROW_NUM
 #String#2012#String#17#String#1#String#2012#String#17#String#1#
>
[I][UbiData][2012-07-22 11:31:35]	- Row size : 60
[I][UbiData][2012-07-22 11:31:35]	- Data
<
1경주^t1^t11년 17회 1일차^t268660300^t^n1경주^t2^t12년 16회 1일차^t241173800^t^n1경주^t3^t12년 16회 2일차^t259282100^t^n1경주^t4^t12년 17회 1일차^t239621100^t^n2경주^t1^t11년 17회 1일차^t350562300^t^n2경주^t2^t12년 16회 1일차^t306515100^t^n2경주^t3^t12년 16회 2일차^t231469800^t^n2경주^t4^t12년 17회 1일차^t311975700^t^n3경주^t1^t11년 17회 1일차^t14313200^t^n3경주^t2^t12년 16회 1일차^t367015400^t^n3경주^t3^t12년 16회 2일차^t321854900^t^n3경주^t4^t12년 17회 1일차^t373957100^t^n4경주^t1^t11년 17회 1일차^t459300500^t^n4경주^t2^t12년 16회 1일차^t425410100^t^n4경주^t3^t12년 16회 2일차^t463079300^t^n4경주^t4^t12년 17회 1일차^t422231500^t^n5경주^t1^t11년 17회 1일차^t552993900^t^n5경주^t2^t12년 16회 1일차^t479149900^t^n5경주^t3^t12년 16회 2일차^t490714300^t^n5경주^t4^t12년 17회 1일차^t460003800^t^n6경주^t1^t11년 17회 1일차^t559787300^t^n6경주^t2^t12년 16회 1일차^t469081700^t^n6경주^t3^t12년 16회 2일차^t532748500^t^n6경주^t4^t12년 17회 1일차^t484881700^t^n7경주^t1^t11년 17회 1일차^t592684400^t^n7경주^t2^t12년 16회 1일차^t515496200^t^n7경주^t3^t12년 16회 2일차^t582173200^t^n7경주^t4^t12년 17회 1일차^t526270000^t^n8경주^t1^t11년 17회 1일차^t596478400^t^n8경주^t2^t12년 16회 1일차^t556565300^t^n8경주^t3^t12년 16회 2일차^t623594000^t^n8경주^t4^t12년 17회 1일차^t553824800^t^n9경주^t1^t11년 17회 1일차^t672283400^t^n9경주^t2^t12년 16회 1일차^t548482300^t^n9경주^t3^t12년 16회 2일차^t632774600^t^n9경주^t4^t12년 17회 1일차^t587361600^t^n10경주^t1^t11년 17회 1일차^t800152200^t^n10경주^t2^t12년 16회 1일차^t669189800^t^n10경주^t3^t12년 16회 2일차^t731305300^t^n10경주^t4^t12년 17회 1일차^t653853100^t^n11경주^t1^t11년 17회 1일차^t769875300^t^n11경주^t2^t12년 16회 1일차^t707765400^t^n11경주^t3^t12년 16회 2일차^t783729800^t^n11경주^t4^t12년 17회 1일차^t673506900^t^n12경주^t1^t11년 17회 1일차^t815432500^t^n12경주^t2^t12년 16회 1일차^t682622600^t^n12경주^t3^t12년 16회 2일차^t720005800^t^n12경주^t4^t12년 17회 1일차^t696468100^t^n13경주^t1^t11년 17회 1일차^t844542300^t^n13경주^t2^t12년 16회 1일차^t702342900^t^n13경주^t3^t12년 16회 2일차^t759862200^t^n13경주^t4^t12년 17회 1일차^t708515700^t^n14경주^t1^t11년 17회 1일차^t817777100^t^n14경주^t2^t12년 16회 1일차^t698218300^t^n14경주^t3^t12년 16회 2일차^t786822900^t^n14경주^t4^t12년 17회 1일차^t716497100^t^n15경주^t1^t11년 17회 1일차^t855565200^t^n15경주^t2^t12년 16회 1일차^t735842100^t^n15경주^t3^t12년 16회 2일차^t850634000^t^n15경주^t4^t12년 17회 1일차^t751355200^t^n
>
[I][UbiData][2012-07-22 11:31:35][DATA QUERY END]
--------------------------------------------------------------------------------


[I][UbiForm][2012-07-22 11:35:21][REQUEST FILE]
[I][UbiForm][2012-07-22 11:35:21]	- Report : /web/waspage/usrbm/report/rsm/rsm2020.jrf
[I][UbiForm][2012-07-22 11:35:21]	- Common : /web/waspage/usrbm/report/rsm/property/commonitem.xml [Not found]
--------------------------------------------------------------------------------


[I][UbiData][2012-07-22 11:35:22][REQUEST FILE]
[I][UbiData][2012-07-22 11:35:22]	- Report : rsm2020.jrf
--------------------------------------------------------------------------------
[I][UbiData][2012-07-22 11:35:22][DB CONNECT]
[I][UbiData][2012-07-22 11:35:22]	- Type : nonlookup
[I][UbiData][2012-07-22 11:35:22]	- Db id : rbm
[I][UbiData][2012-07-22 11:35:22]	- Sql id : rsm2020_s06Today
[I][UbiData][2012-07-22 11:35:22]	- Datasource : jdbc/RBM
[I][UbiData][2012-07-22 11:35:22]	- Status : Success
--------------------------------------------------------------------------------
[I][UbiData][2012-07-22 11:35:22][DATA QUERY START]
[I][UbiData][2012-07-22 11:35:22]	- sql id : rsm2020_s06Today
[I][UbiData][2012-07-22 11:35:22]	- Db charset : KSC5601
[I][UbiData][2012-07-22 11:35:22]	- Sql
<
WITH J 
 AS
 (SELECT    
         '전회' AS COL_DESC  
     , tms                                                                                       
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='12' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_02    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='16' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_06    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='22'  THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_12    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='20' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_10    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='23' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_13    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='24' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_14    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='13' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_03    
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='25'  THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_15    
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='19' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_09    
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='14' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_05    
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='26' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_16    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='27' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_17    
     , SUM(                                                                              
           CASE                                                                          
              WHEN COMM_NO='06'  THEN NVL(DIV_TOTAL, 0)                                  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_01_06_01    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='28' THEN NVL(DIV_TOTAL, 0) 
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_01_07_18    
         , SUM(                                                                              
               CASE                                                                          
                  WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_04_07_01    
         , SUM(                                                                              
               CASE                                                                          
                  WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='02' THEN NVL(DIV_TOTAL, 0)  
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_04_07_02    
        , SUM(                                                                              
               CASE                                                                          
                  WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='03' THEN NVL(DIV_TOTAL, 0)  
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_04_07_03    
         , SUM(                                                                              
               CASE                                                                          
                  WHEN SELL_CD='02' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_02_07_01    
 
         , SUM(                                                                              
               CASE                                                                          
                  WHEN COMM_NO NOT IN ('01','02','03','04','08') THEN NVL(DIV_TOTAL, 0)                         
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_JIJUM    
         , SUM(DIV_TOTAL)/100 DIV_TOTAL                                                             
  FROM   VW_SDL_DT_SUM                                                                         
  WHERE  1=1                                                                                    
    AND STND_YEAR  = ?                                                            
    AND MEET_CD    = ?                                                        
    AND TMS        BETWEEN ?  - 1 AND ? 
    AND DAY_ORD    = ? 
  GROUP BY TMS 
 )
 SELECT  DECODE(TMS, ? , '합계','전회') COL_DESC
        , TMS
        ,'1' AS GUBN
        ,DIV_01_07_02 
        ,DIV_01_07_06 
        ,DIV_01_07_12 
        ,DIV_01_07_10 
        ,DIV_01_07_13 
        ,DIV_01_07_14 
        ,DIV_01_07_03 
        ,DIV_01_07_15 
        ,DIV_01_07_09 
        ,DIV_01_07_05 
        ,DIV_01_07_16 
        ,DIV_01_07_17 
        ,DIV_01_06_01 
        ,DIV_01_07_18 
        ,DIV_04_07_01 
        ,DIV_04_07_02 
        ,DIV_04_07_03 
        ,DIV_02_07_01
        ,DIV_JIJUM
        ,1
 FROM J
 UNION ALL
 SELECT '점유율'
       , TMS
       , '2'
       , ROUND(DIV_01_07_02 / DIV_TOTAL * 100, 2) 
       , ROUND(DIV_01_07_06 / DIV_TOTAL * 100, 2)   
       , ROUND(DIV_01_07_12 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_10 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_13 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_14 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_03 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_15 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_09 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_05 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_16 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_17 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_06_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_18 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_02 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_03 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_02_07_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_JIJUM / DIV_TOTAL * 100, 2)    
       , 100
 FROM J
 WHERE tms = ? 
 UNION ALL
 SELECT '전회차'
       , TMS
       , '2'
       , ROUND(DIV_01_07_02 / DIV_TOTAL * 100, 2) 
       , ROUND(DIV_01_07_06 / DIV_TOTAL * 100, 2)   
       , ROUND(DIV_01_07_12 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_10 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_13 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_14 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_03 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_15 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_09 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_05 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_16 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_17 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_06_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_18 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_02 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_03 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_02_07_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_JIJUM / DIV_TOTAL * 100, 2)    
       , 100
 FROM J
 WHERE TMS = ?  -1
 ORDER BY 3, 2 DESC
 #String#2012#String#003#String#23#String#23#String#2#String#23#String#23#String#23#
>
[I][UbiData][2012-07-22 11:35:22]	- Row size : 4
[I][UbiData][2012-07-22 11:35:22]	- Data
<
합계^t23^t1^t7001070^t7788077^t4241547^t5494199^t5519809^t8558611^t5541839^t3903717^t8658151^t7359858^t4241252^t6900010^t177036^t3387054^t2229467^t3888614^t0^t0^t84890795^t1^t^n전회^t22^t1^t6477725^t6856515^t3500234^t5165743^t4483197^t7218200^t4915012^t3916748^t7399736^t6740752^t3474587^t6023626^t142018^t3485249^t2129478^t3351795^t0^t0^t75280615^t1^t^n점유율^t23^t2^t6.97^t7.75^t4.22^t5.47^t5.49^t8.52^t5.51^t3.88^t8.61^t7.32^t4.22^t6.87^t.18^t3.37^t2.22^t3.87^t0^t0^t84.46^t100^t^n전회차^t22^t2^t7.29^t7.71^t3.94^t5.81^t5.04^t8.12^t5.53^t4.41^t8.32^t7.58^t3.91^t6.78^t.16^t3.92^t2.4^t3.77^t0^t0^t84.68^t100^t^n
>
[I][UbiData][2012-07-22 11:35:22][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-07-22 11:35:22][DATA QUERY START]
[I][UbiData][2012-07-22 11:35:22]	- sql id : rsm2020_s11
[I][UbiData][2012-07-22 11:35:22]	- Db charset : KSC5601
[I][UbiData][2012-07-22 11:35:22]	- Sql
<
SELECT 
         '0~'||BB.RACE_NO||'R' AS RACE_DESC,
         DECODE(LEV,1,'인원','점유율') AS MANA_DESC,
         CASE 
             WHEN LEV='2' AND IN_PRSN_NUM > 0 AND TOT_PRSN_NUM > 0 THEN ROUND(IN_PRSN_NUM / TOT_PRSN_NUM *100,2)    
             ELSE IN_PRSN_NUM
        END AS IN_PRSN_NUM, 
        CASE 
             WHEN LEV='2' AND BRNC_PRSN_NUM > 0 AND TOT_PRSN_NUM > 0 THEN ROUND(BRNC_PRSN_NUM / TOT_PRSN_NUM *100,2)    
             ELSE BRNC_PRSN_NUM
        END AS BRNC_PRSN_NUM, 
        CASE 
             WHEN LEV='2' AND TOT_PRSN_NUM > 0 THEN ROUND(TOT_PRSN_NUM / TOT_PRSN_NUM *100,2)    
             ELSE TOT_PRSN_NUM
        END AS TOT_PRSN_NUM, 
        CASE 
             WHEN LEV='1' THEN B_TOT_PRSN_NUM
        END AS B_TOT_PRSN_NUM, 
        CASE 
             WHEN LEV='1' THEN MINUS_PRSN_NUM
        END AS MINUS_PRSN_NUM, 
        CASE 
 
             WHEN LEV='1' AND TOT_PRSN_NUM>0 AND B_TOT_PRSN_NUM >0 THEN ROUND((TOT_PRSN_NUM - B_TOT_PRSN_NUM) / B_TOT_PRSN_NUM*100,2)
        END AS PER_PRSN_NUM 
 FROM
 (
      SELECT DU.LEV,
             SUM(CASE WHEN R.TMS =DU.TMS AND BRNC_CD = '98' THEN E.ENT_PRSN_NUM END) AS IN_PRSN_NUM,    
              SUM(CASE WHEN R.TMS =DU.TMS AND BRNC_CD <> '98' THEN E.ENT_PRSN_NUM END) AS BRNC_PRSN_NUM,    
              SUM(CASE WHEN R.TMS =DU.TMS THEN E.ENT_PRSN_NUM END) AS TOT_PRSN_NUM,    
              SUM(CASE WHEN R.TMS =DU.B_TMS THEN E.ENT_PRSN_NUM END) AS B_TOT_PRSN_NUM,    
              (SUM(CASE WHEN R.TMS =DU.TMS THEN E.ENT_PRSN_NUM END) - SUM(CASE WHEN R.TMS =DU.B_TMS THEN E.ENT_PRSN_NUM END)) AS MINUS_PRSN_NUM    
                      
          FROM                                                   
              TBRC_STAY_MANA E,    
              TBRK_SPEC_CD C,
              VW_SDL_INFO R,       
              (SELECT LEVEL AS LEV, ?  AS TMS,(?  - 1) AS B_TMS FROM DUAL CONNECT BY LEVEL<=2) DU 
          WHERE  1=1                
            AND E.BRNC_CD    = C.CD
            AND E.RACE_DT    = R.RACE_DAY                 
            AND C.GRP_CD        IN ('018','032')    
            AND R.MEET_CD    = '003'   
            AND R.STND_YEAR    = ?         
            AND R.TMS IN (? , ?  - 1)    
            AND R.DAY_ORD ='2'             
          GROUP BY DU.LEV
 )AA,
 (
     SELECT                                                                   
          MAX(RACE_NO)  AS RACE_NO
       FROM   (                                                                 
                   SELECT                                                       
                            TOR.RACE_NO                                         
                          , TOR.RACE_REG_NO                                     
                          , TOR.RACER_NO                                        
                          , TOR.RANK                                            
                          , TRM.NM_KOR                                          
                          , RANK() OVER (PARTITION BY TOR.RACE_NO               
                                                    , TOR.RANK                  
                                             ORDER BY TOR.RACE_REG_NO) SEQ      
                   FROM     TBEB_ORGAN@MRASYSLINK        TOR                        
                          , TBEC_RACER_MASTER@MRASYSLINK TRM                        
                   WHERE 1=1                                                        
                           
                   AND    TOR.RACER_NO   = TRM.RACER_NO                         
                   AND    TOR.STND_YEAR  = ?         
                   AND    TOR.MBR_CD     = '001'                                
                   AND    TOR.TMS        = ?         
                           
                   AND    TOR.RANK BETWEEN 1                                    
                                       AND 3                                    
              )                                                                 
       START WITH SEQ = 1                                                       
       CONNECT BY PRIOR SEQ = SEQ - 1                                           
       AND PRIOR RACE_NO = RACE_NO AND RANK = RANK     
 )BB
 ORDER BY AA.LEV
 #String#23#String#23#String#2012#String#23#String#23#String#2012#String#23#
>
[I][UbiData][2012-07-22 11:35:22]	- Row size : 2
[I][UbiData][2012-07-22 11:35:22]	- Data
<
0~15R^t인원^t3960^t34480^t38440^t33965^t4475^t13.18^t^n0~15R^t점유율^t10.3^t89.7^t100^t^t^t^t^n
>
[I][UbiData][2012-07-22 11:35:22][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-07-22 11:35:22][DATA QUERY START]
[I][UbiData][2012-07-22 11:35:22]	- sql id : rsm2020_s01
[I][UbiData][2012-07-22 11:35:22]	- Db charset : KSC5601
[I][UbiData][2012-07-22 11:35:22]	- Sql
<
SELECT 
           AA.MEET_CD,      
           AA.STND_YEAR,    
           AA.TMS,          
           AA.DAY_ORD,      
           TO_CHAR(TO_DATE(AA.RACE_DAY,'YYYYMMDD'),'YYYY-MM-DD') AS RACE_DAY, 
           AA.RACE_YOIL,    
           TO_CHAR(TO_DATE(AA.RACE_DAY,'YYYYMMDD'),'YYYY')||'년 '||AA.TMS||'회차 '||AA.DAY_ORD||'일차 ('|| TO_CHAR(TO_DATE(AA.RACE_DAY,'YYYYMMDD'),'YYYY-MM-DD')||') 경주 개최 결과'  
           AS RACE_DAY_INFO  
     
       FROM (         
             SELECT                              
             MEET_CD,      
             STND_YEAR,    
             TMS,          
             DAY_ORD,      
             RACE_DAY,     
             RACE_YOIL,    
             DECODE(RACE_YOIL,'MON','월','TUE','화','WED','수','THE','목','FRI','금','SAT','토','SUN','일','일') AS RACE_YOIL_KOR, 
             TO_CHAR(TO_DATE(RACE_DAY,'YYYYMMDD'),'YYYY-MM-DD')||
             ' ('||RACE_YOIL||') '||TMS||'회차 '||DAY_ORD||'일차'  
             AS RACE_INFO  
      FROM                                
             VW_SDL_INFO      
      WHERE  1=1                             
             AND MEET_CD = ?   
            AND STND_YEAR = ?   
            AND TMS= ?     
            AND DAY_ORD = ?        
    )AA
 #String#003#String#2012#String#23#String#2#
>
[I][UbiData][2012-07-22 11:35:22]	- Row size : 1
[I][UbiData][2012-07-22 11:35:22]	- Data
<
003^t2012^t23^t2^t2012-07-19^tTHU^t2012년 23회차 2일차 (2012-07-19) 경주 개최 결과^t^n
>
[I][UbiData][2012-07-22 11:35:22][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-07-22 11:35:22][DATA QUERY START]
[I][UbiData][2012-07-22 11:35:22]	- sql id : rsm2020_s05Today
[I][UbiData][2012-07-22 11:35:22]	- Db charset : KSC5601
[I][UbiData][2012-07-22 11:35:22]	- Sql
<
SELECT                                                                                      
       DECODE(GROUPING(RACE_NO),0,RACE_NO,'TOTAL') RACE_NO 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='12' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_02 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='16' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_06 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='22'  THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_12 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='20' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_10 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='23' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_13 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='24' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_14 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='13' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_03 
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='25'  THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_15 
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='19' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_09 
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='14' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_05 
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='26' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_16 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='27' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_17 
     , SUM(                                                                              
           CASE                                                                          
              WHEN COMM_NO='06'  THEN NVL(DIV_TOTAL, 0)                                  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_01_06_01 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='28' THEN NVL(DIV_TOTAL, 0) 
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_01_07_18 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_04_07_01 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='02' THEN NVL(DIV_TOTAL, 0)  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_04_07_02 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='03' THEN NVL(DIV_TOTAL, 0)  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_04_07_03    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='02' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_02_07_01 
     , SUM(                                                                              
           CASE                                                                          
              WHEN  COMM_NO NOT IN ('01','02','03','04','08') THEN NVL(DIV_TOTAL, 0)                         
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_JIJUM  
 
     , SUM(DIV_TOTAL)/100 DIV_TOTAL                                                          
 FROM   VW_SDL_DT                                                                         
 WHERE   1=1                                                                                   
      AND STND_YEAR  = ?                                                             
      AND    MEET_CD    = ?                                                        
      AND    TMS        = ?                                                            
      AND    DAY_ORD    = ?                                                        
 
 GROUP BY RACE_NO                                                                                   
       
 ORDER BY RACE_NO
 #String#2012#String#003#String#23#String#2#
>
[I][UbiData][2012-07-22 11:35:22]	- Row size : 15
[I][UbiData][2012-07-22 11:35:22]	- Data
<
01^t164917^t178445^t109485^t131002^t152022^t239049^t141339^t75667^t247466^t168454^t111443^t162811^t4316^t80580^t63533^t106656^t0^t0^t2137185^t2508355^t^n02^t235537^t236401^t145755^t187857^t206624^t309584^t186322^t127428^t318768^t232945^t152314^t217547^t10218^t105181^t96116^t146462^t0^t0^t2915059^t3436073^t^n03^t277831^t288823^t170660^t204488^t247294^t391543^t241525^t154657^t391200^t311511^t177761^t246033^t10973^t136434^t115326^t188251^t0^t0^t3554340^t4172115^t^n04^t305654^t321080^t188621^t236221^t244338^t421485^t248722^t163864^t430231^t329369^t193592^t298025^t11240^t156515^t118624^t193516^t0^t0^t3861117^t4561734^t^n05^t346514^t371064^t228820^t284621^t309589^t421712^t273276^t195752^t471088^t376614^t238022^t363526^t12668^t173004^t141772^t213654^t0^t0^t4421736^t5279090^t^n06^t425896^t467254^t251310^t329453^t327964^t511418^t325798^t214768^t536654^t450883^t258033^t422453^t12350^t201104^t139204^t234319^t0^t0^t5108891^t6079585^t^n07^t417059^t502071^t269638^t309834^t346766^t514708^t332983^t260698^t563661^t442867^t241671^t404307^t10720^t209412^t142595^t241981^t0^t0^t5211011^t6138239^t^n08^t489483^t527148^t295373^t364617^t378235^t603274^t378459^t284865^t596672^t486935^t289144^t466693^t9853^t237882^t153416^t252322^t0^t0^t5814431^t6851601^t^n09^t489699^t573161^t320820^t384519^t401047^t604622^t436746^t299854^t612253^t505022^t293196^t491760^t12323^t249938^t159232^t284017^t0^t0^t6118269^t7227380^t^n10^t589025^t662655^t359788^t445973^t462085^t784832^t489935^t298063^t714436^t610406^t350957^t571707^t15126^t291303^t184035^t327624^t0^t0^t7158020^t8491377^t^n11^t628389^t689971^t354181^t494593^t475070^t749766^t479827^t342995^t732656^t628956^t345326^t593622^t14805^t320993^t187760^t325509^t0^t0^t7364449^t8746586^t^n12^t644641^t710610^t395066^t525773^t493158^t775081^t528833^t366924^t744443^t685126^t384276^t677751^t14851^t336715^t178571^t342464^t0^t0^t7804308^t9384982^t^n13^t659892^t711734^t390602^t507746^t494859^t740083^t489030^t351948^t756627^t665010^t389780^t656743^t14296^t296673^t177392^t329490^t0^t0^t7631965^t9036635^t^n14^t632323^t772313^t379550^t531248^t475560^t748014^t480535^t343055^t747330^t710173^t397727^t654236^t14530^t291386^t179533^t352541^t0^t0^t7710073^t9093506^t^n15^t694210^t775347^t381878^t556254^t505198^t743440^t508509^t423179^t794666^t755587^t418010^t672796^t8767^t299934^t192358^t349808^t0^t0^t8079941^t9497789^t^n
>
[I][UbiData][2012-07-22 11:35:22][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-07-22 11:35:22][DATA QUERY START]
[I][UbiData][2012-07-22 11:35:22]	- sql id : rsm2020_s03Today
[I][UbiData][2012-07-22 11:35:22]	- Db charset : KSC5601
[I][UbiData][2012-07-22 11:35:22]	- Sql
<
SELECT                                                                                    
      Z.RACE_NO, 
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          FC_GET_RSLT_RANK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO)                
      END RSLT_RANK, 
      R.RANK_1,  
      R.RANK_2,  
      R.RANK_3,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '001', NULL) 
      END WIN,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '002', '1')  
      END PLC,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '002', '2')  
      END PLC2,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '004', NULL) 
      END EX,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '005', NULL) 
      END QU,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '006', NULL) 
      END TRI,  
      D.BONJANG_TOTAL/1000 AS BONJANG_TOTAL, 
      D.JIJUM_TOTAL/1000 AS JIJUM_TOTAL,  
      D.DIV_TOTAL/1000 AS DIV_TOTAL,  
      NVL(D.REFUND,0)/1000 AS REFUND, 
      NVL(B.B_DIV_TOTAL,0)/1000 AS B_DIV_TOTAL,    
      NVL2(D.DIV_TOTAL, NVL((C.DIV_TOTAL-B.B_DIV_TOTAL),0),0)/1000 AS PLUS_MINUS, 
      CASE                                                                                  
          WHEN B.B_DIV_TOTAL<>0 THEN                                                        
          ROUND((C.DIV_TOTAL-B.B_DIV_TOTAL)/B.B_DIV_TOTAL*100,2)                            
          ELSE 0                                                                            
      END RATE,   
      SAME_PAYOFF_TOTAL,  
      SAME_PAYOFF_001, 
   SAME_PAYOFF_002, 
   SAME_PAYOFF_004, 
   SAME_PAYOFF_005, 
   SAME_PAYOFF_006 
  FROM   
   
      (   
                                                                 
          SELECT                                                                            
                D.MEET_CD,                                                                   
                D.STND_YEAR,                                                                 
                D.TMS,                                                                       
                D.DAY_ORD,                                                                   
                DECODE(D.RACE_NO,NULL,'TOTAL',D.RACE_NO) RACE_NO,                              
                SUM(                                                                        
                    CASE                                                                    
                      WHEN D.SELL_CD='03' THEN D.DIV_TOTAL                                    
                      ELSE 0                                                                
                    END                                                                     
                ) BONJANG_TOTAL,                                                            
                SUM(                                                                        
                    CASE                                                                    
                      WHEN D.SELL_CD !='03' THEN D.DIV_TOTAL                                     
                    END                                                                     
                ) JIJUM_TOTAL,                                                              
                SUM(D.REFUND) REFUND,
                SUM(D.DIV_TOTAL) AS DIV_TOTAL                                                         
          FROM   VW_SDL_DT D                                                              
          WHERE 1=1                                                                             
              AND D.STND_YEAR(+)  = ? 
              AND D.MEET_CD(+)    = ? 
              AND D.TMS(+)        = ? 
              AND D.DAY_ORD(+)    = ? 
          GROUP BY                                                                          
                D.MEET_CD,                                                                   
                D.STND_YEAR,                                                                 
                D.TMS,                                                                       
                D.DAY_ORD,                                                                   
                ROLLUP(D.RACE_NO)                                                           
      ) D,                                                                                  
      (                                                                                     
         SELECT                                                                             
            P.MEET_CD,                                                                      
            P.STND_YEAR,                                                                    
            P.TMS,                                                                          
            P.DAY_ORD,                                                                      
            DECODE(P.RACE_NO,NULL,'TOTAL',P.RACE_NO) RACE_NO,                               
            SUM(POOL_TOTAL) DIV_TOTAL                                                       
         FROM                                                                               
             VW_SDL_PT P                                                                  
         WHERE 1=1                                                                              
             AND P.STND_YEAR  = ? 
             AND P.MEET_CD    = ? 
             AND P.TMS        = ? 
             AND P.DAY_ORD    = ? 
         GROUP BY                                                                           
            P.MEET_CD,                                                                      
            P.STND_YEAR,                                                                    
            P.TMS,                                                                          
            P.DAY_ORD,                                                                      
            ROLLUP(P.RACE_NO)                                                               
      ) C,                                                                                  
      (                                                                                     
          SELECT                                                                            
                DECODE(RACE_NO,NULL,'TOTAL',RACE_NO) RACE_NO,                               
                SUM(DIV_TOTAL) B_DIV_TOTAL                                                  
          FROM   VW_SDL_DT                                                                
          WHERE 1=1                                                                            
              AND  STND_YEAR  = ? 
              AND    MEET_CD    = ? 
              AND    TMS        = ?  -1                                                    
              AND    DAY_ORD    = ? 
          GROUP BY                                                                          
                ROLLUP(RACE_NO)                                                             
      ) B,                                                                                  
      (                                                                                     
          SELECT                                                                            
                RACE_NO                                                                     
              , MIN(DECODE(RANK, '1', NM_KOR)) RANK_1                                       
              , MIN(DECODE(RANK, '2', NM_KOR)) RANK_2                                       
              , MIN(DECODE(RANK, '3', NM_KOR)) RANK_3                                       
          FROM   (                                                                          
                   SELECT                                                                   
                            RACE_NO                                                         
                          , RANK                                                            
                          , SUBSTR(MAX(SYS_CONNECT_BY_PATH (NM_KOR, '/')), 2) NM_KOR        
                   FROM   (                                                                 
                               SELECT                                                       
                                        TOR.RACE_NO                                         
                                      , TOR.RACE_REG_NO                                     
                                      , TOR.RACER_NO                                        
                                      , TOR.RANK                                            
                                      , TRM.NM_KOR                                          
                                      , RANK() OVER (PARTITION BY TOR.RACE_NO               
                                                                , TOR.RANK                  
                                                         ORDER BY TOR.RACE_REG_NO) SEQ      
                               FROM     TBEB_ORGAN@MRASYSLINK        TOR                        
                                      , TBEC_RACER_MASTER@MRASYSLINK TRM                        
                               WHERE 1=1                
                               AND    TOR.RACER_NO   = TRM.RACER_NO                         
                               AND    TOR.STND_YEAR  = ? 
                               AND    TOR.MBR_CD     = '001'                                
                               AND    TOR.TMS        = ? 
                               AND    TOR.DAY_ORD    = ? 
                               AND    TOR.RANK BETWEEN 1                                    
                                                   AND 3                                    
                          )                                                                 
                   START WITH SEQ = 1                                                       
                   CONNECT BY PRIOR SEQ = SEQ - 1                                           
                   AND PRIOR RACE_NO = RACE_NO AND RANK = RANK                              
                   GROUP BY                                                                 
                            RACE_NO                                                         
                          , RANK                                                            
               )                                                                            
          GROUP BY RACE_NO                                                                  
          UNION ALL                                                                         
          SELECT 'TOTAL', '', '', '' FROM DUAL                                              
      ) R, 
      (   
     
       SELECT                                                                         
          RACE_NO,
            SUM(CASE 
                     WHEN POOL_CD = '001' AND RS_SEQ >= '2' THEN PAYOFF 
                     WHEN POOL_CD = '002' AND RS_SEQ >= '3' THEN PAYOFF 
                     WHEN POOL_CD = '004' AND RS_SEQ >= '2' THEN PAYOFF 
                     WHEN POOL_CD = '005' AND RS_SEQ >= '2' THEN PAYOFF 
                     WHEN POOL_CD = '006' AND RS_SEQ >= '2' THEN PAYOFF 
            END) AS SAME_PAYOFF_TOTAL, 
                               
            SUM(CASE WHEN POOL_CD = '001' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_001, 
            SUM(CASE WHEN POOL_CD = '002' AND RS_SEQ >= '3' THEN PAYOFF END) AS SAME_PAYOFF_002, 
            SUM(CASE WHEN POOL_CD = '004' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_004, 
            SUM(CASE WHEN POOL_CD = '005' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_005, 
            SUM(CASE WHEN POOL_CD = '006' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_006 
      FROM VW_SDL_RS                                                                
      WHERE 1=1                                                                          
          AND MEET_CD  = '003'                                                              
          AND STND_YEAR = ?      
          AND TMS   = ?      
          AND DAY_ORD  = ?      
      GROUP BY          
       RACE_NO                                                              
 
   ) E,                                                                                  
  (                                       
    SELECT DISTINCT RACE_NO           
    FROM TBEB_RACE_DOC@MRASYSLINK D        
      WHERE 1=1                          
          AND D.STND_YEAR= ? 
          AND D.TMS=? 
           AND D.DAY_ORD=? 
 
   ) Z                                   
  WHERE 1=1                                                                                    
      AND C.RACE_NO(+)=Z.RACE_NO                                                                
      AND B.RACE_NO(+)=Z.RACE_NO                                                            
      AND R.RACE_NO(+)=Z.RACE_NO                                                            
      AND D.RACE_NO(+)=Z.RACE_NO
      AND E.RACE_NO(+)=Z.RACE_NO                                                            
  ORDER BY Z.RACE_NO
 #String#2012#String#003#String#23#String#2#String#2012#String#003#String#23#String#2#String#2012#String#003#String#23#String#2#String#2012#String#23#String#2#String#2012#String#23#String#2#String#2012#String#23#String#2#
>
[I][UbiData][2012-07-22 11:35:23]	- Row size : 15
[I][UbiData][2012-07-22 11:35:23]	- Data
<
01^t2-4-3^t정민수^t이용세^t유해광^t1.2^t1.1^t1.7^t3.6^t2.6^t4^t37117^t213718.5^t250835.5^t0^t261051.8^t-10216.3^t-3.91^t^t^t^t^t^t^t^n02^t1-3-6^t신동길^t고일수^t강창효^t1.9^t1.2^t1.5^t4.8^t2.7^t6.8^t52101.4^t291505.9^t343607.3^t0^t334016.3^t9591^t2.87^t^t^t^t^t^t^t^n03^t2-1-6^t사재준^t이주영^t김경민^t1.6^t1.3^t1.1^t2.9^t1.7^t7.8^t61777.5^t355434^t417211.5^t0^t390621.3^t26590.2^t6.81^t^t^t^t^t^t^t^n04^t2-3-1^t심상철^t이미나^t최광성^t1.3^t1.2^t1.6^t3.6^t3.1^t3.6^t70061.7^t386111.7^t456173.4^t0^t454238.1^t1935.3^t.43^t^t^t^t^t^t^t^n05^t1-3-2^t배혜민^t박광혁^t구본수^t1.3^t1.2^t2.3^t3.7^t3.2^t6^t85735.4^t442173.6^t527909^t0^t496119.3^t31789.7^t6.41^t^t^t^t^t^t^t^n06^t6-3-4^t정주현^t이동준^t이재학^t10^t2.9^t4.9^t79.3^t36.4^t33.2^t97069.4^t510889.1^t607958.5^t0^t511952.2^t96006.3^t18.75^t^t^t^t^t^t^t^n07^t2-4-3^t윤영근^t이응석^t김선필^t6.2^t2.4^t1^t12.4^t3.8^t9.7^t92722.8^t521101.1^t613823.9^t0^t585149.8^t28674.1^t4.9^t^t^t^t^t^t^t^n08^t4-2-1^t김효년^t김민길^t우진수^t1.5^t1.1^t12.4^t20.1^t16.2^t10^t103717^t581443.1^t685160.1^t0^t596947.8^t88212.3^t14.78^t^t^t^t^t^t^t^n09^t4-5-1^t손지영^t김종민^t송종해^t1.9^t1.3^t1.5^t3.1^t1.6^t3^t110911.1^t611826.9^t722738^t0^t587289.1^t135448.9^t23.06^t^t^t^t^t^t^t^n10^t6-5-2^t주은석^t김영욱^t이용세^t4.4^t1.5^t2.7^t16.8^t7.4^t3.2^t133335.7^t715802^t849137.7^t0^t755699.8^t93437.9^t12.36^t^t^t^t^t^t^t^n11^t4-3-1^t정용진^t최영재^t박재경^t1.9^t1.2^t2.7^t7.7^t5.3^t4.2^t138213.7^t736444.9^t874658.6^t0^t720036.2^t154622.4^t21.47^t^t^t^t^t^t^t^n12^t2-4-5^t정종훈^t이주영^t이동준^t2^t1.2^t2.4^t5.7^t3.9^t7.9^t158067.4^t780430.8^t938498.2^t0^t710252^t228246.2^t32.14^t^t^t^t^t^t^t^n13^t4-5-1^t손제민^t신동열^t권명호^t1.7^t1.1^t1.9^t4^t3.4^t2.7^t140467^t763196.5^t903663.5^t0^t804144.1^t99519.4^t12.38^t^t^t^t^t^t^t^n14^t1-2-3^t이재학^t강창효^t문주엽^t1.6^t1.3^t1.7^t5^t3.7^t10.7^t138343.3^t771007.3^t909350.6^t0^t824604.9^t84745.7^t10.28^t^t^t^t^t^t^t^n15^t6-4-5^t김효년^t배혜민^t이미나^t3.8^t1.6^t1.1^t7.4^t2.8^t5.7^t141784.8^t807994.1^t949778.9^t0^t858395.8^t91383.1^t10.65^t^t^t^t^t^t^t^n
>
[I][UbiData][2012-07-22 11:35:23][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-07-22 11:35:23][DATA QUERY START]
[I][UbiData][2012-07-22 11:35:23]	- sql id : rsm2020_s02Today
[I][UbiData][2012-07-22 11:35:23]	- Db charset : KSC5601
[I][UbiData][2012-07-22 11:35:23]	- Sql
<
SELECT                                                                                          
           MST.GBN       
         , YEAR.DIV_TOTAL AS YEAR_TOTAL 
         , YEAR.REFUND    AS YEAR_REFUND 
         , TMS.D_1 
         , TMS.D_2   
         , TMS.D_3   
         , TMS.D_4   
         , TMS.D_5   
         , TMS.D_6   
         , TMS.D_7   
         , TMS.TOTAL 
         , PRE.TOTAL AS PRE_TOTAL 
         , NVL(TMS.TOTAL, 0) - NVL(PRE .TOTAL, 0) ADD_POOL 
         , CASE WHEN (NVL(PRE.TOTAL, 0) = 0) AND (NVL(TMS.TOTAL, 0) = 0) THEN 0                  
                WHEN NVL(PRE.TOTAL, 0) = 0                               THEN 100                
                WHEN NVL(TMS.TOTAL, 0) = 0                                THEN -100              
                ELSE ROUND((NVL(TMS.TOTAL, 0) - NVL(PRE.TOTAL, 0)) / NVL(PRE.TOTAL, 0) * 100, 2) 
           END ADD_RATE 
  FROM                                                                                           
           (                                                                                     
              SELECT                                                                             
                       ?  STND_YEAR                                                      
                     , '매출총액' GBN                                                            
              FROM   DUAL                                                                        
           ) MST                                                                                 
         , (                                                                                     
              SELECT                                                                             
                       TMS.STND_YEAR                                                             
                     , MIN(DECODE(TMS.D, 1, TMS.AMOUNT)) D_1                                     
                     , MIN(DECODE(TMS.D, 2, TMS.AMOUNT)) D_2                                     
                     , MIN(DECODE(TMS.D, 3, TMS.AMOUNT)) D_3                                     
                     , MIN(DECODE(TMS.D, 4, TMS.AMOUNT)) D_4                                     
                     , MIN(DECODE(TMS.D, 5, TMS.AMOUNT)) D_5                                     
                     , MIN(DECODE(TMS.D, 6, TMS.AMOUNT)) D_6                                     
                     , MIN(DECODE(TMS.D, 7, TMS.AMOUNT)) D_7                                     
                     , SUM(TMS.AMOUNT)                   TOTAL                                   
              FROM   (                                                                           
                          SELECT                                                                 
                                   TSP.STND_YEAR                                                 
                                 , TO_CHAR(TO_DATE(INFO.RACE_DAY, 'YYYYMMDD'), 'D') D            
                                 , SUM(TSP.POOL_TOTAL) AMOUNT                                    
                          FROM     VW_SDL_INFO INFO                                              
                                 , VW_SDL_PT       TSP                                         
                          WHERE  1=1
                          AND    INFO.STND_YEAR = TSP.STND_YEAR                                  
                          AND    INFO.MEET_CD    = TSP.MEET_CD                                   
                          AND    INFO.TMS       = TSP.TMS                                        
                          AND    INFO.DAY_ORD   = TSP.DAY_ORD                                    
                          AND    TSP.STND_YEAR  = ?   
                          AND    TSP.MEET_CD    = ?       
                          AND    TSP.TMS        = ?       
                          GROUP BY                                                               
                                   TSP.STND_YEAR                                                 
                                 , INFO.RACE_DAY                                                 
                     ) TMS                                                                       
              GROUP BY TMS.STND_YEAR                                                             
           ) TMS                                                                                 
         , (                                                                                     
              SELECT                                                                             
                       STND_YEAR                                                                 
                     , SUM(TSP.DIV_TOTAL) DIV_TOTAL                                              
                     , SUM(TSP.REFUND    ) REFUND                                                
              FROM   VW_SDL_DT_SUM       TSP                                                       
              WHERE  TSP.STND_YEAR  = ?                                                  
              AND    TSP.MEET_CD    = ?                                                    
              AND    TSP.TMS       <= ?                                                        
              GROUP BY                                                                           
                       STND_YEAR                                                                 
           ) YEAR                                                                                
         , (                                                                                     
              SELECT                                                                             
                       STND_YEAR                                                                 
                     , TMS                                                                       
                     , NVL(SUM(TSP.POOL_TOTAL), 0)  TOTAL                                        
              FROM   VW_SDL_PT       TSP                                                       
              WHERE  1=1
              AND TSP.STND_YEAR  = ? 
              AND    TSP.MEET_CD    = ?                                                    
              AND    TSP.TMS        = ?  - 1                                                   
              GROUP BY                                                                           
                       STND_YEAR                                                                 
                     , TMS                                                                       
           ) PRE                                                                                 
  WHERE  1=1
  AND   MST.STND_YEAR = TMS .STND_YEAR(+)                                                       
  AND    MST.STND_YEAR = YEAR.STND_YEAR(+)                                                       
  AND    MST.STND_YEAR = PRE .STND_YEAR(+)                                                       
  UNION ALL                                                                                      
  SELECT                                                                                         
           MST.GBN                                                                               
         , YEAR.DIV_TOTAL                   YEAR_TOTAL                                           
         , YEAR.REFUND                      YEAR_REFUND                                          
         , TMS.D_1                                                                               
         , TMS.D_2                                                                               
         , TMS.D_3                                                                               
         , TMS.D_4                                                                               
         , TMS.D_5                                                                               
         , TMS.D_6                                                                               
         , TMS.D_7                                                                               
         , TMS.TOTAL                                                                             
         , 0 PRE_TOTAL                                                                           
         , NVL(PRE .TOTAL, 0) - NVL(TMS.TOTAL, 0) ADD_POOL                                       
         , CASE WHEN (NVL(PRE.TOTAL, 0) = 0) AND (NVL(TMS.TOTAL, 0) = 0) THEN 0                  
                WHEN NVL(PRE.TOTAL, 0) = 0                               THEN -100               
                WHEN NVL(TMS.TOTAL, 0) = 0                                THEN 100               
                ELSE ROUND((NVL(PRE.TOTAL, 0) - NVL(TMS.TOTAL, 0)) / NVL(TMS.TOTAL, 0) * 100, 2) 
           END ADD_RATE                                                                          
  FROM                                                                                           
           (                                                                                     
              SELECT                                                                             
                       ?  -1 STND_YEAR                                                    
                     , '전년대비' GBN                                                            
              FROM   DUAL                                                                        
           ) MST                                                                                 
         , (                                                                                     
              SELECT                                                                             
                       TMS.STND_YEAR                                                             
                     , MIN(DECODE(TMS.D, 1, TMS.AMOUNT)) D_1                                     
                     , MIN(DECODE(TMS.D, 2, TMS.AMOUNT)) D_2                                     
                     , MIN(DECODE(TMS.D, 3, TMS.AMOUNT)) D_3                                     
                     , MIN(DECODE(TMS.D, 4, TMS.AMOUNT)) D_4                                     
                     , MIN(DECODE(TMS.D, 5, TMS.AMOUNT)) D_5                                     
                     , MIN(DECODE(TMS.D, 6, TMS.AMOUNT)) D_6                                     
                     , MIN(DECODE(TMS.D, 7, TMS.AMOUNT)) D_7                                     
                     , SUM(TMS.AMOUNT)                   TOTAL                                   
              FROM   (                                                                           
                          SELECT                                                                 
                                   TSP.STND_YEAR                                                 
                                 , TO_CHAR(TO_DATE(INFO.RACE_DAY, 'YYYYMMDD'), 'D') D            
                                 , SUM(TSP.POOL_TOTAL) AMOUNT                                    
                          FROM     VW_SDL_INFO INFO                                              
                                 , VW_SDL_PT       TSP                                         
                          WHERE  1=1
                          AND  INFO.STND_YEAR = TSP.STND_YEAR                                  
                          AND    INFO.MEET_CD    = TSP.MEET_CD                                   
                          AND    INFO.TMS       = TSP.TMS                                        
                          AND    INFO.DAY_ORD   = TSP.DAY_ORD                                    
                          AND    TSP.STND_YEAR  =  ?  -1                                   
                          AND    TSP.MEET_CD    = ?                                        
                          AND    TSP.TMS        = ?                                            
                          GROUP BY                                                               
                                   TSP.STND_YEAR                                                 
                                 , INFO.RACE_DAY                                                 
                     ) TMS                                                                       
              GROUP BY TMS.STND_YEAR                                                             
           ) TMS                                                                                 
         , (                                                                                     
              SELECT                                                                             
                       STND_YEAR                                                                 
                     , SUM(TSP.DIV_TOTAL) DIV_TOTAL                                              
                     , SUM(TSP.REFUND    ) REFUND                                                
              FROM   VW_SDL_DT_SUM       TSP                                                       
              WHERE  1=1
              AND TSP.STND_YEAR  = ?  -1                                               
              AND    TSP.MEET_CD    = ?                                                    
              AND    TSP.TMS       <= ?                                                        
              GROUP BY                                                                           
                       STND_YEAR                                                                 
           ) YEAR                                                                                
         , (                                                                                     
              SELECT                                                                             
                       STND_YEAR-1 STND_YEAR                                                     
                     , TMS                                                                       
                     , NVL(SUM(TSP.POOL_TOTAL), 0)  TOTAL                                        
              FROM   VW_SDL_PT       TSP                                                       
              WHERE  1=1
              AND TSP.STND_YEAR  = ?                                                  
              AND    TSP.MEET_CD    = ?                                                    
              AND    TSP.TMS        = ?                                                        
              GROUP BY                                                                           
                       STND_YEAR                                                                 
                     , TMS                                                                       
           ) PRE                                                                                 
  WHERE  1=1
  AND MST.STND_YEAR = TMS.STND_YEAR(+)                                                        
  AND    MST.STND_YEAR = YEAR.STND_YEAR(+)                                                       
  AND    MST.STND_YEAR = PRE.STND_YEAR(+)
 #String#2012#String#2012#String#003#String#23#String#2012#String#003#String#23#String#2012#String#003#String#23#String#2012#String#2012#String#003#String#23#String#2012#String#003#String#23#String#2012#String#003#String#23#
>
[I][UbiData][2012-07-22 11:35:23]	- Row size : 2
[I][UbiData][2012-07-22 11:35:23]	- Data
<
매출총액^t358271327600^t5718722800^t^t^t^t8434859900^t10050504700^t^t^t18485364600^t18878204400^t-392839800^t-2.08^t^n전년대비^t389929447600^t6652305000^t^t^t^t9095133400^t9542850900^t^t^t18637984300^t0^t-152619700^t-.82^t^n
>
[I][UbiData][2012-07-22 11:35:23][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-07-22 11:35:23][DATA QUERY START]
[I][UbiData][2012-07-22 11:35:23]	- sql id : rsm2020_s04
[I][UbiData][2012-07-22 11:35:23]	- Db charset : KSC5601
[I][UbiData][2012-07-22 11:35:23]	- Sql
<
SELECT 
   ROW_ORDER,
   MANA_DESC, 
   TOTAL        
        ,SUN_NUM     
        ,TUE_NUM     
        ,WEN_NUM     
        ,THU_NUM     
        ,TOT_PRSN_NUM,    
        
        B_TOT_PRSN_NUM,          
        
        CASE 
              WHEN ROW_ORDER='2' THEN N_TOT_PRSN_NUM - TOT_PRSN_NUM
              ELSE PRSN_NUM_MINUS
        END PRSN_NUM_MINUS,          
        
        ROUND(CASE 
              WHEN ROW_ORDER='2' THEN (N_TOT_PRSN_NUM - TOT_PRSN_NUM)/TOT_PRSN_NUM*100
              ELSE PER
        END,2) AS PER             
  FROM
 (
  
  SELECT '1' AS ROW_ORDER,
    '입장인원' AS MANA_DESC,
     A.TMS                                                               
        ,TOT_PRSN_NUM                     
        ,MON_NUM 
              ,TUE_NUM 
              ,WEN_NUM 
              ,THU_NUM 
              ,FRI_NUM 
              ,SAT_NUM 
              ,SUN_NUM 
              ,B_TOT_PRSN_NUM
              ,(TOT_PRSN_NUM-B_TOT_PRSN_NUM) AS PRSN_NUM_MINUS
              ,DECODE(B_TOT_PRSN_NUM,0,0,(TOT_PRSN_NUM-B_TOT_PRSN_NUM)/B_TOT_PRSN_NUM*100)  AS PER
              ,TOTAL          
  
    FROM
    
    
    (
    
     SELECT   MAX(TMS) TMS
           ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
           ,NVL(SUM(A.ENT_PRSN_NUM ),0)         TOT_PRSN_NUM                                                      
           
          
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'2', A.ENT_PRSN_NUM,0 )) ,0) MON_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'3', A.ENT_PRSN_NUM,0 )) ,0) TUE_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'4', A.ENT_PRSN_NUM,0 )) ,0) WEN_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'5', A.ENT_PRSN_NUM,0 )) ,0) THU_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'6', A.ENT_PRSN_NUM,0 )) ,0) FRI_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'7', A.ENT_PRSN_NUM,0 )) ,0) SAT_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'1', A.ENT_PRSN_NUM,0 )) ,0) SUN_NUM       
    
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) =  ?  
                AND MEET_CD = ?   
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE 1=1
             AND STND_YEAR = ?  
                AND MEET_CD = ? 
                AND TMS  = ?  
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    GROUP BY B.TMS
    ) A,
    
    
    (
    
     SELECT   
            MAX(TMS) TMS
           ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
           ,NVL(SUM(A.ENT_PRSN_NUM ),0)         B_TOT_PRSN_NUM  
           
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) =  ?  
                AND MEET_CD = ?    
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE 1=1
             AND STND_YEAR = ?    
                AND MEET_CD = ? 
                AND TMS  = ?  - 1   
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    GROUP BY B.TMS
    ) B,
    
    (
    
     SELECT NVL(SUM(A.ENT_PRSN_NUM ),0)         TOTAL  
           
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) = ?  
                AND MEET_CD = ?   
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE STND_YEAR = ?  
                AND MEET_CD = ? 
                AND TMS <= ?  
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    )C
  UNION ALL 
  
  
  SELECT '2' AS ROW_ORDER,
    '전년대비' AS MANA_DESC,
     A.TMS                                                               
        ,TOT_PRSN_NUM                     
        ,MON_NUM 
              ,TUE_NUM 
              ,WEN_NUM 
              ,THU_NUM 
              ,FRI_NUM 
              ,SAT_NUM 
              ,SUN_NUM 
              ,B_TOT_PRSN_NUM
              ,(TOT_PRSN_NUM-B_TOT_PRSN_NUM) AS PRSN_NUM_MINUS
              ,DECODE(B_TOT_PRSN_NUM,0,0,(TOT_PRSN_NUM-B_TOT_PRSN_NUM)/B_TOT_PRSN_NUM*100)  AS PER
              ,TOT          
  
    FROM
    
    
    (
    
     SELECT   MAX(TMS) TMS
           ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
           ,NVL(SUM(A.ENT_PRSN_NUM ),0)         TOT_PRSN_NUM                                                      
           
          
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'2', A.ENT_PRSN_NUM,0 )) ,0) MON_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'3', A.ENT_PRSN_NUM,0 )) ,0) TUE_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'4', A.ENT_PRSN_NUM,0 )) ,0) WEN_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'5', A.ENT_PRSN_NUM,0 )) ,0) THU_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'6', A.ENT_PRSN_NUM,0 )) ,0) FRI_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'7', A.ENT_PRSN_NUM,0 )) ,0) SAT_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'1', A.ENT_PRSN_NUM,0 )) ,0) SUN_NUM       
    
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) = ?  - 1  
                AND MEET_CD    = ?   
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE STND_YEAR = ?  - 1  
                AND MEET_CD =?  
                AND TMS  = ?    
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    GROUP BY B.TMS
    ) A,
    
    
    (
    
     SELECT   
            MAX(TMS) TMS
           ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
           ,NVL(SUM(A.ENT_PRSN_NUM ),0)         B_TOT_PRSN_NUM  
           
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) = ?  -1 
                AND MEET_CD = ?     
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE STND_YEAR = ?  - 1  
                AND MEET_CD = ? 
                AND TMS  = ?  - 1  
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    GROUP BY B.TMS
    ) B,
    
    (
    
     SELECT NVL(SUM(A.ENT_PRSN_NUM ),0)         TOT  
           
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) =  ?  -1 
                AND MEET_CD = '003'
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE STND_YEAR = ?  -1  
                AND MEET_CD = ? 
                AND TMS  <= ?   
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    )C
  ),
  (
  SELECT SUM(A.ENT_PRSN_NUM ) AS N_TOT_PRSN_NUM
      FROM 
          TBRC_STAY_MANA  A,       
          VW_SDL_INFO B
      WHERE 1 =1
        AND A.RACE_DT(+) = B.RACE_DAY
        AND B.STND_YEAR =  ?  
        AND B.MEET_CD = ?    
        AND B.TMS  = ?       
  )BB  
 ORDER BY MANA_DESC
 #String#2012#String#003#String#2012#String#003#String#23#String#2012#String#003#String#2012#String#003#String#23#String#2012#String#003#String#2012#String#003#String#23#String#2012#String#003#String#2012#String#003#String#23#String#2012#String#003#String#2012#String#003#String#23#String#2012#String#2012#String#003#String#23#String#2012#String#003#String#23#
>
[I][UbiData][2012-07-22 11:35:23]	- Row size : 2
[I][UbiData][2012-07-22 11:35:23]	- Data
<
1^t입장인원^t1435289^t0^t0^t34464^t38440^t72904^t72871^t33^t.05^t^n2^t전년대비^t1819685^t0^t0^t39050^t38908^t77958^t0^t-5054^t-6.48^t^n
>
[I][UbiData][2012-07-22 11:35:23][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-07-22 11:35:23][DATA QUERY START]
[I][UbiData][2012-07-22 11:35:23]	- sql id : rsm2020_s07
[I][UbiData][2012-07-22 11:35:23]	- Db charset : KSC5601
[I][UbiData][2012-07-22 11:35:23]	- Sql
<
SELECT  
   '0~'||BB.RACE_NO||'R' AS RACE_DESC,
   DECODE(LEV,1,'인원','점유율') AS MANA_DESC,
      DECODE(LEV,1,INWON_12,DECODE(INWON_TOTAL,0,0,ROUND(INWON_12/INWON_TOTAL*100,2))) AS INWON_12, 
      DECODE(LEV,1,INWON_13,DECODE(INWON_TOTAL,0,0,ROUND(INWON_13/INWON_TOTAL*100,2))) AS INWON_13, 
      DECODE(LEV,1,INWON_14,DECODE(INWON_TOTAL,0,0,ROUND(INWON_14/INWON_TOTAL*100,2))) AS INWON_14, 
      DECODE(LEV,1,INWON_16,DECODE(INWON_TOTAL,0,0,ROUND(INWON_16/INWON_TOTAL*100,2))) AS INWON_16, 
      DECODE(LEV,1,INWON_19,DECODE(INWON_TOTAL,0,0,ROUND(INWON_19/INWON_TOTAL*100,2))) AS INWON_19, 
      DECODE(LEV,1,INWON_20,DECODE(INWON_TOTAL,0,0,ROUND(INWON_20/INWON_TOTAL*100,2))) AS INWON_20, 
      DECODE(LEV,1,INWON_22,DECODE(INWON_TOTAL,0,0,ROUND(INWON_22/INWON_TOTAL*100,2))) AS INWON_22, 
      DECODE(LEV,1,INWON_23,DECODE(INWON_TOTAL,0,0,ROUND(INWON_23/INWON_TOTAL*100,2))) AS INWON_23, 
      DECODE(LEV,1,INWON_24,DECODE(INWON_TOTAL,0,0,ROUND(INWON_24/INWON_TOTAL*100,2))) AS INWON_24, 
      DECODE(LEV,1,INWON_25,DECODE(INWON_TOTAL,0,0,ROUND(INWON_25/INWON_TOTAL*100,2))) AS INWON_25, 
      DECODE(LEV,1,INWON_26,DECODE(INWON_TOTAL,0,0,ROUND(INWON_26/INWON_TOTAL*100,2))) AS INWON_26, 
      DECODE(LEV,1,INWON_27,DECODE(INWON_TOTAL,0,0,ROUND(INWON_27/INWON_TOTAL*100,2))) AS INWON_27, 
      DECODE(LEV,1,INWON_28,DECODE(INWON_TOTAL,0,0,ROUND(INWON_28/INWON_TOTAL*100,2))) AS INWON_28, 
      DECODE(LEV,1,INWON_100,DECODE(INWON_TOTAL,0,0,ROUND(INWON_100/INWON_TOTAL*100,2))) AS INWON_100, 
      DECODE(LEV,1,INWON_101,DECODE(INWON_TOTAL,0,0,ROUND(INWON_101/INWON_TOTAL*100,2))) AS INWON_101, 
      DECODE(LEV,1,INWON_102,DECODE(INWON_TOTAL,0,0,ROUND(INWON_102/INWON_TOTAL*100,2))) AS INWON_102, 
      DECODE(LEV,1,INWON_103,DECODE(INWON_TOTAL,0,0,ROUND(INWON_103/INWON_TOTAL*100,2))) AS INWON_103, 
      DECODE(LEV,1,INWON_SUM,DECODE(INWON_TOTAL,0,0,ROUND(INWON_SUM/INWON_TOTAL*100,2))) AS INWON_TOTAL 
  FROM
 (
             SELECT  
        SUM(CASE WHEN BRNC_CD='12' THEN INWON END) AS INWON_12, 
        SUM(CASE WHEN BRNC_CD='13' THEN INWON END) AS INWON_13, 
        SUM(CASE WHEN BRNC_CD='14' THEN INWON END) AS INWON_14, 
        SUM(CASE WHEN BRNC_CD='16' THEN INWON END) AS INWON_16, 
        SUM(CASE WHEN BRNC_CD='19' THEN INWON END) AS INWON_19, 
        SUM(CASE WHEN BRNC_CD='20' THEN INWON END) AS INWON_20, 
        SUM(CASE WHEN BRNC_CD='22' THEN INWON END) AS INWON_22, 
        SUM(CASE WHEN BRNC_CD='23' THEN INWON END) AS INWON_23, 
        SUM(CASE WHEN BRNC_CD='24' THEN INWON END) AS INWON_24, 
        SUM(CASE WHEN BRNC_CD='25' THEN INWON END) AS INWON_25, 
        SUM(CASE WHEN BRNC_CD='26' THEN INWON END) AS INWON_26, 
        SUM(CASE WHEN BRNC_CD='27' THEN INWON END) AS INWON_27, 
        SUM(CASE WHEN BRNC_CD='28' THEN INWON END) AS INWON_28, 
        SUM(CASE WHEN BRNC_CD='100' THEN INWON END) AS INWON_100, 
        SUM(CASE WHEN BRNC_CD='101' THEN INWON END) AS INWON_101, 
        SUM(CASE WHEN BRNC_CD='102' THEN INWON END) AS INWON_102, 
        SUM(CASE WHEN BRNC_CD='103' THEN INWON END) AS INWON_103, 
        SUM(INWON ) AS INWON_TOTAL,
        SUM(CASE WHEN BRNC_CD='12' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='13' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='14' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='16' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='19' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='20' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='22' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='23' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='24' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='25' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='26' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='27' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='28' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='100' THEN INWON END) + 
                 SUM(CASE WHEN BRNC_CD='101' THEN INWON END) + 
                 SUM(CASE WHEN BRNC_CD='102' THEN INWON END) +
                 SUM(CASE WHEN BRNC_CD='103' THEN INWON END)  AS INWON_SUM 
     FROM
    (
    SELECT C.CD_NM, 
           E.BRNC_CD,                                      
            SUM( E.ENT_PRSN_NUM) INWON 
        FROM                                                   
         VW_SDL_INFO R       
         ,TBRC_STAY_MANA E, 
         TBRK_SPEC_CD C                      
        WHERE  1=1
           AND R.MEET_CD  = ?  
        AND R.STND_YEAR(+) = ?  
          AND R.TMS(+)   = ?  
          AND R.DAY_ORD(+) = ?  
         AND E.MEET_CD='003'                        
         AND E.RACE_DT=R.RACE_DAY                 
         AND C.GRP_CD IN ('018','032')                      
         AND C.CD=E.BRNC_CD                
         
        GROUP BY E.BRNC_CD,C.CD_NM          
        ORDER BY E.BRNC_CD
    )A
   )AA,
 (
  SELECT                                                                   
          MAX(RACE_NO)  AS RACE_NO
          
   FROM   (                                                                 
               SELECT                                                       
                        TOR.RACE_NO                                         
                      , TOR.RACE_REG_NO                                     
                      , TOR.RACER_NO                                        
                      , TOR.RANK                                            
                      , TRM.NM_KOR                                          
                      , RANK() OVER (PARTITION BY TOR.RACE_NO               
                                                , TOR.RANK                  
                                         ORDER BY TOR.RACE_REG_NO) SEQ      
               FROM     TBEB_ORGAN@MRASYSLINK        TOR                        
                      , TBEC_RACER_MASTER@MRASYSLINK TRM                        
               WHERE 1=1                                                        
               
               AND    TOR.RACER_NO   = TRM.RACER_NO                         
               AND    TOR.STND_YEAR  = ?  
               AND    TOR.MBR_CD     = '001'                                
               AND    TOR.TMS        = ?  
               
               AND    TOR.RANK BETWEEN 1                                    
                                   AND 3                                    
          )                                                                 
   START WITH SEQ = 1                                                       
   CONNECT BY PRIOR SEQ = SEQ - 1                                           
   AND PRIOR RACE_NO = RACE_NO AND RANK = RANK                           
 )BB , (SELECT LEVEL LEV FROM DUAL CONNECT BY LEVEL <=2 ) DU
 #String#003#String#2012#String#23#String#2#String#2012#String#23#
>
[I][UbiData][2012-07-22 11:35:23]	- Row size : 2
[I][UbiData][2012-07-22 11:35:23]	- Data
<
0~15R^t인원^t3060^t2825^t3107^t3616^t4633^t2324^t1608^t2481^t2151^t1381^t1320^t3371^t1412^t473^t718^t0^t0^t34480^t^n0~15R^t점유율^t7.96^t7.35^t8.08^t9.41^t12.05^t6.05^t4.18^t6.45^t5.6^t3.59^t3.43^t8.77^t3.67^t1.23^t1.87^t0^t0^t89.7^t^n
>
[I][UbiData][2012-07-22 11:35:23][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-07-22 11:35:23][DATA QUERY START]
[I][UbiData][2012-07-22 11:35:23]	- sql id : rsm2020_s08
[I][UbiData][2012-07-22 11:35:23]	- Db charset : KSC5601
[I][UbiData][2012-07-22 11:35:23]	- Sql
<
SELECT                                       
       STND_YEAR,  
       TMS,           
       DAY_ORD,   
       SPEC_DESC   
  FROM TBRD_RACE_SPEC_DESC 
  WHERE 1=1
       AND STND_YEAR = ?  
       AND TMS  = ?  
       AND DAY_ORD = ?  
       AND MEET_CD   = ?  
 UNION ALL
 SELECT 
       ' ', 999, 999, ' '
 FROM DUAL          
 ORDER BY TMS
 #String#2012#String#23#String#2#String#003#
>
[I][UbiData][2012-07-22 11:35:23]	- Row size : 1
[I][UbiData][2012-07-22 11:35:23]	- Data
<
 ^t999^t999^t ^t^n
>
[I][UbiData][2012-07-22 11:35:23][DATA QUERY END]
--------------------------------------------------------------------------------


[I][UbiForm][2012-07-22 11:35:26][REQUEST FILE]
[I][UbiForm][2012-07-22 11:35:26]	- Report : /web/waspage/usrbm/report/rsm/rsm2020_2.jrf
[I][UbiForm][2012-07-22 11:35:26]	- Common : /web/waspage/usrbm/report/rsm/property/commonitem.xml [Not found]
--------------------------------------------------------------------------------


[I][UbiData][2012-07-22 11:35:26][REQUEST FILE]
[I][UbiData][2012-07-22 11:35:26]	- Report : rsm2020_2.jrf
--------------------------------------------------------------------------------
[I][UbiData][2012-07-22 11:35:26][DB CONNECT]
[I][UbiData][2012-07-22 11:35:26]	- Type : nonlookup
[I][UbiData][2012-07-22 11:35:26]	- Db id : RBM
[I][UbiData][2012-07-22 11:35:26]	- Sql id : SQL
[I][UbiData][2012-07-22 11:35:26]	- Datasource : jdbc/RBM
[I][UbiData][2012-07-22 11:35:26]	- Status : Success
--------------------------------------------------------------------------------
[I][UbiData][2012-07-22 11:35:26][DATA QUERY START]
[I][UbiData][2012-07-22 11:35:26]	- sql id : SQL
[I][UbiData][2012-07-22 11:35:26]	- Db charset : KSC5601
[I][UbiData][2012-07-22 11:35:26]	- Sql
<
SELECT TO_CHAR(TO_NUMBER(RACE_NO))||'경주' AS RACE_NO,
                ROW_NUM as gbn,
                GBN_DESC AS GBN_DESC,
                SUM(POOL_TOTAL) - SUM(REFUND) AS TOT      
         FROM VW_SDL_PT P,
             (
                 SELECT ROWNUM AS ROW_NUM, A.*
                 FROM   (
                     SELECT MEET_CD, STND_YEAR, TMS, DAY_ORD, SUBSTR(STND_YEAR,3,2)||'년 '||TMS||'회 '||DAY_ORD||'일차' AS GBN_DESC
                     FROM (
                         SELECT MEET_CD, STND_YEAR, TMS, DAY_ORD
                         FROM VW_SDL_INFO
                         WHERE MEET_CD = '003' 
                          AND  STND_YEAR||TMS||DAY_ORD <= ? ||? ||? 
                         ORDER BY STND_YEAR DESC, TMS DESC
                     )
                     WHERE ROWNUM < 5
                     UNION ALL
                     SELECT MEET_CD, STND_YEAR, TMS, DAY_ORD, SUBSTR(STND_YEAR,3,2)||'년 '||TMS||'회 '||DAY_ORD||'일차' AS GBN_DESC
                     FROM VW_SDL_INFO
                     WHERE MEET_CD = '003' 
                     AND   STND_YEAR= ?  -1
                     AND   TMS = ? 
                     AND   DAY_ORD = ? 
                     ORDER BY 1,2,3
                     ) A
             ) I
         WHERE P.MEET_CD(+)     = I.MEET_CD
           AND P.STND_YEAR(+)   = I.STND_YEAR
           AND P.TMS(+)         = I.TMS
           AND P.DAY_ORD(+)     = I.DAY_ORD
         GROUP BY ROW_NUM, RACE_NO, GBN_DESC  
         ORDER BY P.RACE_NO, I.ROW_NUM
 #String#2012#String#23#String#2#String#2012#String#23#String#2#
>
[I][UbiData][2012-07-22 11:35:26]	- Row size : 75
[I][UbiData][2012-07-22 11:35:26]	- Data
<
1경주^t1^t11년 23회 2일차^t264042400^t^n1경주^t2^t12년 22회 1일차^t293089900^t^n1경주^t3^t12년 22회 2일차^t261051800^t^n1경주^t4^t12년 23회 1일차^t215838300^t^n1경주^t5^t12년 23회 2일차^t250835500^t^n2경주^t1^t11년 23회 2일차^t351603500^t^n2경주^t2^t12년 22회 1일차^t370200800^t^n2경주^t3^t12년 22회 2일차^t334016300^t^n2경주^t4^t12년 23회 1일차^t291112700^t^n2경주^t5^t12년 23회 2일차^t343607300^t^n3경주^t1^t11년 23회 2일차^t425171300^t^n3경주^t2^t12년 22회 1일차^t450108500^t^n3경주^t3^t12년 22회 2일차^t390621300^t^n3경주^t4^t12년 23회 1일차^t359821600^t^n3경주^t5^t12년 23회 2일차^t417211500^t^n4경주^t1^t11년 23회 2일차^t494271400^t^n4경주^t2^t12년 22회 1일차^t485346200^t^n4경주^t3^t12년 22회 2일차^t454238100^t^n4경주^t4^t12년 23회 1일차^t401858900^t^n4경주^t5^t12년 23회 2일차^t456173400^t^n5경주^t1^t11년 23회 2일차^t558344400^t^n5경주^t2^t12년 22회 1일차^t562309700^t^n5경주^t3^t12년 22회 2일차^t496119300^t^n5경주^t4^t12년 23회 1일차^t466886800^t^n5경주^t5^t12년 23회 2일차^t527909000^t^n6경주^t1^t11년 23회 2일차^t570603000^t^n6경주^t2^t12년 22회 1일차^t604318100^t^n6경주^t3^t12년 22회 2일차^t511952200^t^n6경주^t4^t12년 23회 1일차^t501702600^t^n6경주^t5^t12년 23회 2일차^t607958500^t^n7경주^t1^t11년 23회 2일차^t649920700^t^n7경주^t2^t12년 22회 1일차^t665482500^t^n7경주^t3^t12년 22회 2일차^t585149800^t^n7경주^t4^t12년 23회 1일차^t540093800^t^n7경주^t5^t12년 23회 2일차^t613823900^t^n8경주^t1^t11년 23회 2일차^t645718600^t^n8경주^t2^t12년 22회 1일차^t715929500^t^n8경주^t3^t12년 22회 2일차^t596947800^t^n8경주^t4^t12년 23회 1일차^t574142200^t^n8경주^t5^t12년 23회 2일차^t685160100^t^n9경주^t1^t11년 23회 2일차^t727129600^t^n9경주^t2^t12년 22회 1일차^t753415700^t^n9경주^t3^t12년 22회 2일차^t587289100^t^n9경주^t4^t12년 23회 1일차^t607820900^t^n9경주^t5^t12년 23회 2일차^t722738000^t^n10경주^t1^t11년 23회 2일차^t800034800^t^n10경주^t2^t12년 22회 1일차^t839339000^t^n10경주^t3^t12년 22회 2일차^t755699800^t^n10경주^t4^t12년 23회 1일차^t706319100^t^n10경주^t5^t12년 23회 2일차^t849137700^t^n11경주^t1^t11년 23회 2일차^t362521700^t^n11경주^t2^t12년 22회 1일차^t876521800^t^n11경주^t3^t12년 22회 2일차^t720036200^t^n11경주^t4^t12년 23회 1일차^t757588900^t^n11경주^t5^t12년 23회 2일차^t874658600^t^n12경주^t1^t11년 23회 2일차^t906492300^t^n12경주^t2^t12년 22회 1일차^t830436800^t^n12경주^t3^t12년 22회 2일차^t710252000^t^n12경주^t4^t12년 23회 1일차^t745111200^t^n12경주^t5^t12년 23회 2일차^t938498200^t^n13경주^t1^t11년 23회 2일차^t863444000^t^n13경주^t2^t12년 22회 1일차^t904050900^t^n13경주^t3^t12년 22회 2일차^t804144100^t^n13경주^t4^t12년 23회 1일차^t750387900^t^n13경주^t5^t12년 23회 2일차^t903663500^t^n14경주^t1^t11년 23회 2일차^t949571400^t^n14경주^t2^t12년 22회 1일차^t714640400^t^n14경주^t3^t12년 22회 2일차^t824604900^t^n14경주^t4^t12년 23회 1일차^t725013700^t^n14경주^t5^t12년 23회 2일차^t909350600^t^n15경주^t1^t11년 23회 2일차^t973981800^t^n15경주^t2^t12년 22회 1일차^t922496100^t^n15경주^t3^t12년 22회 2일차^t858395800^t^n15경주^t4^t12년 23회 1일차^t791161300^t^n15경주^t5^t12년 23회 2일차^t949778900^t^n
>
[I][UbiData][2012-07-22 11:35:26][DATA QUERY END]
--------------------------------------------------------------------------------


[I][UbiForm][2012-07-22 14:22:17][REQUEST FILE]
[I][UbiForm][2012-07-22 14:22:17]	- Report : /web/waspage/usrbm/report/rsm/rsm4060.jrf
[I][UbiForm][2012-07-22 14:22:17]	- Common : /web/waspage/usrbm/report/rsm/property/commonitem.xml [Not found]
--------------------------------------------------------------------------------


[I][UbiData][2012-07-22 14:22:17][REQUEST FILE]
[I][UbiData][2012-07-22 14:22:17]	- Report : rsm4060.jrf
--------------------------------------------------------------------------------
[I][UbiData][2012-07-22 14:22:17][DB CONNECT]
[I][UbiData][2012-07-22 14:22:17]	- Type : nonlookup
[I][UbiData][2012-07-22 14:22:17]	- Db id : rbm
[I][UbiData][2012-07-22 14:22:17]	- Sql id : SQL1
[I][UbiData][2012-07-22 14:22:17]	- Datasource : jdbc/RBM
[I][UbiData][2012-07-22 14:22:17]	- Status : Success
--------------------------------------------------------------------------------
[I][UbiData][2012-07-22 14:22:17][DATA QUERY START]
[I][UbiData][2012-07-22 14:22:17]	- sql id : SQL1
[I][UbiData][2012-07-22 14:22:17]	- Db charset : KSC5601
[I][UbiData][2012-07-22 14:22:17]	- Sql
<
SELECT *
 FROM (
     SELECT  
           MEET_CD,  
           STND_YEAR,  
           DT,   
          BRNC_CD,  
          CD_NM,      
          GROSS_SALES, 
          CANCELS,  
          TOT_SALES,  
          CASHES,  
          NET_INCOME,  
          DRAWS,   
          RETURNS,
          BALANCE,  
          VERI,   
          VERI_DT,  
          FILE_PATH,  
          FILE_NM  
     FROM TBRD_LIS_FILE A 
     ,TBRK_SPEC_CD B    
     WHERE 1=1
      AND BRNC_CD=B.CD
      AND B.GRP_CD = '018'         
      AND BRNC_CD NOT IN ('00','01','02','03','04','06','08','98')
      AND STND_YEAR = ? 
      AND DT  = ? 
    ORDER BY BRNC_CD
 ) A
 #String#2012#String#0720#
>
[I][UbiData][2012-07-22 14:22:17]	- Row size : 18
[I][UbiData][2012-07-22 14:22:17]	- Data
<
001^t2012^t0720^t11^t수원^t1041168450^t85000^t1041083450^t830616730^t210466720^t38648740^t249115460^t0^t001^t2012-07-20 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120720/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0720^t12^t상봉^t1017573020^t0^t1017573020^t784281650^t233291370^t97942364^t331233734^t0^t001^t2012-07-20 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120720/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0720^t13^t일산^t709116500^t20000^t709096500^t606901280^t102195220^t61140000^t163335220^t0^t001^t2012-07-20 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120720/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0720^t14^t분당^t1162371800^t0^t1162371800^t912373040^t249998760^t188101000^t438099760^t0^t001^t2012-07-20 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120720/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0720^t15^t동대문^t510277796^t0^t510277796^t397475236^t112802560^t17002800^t129805360^t0^t001^t2012-07-20 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120720/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0720^t16^t장안^t950974370^t59000^t950915370^t708667640^t242247730^t103681000^t345928730^t0^t001^t2012-07-20 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120720/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0720^t17^t산본^t476760300^t0^t476760300^t334195540^t142564760^t37160000^t179724760^t0^t001^t2012-07-20 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120720/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0720^t18^t부천^t551750290^t40000^t551710290^t408429580^t143280710^t149475000^t292755710^t0^t001^t2012-07-20 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120720/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0720^t19^t관악^t562321060^t0^t562321060^t410936150^t151384910^t67845000^t219229910^t0^t001^t2012-07-20 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120720/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0720^t20^t길음^t843678010^t0^t843678010^t676307440^t167370570^t30450000^t197820570^t0^t001^t2012-07-20 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120720/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0720^t21^t당산^t1327015250^t117000^t1326898250^t1132006500^t194891750^t69020000^t263911750^t0^t001^t2012-07-20 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120720/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0720^t22^t유성^t553107130^t100000^t553007130^t410351920^t142655210^t37105000^t179760210^t0^t001^t2012-07-20 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120720/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0720^t23^t인천^t346462720^t0^t346462720^t245243900^t101218820^t24904000^t126122820^t0^t001^t2012-07-20 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120720/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0720^t24^t시흥^t688071070^t115000^t687956070^t563955340^t124000730^t65043070^t189043800^t0^t001^t2012-07-20 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120720/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0720^t25^t논현^t699321550^t105000^t699216550^t573415270^t125801280^t26000000^t151801280^t0^t001^t2012-07-20 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120720/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0720^t26^t천안^t534664310^t0^t534664310^t419735930^t114928380^t24505000^t139433380^t0^t001^t2012-07-20 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120720/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0720^t27^t올림픽^t1872075740^t593000^t1871482740^t1513895230^t357587510^t86083983^t443671493^t0^t001^t2012-07-20 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120720/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0720^t28^t의정부^t507036940^t238000^t506798940^t434340350^t72458590^t24731000^t97189590^t0^t001^t2012-07-20 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120720/divstatrpt.lis^tdivstatrpt.lis^t^n
>
[I][UbiData][2012-07-22 14:22:17][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-07-22 14:22:17][DATA QUERY START]
[I][UbiData][2012-07-22 14:22:17]	- sql id : SQL3
[I][UbiData][2012-07-22 14:22:17]	- Db charset : KSC5601
[I][UbiData][2012-07-22 14:22:17]	- Sql
<
SELECT *
 FROM (
     SELECT 
         '그린카드' AS MYCAT, 
         COMM_NO, 
         DIV_NO, 
         CD_NM AS COMM_NAME, 
         OUT_AMT, 
         IN_AMT, 
         MILEAGE_AMT, 
         BONUS_AMT,
         (IN_AMT-OUT_AMT-MILEAGE_AMT-BONUS_AMT) AS SIL_IN_AMT 
     FROM VW_MYCAT_INOUT A, TBRK_SPEC_CD B                                              
    WHERE 1=1
      AND RACE_DAY    = ?  
      AND A.DIV_NO = B.CD(+)
      AND B.GRP_CD(+) = '127'                                     
    ORDER BY DIV_NO   
 ) A
 #String#20120720#
>
[I][UbiData][2012-07-22 14:22:17]	- Row size : 5
[I][UbiData][2012-07-22 14:22:17]	- Data
<
그린카드^t06^t00^t본장^t10585350^t30813580^t59230^t498000^t19671000^t^n그린카드^t06^t04^t동대문^t502600^t3098000^t0^t12000^t2583400^t^n그린카드^t06^t07^t산본^t224000^t1062000^t0^t3000^t835000^t^n그린카드^t06^t15^t논현^t1020000^t4892000^t0^t0^t3872000^t^n그린카드^t06^t17^t올림픽^t171900^t0^t0^t0^t-171900^t^n
>
[I][UbiData][2012-07-22 14:22:17][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-07-22 14:22:17][DB CONNECT]
[I][UbiData][2012-07-22 14:22:17]	- Type : nonlookup
[I][UbiData][2012-07-22 14:22:17]	- Db id : RBM
[I][UbiData][2012-07-22 14:22:17]	- Sql id : SQL2
[I][UbiData][2012-07-22 14:22:17]	- Datasource : jdbc/RBM
[I][UbiData][2012-07-22 14:22:17]	- Status : Success
--------------------------------------------------------------------------------
[I][UbiData][2012-07-22 14:22:17][DATA QUERY START]
[I][UbiData][2012-07-22 14:22:17]	- sql id : SQL2
[I][UbiData][2012-07-22 14:22:17]	- Db charset : KSC5601
[I][UbiData][2012-07-22 14:22:17]	- Sql
<
SELECT *
 FROM (
  SELECT 
    MEET_CD,
          MEET_DESC,
          BRNC_CD,
          SUM(GROSS_SALES) AS GROSS_SALES,
          SUM(CANCELS) AS CANCELS,  
          SUM(TOT_SALES) AS TOT_SALES,  
          SUM(CASHES) AS CASHES,  
          SUM(NET_INCOME) AS NET_INCOME,  
          SUM(BALANCE) AS BALANCE  
  FROM
  (            
      SELECT 
        
              MEET_CD,  
        STND_YEAR,  
        DT,   
        CASE 
                          WHEN  A.BRNC_CD NOT IN ('00','01','02','03','04','06','08','98') THEN '지점계' 
                          WHEN  A.BRNC_CD IN ('06') THEN '그린카드'
                          WHEN  A.BRNC_CD IN ('08','98') AND MEET_CD ='003' THEN '미사리'
                          WHEN  A.BRNC_CD IN ('01','02','03','04','06') AND MEET_CD ='003' THEN '스피돔'
                          WHEN  A.BRNC_CD IN ('01','02','03','04','06','08','98') AND MEET_CD ='001' THEN '스피돔'
           ELSE  'X' 
           END AS  MEET_DESC, 
           CASE 
            WHEN  A.BRNC_CD NOT IN ('00','01','02','03','04','06','08','98') THEN '18' 
            WHEN  A.BRNC_CD IN ('06') THEN '06'
            WHEN  A.BRNC_CD IN ('01','02','03','04','06','08','98') THEN '00'
           ELSE  'X'
           END AS BRNC_CD,
           CASE 
            WHEN  A.BRNC_CD NOT IN ('00','01','02','03','04','06','08','98') THEN '1' 
            WHEN  A.BRNC_CD IN ('06') THEN '2'
            WHEN  A.BRNC_CD IN ('01','02','03','04','06','08','98') THEN '3'
           ELSE  'X' 
           END AS MEET_ORDER,           
           SUM(GROSS_SALES) AS GROSS_SALES,
           SUM(CANCELS) AS CANCELS,  
           SUM(TOT_SALES) AS TOT_SALES,  
           SUM(CASHES) AS CASHES,  
           SUM(NET_INCOME) AS NET_INCOME,  
           SUM(BALANCE) AS BALANCE  
     FROM TBRD_LIS_FILE A 
     WHERE 1=1     
       AND STND_YEAR = ? 
       AND DT    = ? 
     GROUP BY MEET_CD,  
        STND_YEAR,  
        DT,  
        A.BRNC_CD
  )        
  WHERE BRNC_CD != 'X'
  GROUP BY MEET_CD,MEET_ORDER,MEET_DESC,
          BRNC_CD        
  ORDER BY  MEET_ORDER                                  
 ) A
 #String#2012#String#0720#
>
[I][UbiData][2012-07-22 14:22:17]	- Row size : 3
[I][UbiData][2012-07-22 14:22:17]	- Data
<
001^t지점계^t18^t14353746306^t1472000^t14352274306^t11363128726^t2989145580^t0^t^n001^t그린카드^t06^t99139380^t0^t99139380^t49111230^t50028150^t50028150^t^n001^t스피돔^t00^t1894169430^t50000^t1894119430^t1486881600^t407237830^t0^t^n
>
[I][UbiData][2012-07-22 14:22:17][DATA QUERY END]
--------------------------------------------------------------------------------


[I][UbiForm][2012-07-22 14:22:24][REQUEST FILE]
[I][UbiForm][2012-07-22 14:22:24]	- Report : /web/waspage/usrbm/report/rsm/rsm4060.jrf
[I][UbiForm][2012-07-22 14:22:24]	- Common : /web/waspage/usrbm/report/rsm/property/commonitem.xml [Not found]
--------------------------------------------------------------------------------


[I][UbiData][2012-07-22 14:22:24][REQUEST FILE]
[I][UbiData][2012-07-22 14:22:24]	- Report : rsm4060.jrf
--------------------------------------------------------------------------------
[I][UbiData][2012-07-22 14:22:24][DB CONNECT]
[I][UbiData][2012-07-22 14:22:24]	- Type : nonlookup
[I][UbiData][2012-07-22 14:22:24]	- Db id : rbm
[I][UbiData][2012-07-22 14:22:24]	- Sql id : SQL1
[I][UbiData][2012-07-22 14:22:24]	- Datasource : jdbc/RBM
[I][UbiData][2012-07-22 14:22:24]	- Status : Success
--------------------------------------------------------------------------------
[I][UbiData][2012-07-22 14:22:24][DATA QUERY START]
[I][UbiData][2012-07-22 14:22:24]	- sql id : SQL1
[I][UbiData][2012-07-22 14:22:24]	- Db charset : KSC5601
[I][UbiData][2012-07-22 14:22:24]	- Sql
<
SELECT *
 FROM (
     SELECT  
           MEET_CD,  
           STND_YEAR,  
           DT,   
          BRNC_CD,  
          CD_NM,      
          GROSS_SALES, 
          CANCELS,  
          TOT_SALES,  
          CASHES,  
          NET_INCOME,  
          DRAWS,   
          RETURNS,
          BALANCE,  
          VERI,   
          VERI_DT,  
          FILE_PATH,  
          FILE_NM  
     FROM TBRD_LIS_FILE A 
     ,TBRK_SPEC_CD B    
     WHERE 1=1
      AND BRNC_CD=B.CD
      AND B.GRP_CD = '018'         
      AND BRNC_CD NOT IN ('00','01','02','03','04','06','08','98')
      AND STND_YEAR = ? 
      AND DT  = ? 
    ORDER BY BRNC_CD
 ) A
 #String#2012#String#0721#
>
[I][UbiData][2012-07-22 14:22:24]	- Row size : 18
[I][UbiData][2012-07-22 14:22:24]	- Data
<
001^t2012^t0721^t11^t수원^t1198952210^t0^t1198952210^t1018371890^t180580320^t71119360^t251699680^t0^t001^t2012-07-21 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120721/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0721^t12^t상봉^t1143648470^t60000^t1143588470^t888990460^t254598010^t119517065^t374115075^t0^t001^t2012-07-21 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120721/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0721^t13^t일산^t944872550^t66000^t944806550^t734501710^t210304840^t46723161^t257028001^t0^t001^t2012-07-21 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120721/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0721^t14^t분당^t1310013900^t4000^t1310009900^t1041917520^t268092380^t76163000^t344255380^t0^t001^t2012-07-21 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120721/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0721^t15^t동대문^t574709560^t51000^t574658560^t466590150^t108068410^t23579670^t131648080^t0^t001^t2012-07-21 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120721/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0721^t16^t장안^t1181021518^t85000^t1180936518^t863730738^t317205780^t120167020^t437372800^t0^t001^t2012-07-21 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120721/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0721^t17^t산본^t588664950^t30000^t588634950^t404289030^t184345920^t31873100^t216219020^t0^t001^t2012-07-21 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120721/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0721^t18^t부천^t599600000^t0^t599600000^t457093880^t142506120^t61300580^t203806700^t0^t001^t2012-07-21 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120721/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0721^t19^t관악^t607174396^t0^t607174396^t455942426^t151231970^t147719144^t298951114^t0^t001^t2012-07-21 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120721/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0721^t20^t길음^t965217980^t27000^t965190980^t774948760^t190242220^t26859930^t217102150^t0^t001^t2012-07-21 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120721/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0721^t21^t당산^t1486855510^t479100^t1486376410^t1255254090^t231122320^t42217861^t273340181^t0^t001^t2012-07-21 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120721/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0721^t22^t유성^t640118460^t100000^t640018460^t472736680^t167281780^t108827900^t276109680^t0^t001^t2012-07-21 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120721/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0721^t23^t인천^t420888040^t0^t420888040^t330934390^t89953650^t53036000^t142989650^t0^t001^t2012-07-21 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120721/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0721^t24^t시흥^t787110150^t300000^t786810150^t642267340^t144542810^t49344640^t193887450^t0^t001^t2012-07-21 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120721/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0721^t25^t논현^t789272140^t0^t789272140^t646654420^t142617720^t30669000^t173286720^t0^t001^t2012-07-21 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120721/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0721^t26^t천안^t660234280^t400000^t659834280^t522993830^t136840450^t26908000^t163748450^t0^t001^t2012-07-21 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120721/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0721^t27^t올림픽^t2469652653^t41700^t2469610953^t2035296323^t434314630^t128105000^t562419630^t0^t001^t2012-07-21 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120721/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0721^t28^t의정부^t594617455^t0^t594617455^t497505425^t97112030^t28224000^t125336030^t0^t001^t2012-07-21 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120721/divstatrpt.lis^tdivstatrpt.lis^t^n
>
[I][UbiData][2012-07-22 14:22:24][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-07-22 14:22:24][DATA QUERY START]
[I][UbiData][2012-07-22 14:22:24]	- sql id : SQL3
[I][UbiData][2012-07-22 14:22:24]	- Db charset : KSC5601
[I][UbiData][2012-07-22 14:22:24]	- Sql
<
SELECT *
 FROM (
     SELECT 
         '그린카드' AS MYCAT, 
         COMM_NO, 
         DIV_NO, 
         CD_NM AS COMM_NAME, 
         OUT_AMT, 
         IN_AMT, 
         MILEAGE_AMT, 
         BONUS_AMT,
         (IN_AMT-OUT_AMT-MILEAGE_AMT-BONUS_AMT) AS SIL_IN_AMT 
     FROM VW_MYCAT_INOUT A, TBRK_SPEC_CD B                                              
    WHERE 1=1
      AND RACE_DAY    = ?  
      AND A.DIV_NO = B.CD(+)
      AND B.GRP_CD(+) = '127'                                     
    ORDER BY DIV_NO   
 ) A
 #String#20120721#
>
[I][UbiData][2012-07-22 14:22:24]	- Row size : 5
[I][UbiData][2012-07-22 14:22:24]	- Data
<
그린카드^t06^t00^t본장^t19895920^t39760710^t36740^t0^t19828050^t^n그린카드^t06^t04^t동대문^t1040000^t1557700^t0^t6000^t511700^t^n그린카드^t06^t07^t산본^t100200^t291200^t0^t6000^t185000^t^n그린카드^t06^t15^t논현^t1821640^t5292640^t0^t0^t3471000^t^n그린카드^t06^t17^t올림픽^t30000^t0^t0^t0^t-30000^t^n
>
[I][UbiData][2012-07-22 14:22:24][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-07-22 14:22:24][DB CONNECT]
[I][UbiData][2012-07-22 14:22:24]	- Type : nonlookup
[I][UbiData][2012-07-22 14:22:24]	- Db id : RBM
[I][UbiData][2012-07-22 14:22:24]	- Sql id : SQL2
[I][UbiData][2012-07-22 14:22:24]	- Datasource : jdbc/RBM
[I][UbiData][2012-07-22 14:22:24]	- Status : Success
--------------------------------------------------------------------------------
[I][UbiData][2012-07-22 14:22:24][DATA QUERY START]
[I][UbiData][2012-07-22 14:22:24]	- sql id : SQL2
[I][UbiData][2012-07-22 14:22:24]	- Db charset : KSC5601
[I][UbiData][2012-07-22 14:22:24]	- Sql
<
SELECT *
 FROM (
  SELECT 
    MEET_CD,
          MEET_DESC,
          BRNC_CD,
          SUM(GROSS_SALES) AS GROSS_SALES,
          SUM(CANCELS) AS CANCELS,  
          SUM(TOT_SALES) AS TOT_SALES,  
          SUM(CASHES) AS CASHES,  
          SUM(NET_INCOME) AS NET_INCOME,  
          SUM(BALANCE) AS BALANCE  
  FROM
  (            
      SELECT 
        
              MEET_CD,  
        STND_YEAR,  
        DT,   
        CASE 
                          WHEN  A.BRNC_CD NOT IN ('00','01','02','03','04','06','08','98') THEN '지점계' 
                          WHEN  A.BRNC_CD IN ('06') THEN '그린카드'
                          WHEN  A.BRNC_CD IN ('08','98') AND MEET_CD ='003' THEN '미사리'
                          WHEN  A.BRNC_CD IN ('01','02','03','04','06') AND MEET_CD ='003' THEN '스피돔'
                          WHEN  A.BRNC_CD IN ('01','02','03','04','06','08','98') AND MEET_CD ='001' THEN '스피돔'
           ELSE  'X' 
           END AS  MEET_DESC, 
           CASE 
            WHEN  A.BRNC_CD NOT IN ('00','01','02','03','04','06','08','98') THEN '18' 
            WHEN  A.BRNC_CD IN ('06') THEN '06'
            WHEN  A.BRNC_CD IN ('01','02','03','04','06','08','98') THEN '00'
           ELSE  'X'
           END AS BRNC_CD,
           CASE 
            WHEN  A.BRNC_CD NOT IN ('00','01','02','03','04','06','08','98') THEN '1' 
            WHEN  A.BRNC_CD IN ('06') THEN '2'
            WHEN  A.BRNC_CD IN ('01','02','03','04','06','08','98') THEN '3'
           ELSE  'X' 
           END AS MEET_ORDER,           
           SUM(GROSS_SALES) AS GROSS_SALES,
           SUM(CANCELS) AS CANCELS,  
           SUM(TOT_SALES) AS TOT_SALES,  
           SUM(CASHES) AS CASHES,  
           SUM(NET_INCOME) AS NET_INCOME,  
           SUM(BALANCE) AS BALANCE  
     FROM TBRD_LIS_FILE A 
     WHERE 1=1     
       AND STND_YEAR = ? 
       AND DT    = ? 
     GROUP BY MEET_CD,  
        STND_YEAR,  
        DT,  
        A.BRNC_CD
  )        
  WHERE BRNC_CD != 'X'
  GROUP BY MEET_CD,MEET_ORDER,MEET_DESC,
          BRNC_CD        
  ORDER BY  MEET_ORDER                                  
 ) A
 #String#2012#String#0721#
>
[I][UbiData][2012-07-22 14:22:24]	- Row size : 3
[I][UbiData][2012-07-22 14:22:24]	- Data
<
001^t지점계^t18^t16962624222^t1643800^t16960980422^t13510019062^t3450961360^t0^t^n001^t그린카드^t06^t126571050^t0^t126571050^t80791390^t45779660^t45779660^t^n001^t스피돔^t00^t2692404150^t0^t2692404150^t2232613090^t459791060^t0^t^n
>
[I][UbiData][2012-07-22 14:22:24][DATA QUERY END]
--------------------------------------------------------------------------------


[I][UbiForm][2012-07-22 20:08:22][REQUEST FILE]
[I][UbiForm][2012-07-22 20:08:22]	- Report : /web/waspage/usrbm/report/rsm/rsm4060.jrf
[I][UbiForm][2012-07-22 20:08:22]	- Common : /web/waspage/usrbm/report/rsm/property/commonitem.xml [Not found]
--------------------------------------------------------------------------------


[I][UbiData][2012-07-22 20:08:22][REQUEST FILE]
[I][UbiData][2012-07-22 20:08:22]	- Report : rsm4060.jrf
--------------------------------------------------------------------------------
[I][UbiData][2012-07-22 20:08:22][DB CONNECT]
[I][UbiData][2012-07-22 20:08:22]	- Type : nonlookup
[I][UbiData][2012-07-22 20:08:22]	- Db id : rbm
[I][UbiData][2012-07-22 20:08:22]	- Sql id : SQL1
[I][UbiData][2012-07-22 20:08:22]	- Datasource : jdbc/RBM
[I][UbiData][2012-07-22 20:08:22]	- Status : Success
--------------------------------------------------------------------------------
[I][UbiData][2012-07-22 20:08:22][DATA QUERY START]
[I][UbiData][2012-07-22 20:08:22]	- sql id : SQL1
[I][UbiData][2012-07-22 20:08:22]	- Db charset : KSC5601
[I][UbiData][2012-07-22 20:08:22]	- Sql
<
SELECT *
 FROM (
     SELECT  
           MEET_CD,  
           STND_YEAR,  
           DT,   
          BRNC_CD,  
          CD_NM,      
          GROSS_SALES, 
          CANCELS,  
          TOT_SALES,  
          CASHES,  
          NET_INCOME,  
          DRAWS,   
          RETURNS,
          BALANCE,  
          VERI,   
          VERI_DT,  
          FILE_PATH,  
          FILE_NM  
     FROM TBRD_LIS_FILE A 
     ,TBRK_SPEC_CD B    
     WHERE 1=1
      AND BRNC_CD=B.CD
      AND B.GRP_CD = '018'         
      AND BRNC_CD NOT IN ('00','01','02','03','04','06','08','98')
      AND STND_YEAR = ? 
      AND DT  = ? 
    ORDER BY BRNC_CD
 ) A
 #String#2012#String#0722#
>
[I][UbiData][2012-07-22 20:08:22]	- Row size : 18
[I][UbiData][2012-07-22 20:08:22]	- Data
<
001^t2012^t0722^t11^t수원^t1613690330^t0^t1613690330^t1389433950^t224256380^t87950310^t312206690^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120722/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0722^t12^t상봉^t1493747060^t42000^t1493705060^t1153495220^t340209840^t284046520^t624256360^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120722/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0722^t13^t일산^t1093160400^t127000^t1093033400^t941107870^t151925530^t99300000^t251225530^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120722/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0722^t14^t분당^t1589386470^t90000^t1589296470^t1292558430^t296738040^t97650500^t394388540^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120722/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0722^t15^t동대문^t770644434^t0^t770644434^t650405714^t120238720^t46789990^t167028710^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120722/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0722^t16^t장안^t1456924860^t0^t1456924860^t1082393380^t374531480^t211961039^t586492519^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120722/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0722^t17^t산본^t706708090^t0^t706708090^t520157840^t186550250^t43625000^t230175250^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120722/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0722^t18^t부천^t882004130^t0^t882004130^t676108330^t205895800^t101300000^t307195800^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120722/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0722^t19^t관악^t845372580^t0^t845372580^t631416260^t213956320^t229201000^t443157320^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120722/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0722^t20^t길음^t1169896470^t0^t1169896470^t976736410^t193160060^t55975000^t249135060^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120722/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0722^t21^t당산^t1892205220^t382900^t1891822320^t1661952740^t229869580^t71116000^t300985580^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120722/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0722^t22^t유성^t740415810^t0^t740415810^t583095150^t157320660^t70848360^t228169020^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120722/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0722^t23^t인천^t572768935^t64000^t572704935^t428435095^t144269840^t50970000^t195239840^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120722/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0722^t24^t시흥^t1027101310^t184000^t1026917310^t866176510^t160740800^t96042915^t256783715^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120722/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0722^t25^t논현^t968400680^t0^t968400680^t854597600^t113803080^t68625000^t182428080^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120722/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0722^t26^t천안^t858343900^t0^t858343900^t738336710^t120007190^t48486600^t168493790^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120722/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0722^t27^t올림픽^t3322557960^t1015000^t3321542960^t2819468520^t502074440^t191283000^t693357440^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120722/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0722^t28^t의정부^t817709700^t0^t817709700^t722140840^t95568860^t61200000^t156768860^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120722/divstatrpt.lis^tdivstatrpt.lis^t^n
>
[I][UbiData][2012-07-22 20:08:22][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-07-22 20:08:22][DATA QUERY START]
[I][UbiData][2012-07-22 20:08:22]	- sql id : SQL3
[I][UbiData][2012-07-22 20:08:22]	- Db charset : KSC5601
[I][UbiData][2012-07-22 20:08:22]	- Sql
<
SELECT *
 FROM (
     SELECT 
         '그린카드' AS MYCAT, 
         COMM_NO, 
         DIV_NO, 
         CD_NM AS COMM_NAME, 
         OUT_AMT, 
         IN_AMT, 
         MILEAGE_AMT, 
         BONUS_AMT,
         (IN_AMT-OUT_AMT-MILEAGE_AMT-BONUS_AMT) AS SIL_IN_AMT 
     FROM VW_MYCAT_INOUT A, TBRK_SPEC_CD B                                              
    WHERE 1=1
      AND RACE_DAY    = ?  
      AND A.DIV_NO = B.CD(+)
      AND B.GRP_CD(+) = '127'                                     
    ORDER BY DIV_NO   
 ) A
 #String#20120722#
>
[I][UbiData][2012-07-22 20:08:22]	- Row size : 4
[I][UbiData][2012-07-22 20:08:22]	- Data
<
그린카드^t06^t00^t본장^t27176190^t44170670^t104230^t0^t16890250^t^n그린카드^t06^t04^t동대문^t1094000^t2500000^t0^t15000^t1391000^t^n그린카드^t06^t07^t산본^t2296800^t2134000^t0^t12000^t-174800^t^n그린카드^t06^t15^t논현^t2591800^t5686050^t250^t0^t3094000^t^n
>
[I][UbiData][2012-07-22 20:08:22][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-07-22 20:08:22][DB CONNECT]
[I][UbiData][2012-07-22 20:08:22]	- Type : nonlookup
[I][UbiData][2012-07-22 20:08:22]	- Db id : RBM
[I][UbiData][2012-07-22 20:08:22]	- Sql id : SQL2
[I][UbiData][2012-07-22 20:08:22]	- Datasource : jdbc/RBM
[I][UbiData][2012-07-22 20:08:22]	- Status : Success
--------------------------------------------------------------------------------
[I][UbiData][2012-07-22 20:08:22][DATA QUERY START]
[I][UbiData][2012-07-22 20:08:22]	- sql id : SQL2
[I][UbiData][2012-07-22 20:08:22]	- Db charset : KSC5601
[I][UbiData][2012-07-22 20:08:22]	- Sql
<
SELECT *
 FROM (
  SELECT 
    MEET_CD,
          MEET_DESC,
          BRNC_CD,
          SUM(GROSS_SALES) AS GROSS_SALES,
          SUM(CANCELS) AS CANCELS,  
          SUM(TOT_SALES) AS TOT_SALES,  
          SUM(CASHES) AS CASHES,  
          SUM(NET_INCOME) AS NET_INCOME,  
          SUM(BALANCE) AS BALANCE  
  FROM
  (            
      SELECT 
        
              MEET_CD,  
        STND_YEAR,  
        DT,   
        CASE 
                          WHEN  A.BRNC_CD NOT IN ('00','01','02','03','04','06','08','98') THEN '지점계' 
                          WHEN  A.BRNC_CD IN ('06') THEN '그린카드'
                          WHEN  A.BRNC_CD IN ('08','98') AND MEET_CD ='003' THEN '미사리'
                          WHEN  A.BRNC_CD IN ('01','02','03','04','06') AND MEET_CD ='003' THEN '스피돔'
                          WHEN  A.BRNC_CD IN ('01','02','03','04','06','08','98') AND MEET_CD ='001' THEN '스피돔'
           ELSE  'X' 
           END AS  MEET_DESC, 
           CASE 
            WHEN  A.BRNC_CD NOT IN ('00','01','02','03','04','06','08','98') THEN '18' 
            WHEN  A.BRNC_CD IN ('06') THEN '06'
            WHEN  A.BRNC_CD IN ('01','02','03','04','06','08','98') THEN '00'
           ELSE  'X'
           END AS BRNC_CD,
           CASE 
            WHEN  A.BRNC_CD NOT IN ('00','01','02','03','04','06','08','98') THEN '1' 
            WHEN  A.BRNC_CD IN ('06') THEN '2'
            WHEN  A.BRNC_CD IN ('01','02','03','04','06','08','98') THEN '3'
           ELSE  'X' 
           END AS MEET_ORDER,           
           SUM(GROSS_SALES) AS GROSS_SALES,
           SUM(CANCELS) AS CANCELS,  
           SUM(TOT_SALES) AS TOT_SALES,  
           SUM(CASHES) AS CASHES,  
           SUM(NET_INCOME) AS NET_INCOME,  
           SUM(BALANCE) AS BALANCE  
     FROM TBRD_LIS_FILE A 
     WHERE 1=1     
       AND STND_YEAR = ? 
       AND DT    = ? 
     GROUP BY MEET_CD,  
        STND_YEAR,  
        DT,  
        A.BRNC_CD
  )        
  WHERE BRNC_CD != 'X'
  GROUP BY MEET_CD,MEET_ORDER,MEET_DESC,
          BRNC_CD        
  ORDER BY  MEET_ORDER                                  
 ) A
 #String#2012#String#0722#
>
[I][UbiData][2012-07-22 20:08:22]	- Row size : 3
[I][UbiData][2012-07-22 20:08:22]	- Data
<
001^t지점계^t18^t21821038339^t1904900^t21819133439^t17988016569^t3831116870^t0^t^n001^t그린카드^t06^t153752520^t0^t153752520^t105474080^t48278440^t48278440^t^n001^t스피돔^t00^t3808932825^t59500^t3808873325^t3165496565^t643376760^t0^t^n
>
[I][UbiData][2012-07-22 20:08:22][DATA QUERY END]
--------------------------------------------------------------------------------

