
[I][UbiForm][2012-03-28 11:25:26][REQUEST FILE]
[I][UbiForm][2012-03-28 11:25:26]	- Report : /web/waspage/usrbm/report/rsm/rsm2020.jrf
[I][UbiForm][2012-03-28 11:25:26]	- Common : /web/waspage/usrbm/report/rsm/property/commonitem.xml [Not found]
--------------------------------------------------------------------------------


[I][UbiData][2012-03-28 11:25:26][REQUEST FILE]
[I][UbiData][2012-03-28 11:25:26]	- Report : rsm2020.jrf
--------------------------------------------------------------------------------
[I][UbiData][2012-03-28 11:25:26][DB CONNECT]
[I][UbiData][2012-03-28 11:25:26]	- Type : nonlookup
[I][UbiData][2012-03-28 11:25:26]	- Db id : rbm
[I][UbiData][2012-03-28 11:25:26]	- Sql id : rsm2020_s06Today
[I][UbiData][2012-03-28 11:25:26]	- Datasource : jdbc/RBM
[I][UbiData][2012-03-28 11:25:26]	- Status : Success
--------------------------------------------------------------------------------
[I][UbiData][2012-03-28 11:25:26][DATA QUERY START]
[I][UbiData][2012-03-28 11:25:26]	- sql id : rsm2020_s06Today
[I][UbiData][2012-03-28 11:25:26]	- Db charset : KSC5601
[I][UbiData][2012-03-28 11:25:26]	- Sql
<
WITH J 
 AS
 (SELECT    
         '전회' AS COL_DESC  
     , tms                                                                                       
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='12' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_02    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='16' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_06    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='22'  THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_12    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='20' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_10    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='23' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_13    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='24' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_14    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='13' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_03    
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='25'  THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_15    
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='19' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_09    
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='14' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_05    
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='26' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_16    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='27' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_17    
     , SUM(                                                                              
           CASE                                                                          
              WHEN COMM_NO='06'  THEN NVL(DIV_TOTAL, 0)                                  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_01_06_01    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='28' THEN NVL(DIV_TOTAL, 0) 
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_01_07_18    
         , SUM(                                                                              
               CASE                                                                          
                  WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_04_07_01    
         , SUM(                                                                              
               CASE                                                                          
                  WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='02' THEN NVL(DIV_TOTAL, 0)  
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_04_07_02    
        , SUM(                                                                              
               CASE                                                                          
                  WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='03' THEN NVL(DIV_TOTAL, 0)  
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_04_07_03    
         , SUM(                                                                              
               CASE                                                                          
                  WHEN SELL_CD='02' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_02_07_01    
 
         , SUM(                                                                              
               CASE                                                                          
                  WHEN COMM_NO NOT IN ('01','02','03','04','08') THEN NVL(DIV_TOTAL, 0)                         
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_JIJUM    
         , SUM(DIV_TOTAL)/100 DIV_TOTAL                                                             
  FROM   VW_SDL_DT_SUM                                                                         
  WHERE  1=1                                                                                    
    AND STND_YEAR  = ?                                                            
    AND MEET_CD    = ?                                                        
    AND TMS        BETWEEN ?  - 1 AND ? 
    AND DAY_ORD    = ? 
  GROUP BY TMS 
 )
 SELECT  DECODE(TMS, ? , '합계','전회') COL_DESC
        , TMS
        ,'1' AS GUBN
        ,DIV_01_07_02 
        ,DIV_01_07_06 
        ,DIV_01_07_12 
        ,DIV_01_07_10 
        ,DIV_01_07_13 
        ,DIV_01_07_14 
        ,DIV_01_07_03 
        ,DIV_01_07_15 
        ,DIV_01_07_09 
        ,DIV_01_07_05 
        ,DIV_01_07_16 
        ,DIV_01_07_17 
        ,DIV_01_06_01 
        ,DIV_01_07_18 
        ,DIV_04_07_01 
        ,DIV_04_07_02 
        ,DIV_04_07_03 
        ,DIV_02_07_01
        ,DIV_JIJUM
        ,1
 FROM J
 UNION ALL
 SELECT '점유율'
       , TMS
       , '2'
       , ROUND(DIV_01_07_02 / DIV_TOTAL * 100, 2) 
       , ROUND(DIV_01_07_06 / DIV_TOTAL * 100, 2)   
       , ROUND(DIV_01_07_12 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_10 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_13 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_14 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_03 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_15 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_09 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_05 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_16 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_17 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_06_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_18 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_02 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_03 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_02_07_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_JIJUM / DIV_TOTAL * 100, 2)    
       , 100
 FROM J
 WHERE tms = ? 
 UNION ALL
 SELECT '전회차'
       , TMS
       , '2'
       , ROUND(DIV_01_07_02 / DIV_TOTAL * 100, 2) 
       , ROUND(DIV_01_07_06 / DIV_TOTAL * 100, 2)   
       , ROUND(DIV_01_07_12 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_10 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_13 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_14 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_03 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_15 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_09 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_05 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_16 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_17 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_06_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_18 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_02 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_03 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_02_07_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_JIJUM / DIV_TOTAL * 100, 2)    
       , 100
 FROM J
 WHERE TMS = ?  -1
 ORDER BY 3, 2 DESC
 #String#2012#String#003#String#4#String#4#String#1#String#4#String#4#String#4#
>
[I][UbiData][2012-03-28 11:25:27]	- Row size : 4
[I][UbiData][2012-03-28 11:25:27]	- Data
<
합계^t4^t1^t6533729^t7916942^t3625236^t0^t4216382^t7234498^t4081548^t4522539^t6848108^t5948667^t2919191^t6155674^t237131^t3059337^t1921877^t3349046^t0^t0^t68569905^t1^t^n전회^t3^t1^t5468849^t7509716^t3359275^t0^t3820944^t5615544^t3528240^t4444946^t6576040^t5152129^t2558102^t5074598^t214507^t2950541^t1858915^t3372016^t0^t0^t61504362^t1^t^n점유율^t4^t2^t8.24^t9.99^t4.57^t0^t5.32^t9.13^t5.15^t5.71^t8.64^t7.5^t3.68^t7.77^t.3^t3.86^t2.42^t4.22^t0^t0^t86.5^t100^t^n전회차^t3^t2^t7.67^t10.53^t4.71^t0^t5.36^t7.87^t4.95^t6.23^t9.22^t7.22^t3.59^t7.12^t.3^t4.14^t2.61^t4.73^t0^t0^t86.25^t100^t^n
>
[I][UbiData][2012-03-28 11:25:27][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-03-28 11:25:27][DATA QUERY START]
[I][UbiData][2012-03-28 11:25:27]	- sql id : rsm2020_s11
[I][UbiData][2012-03-28 11:25:27]	- Db charset : KSC5601
[I][UbiData][2012-03-28 11:25:27]	- Sql
<
SELECT 
         '0~'||BB.RACE_NO||'R' AS RACE_DESC,
         DECODE(LEV,1,'인원','점유율') AS MANA_DESC,
         CASE 
             WHEN LEV='2' AND IN_PRSN_NUM > 0 AND TOT_PRSN_NUM > 0 THEN ROUND(IN_PRSN_NUM / TOT_PRSN_NUM *100,2)    
             ELSE IN_PRSN_NUM
        END AS IN_PRSN_NUM, 
        CASE 
             WHEN LEV='2' AND BRNC_PRSN_NUM > 0 AND TOT_PRSN_NUM > 0 THEN ROUND(BRNC_PRSN_NUM / TOT_PRSN_NUM *100,2)    
             ELSE BRNC_PRSN_NUM
        END AS BRNC_PRSN_NUM, 
        CASE 
             WHEN LEV='2' AND TOT_PRSN_NUM > 0 THEN ROUND(TOT_PRSN_NUM / TOT_PRSN_NUM *100,2)    
             ELSE TOT_PRSN_NUM
        END AS TOT_PRSN_NUM, 
        CASE 
             WHEN LEV='1' THEN B_TOT_PRSN_NUM
        END AS B_TOT_PRSN_NUM, 
        CASE 
             WHEN LEV='1' THEN MINUS_PRSN_NUM
        END AS MINUS_PRSN_NUM, 
        CASE 
 
             WHEN LEV='1' AND TOT_PRSN_NUM>0 AND B_TOT_PRSN_NUM >0 THEN ROUND((TOT_PRSN_NUM - B_TOT_PRSN_NUM) / B_TOT_PRSN_NUM*100,2)
        END AS PER_PRSN_NUM 
 FROM
 (
      SELECT DU.LEV,
             SUM(CASE WHEN R.TMS =DU.TMS AND BRNC_CD = '98' THEN E.ENT_PRSN_NUM END) AS IN_PRSN_NUM,    
              SUM(CASE WHEN R.TMS =DU.TMS AND BRNC_CD <> '98' THEN E.ENT_PRSN_NUM END) AS BRNC_PRSN_NUM,    
              SUM(CASE WHEN R.TMS =DU.TMS THEN E.ENT_PRSN_NUM END) AS TOT_PRSN_NUM,    
              SUM(CASE WHEN R.TMS =DU.B_TMS THEN E.ENT_PRSN_NUM END) AS B_TOT_PRSN_NUM,    
              (SUM(CASE WHEN R.TMS =DU.TMS THEN E.ENT_PRSN_NUM END) - SUM(CASE WHEN R.TMS =DU.B_TMS THEN E.ENT_PRSN_NUM END)) AS MINUS_PRSN_NUM    
                      
          FROM                                                   
              TBRC_STAY_MANA E,    
              TBRK_SPEC_CD C,
              VW_SDL_INFO R,       
              (SELECT LEVEL AS LEV, ?  AS TMS,(?  - 1) AS B_TMS FROM DUAL CONNECT BY LEVEL<=2) DU 
          WHERE  1=1                
            AND E.BRNC_CD    = C.CD
            AND E.RACE_DT    = R.RACE_DAY                 
            AND C.GRP_CD        IN ('018','032')    
            AND R.MEET_CD    = '003'   
            AND R.STND_YEAR    = ?         
            AND R.TMS IN (? , ?  - 1)    
            AND R.DAY_ORD ='2'             
          GROUP BY DU.LEV
 )AA,
 (
     SELECT                                                                   
          MAX(RACE_NO)  AS RACE_NO
       FROM   (                                                                 
                   SELECT                                                       
                            TOR.RACE_NO                                         
                          , TOR.RACE_REG_NO                                     
                          , TOR.RACER_NO                                        
                          , TOR.RANK                                            
                          , TRM.NM_KOR                                          
                          , RANK() OVER (PARTITION BY TOR.RACE_NO               
                                                    , TOR.RANK                  
                                             ORDER BY TOR.RACE_REG_NO) SEQ      
                   FROM     TBEB_ORGAN@MRASYSLINK        TOR                        
                          , TBEC_RACER_MASTER@MRASYSLINK TRM                        
                   WHERE 1=1                                                        
                           
                   AND    TOR.RACER_NO   = TRM.RACER_NO                         
                   AND    TOR.STND_YEAR  = ?         
                   AND    TOR.MBR_CD     = '001'                                
                   AND    TOR.TMS        = ?         
                           
                   AND    TOR.RANK BETWEEN 1                                    
                                       AND 3                                    
              )                                                                 
       START WITH SEQ = 1                                                       
       CONNECT BY PRIOR SEQ = SEQ - 1                                           
       AND PRIOR RACE_NO = RACE_NO AND RANK = RANK     
 )BB
 ORDER BY AA.LEV
 #String#4#String#4#String#2012#String#4#String#4#String#2012#String#4#
>
[I][UbiData][2012-03-28 11:25:27]	- Row size : 2
[I][UbiData][2012-03-28 11:25:27]	- Data
<
0~15R^t인원^t3049^t28329^t31378^t35114^t-3736^t-10.64^t^n0~15R^t점유율^t9.72^t90.28^t100^t^t^t^t^n
>
[I][UbiData][2012-03-28 11:25:27][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-03-28 11:25:27][DATA QUERY START]
[I][UbiData][2012-03-28 11:25:27]	- sql id : rsm2020_s01
[I][UbiData][2012-03-28 11:25:27]	- Db charset : KSC5601
[I][UbiData][2012-03-28 11:25:27]	- Sql
<
SELECT 
           AA.MEET_CD,      
           AA.STND_YEAR,    
           AA.TMS,          
           AA.DAY_ORD,      
           TO_CHAR(TO_DATE(AA.RACE_DAY,'YYYYMMDD'),'YYYY-MM-DD') AS RACE_DAY, 
           AA.RACE_YOIL,    
           TO_CHAR(TO_DATE(AA.RACE_DAY,'YYYYMMDD'),'YYYY')||'년 '||AA.TMS||'회차 '||AA.DAY_ORD||'일차 ('|| TO_CHAR(TO_DATE(AA.RACE_DAY,'YYYYMMDD'),'YYYY-MM-DD')||') 경주 개최 결과'  
           AS RACE_DAY_INFO  
     
       FROM (         
             SELECT                              
             MEET_CD,      
             STND_YEAR,    
             TMS,          
             DAY_ORD,      
             RACE_DAY,     
             RACE_YOIL,    
             DECODE(RACE_YOIL,'MON','월','TUE','화','WED','수','THE','목','FRI','금','SAT','토','SUN','일','일') AS RACE_YOIL_KOR, 
             TO_CHAR(TO_DATE(RACE_DAY,'YYYYMMDD'),'YYYY-MM-DD')||
             ' ('||RACE_YOIL||') '||TMS||'회차 '||DAY_ORD||'일차'  
             AS RACE_INFO  
      FROM                                
             VW_SDL_INFO      
      WHERE  1=1                             
             AND MEET_CD = ?   
            AND STND_YEAR = ?   
            AND TMS= ?     
            AND DAY_ORD = ?        
    )AA
 #String#003#String#2012#String#4#String#1#
>
[I][UbiData][2012-03-28 11:25:27]	- Row size : 1
[I][UbiData][2012-03-28 11:25:27]	- Data
<
003^t2012^t4^t1^t2012-03-07^tWED^t2012년 4회차 1일차 (2012-03-07) 경주 개최 결과^t^n
>
[I][UbiData][2012-03-28 11:25:27][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-03-28 11:25:27][DATA QUERY START]
[I][UbiData][2012-03-28 11:25:27]	- sql id : rsm2020_s05Today
[I][UbiData][2012-03-28 11:25:27]	- Db charset : KSC5601
[I][UbiData][2012-03-28 11:25:27]	- Sql
<
SELECT                                                                                      
       DECODE(GROUPING(RACE_NO),0,RACE_NO,'TOTAL') RACE_NO 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='12' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_02 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='16' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_06 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='22'  THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_12 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='20' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_10 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='23' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_13 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='24' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_14 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='13' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_03 
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='25'  THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_15 
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='19' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_09 
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='14' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_05 
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='26' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_16 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='27' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_17 
     , SUM(                                                                              
           CASE                                                                          
              WHEN COMM_NO='06'  THEN NVL(DIV_TOTAL, 0)                                  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_01_06_01 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='28' THEN NVL(DIV_TOTAL, 0) 
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_01_07_18 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_04_07_01 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='02' THEN NVL(DIV_TOTAL, 0)  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_04_07_02 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='03' THEN NVL(DIV_TOTAL, 0)  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_04_07_03    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='02' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_02_07_01 
     , SUM(                                                                              
           CASE                                                                          
              WHEN  COMM_NO NOT IN ('01','02','03','04','08') THEN NVL(DIV_TOTAL, 0)                         
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_JIJUM  
 
     , SUM(DIV_TOTAL)/100 DIV_TOTAL                                                          
 FROM   VW_SDL_DT                                                                         
 WHERE   1=1                                                                                   
      AND STND_YEAR  = ?                                                             
      AND    MEET_CD    = ?                                                        
      AND    TMS        = ?                                                            
      AND    DAY_ORD    = ?                                                        
 
 GROUP BY RACE_NO                                                                                   
       
 ORDER BY RACE_NO
 #String#2012#String#003#String#4#String#1#
>
[I][UbiData][2012-03-28 11:25:27]	- Row size : 15
[I][UbiData][2012-03-28 11:25:27]	- Data
<
01^t175511^t201109^t99381^t0^t146281^t190161^t115012^t154587^t221786^t176019^t89438^t154902^t7622^t96803^t59446^t107387^t0^t0^t1995445^t2295183^t^n02^t223520^t263777^t116589^t0^t156618^t232224^t146184^t147506^t259831^t209650^t118810^t201461^t9363^t103053^t71196^t143188^t0^t0^t2402970^t2755213^t^n03^t272223^t310625^t157966^t0^t190263^t296592^t178149^t184338^t315812^t242090^t124045^t237040^t12597^t128449^t92537^t155561^t0^t0^t2898287^t3325424^t^n04^t320712^t368515^t159558^t0^t211061^t348896^t191453^t218245^t342217^t287154^t162608^t279881^t13376^t153906^t104413^t182277^t0^t0^t3344272^t3873916^t^n05^t382202^t431597^t189791^t0^t261840^t417049^t251396^t268267^t420069^t344022^t163633^t339903^t16856^t183428^t101669^t194935^t0^t0^t3966657^t4615360^t^n06^t405845^t464314^t203143^t0^t247254^t455514^t229643^t290746^t437221^t357438^t195369^t372944^t17132^t196884^t114455^t195425^t0^t0^t4183327^t4865290^t^n07^t419670^t495118^t208728^t0^t260257^t421914^t248950^t282016^t434377^t372759^t194020^t382616^t17849^t179536^t128221^t211806^t0^t0^t4257837^t4951664^t^n08^t363047^t445634^t201246^t0^t220433^t406668^t216513^t285716^t392644^t319268^t156145^t359043^t18661^t162799^t114298^t193860^t0^t0^t3855975^t4529795^t^n09^t489131^t594179^t254498^t0^t299667^t538737^t304462^t357922^t511082^t420551^t195802^t472112^t16505^t203161^t134641^t247129^t0^t0^t5039579^t5834557^t^n10^t517602^t702731^t310607^t0^t356350^t645780^t359188^t376514^t607509^t483329^t261353^t536225^t20577^t254815^t157734^t258132^t0^t0^t5848446^t6770851^t^n11^t546524^t708824^t314954^t0^t346042^t647149^t351629^t363558^t545756^t514312^t252088^t561407^t17824^t247836^t166665^t273129^t0^t0^t5857697^t6778198^t^n12^t567471^t734979^t326448^t0^t359105^t668087^t364363^t372719^t573051^t526547^t249300^t570280^t18589^t279231^t162935^t290389^t0^t0^t6063494^t7067719^t^n13^t606889^t705777^t351560^t0^t368713^t691044^t368103^t382286^t566671^t539831^t257065^t563031^t17843^t286731^t164939^t275358^t0^t0^t6145841^t7091130^t^n14^t575907^t690559^t329454^t0^t365006^t605644^t339722^t369685^t547931^t532511^t232478^t547425^t16622^t260808^t173096^t267731^t0^t0^t5854579^t6707955^t^n15^t667475^t799204^t401313^t0^t427492^t669039^t416781^t468434^t672151^t623186^t267037^t577404^t15715^t321897^t175632^t352739^t0^t0^t6855499^t7806031^t^n
>
[I][UbiData][2012-03-28 11:25:27][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-03-28 11:25:27][DATA QUERY START]
[I][UbiData][2012-03-28 11:25:27]	- sql id : rsm2020_s03Today
[I][UbiData][2012-03-28 11:25:27]	- Db charset : KSC5601
[I][UbiData][2012-03-28 11:25:27]	- Sql
<
SELECT                                                                                    
      Z.RACE_NO, 
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          FC_GET_RSLT_RANK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO)                
      END RSLT_RANK, 
      R.RANK_1,  
      R.RANK_2,  
      R.RANK_3,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '001', NULL) 
      END WIN,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '002', '1')  
      END PLC,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '002', '2')  
      END PLC2,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '004', NULL) 
      END EX,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '005', NULL) 
      END QU,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '006', NULL) 
      END TRI,  
      D.BONJANG_TOTAL, 
      D.JIJUM_TOTAL,  
      C.DIV_TOTAL,  
      NVL(D.REFUND,0) REFUND, 
      NVL(B.B_DIV_TOTAL,0) AS B_DIV_TOTAL,    
      NVL((C.DIV_TOTAL-B.B_DIV_TOTAL),0) AS PLUS_MINUS, 
      CASE                                                                                  
          WHEN B.B_DIV_TOTAL<>0 THEN                                                        
          ROUND((C.DIV_TOTAL-B.B_DIV_TOTAL)/B.B_DIV_TOTAL*100,2)                            
          ELSE 0                                                                            
      END RATE,   
      SAME_PAYOFF_TOTAL,  
      SAME_PAYOFF_001, 
   SAME_PAYOFF_002, 
   SAME_PAYOFF_004, 
   SAME_PAYOFF_005, 
   SAME_PAYOFF_006 
  FROM   
   
      (   
                                                                 
          SELECT                                                                            
                D.MEET_CD,                                                                   
                D.STND_YEAR,                                                                 
                D.TMS,                                                                       
                D.DAY_ORD,                                                                   
                DECODE(D.RACE_NO,NULL,'TOTAL',D.RACE_NO) RACE_NO,                              
                SUM(                                                                        
                    CASE                                                                    
                      WHEN D.SELL_CD='03' THEN D.DIV_TOTAL                                    
                      ELSE 0                                                                
                    END                                                                     
                ) BONJANG_TOTAL,                                                            
                SUM(                                                                        
                    CASE                                                                    
                      WHEN D.SELL_CD !='03' THEN D.DIV_TOTAL                                     
                    END                                                                     
                ) JIJUM_TOTAL,                                                              
                SUM(D.REFUND) REFUND                                                         
          FROM   VW_SDL_DT D                                                              
          WHERE 1=1                                                                             
              AND D.STND_YEAR(+)  = ? 
              AND D.MEET_CD(+)    = ? 
              AND D.TMS(+)        = ? 
              AND D.DAY_ORD(+)    = ? 
          GROUP BY                                                                          
                D.MEET_CD,                                                                   
                D.STND_YEAR,                                                                 
                D.TMS,                                                                       
                D.DAY_ORD,                                                                   
                ROLLUP(D.RACE_NO)                                                           
      ) D,                                                                                  
      (                                                                                     
         SELECT                                                                             
            P.MEET_CD,                                                                      
            P.STND_YEAR,                                                                    
            P.TMS,                                                                          
            P.DAY_ORD,                                                                      
            DECODE(P.RACE_NO,NULL,'TOTAL',P.RACE_NO) RACE_NO,                               
            SUM(POOL_TOTAL) DIV_TOTAL                                                       
         FROM                                                                               
             VW_SDL_PT P                                                                  
         WHERE 1=1                                                                              
             AND P.STND_YEAR  = ? 
             AND P.MEET_CD    = ? 
             AND P.TMS        = ? 
             AND P.DAY_ORD    = ? 
         GROUP BY                                                                           
            P.MEET_CD,                                                                      
            P.STND_YEAR,                                                                    
            P.TMS,                                                                          
            P.DAY_ORD,                                                                      
            ROLLUP(P.RACE_NO)                                                               
      ) C,                                                                                  
      (                                                                                     
          SELECT                                                                            
                DECODE(RACE_NO,NULL,'TOTAL',RACE_NO) RACE_NO,                               
                SUM(DIV_TOTAL) B_DIV_TOTAL                                                  
          FROM   VW_SDL_DT                                                                
          WHERE 1=1                                                                            
              AND  STND_YEAR  = ? 
              AND    MEET_CD    = ? 
              AND    TMS        = ?  -1                                                    
              AND    DAY_ORD    = ? 
          GROUP BY                                                                          
                ROLLUP(RACE_NO)                                                             
      ) B,                                                                                  
      (                                                                                     
          SELECT                                                                            
                RACE_NO                                                                     
              , MIN(DECODE(RANK, '1', NM_KOR)) RANK_1                                       
              , MIN(DECODE(RANK, '2', NM_KOR)) RANK_2                                       
              , MIN(DECODE(RANK, '3', NM_KOR)) RANK_3                                       
          FROM   (                                                                          
                   SELECT                                                                   
                            RACE_NO                                                         
                          , RANK                                                            
                          , SUBSTR(MAX(SYS_CONNECT_BY_PATH (NM_KOR, '/')), 2) NM_KOR        
                   FROM   (                                                                 
                               SELECT                                                       
                                        TOR.RACE_NO                                         
                                      , TOR.RACE_REG_NO                                     
                                      , TOR.RACER_NO                                        
                                      , TOR.RANK                                            
                                      , TRM.NM_KOR                                          
                                      , RANK() OVER (PARTITION BY TOR.RACE_NO               
                                                                , TOR.RANK                  
                                                         ORDER BY TOR.RACE_REG_NO) SEQ      
                               FROM     TBEB_ORGAN@MRASYSLINK        TOR                        
                                      , TBEC_RACER_MASTER@MRASYSLINK TRM                        
                               WHERE 1=1                
                               AND    TOR.RACER_NO   = TRM.RACER_NO                         
                               AND    TOR.STND_YEAR  = ? 
                               AND    TOR.MBR_CD     = '001'                                
                               AND    TOR.TMS        = ? 
                               AND    TOR.DAY_ORD    = ? 
                               AND    TOR.RANK BETWEEN 1                                    
                                                   AND 3                                    
                          )                                                                 
                   START WITH SEQ = 1                                                       
                   CONNECT BY PRIOR SEQ = SEQ - 1                                           
                   AND PRIOR RACE_NO = RACE_NO AND RANK = RANK                              
                   GROUP BY                                                                 
                            RACE_NO                                                         
                          , RANK                                                            
               )                                                                            
          GROUP BY RACE_NO                                                                  
          UNION ALL                                                                         
          SELECT 'TOTAL', '', '', '' FROM DUAL                                              
      ) R, 
      (   
     
       SELECT                                                                         
          RACE_NO,
            SUM(CASE 
                     WHEN POOL_CD = '001' AND RS_SEQ >= '2' THEN PAYOFF 
                     WHEN POOL_CD = '002' AND RS_SEQ >= '3' THEN PAYOFF 
                     WHEN POOL_CD = '004' AND RS_SEQ >= '2' THEN PAYOFF 
                     WHEN POOL_CD = '005' AND RS_SEQ >= '2' THEN PAYOFF 
                     WHEN POOL_CD = '006' AND RS_SEQ >= '2' THEN PAYOFF 
            END) AS SAME_PAYOFF_TOTAL, 
                               
            SUM(CASE WHEN POOL_CD = '001' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_001, 
            SUM(CASE WHEN POOL_CD = '002' AND RS_SEQ >= '3' THEN PAYOFF END) AS SAME_PAYOFF_002, 
            SUM(CASE WHEN POOL_CD = '004' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_004, 
            SUM(CASE WHEN POOL_CD = '005' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_005, 
            SUM(CASE WHEN POOL_CD = '006' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_006 
      FROM VW_SDL_RS                                                                
      WHERE 1=1                                                                          
          AND MEET_CD  = '003'                                                              
          AND STND_YEAR = ?      
          AND TMS   = ?      
          AND DAY_ORD  = ?      
      GROUP BY          
       RACE_NO                                                              
 
   ) E,                                                                                  
  (                                       
    SELECT DISTINCT RACE_NO           
    FROM TBEB_RACE_DOC@MRASYSLINK D        
      WHERE 1=1                          
          AND D.STND_YEAR= ? 
          AND D.TMS=? 
           AND D.DAY_ORD=? 
 
   ) Z                                   
  WHERE 1=1                                                                                    
      AND C.RACE_NO(+)=Z.RACE_NO                                                                
      AND B.RACE_NO(+)=Z.RACE_NO                                                            
      AND R.RACE_NO(+)=Z.RACE_NO                                                            
      AND D.RACE_NO(+)=Z.RACE_NO
      AND E.RACE_NO(+)=Z.RACE_NO                                                            
  ORDER BY Z.RACE_NO
 #String#2012#String#003#String#4#String#1#String#2012#String#003#String#4#String#1#String#2012#String#003#String#4#String#1#String#2012#String#4#String#1#String#2012#String#4#String#1#String#2012#String#4#String#1#
>
[I][UbiData][2012-03-28 11:25:27]	- Row size : 15
[I][UbiData][2012-03-28 11:25:27]	- Data
<
01^t2-3-1^t손지영^t손동민^t이경섭^t1.2^t1.1^t2.1^t2.6^t2.2^t10^t29973800^t199544500^t229518300^t0^t205584400^t23933900^t11.64^t^t^t^t^t^t^t^n02^t2-4-5^t김영민^t이현재^t김선웅^t2.1^t1.4^t2^t6.8^t3.8^t12.2^t35224300^t240297000^t275521300^t0^t237016900^t38504400^t16.25^t^t^t^t^t^t^t^n03^t3-5-2^t김민천^t심상철^t구본수^t2.2^t1.4^t1.2^t4.3^t2.1^t3.5^t42713700^t289828700^t332542400^t0^t291234400^t41308000^t14.18^t^t^t^t^t^t^t^n04^t5-4-6^t한  운^t강지환^t김정민^t41.6^t15.9^t2.4^t171.1^t56.6^t27.2^t52964400^t334427200^t387391600^t0^t339693500^t47698100^t14.04^t^t^t^t^t^t^t^n05^t4-1-5^t류성원^t김동민^t여현창^t23.1^t8.6^t1.1^t61.5^t11.6^t15.7^t64870300^t396665700^t461536000^t0^t419051900^t42484100^t10.14^t^t^t^t^t^t^t^n06^t1-4-5^t오세준^t정철태^t최광성^t2.3^t1.4^t1.4^t4.1^t2.2^t3.3^t68196300^t418332700^t486529000^t0^t402379000^t84150000^t20.91^t^t^t^t^t^t^t^n07^t3-2-6^t한종석^t김정구^t박정아^t4.7^t2.1^t3.3^t26.5^t13.6^t12.2^t69382700^t425783700^t495166400^t0^t474591800^t20574600^t4.34^t^t^t^t^t^t^t^n08^t1-5-4^t허명옥^t김희용^t문주엽^t8.4^t2.5^t6.8^t56^t33.7^t68.2^t67382000^t385597500^t452979500^t0^t350805100^t102174400^t29.13^t^t^t^t^t^t^t^n09^t3-4-1^t최영재^t김영욱^t이용세^t5^t1.5^t2.4^t19.9^t11.6^t3.4^t79497800^t503957900^t583455700^t0^t541125900^t42329800^t7.82^t^t^t^t^t^t^t^n10^t4-2-6^t손지영^t류성원^t신현경^t1.5^t1^t3.6^t8.5^t5.4^t28^t92240500^t584844600^t677085100^t0^t609270000^t67815100^t11.13^t^t^t^t^t^t^t^n11^t6-2-4^t김민천^t신동길^t여현창^t4.3^t2.5^t1.4^t14.4^t4.5^t4^t92050100^t585769700^t677819800^t0^t606492100^t71327700^t11.76^t^t^t^t^t^t^t^n12^t1-3-4^t강지환^t최광성^t어선규^t3.7^t1.6^t1.5^t7.9^t4.3^t2.5^t100422500^t606349400^t706771900^t0^t609687800^t97084100^t15.92^t^t^t^t^t^t^t^n13^t1-2-4^t김기한^t정용진^t김정구^t4.9^t1.7^t1.2^t7.1^t2^t4.1^t94528900^t614584100^t709113000^t0^t667794000^t41319000^t6.19^t^t^t^t^t^t^t^n14^t6-2-4^t오세준^t박정아^t유해광^t5.9^t1.9^t1^t11.3^t3.2^t5.2^t85337600^t585457900^t670795500^t0^t648363700^t22431800^t3.46^t^t^t^t^t^t^t^n15^t1-6-3^t김정민^t김태규^t이승일^t2.6^t1.3^t7.9^t55.7^t41.1^t13.7^t95053200^t685549900^t780603100^t0^t727988600^t52614500^t7.23^t^t^t^t^t^t^t^n
>
[I][UbiData][2012-03-28 11:25:27][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-03-28 11:25:27][DATA QUERY START]
[I][UbiData][2012-03-28 11:25:27]	- sql id : rsm2020_s02Today
[I][UbiData][2012-03-28 11:25:27]	- Db charset : KSC5601
[I][UbiData][2012-03-28 11:25:27]	- Sql
<
SELECT                                                                                          
           MST.GBN       
         , YEAR.DIV_TOTAL AS YEAR_TOTAL 
         , YEAR.REFUND    AS YEAR_REFUND 
         , TMS.D_1 
         , TMS.D_2   
         , TMS.D_3   
         , TMS.D_4   
         , TMS.D_5   
         , TMS.D_6   
         , TMS.D_7   
         , TMS.TOTAL 
         , PRE.TOTAL AS PRE_TOTAL 
         , NVL(TMS.TOTAL, 0) - NVL(PRE .TOTAL, 0) ADD_POOL 
         , CASE WHEN (NVL(PRE.TOTAL, 0) = 0) AND (NVL(TMS.TOTAL, 0) = 0) THEN 0                  
                WHEN NVL(PRE.TOTAL, 0) = 0                               THEN 100                
                WHEN NVL(TMS.TOTAL, 0) = 0                                THEN -100              
                ELSE ROUND((NVL(TMS.TOTAL, 0) - NVL(PRE.TOTAL, 0)) / NVL(PRE.TOTAL, 0) * 100, 2) 
           END ADD_RATE 
  FROM                                                                                           
           (                                                                                     
              SELECT                                                                             
                       ?  STND_YEAR                                                      
                     , '매출총액' GBN                                                            
              FROM   DUAL                                                                        
           ) MST                                                                                 
         , (                                                                                     
              SELECT                                                                             
                       TMS.STND_YEAR                                                             
                     , MIN(DECODE(TMS.D, 1, TMS.AMOUNT)) D_1                                     
                     , MIN(DECODE(TMS.D, 2, TMS.AMOUNT)) D_2                                     
                     , MIN(DECODE(TMS.D, 3, TMS.AMOUNT)) D_3                                     
                     , MIN(DECODE(TMS.D, 4, TMS.AMOUNT)) D_4                                     
                     , MIN(DECODE(TMS.D, 5, TMS.AMOUNT)) D_5                                     
                     , MIN(DECODE(TMS.D, 6, TMS.AMOUNT)) D_6                                     
                     , MIN(DECODE(TMS.D, 7, TMS.AMOUNT)) D_7                                     
                     , SUM(TMS.AMOUNT)                   TOTAL                                   
              FROM   (                                                                           
                          SELECT                                                                 
                                   TSP.STND_YEAR                                                 
                                 , TO_CHAR(TO_DATE(INFO.RACE_DAY, 'YYYYMMDD'), 'D') D            
                                 , SUM(TSP.POOL_TOTAL) AMOUNT                                    
                          FROM     VW_SDL_INFO INFO                                              
                                 , VW_SDL_PT       TSP                                         
                          WHERE  1=1
                          AND    INFO.STND_YEAR = TSP.STND_YEAR                                  
                          AND    INFO.MEET_CD    = TSP.MEET_CD                                   
                          AND    INFO.TMS       = TSP.TMS                                        
                          AND    INFO.DAY_ORD   = TSP.DAY_ORD                                    
                          AND    TSP.STND_YEAR  = ?   
                          AND    TSP.MEET_CD    = ?       
                          AND    TSP.TMS        = ?       
                          GROUP BY                                                               
                                   TSP.STND_YEAR                                                 
                                 , INFO.RACE_DAY                                                 
                     ) TMS                                                                       
              GROUP BY TMS.STND_YEAR                                                             
           ) TMS                                                                                 
         , (                                                                                     
              SELECT                                                                             
                       STND_YEAR                                                                 
                     , SUM(TSP.DIV_TOTAL) DIV_TOTAL                                              
                     , SUM(TSP.REFUND    ) REFUND                                                
              FROM   VW_SDL_DT_SUM       TSP                                                       
              WHERE  TSP.STND_YEAR  = ?                                                  
              AND    TSP.MEET_CD    = ?                                                    
              AND    TSP.TMS       <= ?                                                        
              GROUP BY                                                                           
                       STND_YEAR                                                                 
           ) YEAR                                                                                
         , (                                                                                     
              SELECT                                                                             
                       STND_YEAR                                                                 
                     , TMS                                                                       
                     , NVL(SUM(TSP.POOL_TOTAL), 0)  TOTAL                                        
              FROM   VW_SDL_PT       TSP                                                       
              WHERE  1=1
              AND TSP.STND_YEAR  = ? 
              AND    TSP.MEET_CD    = ?                                                    
              AND    TSP.TMS        = ?  - 1                                                   
              GROUP BY                                                                           
                       STND_YEAR                                                                 
                     , TMS                                                                       
           ) PRE                                                                                 
  WHERE  1=1
  AND   MST.STND_YEAR = TMS .STND_YEAR(+)                                                       
  AND    MST.STND_YEAR = YEAR.STND_YEAR(+)                                                       
  AND    MST.STND_YEAR = PRE .STND_YEAR(+)                                                       
  UNION ALL                                                                                      
  SELECT                                                                                         
           MST.GBN                                                                               
         , YEAR.DIV_TOTAL                   YEAR_TOTAL                                           
         , YEAR.REFUND                      YEAR_REFUND                                          
         , TMS.D_1                                                                               
         , TMS.D_2                                                                               
         , TMS.D_3                                                                               
         , TMS.D_4                                                                               
         , TMS.D_5                                                                               
         , TMS.D_6                                                                               
         , TMS.D_7                                                                               
         , TMS.TOTAL                                                                             
         , 0 PRE_TOTAL                                                                           
         , NVL(PRE .TOTAL, 0) - NVL(TMS.TOTAL, 0) ADD_POOL                                       
         , CASE WHEN (NVL(PRE.TOTAL, 0) = 0) AND (NVL(TMS.TOTAL, 0) = 0) THEN 0                  
                WHEN NVL(PRE.TOTAL, 0) = 0                               THEN -100               
                WHEN NVL(TMS.TOTAL, 0) = 0                                THEN 100               
                ELSE ROUND((NVL(PRE.TOTAL, 0) - NVL(TMS.TOTAL, 0)) / NVL(TMS.TOTAL, 0) * 100, 2) 
           END ADD_RATE                                                                          
  FROM                                                                                           
           (                                                                                     
              SELECT                                                                             
                       ?  -1 STND_YEAR                                                    
                     , '전년대비' GBN                                                            
              FROM   DUAL                                                                        
           ) MST                                                                                 
         , (                                                                                     
              SELECT                                                                             
                       TMS.STND_YEAR                                                             
                     , MIN(DECODE(TMS.D, 1, TMS.AMOUNT)) D_1                                     
                     , MIN(DECODE(TMS.D, 2, TMS.AMOUNT)) D_2                                     
                     , MIN(DECODE(TMS.D, 3, TMS.AMOUNT)) D_3                                     
                     , MIN(DECODE(TMS.D, 4, TMS.AMOUNT)) D_4                                     
                     , MIN(DECODE(TMS.D, 5, TMS.AMOUNT)) D_5                                     
                     , MIN(DECODE(TMS.D, 6, TMS.AMOUNT)) D_6                                     
                     , MIN(DECODE(TMS.D, 7, TMS.AMOUNT)) D_7                                     
                     , SUM(TMS.AMOUNT)                   TOTAL                                   
              FROM   (                                                                           
                          SELECT                                                                 
                                   TSP.STND_YEAR                                                 
                                 , TO_CHAR(TO_DATE(INFO.RACE_DAY, 'YYYYMMDD'), 'D') D            
                                 , SUM(TSP.POOL_TOTAL) AMOUNT                                    
                          FROM     VW_SDL_INFO INFO                                              
                                 , VW_SDL_PT       TSP                                         
                          WHERE  1=1
                          AND  INFO.STND_YEAR = TSP.STND_YEAR                                  
                          AND    INFO.MEET_CD    = TSP.MEET_CD                                   
                          AND    INFO.TMS       = TSP.TMS                                        
                          AND    INFO.DAY_ORD   = TSP.DAY_ORD                                    
                          AND    TSP.STND_YEAR  =  ?  -1                                   
                          AND    TSP.MEET_CD    = ?                                        
                          AND    TSP.TMS        = ?                                            
                          GROUP BY                                                               
                                   TSP.STND_YEAR                                                 
                                 , INFO.RACE_DAY                                                 
                     ) TMS                                                                       
              GROUP BY TMS.STND_YEAR                                                             
           ) TMS                                                                                 
         , (                                                                                     
              SELECT                                                                             
                       STND_YEAR                                                                 
                     , SUM(TSP.DIV_TOTAL) DIV_TOTAL                                              
                     , SUM(TSP.REFUND    ) REFUND                                                
              FROM   VW_SDL_DT_SUM       TSP                                                       
              WHERE  1=1
              AND TSP.STND_YEAR  = ?  -1                                               
              AND    TSP.MEET_CD    = ?                                                    
              AND    TSP.TMS       <= ?                                                        
              GROUP BY                                                                           
                       STND_YEAR                                                                 
           ) YEAR                                                                                
         , (                                                                                     
              SELECT                                                                             
                       STND_YEAR-1 STND_YEAR                                                     
                     , TMS                                                                       
                     , NVL(SUM(TSP.POOL_TOTAL), 0)  TOTAL                                        
              FROM   VW_SDL_PT       TSP                                                       
              WHERE  1=1
              AND TSP.STND_YEAR  = ?                                                  
              AND    TSP.MEET_CD    = ?                                                    
              AND    TSP.TMS        = ?                                                        
              GROUP BY                                                                           
                       STND_YEAR                                                                 
                     , TMS                                                                       
           ) PRE                                                                                 
  WHERE  1=1
  AND MST.STND_YEAR = TMS.STND_YEAR(+)                                                        
  AND    MST.STND_YEAR = YEAR.STND_YEAR(+)                                                       
  AND    MST.STND_YEAR = PRE.STND_YEAR(+)
 #String#2012#String#2012#String#003#String#4#String#2012#String#003#String#4#String#2012#String#003#String#4#String#2012#String#2012#String#003#String#4#String#2012#String#003#String#4#String#2012#String#003#String#4#
>
[I][UbiData][2012-03-28 11:25:28]	- Row size : 2
[I][UbiData][2012-03-28 11:25:28]	- Data
<
매출총액^t57788696300^t952496000^t^t^t^t7926828600^t8441455900^t^t^t16368284500^t16817226200^t-448941700^t-2.67^t^n전년대비^t63197636000^t1830606600^t^t^t^t8496141800^t8434410900^t^t^t16930552700^t0^t-562268200^t-3.32^t^n
>
[I][UbiData][2012-03-28 11:25:28][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-03-28 11:25:28][DATA QUERY START]
[I][UbiData][2012-03-28 11:25:28]	- sql id : rsm2020_s04
[I][UbiData][2012-03-28 11:25:28]	- Db charset : KSC5601
[I][UbiData][2012-03-28 11:25:28]	- Sql
<
SELECT 
   ROW_ORDER,
   MANA_DESC, 
   TOTAL        
        ,SUN_NUM     
        ,TUE_NUM     
        ,WEN_NUM     
        ,THU_NUM     
        ,TOT_PRSN_NUM,    
        
        B_TOT_PRSN_NUM,          
        
        CASE 
              WHEN ROW_ORDER='2' THEN N_TOT_PRSN_NUM - TOT_PRSN_NUM
              ELSE PRSN_NUM_MINUS
        END PRSN_NUM_MINUS,          
        
        ROUND(CASE 
              WHEN ROW_ORDER='2' THEN (N_TOT_PRSN_NUM - TOT_PRSN_NUM)/TOT_PRSN_NUM*100
              ELSE PER
        END,2) AS PER             
  FROM
 (
  
  SELECT '1' AS ROW_ORDER,
    '입장인원' AS MANA_DESC,
     A.TMS                                                               
        ,TOT_PRSN_NUM                     
        ,MON_NUM 
              ,TUE_NUM 
              ,WEN_NUM 
              ,THU_NUM 
              ,FRI_NUM 
              ,SAT_NUM 
              ,SUN_NUM 
              ,B_TOT_PRSN_NUM
              ,(TOT_PRSN_NUM-B_TOT_PRSN_NUM) AS PRSN_NUM_MINUS
              ,DECODE(B_TOT_PRSN_NUM,0,0,(TOT_PRSN_NUM-B_TOT_PRSN_NUM)/B_TOT_PRSN_NUM*100)  AS PER
              ,TOTAL          
  
    FROM
    
    
    (
    
     SELECT   MAX(TMS) TMS
           ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
           ,NVL(SUM(A.ENT_PRSN_NUM ),0)         TOT_PRSN_NUM                                                      
           
          
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'2', A.ENT_PRSN_NUM,0 )) ,0) MON_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'3', A.ENT_PRSN_NUM,0 )) ,0) TUE_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'4', A.ENT_PRSN_NUM,0 )) ,0) WEN_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'5', A.ENT_PRSN_NUM,0 )) ,0) THU_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'6', A.ENT_PRSN_NUM,0 )) ,0) FRI_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'7', A.ENT_PRSN_NUM,0 )) ,0) SAT_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'1', A.ENT_PRSN_NUM,0 )) ,0) SUN_NUM       
    
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) =  ?  
                AND MEET_CD = ?   
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE 1=1
             AND STND_YEAR = ?  
                AND MEET_CD = ? 
                AND TMS  = ?  
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    GROUP BY B.TMS
    ) A,
    
    
    (
    
     SELECT   
            MAX(TMS) TMS
           ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
           ,NVL(SUM(A.ENT_PRSN_NUM ),0)         B_TOT_PRSN_NUM  
           
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) =  ?  
                AND MEET_CD = ?    
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE 1=1
             AND STND_YEAR = ?    
                AND MEET_CD = ? 
                AND TMS  = ?  - 1   
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    GROUP BY B.TMS
    ) B,
    
    (
    
     SELECT NVL(SUM(A.ENT_PRSN_NUM ),0)         TOTAL  
           
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) = ?  
                AND MEET_CD = ?   
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE STND_YEAR = ?  
                AND MEET_CD = ? 
                AND TMS <= ?  
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    )C
  UNION ALL 
  
  
  SELECT '2' AS ROW_ORDER,
    '전년대비' AS MANA_DESC,
     A.TMS                                                               
        ,TOT_PRSN_NUM                     
        ,MON_NUM 
              ,TUE_NUM 
              ,WEN_NUM 
              ,THU_NUM 
              ,FRI_NUM 
              ,SAT_NUM 
              ,SUN_NUM 
              ,B_TOT_PRSN_NUM
              ,(TOT_PRSN_NUM-B_TOT_PRSN_NUM) AS PRSN_NUM_MINUS
              ,DECODE(B_TOT_PRSN_NUM,0,0,(TOT_PRSN_NUM-B_TOT_PRSN_NUM)/B_TOT_PRSN_NUM*100)  AS PER
              ,TOT          
  
    FROM
    
    
    (
    
     SELECT   MAX(TMS) TMS
           ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
           ,NVL(SUM(A.ENT_PRSN_NUM ),0)         TOT_PRSN_NUM                                                      
           
          
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'2', A.ENT_PRSN_NUM,0 )) ,0) MON_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'3', A.ENT_PRSN_NUM,0 )) ,0) TUE_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'4', A.ENT_PRSN_NUM,0 )) ,0) WEN_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'5', A.ENT_PRSN_NUM,0 )) ,0) THU_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'6', A.ENT_PRSN_NUM,0 )) ,0) FRI_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'7', A.ENT_PRSN_NUM,0 )) ,0) SAT_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'1', A.ENT_PRSN_NUM,0 )) ,0) SUN_NUM       
    
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) = ?  - 1  
                AND MEET_CD    = ?   
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE STND_YEAR = ?  - 1  
                AND MEET_CD =?  
                AND TMS  = ?    
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    GROUP BY B.TMS
    ) A,
    
    
    (
    
     SELECT   
            MAX(TMS) TMS
           ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
           ,NVL(SUM(A.ENT_PRSN_NUM ),0)         B_TOT_PRSN_NUM  
           
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) = ?  -1 
                AND MEET_CD = ?     
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE STND_YEAR = ?  - 1  
                AND MEET_CD = ? 
                AND TMS  = ?  - 1  
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    GROUP BY B.TMS
    ) B,
    
    (
    
     SELECT NVL(SUM(A.ENT_PRSN_NUM ),0)         TOT  
           
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) =  ?  -1 
                AND MEET_CD = '003'
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE STND_YEAR = ?  -1  
                AND MEET_CD = ? 
                AND TMS  <= ?   
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    )C
  ),
  (
  SELECT SUM(A.ENT_PRSN_NUM ) AS N_TOT_PRSN_NUM
      FROM 
          TBRC_STAY_MANA  A,       
          VW_SDL_INFO B
      WHERE 1 =1
        AND A.RACE_DT(+) = B.RACE_DAY
        AND B.STND_YEAR =  ?  
        AND B.MEET_CD = ?    
        AND B.TMS  = ?       
  )BB  
 ORDER BY MANA_DESC
 #String#2012#String#003#String#2012#String#003#String#4#String#2012#String#003#String#2012#String#003#String#4#String#2012#String#003#String#2012#String#003#String#4#String#2012#String#003#String#2012#String#003#String#4#String#2012#String#003#String#2012#String#003#String#4#String#2012#String#2012#String#003#String#4#String#2012#String#003#String#4#
>
[I][UbiData][2012-03-28 11:25:28]	- Row size : 2
[I][UbiData][2012-03-28 11:25:28]	- Data
<
1^t입장인원^t232431^t0^t0^t30970^t31378^t62348^t64860^t-2512^t-3.87^t^n2^t전년대비^t311355^t0^t0^t40666^t42421^t83087^t80828^t-20739^t-24.96^t^n
>
[I][UbiData][2012-03-28 11:25:28][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-03-28 11:25:28][DATA QUERY START]
[I][UbiData][2012-03-28 11:25:28]	- sql id : rsm2020_s07
[I][UbiData][2012-03-28 11:25:28]	- Db charset : KSC5601
[I][UbiData][2012-03-28 11:25:28]	- Sql
<
SELECT  
   '0~'||BB.RACE_NO||'R' AS RACE_DESC,
   DECODE(LEV,1,'인원','점유율') AS MANA_DESC,
      DECODE(LEV,1,INWON_12,DECODE(INWON_TOTAL,0,0,ROUND(INWON_12/INWON_TOTAL*100,2))) AS INWON_12, 
      DECODE(LEV,1,INWON_13,DECODE(INWON_TOTAL,0,0,ROUND(INWON_13/INWON_TOTAL*100,2))) AS INWON_13, 
      DECODE(LEV,1,INWON_14,DECODE(INWON_TOTAL,0,0,ROUND(INWON_14/INWON_TOTAL*100,2))) AS INWON_14, 
      DECODE(LEV,1,INWON_16,DECODE(INWON_TOTAL,0,0,ROUND(INWON_16/INWON_TOTAL*100,2))) AS INWON_16, 
      DECODE(LEV,1,INWON_19,DECODE(INWON_TOTAL,0,0,ROUND(INWON_19/INWON_TOTAL*100,2))) AS INWON_19, 
      DECODE(LEV,1,INWON_20,DECODE(INWON_TOTAL,0,0,ROUND(INWON_20/INWON_TOTAL*100,2))) AS INWON_20, 
      DECODE(LEV,1,INWON_22,DECODE(INWON_TOTAL,0,0,ROUND(INWON_22/INWON_TOTAL*100,2))) AS INWON_22, 
      DECODE(LEV,1,INWON_23,DECODE(INWON_TOTAL,0,0,ROUND(INWON_23/INWON_TOTAL*100,2))) AS INWON_23, 
      DECODE(LEV,1,INWON_24,DECODE(INWON_TOTAL,0,0,ROUND(INWON_24/INWON_TOTAL*100,2))) AS INWON_24, 
      DECODE(LEV,1,INWON_25,DECODE(INWON_TOTAL,0,0,ROUND(INWON_25/INWON_TOTAL*100,2))) AS INWON_25, 
      DECODE(LEV,1,INWON_26,DECODE(INWON_TOTAL,0,0,ROUND(INWON_26/INWON_TOTAL*100,2))) AS INWON_26, 
      DECODE(LEV,1,INWON_27,DECODE(INWON_TOTAL,0,0,ROUND(INWON_27/INWON_TOTAL*100,2))) AS INWON_27, 
      DECODE(LEV,1,INWON_28,DECODE(INWON_TOTAL,0,0,ROUND(INWON_28/INWON_TOTAL*100,2))) AS INWON_28, 
      DECODE(LEV,1,INWON_100,DECODE(INWON_TOTAL,0,0,ROUND(INWON_100/INWON_TOTAL*100,2))) AS INWON_100, 
      DECODE(LEV,1,INWON_101,DECODE(INWON_TOTAL,0,0,ROUND(INWON_101/INWON_TOTAL*100,2))) AS INWON_101, 
      DECODE(LEV,1,INWON_102,DECODE(INWON_TOTAL,0,0,ROUND(INWON_102/INWON_TOTAL*100,2))) AS INWON_102, 
      DECODE(LEV,1,INWON_103,DECODE(INWON_TOTAL,0,0,ROUND(INWON_103/INWON_TOTAL*100,2))) AS INWON_103, 
      DECODE(LEV,1,INWON_SUM,DECODE(INWON_TOTAL,0,0,ROUND(INWON_SUM/INWON_TOTAL*100,2))) AS INWON_TOTAL 
  FROM
 (
             SELECT  
        SUM(CASE WHEN BRNC_CD='12' THEN INWON END) AS INWON_12, 
        SUM(CASE WHEN BRNC_CD='13' THEN INWON END) AS INWON_13, 
        SUM(CASE WHEN BRNC_CD='14' THEN INWON END) AS INWON_14, 
        SUM(CASE WHEN BRNC_CD='16' THEN INWON END) AS INWON_16, 
        SUM(CASE WHEN BRNC_CD='19' THEN INWON END) AS INWON_19, 
        SUM(CASE WHEN BRNC_CD='20' THEN INWON END) AS INWON_20, 
        SUM(CASE WHEN BRNC_CD='22' THEN INWON END) AS INWON_22, 
        SUM(CASE WHEN BRNC_CD='23' THEN INWON END) AS INWON_23, 
        SUM(CASE WHEN BRNC_CD='24' THEN INWON END) AS INWON_24, 
        SUM(CASE WHEN BRNC_CD='25' THEN INWON END) AS INWON_25, 
        SUM(CASE WHEN BRNC_CD='26' THEN INWON END) AS INWON_26, 
        SUM(CASE WHEN BRNC_CD='27' THEN INWON END) AS INWON_27, 
        SUM(CASE WHEN BRNC_CD='28' THEN INWON END) AS INWON_28, 
        SUM(CASE WHEN BRNC_CD='100' THEN INWON END) AS INWON_100, 
        SUM(CASE WHEN BRNC_CD='101' THEN INWON END) AS INWON_101, 
        SUM(CASE WHEN BRNC_CD='102' THEN INWON END) AS INWON_102, 
        SUM(CASE WHEN BRNC_CD='103' THEN INWON END) AS INWON_103, 
        SUM(INWON ) AS INWON_TOTAL,
        SUM(CASE WHEN BRNC_CD='12' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='13' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='14' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='16' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='19' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='20' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='22' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='23' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='24' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='25' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='26' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='27' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='28' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='100' THEN INWON END) + 
                 SUM(CASE WHEN BRNC_CD='101' THEN INWON END) + 
                 SUM(CASE WHEN BRNC_CD='102' THEN INWON END) +
                 SUM(CASE WHEN BRNC_CD='103' THEN INWON END)  AS INWON_SUM 
     FROM
    (
    SELECT C.CD_NM, 
           E.BRNC_CD,                                      
            SUM( E.ENT_PRSN_NUM) INWON 
        FROM                                                   
         VW_SDL_INFO R       
         ,TBRC_STAY_MANA E, 
         TBRK_SPEC_CD C                      
        WHERE  1=1
           AND R.MEET_CD  = ?  
        AND R.STND_YEAR(+) = ?  
          AND R.TMS(+)   = ?  
          AND R.DAY_ORD(+) = ?  
         AND E.MEET_CD='003'                        
         AND E.RACE_DT=R.RACE_DAY                 
         AND C.GRP_CD IN ('018','032')                      
         AND C.CD=E.BRNC_CD                
         
        GROUP BY E.BRNC_CD,C.CD_NM          
        ORDER BY E.BRNC_CD
    )A
   )AA,
 (
  SELECT                                                                   
          MAX(RACE_NO)  AS RACE_NO
          
   FROM   (                                                                 
               SELECT                                                       
                        TOR.RACE_NO                                         
                      , TOR.RACE_REG_NO                                     
                      , TOR.RACER_NO                                        
                      , TOR.RANK                                            
                      , TRM.NM_KOR                                          
                      , RANK() OVER (PARTITION BY TOR.RACE_NO               
                                                , TOR.RANK                  
                                         ORDER BY TOR.RACE_REG_NO) SEQ      
               FROM     TBEB_ORGAN@MRASYSLINK        TOR                        
                      , TBEC_RACER_MASTER@MRASYSLINK TRM                        
               WHERE 1=1                                                        
               
               AND    TOR.RACER_NO   = TRM.RACER_NO                         
               AND    TOR.STND_YEAR  = ?  
               AND    TOR.MBR_CD     = '001'                                
               AND    TOR.TMS        = ?  
               
               AND    TOR.RANK BETWEEN 1                                    
                                   AND 3                                    
          )                                                                 
   START WITH SEQ = 1                                                       
   CONNECT BY PRIOR SEQ = SEQ - 1                                           
   AND PRIOR RACE_NO = RACE_NO AND RANK = RANK                           
 )BB , (SELECT LEVEL LEV FROM DUAL CONNECT BY LEVEL <=2 ) DU
 #String#003#String#2012#String#4#String#1#String#2012#String#4#
>
[I][UbiData][2012-03-28 11:25:28]	- Row size : 2
[I][UbiData][2012-03-28 11:25:28]	- Data
<
0~15R^t인원^t2785^t2550^t2918^t4232^t3557^t0^t1230^t2218^t1768^t1453^t923^t2841^t1427^t0^t0^t0^t^t^t^n0~15R^t점유율^t8.99^t8.23^t9.42^t13.66^t11.49^t0^t3.97^t7.16^t5.71^t4.69^t2.98^t9.17^t4.61^t0^t0^t0^t^t^t^n
>
[I][UbiData][2012-03-28 11:25:28][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-03-28 11:25:28][DATA QUERY START]
[I][UbiData][2012-03-28 11:25:28]	- sql id : rsm2020_s08
[I][UbiData][2012-03-28 11:25:28]	- Db charset : KSC5601
[I][UbiData][2012-03-28 11:25:28]	- Sql
<
SELECT                                       
       STND_YEAR,  
       TMS,           
       DAY_ORD,   
       SPEC_DESC   
  FROM TBRD_RACE_SPEC_DESC 
  WHERE 1=1
       AND STND_YEAR = ?  
       AND TMS  = ?  
       AND DAY_ORD = ?  
       AND MEET_CD   = ?  
 UNION ALL
 SELECT 
       ' ', 999, 999, ' '
 FROM DUAL          
 ORDER BY TMS
 #String#2012#String#4#String#1#String#003#
>
[I][UbiData][2012-03-28 11:25:28]	- Row size : 1
[I][UbiData][2012-03-28 11:25:28]	- Data
<
 ^t999^t999^t ^t^n
>
[I][UbiData][2012-03-28 11:25:28][DATA QUERY END]
--------------------------------------------------------------------------------


[I][UbiForm][2012-03-28 14:21:00][REQUEST FILE]
[I][UbiForm][2012-03-28 14:21:00]	- Report : /web/waspage/usrbm/report/rsm/rsm4060.jrf
[I][UbiForm][2012-03-28 14:21:00]	- Common : /web/waspage/usrbm/report/rsm/property/commonitem.xml [Not found]
--------------------------------------------------------------------------------


[I][UbiData][2012-03-28 14:21:00][REQUEST FILE]
[I][UbiData][2012-03-28 14:21:00]	- Report : rsm4060.jrf
--------------------------------------------------------------------------------
[I][UbiData][2012-03-28 14:21:00][DB CONNECT]
[I][UbiData][2012-03-28 14:21:00]	- Type : nonlookup
[I][UbiData][2012-03-28 14:21:00]	- Db id : rbm
[I][UbiData][2012-03-28 14:21:00]	- Sql id : SQL1
[I][UbiData][2012-03-28 14:21:00]	- Datasource : jdbc/RBM
[I][UbiData][2012-03-28 14:21:00]	- Status : Success
--------------------------------------------------------------------------------
[I][UbiData][2012-03-28 14:21:00][DATA QUERY START]
[I][UbiData][2012-03-28 14:21:00]	- sql id : SQL1
[I][UbiData][2012-03-28 14:21:00]	- Db charset : KSC5601
[I][UbiData][2012-03-28 14:21:00]	- Sql
<
SELECT *
 FROM (
     SELECT  
           MEET_CD,  
           STND_YEAR,  
           DT,   
          BRNC_CD,  
          CD_NM,      
          GROSS_SALES, 
          CANCELS,  
          TOT_SALES,  
          CASHES,  
          NET_INCOME,  
          DRAWS,   
          RETURNS,
          BALANCE,  
          VERI,   
          VERI_DT,  
          FILE_PATH,  
          FILE_NM  
     FROM TBRD_LIS_FILE A 
     ,TBRK_SPEC_CD B    
     WHERE 1=1
      AND BRNC_CD=B.CD
      AND B.GRP_CD = '018'         
      AND BRNC_CD NOT IN ('00','01','02','03','04','06','08','98')
      AND STND_YEAR = ? 
      AND DT  = ? 
    ORDER BY BRNC_CD
 ) A
 #String#2012#String#0325#
>
[I][UbiData][2012-03-28 14:21:00]	- Row size : 17
[I][UbiData][2012-03-28 14:21:00]	- Data
<
001^t2012^t0325^t11^t수원^t1559266930^t0^t1559266930^t1308384510^t250882420^t135395040^t386277460^t0^t001^t2012-03-25 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120325/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0325^t12^t상봉^t1527355171^t35000^t1527320171^t1191244591^t336075580^t125719720^t461795300^t0^t001^t2012-03-25 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120325/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0325^t13^t일산^t912257880^t100000^t912157880^t768815610^t143342270^t66240000^t209582270^t0^t001^t2012-03-25 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120325/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0325^t14^t분당^t1485175330^t0^t1485175330^t1205613570^t279561760^t94313102^t373874862^t0^t001^t2012-03-25 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120325/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0325^t15^t동대문^t1081110160^t0^t1081110160^t909573920^t171536240^t158192050^t329728290^t0^t001^t2012-03-25 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120325/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0325^t16^t장안^t1738397730^t264000^t1738133730^t1334417250^t403716480^t219076500^t622792980^t0^t001^t2012-03-25 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120325/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0325^t17^t산본^t707057030^t0^t707057030^t517960190^t189096840^t37840000^t226936840^t0^t001^t2012-03-25 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120325/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0325^t18^t부천^t836742620^t130000^t836612620^t654521290^t182091330^t81865000^t263956330^t0^t001^t2012-03-25 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120325/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0325^t19^t관악^t772739710^t16000^t772723710^t574346080^t198377630^t85937790^t284315420^t0^t001^t2012-03-25 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120325/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0325^t21^t당산^t1949322330^t544000^t1948778330^t1728099370^t220678960^t92800000^t313478960^t0^t001^t2012-03-25 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120325/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0325^t22^t유성^t665175980^t60000^t665115980^t514459520^t150656460^t50796040^t201452500^t0^t001^t2012-03-25 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120325/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0325^t23^t인천^t455056125^t52000^t455004125^t338006725^t116997400^t30459000^t147456400^t0^t001^t2012-03-25 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120325/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0325^t24^t시흥^t1036903560^t40000^t1036863560^t869687730^t167175830^t105429560^t272605390^t0^t001^t2012-03-25 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120325/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0325^t25^t논현^t1117925980^t100000^t1117825980^t985351920^t132474060^t95161000^t227635060^t0^t001^t2012-03-25 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120325/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0325^t26^t천안^t713817150^t80000^t713737150^t584230430^t129506720^t32813120^t162319840^t0^t001^t2012-03-25 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120325/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0325^t27^t올림픽^t3038771350^t479000^t3038292350^t2590032770^t448259580^t186769000^t635028580^t0^t001^t2012-03-25 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120325/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0325^t28^t의정부^t910959530^t122000^t910837530^t789974040^t120863490^t61305700^t182169190^t0^t001^t2012-03-25 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120325/divstatrpt.lis^tdivstatrpt.lis^t^n
>
[I][UbiData][2012-03-28 14:21:00][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-03-28 14:21:00][DATA QUERY START]
[I][UbiData][2012-03-28 14:21:00]	- sql id : SQL2
[I][UbiData][2012-03-28 14:21:00]	- Db charset : KSC5601
[I][UbiData][2012-03-28 14:21:00]	- Sql
<
SELECT *
 FROM (
  SELECT 
    MEET_CD,
          MEET_DESC,
          BRNC_CD,
          SUM(GROSS_SALES) AS GROSS_SALES,
          SUM(CANCELS) AS CANCELS,  
          SUM(TOT_SALES) AS TOT_SALES,  
          SUM(CASHES) AS CASHES,  
          SUM(NET_INCOME) AS NET_INCOME,  
          SUM(BALANCE) AS BALANCE  
  FROM
  (            
      SELECT 
        
              MEET_CD,  
        STND_YEAR,  
        DT,   
        CASE 
            WHEN  A.BRNC_CD NOT IN ('00','01','02','03','04','06','08','98') THEN '지점계' 
            WHEN  A.BRNC_CD IN ('06') THEN '그린카드'
            WHEN  A.BRNC_CD IN ('01','02','03','04','06','08','98') AND MEET_CD ='003' THEN '미사리'
            WHEN  A.BRNC_CD IN ('01','02','03','04','06','08','98') AND MEET_CD ='001' THEN '스피돔'
           ELSE  'X' 
           END AS  MEET_DESC, 
           CASE 
            WHEN  A.BRNC_CD NOT IN ('00','01','02','03','04','06','08','98') THEN '18' 
            WHEN  A.BRNC_CD IN ('06') THEN '06'
            WHEN  A.BRNC_CD IN ('01','02','03','04','06','08','98') THEN '00'
           ELSE  'X'
           END AS BRNC_CD,
           CASE 
            WHEN  A.BRNC_CD NOT IN ('00','01','02','03','04','06','08','98') THEN '1' 
            WHEN  A.BRNC_CD IN ('06') THEN '2'
            WHEN  A.BRNC_CD IN ('01','02','03','04','06','08','98') THEN '3'
           ELSE  'X' 
           END AS MEET_ORDER,           
           SUM(GROSS_SALES) AS GROSS_SALES,
           SUM(CANCELS) AS CANCELS,  
           SUM(TOT_SALES) AS TOT_SALES,  
           SUM(CASHES) AS CASHES,  
           SUM(NET_INCOME) AS NET_INCOME,  
           SUM(BALANCE) AS BALANCE  
     FROM TBRD_LIS_FILE A 
     WHERE 1=1     
       AND STND_YEAR = ? 
       AND DT    = ? 
     GROUP BY MEET_CD,  
        STND_YEAR,  
        DT,  
        A.BRNC_CD
  )        
  WHERE BRNC_CD != 'X'
  GROUP BY MEET_CD,MEET_ORDER,MEET_DESC,
          BRNC_CD        
  ORDER BY  MEET_ORDER                                  
 ) A
 #String#2012#String#0325#
>
[I][UbiData][2012-03-28 14:21:00]	- Row size : 3
[I][UbiData][2012-03-28 14:21:00]	- Data
<
001^t지점계^t18^t20508034566^t2022000^t20506012566^t16864719516^t3641293050^t0^t^n001^t그린카드^t06^t161681000^t0^t161681000^t117202080^t44478920^t44478920^t^n001^t스피돔^t00^t3644591360^t130000^t3644461360^t3063548330^t580913030^t0^t^n
>
[I][UbiData][2012-03-28 14:21:00][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-03-28 14:21:00][DATA QUERY START]
[I][UbiData][2012-03-28 14:21:00]	- sql id : SQL3
[I][UbiData][2012-03-28 14:21:00]	- Db charset : KSC5601
[I][UbiData][2012-03-28 14:21:00]	- Sql
<
SELECT *
 FROM (
     SELECT 
      '그린카드' AS MYCAT, 
      COMM_NO, 
      DIV_NO, 
      DECODE(DIV_NO,'00','본장','15','논현','올림픽') AS COMM_NAME, 
      OUT_AMT, 
      IN_AMT, 
      MILEAGE_AMT, 
      BONUS_AMT,
      (IN_AMT-OUT_AMT-MILEAGE_AMT-BONUS_AMT) AS SIL_IN_AMT 
  FROM VW_MYCAT_INOUT                                              
    WHERE 1=1
   AND RACE_DAY = ?  
    ORDER BY DIV_NO   
 ) A
 #String#20120325#
>
[I][UbiData][2012-03-28 14:21:00]	- Row size : 3
[I][UbiData][2012-03-28 14:21:00]	- Data
<
그린카드^t06^t00^t본장^t35131600^t50046800^t826300^t0^t14088900^t^n그린카드^t06^t15^t논현^t3021000^t7420600^t131600^t0^t4268000^t^n그린카드^t06^t17^t올림픽^t14000^t0^t0^t0^t-14000^t^n
>
[I][UbiData][2012-03-28 14:21:00][DATA QUERY END]
--------------------------------------------------------------------------------


[I][UbiForm][2012-03-28 18:06:56][REQUEST FILE]
[I][UbiForm][2012-03-28 18:06:56]	- Report : /web/waspage/usrbm/report/rsm/rsm4060.jrf
[I][UbiForm][2012-03-28 18:06:56]	- Common : /web/waspage/usrbm/report/rsm/property/commonitem.xml [Not found]
--------------------------------------------------------------------------------


[I][UbiData][2012-03-28 18:06:57][REQUEST FILE]
[I][UbiData][2012-03-28 18:06:57]	- Report : rsm4060.jrf
--------------------------------------------------------------------------------
[I][UbiData][2012-03-28 18:06:57][DB CONNECT]
[I][UbiData][2012-03-28 18:06:57]	- Type : nonlookup
[I][UbiData][2012-03-28 18:06:57]	- Db id : rbm
[I][UbiData][2012-03-28 18:06:57]	- Sql id : SQL1
[I][UbiData][2012-03-28 18:06:57]	- Datasource : jdbc/RBM
[I][UbiData][2012-03-28 18:06:57]	- Status : Success
--------------------------------------------------------------------------------
[I][UbiData][2012-03-28 18:06:57][DATA QUERY START]
[I][UbiData][2012-03-28 18:06:57]	- sql id : SQL1
[I][UbiData][2012-03-28 18:06:57]	- Db charset : KSC5601
[I][UbiData][2012-03-28 18:06:57]	- Sql
<
SELECT *
 FROM (
     SELECT  
           MEET_CD,  
           STND_YEAR,  
           DT,   
          BRNC_CD,  
          CD_NM,      
          GROSS_SALES, 
          CANCELS,  
          TOT_SALES,  
          CASHES,  
          NET_INCOME,  
          DRAWS,   
          RETURNS,
          BALANCE,  
          VERI,   
          VERI_DT,  
          FILE_PATH,  
          FILE_NM  
     FROM TBRD_LIS_FILE A 
     ,TBRK_SPEC_CD B    
     WHERE 1=1
      AND BRNC_CD=B.CD
      AND B.GRP_CD = '018'         
      AND BRNC_CD NOT IN ('00','01','02','03','04','06','08','98')
      AND STND_YEAR = ? 
      AND DT  = ? 
    ORDER BY BRNC_CD
 ) A
 #String#2012#String#0328#
>
[I][UbiData][2012-03-28 18:06:57]	- Row size : 13
[I][UbiData][2012-03-28 18:06:57]	- Data
<
003^t2012^t0328^t12^t상봉^t756976460^t100000^t756876460^t595180130^t161696330^t59920000^t221616330^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120328/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0328^t13^t일산^t630039530^t0^t630039530^t478046280^t151993250^t27687000^t179680250^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120328/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0328^t14^t분당^t869473480^t60000^t869413480^t701904550^t167508930^t52571000^t220079930^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120328/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0328^t16^t장안^t876707233^t50000^t876657233^t663191773^t213465460^t88291000^t301756460^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120328/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0328^t19^t관악^t836785650^t0^t836785650^t599026960^t237758690^t69713390^t307472080^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120328/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0328^t21^t당산^t0^t0^t0^t211600^t-211600^t211600^t0^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120328/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0328^t22^t유성^t427265240^t0^t427265240^t299854760^t127410480^t39674000^t167084480^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120328/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0328^t23^t인천^t506283360^t30000^t506253360^t384644000^t121609360^t40385000^t161994360^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120328/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0328^t24^t시흥^t1116438840^t100000^t1116338840^t907145980^t209192860^t89038470^t298231330^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120328/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0328^t25^t논현^t727908780^t9000^t727899780^t581204680^t146695100^t22000000^t168695100^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120328/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0328^t26^t천안^t490190090^t0^t490190090^t389673450^t100516640^t10585000^t111101640^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120328/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0328^t27^t올림픽^t1158543080^t143400^t1158399680^t1000767590^t157632090^t78770000^t236402090^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120328/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0328^t28^t의정부^t641360957^t0^t641360957^t528653167^t112707790^t27900000^t140607790^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120328/divstatrpt.lis^tdivstatrpt.lis^t^n
>
[I][UbiData][2012-03-28 18:06:57][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-03-28 18:06:57][DATA QUERY START]
[I][UbiData][2012-03-28 18:06:57]	- sql id : SQL2
[I][UbiData][2012-03-28 18:06:57]	- Db charset : KSC5601
[I][UbiData][2012-03-28 18:06:57]	- Sql
<
SELECT *
 FROM (
  SELECT 
    MEET_CD,
          MEET_DESC,
          BRNC_CD,
          SUM(GROSS_SALES) AS GROSS_SALES,
          SUM(CANCELS) AS CANCELS,  
          SUM(TOT_SALES) AS TOT_SALES,  
          SUM(CASHES) AS CASHES,  
          SUM(NET_INCOME) AS NET_INCOME,  
          SUM(BALANCE) AS BALANCE  
  FROM
  (            
      SELECT 
        
              MEET_CD,  
        STND_YEAR,  
        DT,   
        CASE 
            WHEN  A.BRNC_CD NOT IN ('00','01','02','03','04','06','08','98') THEN '지점계' 
            WHEN  A.BRNC_CD IN ('06') THEN '그린카드'
            WHEN  A.BRNC_CD IN ('01','02','03','04','06','08','98') AND MEET_CD ='003' THEN '미사리'
            WHEN  A.BRNC_CD IN ('01','02','03','04','06','08','98') AND MEET_CD ='001' THEN '스피돔'
           ELSE  'X' 
           END AS  MEET_DESC, 
           CASE 
            WHEN  A.BRNC_CD NOT IN ('00','01','02','03','04','06','08','98') THEN '18' 
            WHEN  A.BRNC_CD IN ('06') THEN '06'
            WHEN  A.BRNC_CD IN ('01','02','03','04','06','08','98') THEN '00'
           ELSE  'X'
           END AS BRNC_CD,
           CASE 
            WHEN  A.BRNC_CD NOT IN ('00','01','02','03','04','06','08','98') THEN '1' 
            WHEN  A.BRNC_CD IN ('06') THEN '2'
            WHEN  A.BRNC_CD IN ('01','02','03','04','06','08','98') THEN '3'
           ELSE  'X' 
           END AS MEET_ORDER,           
           SUM(GROSS_SALES) AS GROSS_SALES,
           SUM(CANCELS) AS CANCELS,  
           SUM(TOT_SALES) AS TOT_SALES,  
           SUM(CASHES) AS CASHES,  
           SUM(NET_INCOME) AS NET_INCOME,  
           SUM(BALANCE) AS BALANCE  
     FROM TBRD_LIS_FILE A 
     WHERE 1=1     
       AND STND_YEAR = ? 
       AND DT    = ? 
     GROUP BY MEET_CD,  
        STND_YEAR,  
        DT,  
        A.BRNC_CD
  )        
  WHERE BRNC_CD != 'X'
  GROUP BY MEET_CD,MEET_ORDER,MEET_DESC,
          BRNC_CD        
  ORDER BY  MEET_ORDER                                  
 ) A
 #String#2012#String#0328#
>
[I][UbiData][2012-03-28 18:06:57]	- Row size : 3
[I][UbiData][2012-03-28 18:06:57]	- Data
<
003^t지점계^t18^t9037972700^t492400^t9037480300^t7129504920^t1907975380^t0^t^n003^t그린카드^t06^t24881600^t0^t24881600^t12109980^t12771620^t12771620^t^n003^t미사리^t00^t1796771990^t0^t1796771990^t1482899160^t313872830^t0^t^n
>
[I][UbiData][2012-03-28 18:06:57][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-03-28 18:06:57][DATA QUERY START]
[I][UbiData][2012-03-28 18:06:57]	- sql id : SQL3
[I][UbiData][2012-03-28 18:06:57]	- Db charset : KSC5601
[I][UbiData][2012-03-28 18:06:57]	- Sql
<
SELECT *
 FROM (
     SELECT 
      '그린카드' AS MYCAT, 
      COMM_NO, 
      DIV_NO, 
      DECODE(DIV_NO,'00','본장','15','논현','올림픽') AS COMM_NAME, 
      OUT_AMT, 
      IN_AMT, 
      MILEAGE_AMT, 
      BONUS_AMT,
      (IN_AMT-OUT_AMT-MILEAGE_AMT-BONUS_AMT) AS SIL_IN_AMT 
  FROM VW_MYCAT_INOUT                                              
    WHERE 1=1
   AND RACE_DAY = ?  
    ORDER BY DIV_NO   
 ) A
 #String#20120328#
>
[I][UbiData][2012-03-28 18:06:57]	- Row size : 2
[I][UbiData][2012-03-28 18:06:57]	- Data
<
그린카드^t06^t00^t본장^t1956760^t4943200^t57200^t0^t2929240^t^n그린카드^t06^t15^t논현^t975000^t5210600^t197600^t0^t4038000^t^n
>
[I][UbiData][2012-03-28 18:06:57][DATA QUERY END]
--------------------------------------------------------------------------------

