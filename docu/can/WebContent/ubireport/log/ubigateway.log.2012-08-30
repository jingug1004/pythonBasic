
[I][UbiForm][2012-08-30 09:24:08][REQUEST FILE]
[I][UbiForm][2012-08-30 09:24:08]	- Report : /web/waspage/usrbm/report/rsm/rsm2020_2.jrf
[I][UbiForm][2012-08-30 09:24:08]	- Common : /web/waspage/usrbm/report/rsm/property/commonitem.xml [Not found]
--------------------------------------------------------------------------------


[I][UbiData][2012-08-30 09:24:08][REQUEST FILE]
[I][UbiData][2012-08-30 09:24:08]	- Report : rsm2020_2.jrf
--------------------------------------------------------------------------------
[I][UbiData][2012-08-30 09:24:08][DB CONNECT]
[I][UbiData][2012-08-30 09:24:08]	- Type : nonlookup
[I][UbiData][2012-08-30 09:24:08]	- Db id : RBM
[I][UbiData][2012-08-30 09:24:08]	- Sql id : SQL
[I][UbiData][2012-08-30 09:24:08]	- Datasource : jdbc/RBM
[I][UbiData][2012-08-30 09:24:08]	- Status : Success
--------------------------------------------------------------------------------
[I][UbiData][2012-08-30 09:24:08][DATA QUERY START]
[I][UbiData][2012-08-30 09:24:08]	- sql id : SQL
[I][UbiData][2012-08-30 09:24:08]	- Db charset : KSC5601
[I][UbiData][2012-08-30 09:24:08]	- Sql
<
SELECT TO_CHAR(TO_NUMBER(I.RACE_NO))||'경주' AS RACE_NO,
                ROW_NUM AS GBN,
                GBN_DESC AS GBN_DESC,
                TRIM(TO_CHAR(SUM(DIV_TOTAL), '999,999,999,999,999')) || 
                DECODE(NVL(SUM(P.REFUND),0),0,'',CHR(10)||'(환불액:'||TRIM(TO_CHAR(SUM(P.REFUND),'999,999,999,999,999'))||')') AS TOT
         FROM TBES_SDL_DT P,
             (
                 SELECT ROWNUM AS ROW_NUM, A.*
                 FROM   (
                     SELECT MEET_CD, STND_YEAR, TMS, DAY_ORD, SUBSTR(STND_YEAR,3,2)||'년 '||TMS||'회 '||DAY_ORD||'일차' AS GBN_DESC,
                            RACE_NO
                     FROM (
                         SELECT '003' AS MEET_CD, STND_YEAR, TMS, DAY_ORD, RACE_NO
                         FROM MRASYS.TBEB_RACE@ISPDB_MRASYS
                         WHERE MBR_CD = '001' 
                          AND  STND_YEAR||TMS||DAY_ORD <= ? ||? ||? 
                         ORDER BY STND_YEAR DESC, TMS DESC
                     )
                     WHERE ROWNUM < 61
                     UNION ALL
                     SELECT '003' AS MEET_CD, STND_YEAR, TMS, DAY_ORD, SUBSTR(STND_YEAR,3,2)||'년 '||TMS||'회 '||DAY_ORD||'일차' AS GBN_DESC,
                            RACE_NO
                     FROM  MRASYS.TBEB_RACE@ISPDB_MRASYS
                     WHERE MBR_CD = '001' 
                     AND   STND_YEAR= ?  -1
                     AND   TMS = ? 
                     AND   DAY_ORD = ? 
                     ORDER BY 2, 3, 4, 6
                     ) A
             ) I
         WHERE P.MEET_CD(+)    = I.MEET_CD
           AND P.STND_YEAR(+)  = I.STND_YEAR
           AND P.TMS(+)        = I.TMS
           AND P.DAY_ORD(+)    = I.DAY_ORD
           AND P.RACE_NO(+)    = I.RACE_NO
         GROUP BY ROW_NUM, I.RACE_NO, GBN_DESC  
 
 UNION ALL
 
 SELECT '계' AS RACE_NO,
                99 AS GBN,
                GBN_DESC AS GBN_DESC,
                TRIM(TO_CHAR(SUM(DIV_TOTAL), '999,999,999,999,999')) || 
                DECODE(NVL(SUM(P.REFUND),0),0,'',CHR(10)||'(환불액:'||TRIM(TO_CHAR(SUM(P.REFUND),'999,999,999,999,999'))||')') AS TOT
         FROM TBES_SDL_DT P,
             (
                 SELECT ROWNUM AS ROW_NUM, A.*
                 FROM   (
                     SELECT MEET_CD, STND_YEAR, TMS, DAY_ORD, SUBSTR(STND_YEAR,3,2)||'년 '||TMS||'회 '||DAY_ORD||'일차' AS GBN_DESC
                     FROM (
                         SELECT '003' AS MEET_CD, STND_YEAR, TMS, DAY_ORD
                         FROM  VW_SDL_INFO
                         WHERE MEET_CD = '003' 
                          AND  STND_YEAR||TMS||DAY_ORD <= ? ||? ||? 
                         ORDER BY STND_YEAR DESC, TMS DESC
                         )
                         WHERE ROWNUM < 5
                     UNION ALL
                     SELECT '003' AS MEET_CD, STND_YEAR, TMS, DAY_ORD, SUBSTR(STND_YEAR,3,2)||'년 '||TMS||'회 '||DAY_ORD||'일차' AS GBN_DESC
                     FROM  VW_SDL_INFO
                     WHERE MEET_CD = '003' 
                     AND   STND_YEAR= ?  -1
                     AND   TMS = ? 
                     AND   DAY_ORD = ? 
                     ORDER BY 2, 3, 4
                     ) A
             ) I
         WHERE P.MEET_CD(+)    = I.MEET_CD
           AND P.STND_YEAR(+)  = I.STND_YEAR
           AND P.TMS(+)        = I.TMS
           AND P.DAY_ORD(+)    = I.DAY_ORD
         GROUP BY ROW_NUM, GBN_DESC
         ORDER BY 2
 #String#2012#String#29#String#2#String#2012#String#29#String#2#String#2012#String#29#String#2#String#2012#String#29#String#2#
>
[I][UbiData][2012-08-30 09:24:09]	- Row size : 80
[I][UbiData][2012-08-30 09:24:09]	- Data
<
1경주^t1^t11년 29회 2일차^t299,211,900^t^n2경주^t2^t11년 29회 2일차^t381,326,900^t^n3경주^t3^t11년 29회 2일차^t408,616,800
(환불액:47,730,700)^t^n4경주^t4^t11년 29회 2일차^t514,522,700
(환불액:30,443,500)^t^n5경주^t5^t11년 29회 2일차^t585,221,900^t^n6경주^t6^t11년 29회 2일차^t637,450,200^t^n7경주^t7^t11년 29회 2일차^t652,086,500^t^n8경주^t8^t11년 29회 2일차^t620,495,600^t^n9경주^t9^t11년 29회 2일차^t747,621,100^t^n10경주^t10^t11년 29회 2일차^t841,529,400^t^n11경주^t11^t11년 29회 2일차^t503,160,900
(환불액:307,177,100)^t^n12경주^t12^t11년 29회 2일차^t926,815,300^t^n13경주^t13^t11년 29회 2일차^t925,574,600^t^n14경주^t14^t11년 29회 2일차^t756,592,400
(환불액:143,217,100)^t^n15경주^t15^t11년 29회 2일차^t990,179,400^t^n1경주^t16^t12년 28회 1일차^t217,587,000^t^n2경주^t17^t12년 28회 1일차^t288,870,500^t^n3경주^t18^t12년 28회 1일차^t331,700,500^t^n4경주^t19^t12년 28회 1일차^t401,165,100^t^n5경주^t20^t12년 28회 1일차^t267,456,000
(환불액:157,367,200)^t^n6경주^t21^t12년 28회 1일차^t473,793,800^t^n7경주^t22^t12년 28회 1일차^t231,828,800
(환불액:295,403,000)^t^n8경주^t23^t12년 28회 1일차^t622,902,900^t^n9경주^t24^t12년 28회 1일차^t672,517,300^t^n10경주^t25^t12년 28회 1일차^t728,939,200^t^n11경주^t26^t12년 28회 1일차^t738,205,800^t^n12경주^t27^t12년 28회 1일차^t766,810,900^t^n13경주^t28^t12년 28회 1일차^t749,433,600^t^n14경주^t29^t12년 28회 1일차^t773,742,700^t^n15경주^t30^t12년 28회 1일차^t845,780,400^t^n1경주^t31^t12년 28회 2일차^t214,659,800^t^n2경주^t32^t12년 28회 2일차^t290,471,500^t^n3경주^t33^t12년 28회 2일차^t341,957,700^t^n4경주^t34^t12년 28회 2일차^t399,049,600^t^n5경주^t35^t12년 28회 2일차^t465,126,700^t^n6경주^t36^t12년 28회 2일차^t471,139,300^t^n7경주^t37^t12년 28회 2일차^t529,893,800^t^n8경주^t38^t12년 28회 2일차^t559,139,800^t^n9경주^t39^t12년 28회 2일차^t544,572,800^t^n10경주^t40^t12년 28회 2일차^t686,099,500^t^n11경주^t41^t12년 28회 2일차^t715,540,700^t^n12경주^t42^t12년 28회 2일차^t610,728,000^t^n13경주^t43^t12년 28회 2일차^t741,798,400^t^n14경주^t44^t12년 28회 2일차^t727,854,400^t^n15경주^t45^t12년 28회 2일차^t798,800,400^t^n1경주^t46^t12년 29회 1일차^t223,920,200^t^n2경주^t47^t12년 29회 1일차^t279,912,900^t^n3경주^t48^t12년 29회 1일차^t345,790,500^t^n4경주^t49^t12년 29회 1일차^t392,601,800^t^n5경주^t50^t12년 29회 1일차^t427,616,700^t^n6경주^t51^t12년 29회 1일차^t471,638,000^t^n7경주^t52^t12년 29회 1일차^t496,669,200^t^n8경주^t53^t12년 29회 1일차^t529,223,200^t^n9경주^t54^t12년 29회 1일차^t555,284,900^t^n10경주^t55^t12년 29회 1일차^t638,245,000^t^n11경주^t56^t12년 29회 1일차^t651,509,400^t^n12경주^t57^t12년 29회 1일차^t682,585,500^t^n13경주^t58^t12년 29회 1일차^t690,808,800^t^n14경주^t59^t12년 29회 1일차^t728,140,700^t^n15경주^t60^t12년 29회 1일차^t759,213,400^t^n1경주^t61^t12년 29회 2일차^t^t^n2경주^t62^t12년 29회 2일차^t^t^n3경주^t63^t12년 29회 2일차^t^t^n4경주^t64^t12년 29회 2일차^t^t^n5경주^t65^t12년 29회 2일차^t^t^n6경주^t66^t12년 29회 2일차^t^t^n7경주^t67^t12년 29회 2일차^t^t^n8경주^t68^t12년 29회 2일차^t^t^n9경주^t69^t12년 29회 2일차^t^t^n10경주^t70^t12년 29회 2일차^t^t^n11경주^t71^t12년 29회 2일차^t^t^n12경주^t72^t12년 29회 2일차^t^t^n13경주^t73^t12년 29회 2일차^t^t^n14경주^t74^t12년 29회 2일차^t^t^n15경주^t75^t12년 29회 2일차^t^t^n계^t99^t12년 29회 1일차^t7,873,160,200^t^n계^t99^t12년 28회 1일차^t8,110,734,500
(환불액:452,770,200)^t^n계^t99^t11년 29회 2일차^t9,790,405,600
(환불액:528,568,400)^t^n계^t99^t12년 28회 2일차^t8,096,832,400^t^n계^t99^t12년 29회 2일차^t^t^n
>
[I][UbiData][2012-08-30 09:24:09][DATA QUERY END]
--------------------------------------------------------------------------------


[I][UbiForm][2012-08-30 11:00:02][REQUEST FILE]
[I][UbiForm][2012-08-30 11:00:02]	- Report : /web/waspage/usrbm/report/rsm/rsm2020.jrf
[I][UbiForm][2012-08-30 11:00:02]	- Common : /web/waspage/usrbm/report/rsm/property/commonitem.xml [Not found]
--------------------------------------------------------------------------------


[I][UbiData][2012-08-30 11:00:02][REQUEST FILE]
[I][UbiData][2012-08-30 11:00:02]	- Report : rsm2020.jrf
--------------------------------------------------------------------------------
[I][UbiData][2012-08-30 11:00:07][DB CONNECT]
[I][UbiData][2012-08-30 11:00:07]	- Type : nonlookup
[I][UbiData][2012-08-30 11:00:07]	- Db id : rbm
[I][UbiData][2012-08-30 11:00:07]	- Sql id : rsm2020_s06Today
[I][UbiData][2012-08-30 11:00:07]	- Datasource : jdbc/RBM
[I][UbiData][2012-08-30 11:00:07]	- Status : Success
--------------------------------------------------------------------------------
[I][UbiData][2012-08-30 11:00:07][DATA QUERY START]
[I][UbiData][2012-08-30 11:00:07]	- sql id : rsm2020_s06Today
[I][UbiData][2012-08-30 11:00:07]	- Db charset : KSC5601
[I][UbiData][2012-08-30 11:00:07]	- Sql
<
WITH J 
 AS
 (SELECT    
         '전회' AS COL_DESC  
     , tms                                                                                       
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='12' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_02    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='16' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_06    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='22'  THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_12    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='20' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_10    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='23' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_13    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='24' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_14    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='13' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_03    
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='25'  THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_15    
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='19' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_09    
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='14' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_05    
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='26' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_16    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='27' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_17    
     , SUM(                                                                              
           CASE                                                                          
              WHEN COMM_NO='06'  THEN NVL(DIV_TOTAL, 0)                                  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_01_06_01    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='28' THEN NVL(DIV_TOTAL, 0) 
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_01_07_18    
         , SUM(                                                                              
               CASE                                                                          
                  WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_04_07_01    
         , SUM(                                                                              
               CASE                                                                          
                  WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='02' THEN NVL(DIV_TOTAL, 0)  
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_04_07_02    
        , SUM(                                                                              
               CASE                                                                          
                  WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='03' THEN NVL(DIV_TOTAL, 0)  
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_04_07_03    
         , SUM(                                                                              
               CASE                                                                          
                  WHEN SELL_CD='02' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_02_07_01    
 
         , SUM(                                                                              
               CASE                                                                          
                  WHEN COMM_NO NOT IN ('01','02','03','04','08') THEN NVL(DIV_TOTAL, 0)                         
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_JIJUM    
         , SUM(DIV_TOTAL)/100 DIV_TOTAL                                                             
  FROM   TBES_SDL_DT_SUM                                                                         
  WHERE  1=1                                                                                    
    AND STND_YEAR  = ?                                                            
    AND MEET_CD    = ?                                                        
    AND TMS        BETWEEN ?  - 1 AND ? 
    AND DAY_ORD    = ? 
  GROUP BY TMS 
 )
 SELECT  DECODE(TMS, ? , '합계','전회') COL_DESC
        , TMS
        ,'1' AS GUBN
        ,DIV_01_07_02 
        ,DIV_01_07_06 
        ,DIV_01_07_12 
        ,DIV_01_07_10 
        ,DIV_01_07_13 
        ,DIV_01_07_14 
        ,DIV_01_07_03 
        ,DIV_01_07_15 
        ,DIV_01_07_09 
        ,DIV_01_07_05 
        ,DIV_01_07_16 
        ,DIV_01_07_17 
        ,DIV_01_06_01 
        ,DIV_01_07_18 
        ,DIV_04_07_01 
        ,DIV_04_07_02 
        ,DIV_04_07_03 
        ,DIV_02_07_01
        ,DIV_JIJUM
        ,1
 FROM J
 UNION ALL
 SELECT '점유율'
       , TMS
       , '2'
       , ROUND(DIV_01_07_02 / DIV_TOTAL * 100, 2) 
       , ROUND(DIV_01_07_06 / DIV_TOTAL * 100, 2)   
       , ROUND(DIV_01_07_12 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_10 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_13 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_14 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_03 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_15 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_09 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_05 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_16 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_17 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_06_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_18 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_02 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_03 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_02_07_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_JIJUM / DIV_TOTAL * 100, 2)    
       , 100
 FROM J
 WHERE tms = ? 
 UNION ALL
 SELECT '전회차'
       , TMS
       , '2'
       , ROUND(DIV_01_07_02 / DIV_TOTAL * 100, 2) 
       , ROUND(DIV_01_07_06 / DIV_TOTAL * 100, 2)   
       , ROUND(DIV_01_07_12 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_10 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_13 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_14 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_03 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_15 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_09 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_05 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_16 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_17 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_06_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_18 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_02 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_03 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_02_07_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_JIJUM / DIV_TOTAL * 100, 2)    
       , 100
 FROM J
 WHERE TMS = ?  -1
 ORDER BY 3, 2 DESC
 #String#2012#String#003#String#29#String#29#String#1#String#29#String#29#String#29#
>
[I][UbiData][2012-08-30 11:00:07]	- Row size : 4
[I][UbiData][2012-08-30 11:00:07]	- Data
<
합계^t29^t1^t5402020^t6222883^t3576430^t4573228^t3898364^t6160615^t4323650^t3225337^t6963484^t5700383^t2651306^t5578540^t167179^t2245182^t1555437^t2238966^t898040^t1344149^t66725193^t1^t^n전회^t28^t1^t5593567^t5881555^t4252117^t4229713^t4206252^t6927992^t4189400^t3482022^t6984386^t6215851^t3384545^t5245755^t123882^t2444676^t1744493^t2468892^t986258^t1552756^t69914112^t1^t^n점유율^t29^t2^t6.86^t7.9^t4.54^t5.81^t4.95^t7.82^t5.49^t4.1^t8.84^t7.24^t3.37^t7.09^t.21^t2.85^t1.98^t2.84^t1.14^t1.71^t84.75^t100^t^n전회차^t28^t2^t6.9^t7.25^t5.24^t5.21^t5.19^t8.54^t5.17^t4.29^t8.61^t7.66^t4.17^t6.47^t.15^t3.01^t2.15^t3.04^t1.22^t1.91^t86.2^t100^t^n
>
[I][UbiData][2012-08-30 11:00:07][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-08-30 11:00:07][DATA QUERY START]
[I][UbiData][2012-08-30 11:00:07]	- sql id : rsm2020_s11
[I][UbiData][2012-08-30 11:00:07]	- Db charset : KSC5601
[I][UbiData][2012-08-30 11:00:07]	- Sql
<
SELECT 
         '0~'||BB.RACE_NO||'R' AS RACE_DESC,
         DECODE(LEV,1,'인원','점유율') AS MANA_DESC,
         CASE 
             WHEN LEV='2' AND IN_PRSN_NUM > 0 AND TOT_PRSN_NUM > 0 THEN ROUND(IN_PRSN_NUM / TOT_PRSN_NUM *100,2)    
             ELSE IN_PRSN_NUM
        END AS IN_PRSN_NUM, 
        CASE 
             WHEN LEV='2' AND BRNC_PRSN_NUM > 0 AND TOT_PRSN_NUM > 0 THEN ROUND(BRNC_PRSN_NUM / TOT_PRSN_NUM *100,2)    
             ELSE BRNC_PRSN_NUM
        END AS BRNC_PRSN_NUM, 
        CASE 
             WHEN LEV='2' AND TOT_PRSN_NUM > 0 THEN ROUND(TOT_PRSN_NUM / TOT_PRSN_NUM *100,2)    
             ELSE TOT_PRSN_NUM
        END AS TOT_PRSN_NUM, 
        CASE 
             WHEN LEV='1' THEN B_TOT_PRSN_NUM
        END AS B_TOT_PRSN_NUM, 
        CASE 
             WHEN LEV='1' THEN MINUS_PRSN_NUM
        END AS MINUS_PRSN_NUM, 
        CASE 
 
             WHEN LEV='1' AND TOT_PRSN_NUM>0 AND B_TOT_PRSN_NUM >0 THEN ROUND((TOT_PRSN_NUM - B_TOT_PRSN_NUM) / B_TOT_PRSN_NUM*100,2)
        END AS PER_PRSN_NUM 
 FROM
 (
      SELECT DU.LEV,
             SUM(CASE WHEN R.TMS =DU.TMS AND BRNC_CD = '98' THEN E.ENT_PRSN_NUM END) AS IN_PRSN_NUM,    
              SUM(CASE WHEN R.TMS =DU.TMS AND BRNC_CD <> '98' THEN E.ENT_PRSN_NUM END) AS BRNC_PRSN_NUM,    
              SUM(CASE WHEN R.TMS =DU.TMS THEN E.ENT_PRSN_NUM END) AS TOT_PRSN_NUM,    
              SUM(CASE WHEN R.TMS =DU.B_TMS THEN E.ENT_PRSN_NUM END) AS B_TOT_PRSN_NUM,    
              (SUM(CASE WHEN R.TMS =DU.TMS THEN E.ENT_PRSN_NUM END) - SUM(CASE WHEN R.TMS =DU.B_TMS THEN E.ENT_PRSN_NUM END)) AS MINUS_PRSN_NUM    
                      
          FROM                                                   
              TBRC_STAY_MANA E,    
              TBRK_SPEC_CD C,
              VW_SDL_INFO R,       
              (SELECT LEVEL AS LEV, ?  AS TMS,(?  - 1) AS B_TMS FROM DUAL CONNECT BY LEVEL<=2) DU 
          WHERE  1=1                
            AND E.BRNC_CD    = C.CD
            AND E.RACE_DT    = R.RACE_DAY                 
            AND C.GRP_CD        IN ('018','032')    
            AND R.MEET_CD    = '003'   
            AND R.STND_YEAR    = ?         
            AND R.TMS IN (? , ?  - 1)    
            AND R.DAY_ORD ='2'             
          GROUP BY DU.LEV
 )AA,
 (
     SELECT                                                                   
          MAX(RACE_NO)  AS RACE_NO
       FROM   (                                                                 
                   SELECT                                                       
                            TOR.RACE_NO                                         
                          , TOR.RACE_REG_NO                                     
                          , TOR.RACER_NO                                        
                          , TOR.RANK                                            
                          , TRM.NM_KOR                                          
                          , RANK() OVER (PARTITION BY TOR.RACE_NO               
                                                    , TOR.RANK                  
                                             ORDER BY TOR.RACE_REG_NO) SEQ      
                   FROM     TBEB_ORGAN@MRASYSLINK        TOR                        
                          , TBEC_RACER_MASTER@MRASYSLINK TRM                        
                   WHERE 1=1                                                        
                           
                   AND    TOR.RACER_NO   = TRM.RACER_NO                         
                   AND    TOR.STND_YEAR  = ?         
                   AND    TOR.MBR_CD     = '001'                                
                   AND    TOR.TMS        = ?         
                           
                   AND    TOR.RANK BETWEEN 1                                    
                                       AND 3                                    
              )                                                                 
       START WITH SEQ = 1                                                       
       CONNECT BY PRIOR SEQ = SEQ - 1                                           
       AND PRIOR RACE_NO = RACE_NO AND RANK = RANK     
 )BB
 ORDER BY AA.LEV
 #String#29#String#29#String#2012#String#29#String#29#String#2012#String#29#
>
[I][UbiData][2012-08-30 11:00:08]	- Row size : 2
[I][UbiData][2012-08-30 11:00:08]	- Data
<
0~15R^t인원^t0^t0^t0^t32027^t-32027^t^t^n0~15R^t점유율^t0^t0^t0^t^t^t^t^n
>
[I][UbiData][2012-08-30 11:00:08][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-08-30 11:00:08][DATA QUERY START]
[I][UbiData][2012-08-30 11:00:08]	- sql id : rsm2020_s01
[I][UbiData][2012-08-30 11:00:08]	- Db charset : KSC5601
[I][UbiData][2012-08-30 11:00:08]	- Sql
<
SELECT 
           AA.MEET_CD,      
           AA.STND_YEAR,    
           AA.TMS,          
           AA.DAY_ORD,      
           TO_CHAR(TO_DATE(AA.RACE_DAY,'YYYYMMDD'),'YYYY-MM-DD') AS RACE_DAY, 
           AA.RACE_YOIL,    
           TO_CHAR(TO_DATE(AA.RACE_DAY,'YYYYMMDD'),'YYYY')||'년 '||AA.TMS||'회차 '||AA.DAY_ORD||'일차 ('|| TO_CHAR(TO_DATE(AA.RACE_DAY,'YYYYMMDD'),'YYYY-MM-DD')||') 경주 개최 결과'  
           AS RACE_DAY_INFO  
     
       FROM (         
             SELECT                              
             MEET_CD,      
             STND_YEAR,    
             TMS,          
             DAY_ORD,      
             RACE_DAY,     
             RACE_YOIL,    
             DECODE(RACE_YOIL,'MON','월','TUE','화','WED','수','THE','목','FRI','금','SAT','토','SUN','일','일') AS RACE_YOIL_KOR, 
             TO_CHAR(TO_DATE(RACE_DAY,'YYYYMMDD'),'YYYY-MM-DD')||
             ' ('||RACE_YOIL||') '||TMS||'회차 '||DAY_ORD||'일차'  
             AS RACE_INFO  
      FROM                                
             VW_SDL_INFO      
      WHERE  1=1                             
             AND MEET_CD = ?   
            AND STND_YEAR = ?   
            AND TMS= ?     
            AND DAY_ORD = ?        
    )AA
 #String#003#String#2012#String#29#String#1#
>
[I][UbiData][2012-08-30 11:00:08]	- Row size : 1
[I][UbiData][2012-08-30 11:00:08]	- Data
<
003^t2012^t29^t1^t2012-08-29^tWED^t2012년 29회차 1일차 (2012-08-29) 경주 개최 결과^t^n
>
[I][UbiData][2012-08-30 11:00:08][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-08-30 11:00:08][DATA QUERY START]
[I][UbiData][2012-08-30 11:00:08]	- sql id : rsm2020_s05Today
[I][UbiData][2012-08-30 11:00:08]	- Db charset : KSC5601
[I][UbiData][2012-08-30 11:00:08]	- Sql
<
SELECT                                                                                      
       DECODE(GROUPING(RACE_NO),0,RACE_NO,'TOTAL') RACE_NO 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='12' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_02 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='16' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_06 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='22'  THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_12 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='20' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_10 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='23' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_13 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='24' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_14 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='13' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_03 
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='25'  THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_15 
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='19' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_09 
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='14' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_05 
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='26' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_16 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='27' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_17 
     , SUM(                                                                              
           CASE                                                                          
              WHEN COMM_NO='06'  THEN NVL(DIV_TOTAL, 0)                                  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_01_06_01 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='28' THEN NVL(DIV_TOTAL, 0) 
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_01_07_18 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_04_07_01 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='02' THEN NVL(DIV_TOTAL, 0)  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_04_07_02 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='03' THEN NVL(DIV_TOTAL, 0)  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_04_07_03    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='02' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_02_07_01 
     , SUM(                                                                              
           CASE                                                                          
              WHEN  COMM_NO NOT IN ('01','02','03','04','08') THEN NVL(DIV_TOTAL, 0)                         
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_JIJUM  
 
     , SUM(DIV_TOTAL)/100 DIV_TOTAL                                                          
 FROM   TBES_SDL_DT                                                                         
 WHERE   1=1                                                                                   
      AND STND_YEAR  = ?                                                             
      AND    MEET_CD    = ?                                                        
      AND    TMS        = ?                                                            
      AND    DAY_ORD    = ?                                                        
 
 GROUP BY RACE_NO                                                                                   
       
 ORDER BY RACE_NO
 #String#2012#String#003#String#29#String#1#
>
[I][UbiData][2012-08-30 11:00:08]	- Row size : 15
[I][UbiData][2012-08-30 11:00:08]	- Data
<
01^t157457^t154251^t92407^t135532^t116884^t179524^t126950^t102608^t237886^t151227^t69009^t141629^t7889^t66129^t42244^t72758^t21131^t33590^t1909105^t2239202^t^n02^t197024^t203622^t123151^t167095^t146215^t226207^t163432^t108770^t280243^t196519^t94537^t191825^t9121^t75878^t55317^t89442^t29288^t44693^t2402379^t2799129^t^n03^t228164^t243275^t179095^t199871^t174547^t281643^t204891^t127879^t338730^t231818^t119783^t229756^t9243^t94355^t64278^t103716^t31545^t64726^t2927315^t3457905^t^n04^t234510^t286791^t196992^t211472^t199531^t322970^t219410^t161647^t376298^t263829^t144390^t253471^t9717^t116453^t81269^t114540^t38117^t69459^t3300866^t3926018^t^n05^t284047^t323791^t189165^t238819^t225500^t345718^t232615^t157723^t408890^t308026^t143535^t303592^t9017^t128807^t88979^t117484^t46921^t68997^t3621626^t4276167^t^n06^t303898^t345680^t214458^t258743^t258203^t381735^t258144^t182908^t472290^t343062^t162319^t305900^t10458^t153905^t90858^t131273^t49471^t77250^t4000555^t4716380^t^n07^t347885^t369370^t225410^t284880^t248797^t391118^t277122^t183703^t436586^t357303^t173557^t339960^t11329^t150956^t102014^t149419^t59108^t89727^t4198244^t4966692^t^n08^t363452^t425713^t255287^t322670^t254699^t424489^t286399^t207592^t462340^t374325^t181282^t352865^t12265^t145258^t103653^t154998^t57500^t96854^t4481641^t5292232^t^n09^t387736^t451600^t241810^t332923^t272890^t420522^t300591^t217895^t480627^t396934^t185154^t409352^t13415^t149392^t123159^t161753^t68007^t93699^t4707459^t5552849^t^n10^t433335^t523331^t287931^t364576^t301027^t487631^t359445^t245413^t525866^t467323^t228586^t460605^t15191^t188965^t122383^t179390^t81323^t113308^t5385629^t6382450^t^n11^t447644^t531583^t291554^t387523^t331138^t511057^t348523^t287779^t549819^t459742^t219482^t462271^t13007^t191024^t115611^t181773^t81406^t120060^t5530996^t6515094^t^n12^t486290^t545022^t298415^t408670^t334707^t512031^t376156^t295357^t586437^t487420^t230976^t511447^t13932^t188176^t127775^t183973^t82855^t117922^t5787561^t6825855^t^n13^t494079^t567798^t323923^t390584^t309772^t519893^t375418^t302308^t555934^t517090^t228147^t519957^t11762^t189980^t134614^t191844^t79965^t107477^t5820545^t6908088^t^n14^t515561^t590287^t323100^t426767^t353845^t554232^t398877^t311900^t604674^t564241^t229324^t533443^t12860^t196169^t143230^t189915^t85645^t119586^t6153656^t7281407^t^n15^t520938^t660769^t333732^t443103^t370609^t601845^t395677^t331855^t646864^t581524^t241225^t562467^t7973^t209735^t160053^t216688^t85758^t126801^t6497616^t7592134^t^n
>
[I][UbiData][2012-08-30 11:00:08][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-08-30 11:00:08][DATA QUERY START]
[I][UbiData][2012-08-30 11:00:08]	- sql id : rsm2020_s03Today
[I][UbiData][2012-08-30 11:00:08]	- Db charset : KSC5601
[I][UbiData][2012-08-30 11:00:08]	- Sql
<
SELECT                                                                                    
      Z.RACE_NO, 
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          FC_GET_RSLT_RANK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO)                
      END RSLT_RANK, 
      R.RANK_1,  
      R.RANK_2,  
      R.RANK_3,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '001', NULL) 
      END WIN,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '002', '1')  
      END PLC,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '002', '2')  
      END PLC2,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '004', NULL) 
      END EX,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '005', NULL) 
      END QU,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '006', NULL) 
      END TRI,  
      D.BONJANG_TOTAL/1000 AS BONJANG_TOTAL, 
      D.JIJUM_TOTAL/1000 AS JIJUM_TOTAL,  
      D.DIV_TOTAL/1000 AS DIV_TOTAL,  
      NVL(D.REFUND,0)/1000 AS REFUND, 
      NVL(B.B_DIV_TOTAL,0)/1000 AS B_DIV_TOTAL,    
      NVL2(D.DIV_TOTAL, NVL((C.DIV_TOTAL-B.B_DIV_TOTAL),0),0)/1000 AS PLUS_MINUS, 
      CASE                                                                                  
          WHEN B.B_DIV_TOTAL<>0 THEN                                                        
          ROUND((C.DIV_TOTAL-B.B_DIV_TOTAL)/B.B_DIV_TOTAL*100,2)                            
          ELSE 0                                                                            
      END RATE,   
      SAME_PAYOFF_TOTAL,  
      SAME_PAYOFF_001, 
   SAME_PAYOFF_002, 
   SAME_PAYOFF_004, 
   SAME_PAYOFF_005, 
   SAME_PAYOFF_006 
  FROM   
   
      (   
                                                                 
          SELECT                                                                            
                D.MEET_CD,                                                                   
                D.STND_YEAR,                                                                 
                D.TMS,                                                                       
                D.DAY_ORD,                                                                   
                DECODE(D.RACE_NO,NULL,'TOTAL',D.RACE_NO) RACE_NO,                              
                SUM(                                                                        
                    CASE                                                                    
                      WHEN D.SELL_CD='03' THEN D.DIV_TOTAL                                    
                      ELSE 0                                                                
                    END                                                                     
                ) BONJANG_TOTAL,                                                            
                SUM(                                                                        
                    CASE                                                                    
                      WHEN D.SELL_CD !='03' THEN D.DIV_TOTAL                                     
                    END                                                                     
                ) JIJUM_TOTAL,                                                              
                SUM(D.REFUND) REFUND,
                SUM(D.DIV_TOTAL) AS DIV_TOTAL                                                         
          FROM   TBES_SDL_DT D                                                              
          WHERE 1=1                                                                             
              AND D.STND_YEAR(+)  = ? 
              AND D.MEET_CD(+)    = ? 
              AND D.TMS(+)        = ? 
              AND D.DAY_ORD(+)    = ? 
          GROUP BY                                                                          
                D.MEET_CD,                                                                   
                D.STND_YEAR,                                                                 
                D.TMS,                                                                       
                D.DAY_ORD,                                                                   
                ROLLUP(D.RACE_NO)                                                           
      ) D,                                                                                  
      (                                                                                     
         SELECT                                                                             
            P.MEET_CD,                                                                      
            P.STND_YEAR,                                                                    
            P.TMS,                                                                          
            P.DAY_ORD,                                                                      
            DECODE(P.RACE_NO,NULL,'TOTAL',P.RACE_NO) RACE_NO,                               
            SUM(POOL_TOTAL) DIV_TOTAL                                                       
         FROM                                                                               
             TBES_SDL_PT P                                                                  
         WHERE 1=1                                                                              
             AND P.STND_YEAR  = ? 
             AND P.MEET_CD    = ? 
             AND P.TMS        = ? 
             AND P.DAY_ORD    = ? 
         GROUP BY                                                                           
            P.MEET_CD,                                                                      
            P.STND_YEAR,                                                                    
            P.TMS,                                                                          
            P.DAY_ORD,                                                                      
            ROLLUP(P.RACE_NO)                                                               
      ) C,                                                                                  
      (                                                                                     
          SELECT                                                                            
                DECODE(RACE_NO,NULL,'TOTAL',RACE_NO) RACE_NO,                               
                SUM(DIV_TOTAL) B_DIV_TOTAL                                                  
          FROM   TBES_SDL_DT                                                                
          WHERE 1=1                                                                            
              AND  STND_YEAR  = ? 
              AND    MEET_CD    = ? 
              AND    TMS        = ?  -1                                                    
              AND    DAY_ORD    = ? 
          GROUP BY                                                                          
                ROLLUP(RACE_NO)                                                             
      ) B,                                                                                  
      (                                                                                     
          SELECT                                                                            
                RACE_NO                                                                     
              , MIN(DECODE(RANK, '1', NM_KOR)) RANK_1                                       
              , MIN(DECODE(RANK, '2', NM_KOR)) RANK_2                                       
              , MIN(DECODE(RANK, '3', NM_KOR)) RANK_3                                       
          FROM   (                                                                          
                   SELECT                                                                   
                            RACE_NO                                                         
                          , RANK                                                            
                          , SUBSTR(MAX(SYS_CONNECT_BY_PATH (NM_KOR, '/')), 2) NM_KOR        
                   FROM   (                                                                 
                               SELECT                                                       
                                        TOR.RACE_NO                                         
                                      , TOR.RACE_REG_NO                                     
                                      , TOR.RACER_NO                                        
                                      , TOR.RANK                                            
                                      , TRM.NM_KOR                                          
                                      , RANK() OVER (PARTITION BY TOR.RACE_NO               
                                                                , TOR.RANK                  
                                                         ORDER BY TOR.RACE_REG_NO) SEQ      
                               FROM     TBEB_ORGAN@MRASYSLINK        TOR                        
                                      , TBEC_RACER_MASTER@MRASYSLINK TRM                        
                               WHERE 1=1                
                               AND    TOR.RACER_NO   = TRM.RACER_NO                         
                               AND    TOR.STND_YEAR  = ? 
                               AND    TOR.MBR_CD     = '001'                                
                               AND    TOR.TMS        = ? 
                               AND    TOR.DAY_ORD    = ? 
                               AND    TOR.RANK BETWEEN 1                                    
                                                   AND 3                                    
                          )                                                                 
                   START WITH SEQ = 1                                                       
                   CONNECT BY PRIOR SEQ = SEQ - 1                                           
                   AND PRIOR RACE_NO = RACE_NO AND RANK = RANK                              
                   GROUP BY                                                                 
                            RACE_NO                                                         
                          , RANK                                                            
               )                                                                            
          GROUP BY RACE_NO                                                                  
          UNION ALL                                                                         
          SELECT 'TOTAL', '', '', '' FROM DUAL                                              
      ) R, 
      (   
     
       SELECT                                                                         
          RACE_NO,
            SUM(CASE 
                     WHEN POOL_CD = '001' AND RS_SEQ >= '2' THEN PAYOFF 
                     WHEN POOL_CD = '002' AND RS_SEQ >= '3' THEN PAYOFF 
                     WHEN POOL_CD = '004' AND RS_SEQ >= '2' THEN PAYOFF 
                     WHEN POOL_CD = '005' AND RS_SEQ >= '2' THEN PAYOFF 
                     WHEN POOL_CD = '006' AND RS_SEQ >= '2' THEN PAYOFF 
            END) AS SAME_PAYOFF_TOTAL, 
                               
            SUM(CASE WHEN POOL_CD = '001' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_001, 
            SUM(CASE WHEN POOL_CD = '002' AND RS_SEQ >= '3' THEN PAYOFF END) AS SAME_PAYOFF_002, 
            SUM(CASE WHEN POOL_CD = '004' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_004, 
            SUM(CASE WHEN POOL_CD = '005' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_005, 
            SUM(CASE WHEN POOL_CD = '006' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_006 
      FROM TBES_SDL_RS                                                                
      WHERE 1=1                                                                          
          AND MEET_CD  = '003'                                                              
          AND STND_YEAR = ?      
          AND TMS   = ?      
          AND DAY_ORD  = ?      
      GROUP BY          
       RACE_NO                                                              
 
   ) E,                                                                                  
  (                                       
    SELECT DISTINCT RACE_NO           
    FROM TBEB_RACE_DOC@MRASYSLINK D        
      WHERE 1=1                          
          AND D.STND_YEAR= ? 
          AND D.TMS=? 
           AND D.DAY_ORD=? 
 
   ) Z                                   
  WHERE 1=1                                                                                    
      AND C.RACE_NO(+)=Z.RACE_NO                                                                
      AND B.RACE_NO(+)=Z.RACE_NO                                                            
      AND R.RACE_NO(+)=Z.RACE_NO                                                            
      AND D.RACE_NO(+)=Z.RACE_NO
      AND E.RACE_NO(+)=Z.RACE_NO                                                            
  ORDER BY Z.RACE_NO
 #String#2012#String#003#String#29#String#1#String#2012#String#003#String#29#String#1#String#2012#String#003#String#29#String#1#String#2012#String#29#String#1#String#2012#String#29#String#1#String#2012#String#29#String#1#
>
[I][UbiData][2012-08-30 11:00:08]	- Row size : 15
[I][UbiData][2012-08-30 11:00:08]	- Data
<
01^t1-5-2^t김현철^t김종희^t송종해^t1.9^t1.6^t8^t12.5^t8.9^t9.6^t33009.7^t190910.5^t223920.2^t0^t217587^t6333.2^t2.91^t^t^t^t^t^t^t^n02^t2-6-4^t배혜민^t김희용^t민영건^t2.4^t2.1^t3^t14.8^t9.5^t7.1^t39675^t240237.9^t279912.9^t0^t288870.5^t-8957.6^t-3.1^t^t^t^t^t^t^t^n03^t4-5-3^t김강현^t손근성^t길현태^t11.2^t5.5^t7.8^t79.9^t71.4^t21.8^t53059^t292731.5^t345790.5^t0^t331700.5^t14090^t4.25^t^t^t^t^t^t^t^n04^t1-6-4^t한  진^t이태희^t이미나^t1.5^t1^t6.9^t15^t11.6^t9.5^t62515.2^t330086.6^t392601.8^t0^t401165.1^t-8563.3^t-2.13^t^t^t^t^t^t^t^n05^t1-2-3^t우진수^t원용관^t강지환^t6.3^t2.7^t1.7^t16.8^t7.1^t8.3^t65454.1^t362162.6^t427616.7^t0^t267456^t160160.7^t59.88^t^t^t^t^t^t^t^n06^t2-6-3^t박준호^t강창효^t신동열^t47.6^t14.7^t2.2^t419.1^t104.1^t49.4^t71582.5^t400055.5^t471638^t0^t473793.8^t-2155.8^t-.46^t^t^t^t^t^t^t^n07^t3-1-5^t정종훈^t김종희^t권명호^t3^t1.1^t1.4^t6.7^t2.4^t3.3^t76844.8^t419824.4^t496669.2^t0^t231828.8^t264840.4^t114.24^t^t^t^t^t^t^t^n08^t2-1-5^t이재학^t이종한^t문주엽^t1.3^t1.1^t5.8^t12.4^t9.8^t14.7^t81059.1^t448164.1^t529223.2^t0^t622902.9^t-93679.7^t-15.04^t^t^t^t^t^t^t^n09^t4-2-6^t어선규^t김희용^t서  휘^t1.9^t1.3^t1.5^t4.3^t2.3^t8.7^t84539^t470745.9^t555284.9^t0^t672517.3^t-117232.4^t-17.43^t^t^t^t^t^t^t^n10^t2-5-3^t김기한^t김국흠^t신승지^t5.7^t2.9^t3.1^t24.5^t14.1^t43.2^t99682.1^t538562.9^t638245^t0^t728939.2^t-90694.2^t-12.44^t^t^t^t^t^t^t^n11^t2-6-1^t김정구^t김현철^t전두식^t2.4^t1.6^t2.3^t9.6^t6.6^t17.2^t98409.8^t553099.6^t651509.4^t0^t738205.8^t-86696.4^t-11.74^t^t^t^t^t^t^t^n12^t2-6-1^t박상현^t우진수^t권현기^t2.1^t1.1^t4.6^t17.1^t13.2^t21^t103829.4^t578756.1^t682585.5^t0^t766810.9^t-84225.4^t-10.98^t^t^t^t^t^t^t^n13^t4-6-2^t이승일^t황이태^t김효년^t1.5^t1.1^t2.7^t4^t3.5^t4.1^t108754.3^t582054.5^t690808.8^t0^t749433.6^t-58624.8^t-7.82^t^t^t^t^t^t^t^n14^t5-3-1^t한  진^t김민천^t구현구^t3.6^t1.4^t1.4^t6.3^t2.4^t1.9^t112775.1^t615365.6^t728140.7^t0^t773742.7^t-45602^t-5.89^t^t^t^t^t^t^t^n15^t3-4-5^t권명호^t이재학^t임인섭^t5.7^t2.5^t1^t9.7^t3.1^t9.1^t109451.8^t649761.6^t759213.4^t0^t845780.4^t-86567^t-10.24^t^t^t^t^t^t^t^n
>
[I][UbiData][2012-08-30 11:00:08][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-08-30 11:00:08][DATA QUERY START]
[I][UbiData][2012-08-30 11:00:08]	- sql id : rsm2020_s02Today
[I][UbiData][2012-08-30 11:00:08]	- Db charset : KSC5601
[I][UbiData][2012-08-30 11:00:08]	- Sql
<
SELECT                                                                                          
           MST.GBN       
         , YEAR.DIV_TOTAL AS YEAR_TOTAL 
         , YEAR.REFUND    AS YEAR_REFUND 
         , TMS.D_1 
         , TMS.D_2   
         , TMS.D_3   
         , TMS.D_4   
         , TMS.D_5   
         , TMS.D_6   
         , TMS.D_7   
         , TMS.TOTAL 
         , PRE.TOTAL AS PRE_TOTAL 
         , NVL(TMS.TOTAL, 0) - NVL(PRE .TOTAL, 0) ADD_POOL 
         , CASE WHEN (NVL(PRE.TOTAL, 0) = 0) AND (NVL(TMS.TOTAL, 0) = 0) THEN 0                  
                WHEN NVL(PRE.TOTAL, 0) = 0                               THEN 100                
                WHEN NVL(TMS.TOTAL, 0) = 0                                THEN -100              
                ELSE ROUND((NVL(TMS.TOTAL, 0) - NVL(PRE.TOTAL, 0)) / NVL(PRE.TOTAL, 0) * 100, 2) 
           END ADD_RATE 
  FROM                                                                                           
           (                                                                                     
              SELECT                                                                             
                       ?  STND_YEAR                                                      
                     , '매출총액' GBN                                                            
              FROM   DUAL                                                                        
           ) MST                                                                                 
         , (                                                                                     
              SELECT                                                                             
                       TMS.STND_YEAR                                                             
                     , MIN(DECODE(TMS.D, 1, TMS.AMOUNT)) D_1                                     
                     , MIN(DECODE(TMS.D, 2, TMS.AMOUNT)) D_2                                     
                     , MIN(DECODE(TMS.D, 3, TMS.AMOUNT)) D_3                                     
                     , MIN(DECODE(TMS.D, 4, TMS.AMOUNT)) D_4                                     
                     , MIN(DECODE(TMS.D, 5, TMS.AMOUNT)) D_5                                     
                     , MIN(DECODE(TMS.D, 6, TMS.AMOUNT)) D_6                                     
                     , MIN(DECODE(TMS.D, 7, TMS.AMOUNT)) D_7                                     
                     , SUM(TMS.AMOUNT)                   TOTAL                                   
              FROM   (                                                                           
                          SELECT                                                                 
                                   TSP.STND_YEAR                                                 
                                 , TO_CHAR(TO_DATE(INFO.RACE_DAY, 'YYYYMMDD'), 'D') D            
                                 , SUM(TSP.POOL_TOTAL) AMOUNT                                    
                          FROM     VW_SDL_INFO INFO                                              
                                 , TBES_SDL_PT       TSP                                         
                          WHERE  1=1
                          AND    INFO.STND_YEAR = TSP.STND_YEAR                                  
                          AND    INFO.MEET_CD    = TSP.MEET_CD                                   
                          AND    INFO.TMS       = TSP.TMS                                        
                          AND    INFO.DAY_ORD   = TSP.DAY_ORD                                    
                          AND    TSP.STND_YEAR  = ?   
                          AND    TSP.MEET_CD    = ?       
                          AND    TSP.TMS        = ?       
                          GROUP BY                                                               
                                   TSP.STND_YEAR                                                 
                                 , INFO.RACE_DAY                                                 
                     ) TMS                                                                       
              GROUP BY TMS.STND_YEAR                                                             
           ) TMS                                                                                 
         , (                                                                                     
              SELECT                                                                             
                       STND_YEAR                                                                 
                     , SUM(TSP.DIV_TOTAL) DIV_TOTAL                                              
                     , SUM(TSP.REFUND    ) REFUND                                                
              FROM   TBES_SDL_DT_SUM       TSP                                                       
              WHERE  TSP.STND_YEAR  = ?                                                  
              AND    TSP.MEET_CD    = ?                                                    
              AND    TSP.TMS       <= ?                                                        
              GROUP BY                                                                           
                       STND_YEAR                                                                 
           ) YEAR                                                                                
         , (                                                                                     
              SELECT                                                                             
                       STND_YEAR                                                                 
                     , TMS                                                                       
                     , NVL(SUM(TSP.POOL_TOTAL), 0)  TOTAL                                        
              FROM   TBES_SDL_PT       TSP                                                       
              WHERE  1=1
              AND TSP.STND_YEAR  = ? 
              AND    TSP.MEET_CD    = ?                                                    
              AND    TSP.TMS        = ?  - 1                                                   
              GROUP BY                                                                           
                       STND_YEAR                                                                 
                     , TMS                                                                       
           ) PRE                                                                                 
  WHERE  1=1
  AND   MST.STND_YEAR = TMS .STND_YEAR(+)                                                       
  AND    MST.STND_YEAR = YEAR.STND_YEAR(+)                                                       
  AND    MST.STND_YEAR = PRE .STND_YEAR(+)                                                       
  UNION ALL                                                                                      
  SELECT                                                                                         
           MST.GBN                                                                               
         , YEAR.DIV_TOTAL                   YEAR_TOTAL                                           
         , YEAR.REFUND                      YEAR_REFUND                                          
         , TMS.D_1                                                                               
         , TMS.D_2                                                                               
         , TMS.D_3                                                                               
         , TMS.D_4                                                                               
         , TMS.D_5                                                                               
         , TMS.D_6                                                                               
         , TMS.D_7                                                                               
         , TMS.TOTAL                                                                             
         , 0 PRE_TOTAL                                                                           
         , NVL(PRE .TOTAL, 0) - NVL(TMS.TOTAL, 0) ADD_POOL                                       
         , CASE WHEN (NVL(PRE.TOTAL, 0) = 0) AND (NVL(TMS.TOTAL, 0) = 0) THEN 0                  
                WHEN NVL(PRE.TOTAL, 0) = 0                               THEN -100               
                WHEN NVL(TMS.TOTAL, 0) = 0                                THEN 100               
                ELSE ROUND((NVL(PRE.TOTAL, 0) - NVL(TMS.TOTAL, 0)) / NVL(TMS.TOTAL, 0) * 100, 2) 
           END ADD_RATE                                                                          
  FROM                                                                                           
           (                                                                                     
              SELECT                                                                             
                       ?  -1 STND_YEAR                                                    
                     , '전년대비' GBN                                                            
              FROM   DUAL                                                                        
           ) MST                                                                                 
         , (                                                                                     
              SELECT                                                                             
                       TMS.STND_YEAR                                                             
                     , MIN(DECODE(TMS.D, 1, TMS.AMOUNT)) D_1                                     
                     , MIN(DECODE(TMS.D, 2, TMS.AMOUNT)) D_2                                     
                     , MIN(DECODE(TMS.D, 3, TMS.AMOUNT)) D_3                                     
                     , MIN(DECODE(TMS.D, 4, TMS.AMOUNT)) D_4                                     
                     , MIN(DECODE(TMS.D, 5, TMS.AMOUNT)) D_5                                     
                     , MIN(DECODE(TMS.D, 6, TMS.AMOUNT)) D_6                                     
                     , MIN(DECODE(TMS.D, 7, TMS.AMOUNT)) D_7                                     
                     , SUM(TMS.AMOUNT)                   TOTAL                                   
              FROM   (                                                                           
                          SELECT                                                                 
                                   TSP.STND_YEAR                                                 
                                 , TO_CHAR(TO_DATE(INFO.RACE_DAY, 'YYYYMMDD'), 'D') D            
                                 , SUM(TSP.POOL_TOTAL) AMOUNT                                    
                          FROM     VW_SDL_INFO INFO                                              
                                 , TBES_SDL_PT       TSP                                         
                          WHERE  1=1
                          AND  INFO.STND_YEAR = TSP.STND_YEAR                                  
                          AND    INFO.MEET_CD    = TSP.MEET_CD                                   
                          AND    INFO.TMS       = TSP.TMS                                        
                          AND    INFO.DAY_ORD   = TSP.DAY_ORD                                    
                          AND    TSP.STND_YEAR  =  ?  -1                                   
                          AND    TSP.MEET_CD    = ?                                        
                          AND    TSP.TMS        = ?                                            
                          GROUP BY                                                               
                                   TSP.STND_YEAR                                                 
                                 , INFO.RACE_DAY                                                 
                     ) TMS                                                                       
              GROUP BY TMS.STND_YEAR                                                             
           ) TMS                                                                                 
         , (                                                                                     
              SELECT                                                                             
                       STND_YEAR                                                                 
                     , SUM(TSP.DIV_TOTAL) DIV_TOTAL                                              
                     , SUM(TSP.REFUND    ) REFUND                                                
              FROM   TBES_SDL_DT_SUM       TSP                                                       
              WHERE  1=1
              AND TSP.STND_YEAR  = ?  -1                                               
              AND    TSP.MEET_CD    = ?                                                    
              AND    TSP.TMS       <= ?                                                        
              GROUP BY                                                                           
                       STND_YEAR                                                                 
           ) YEAR                                                                                
         , (                                                                                     
              SELECT                                                                             
                       STND_YEAR-1 STND_YEAR                                                     
                     , TMS                                                                       
                     , NVL(SUM(TSP.POOL_TOTAL), 0)  TOTAL                                        
              FROM   TBES_SDL_PT       TSP                                                       
              WHERE  1=1
              AND TSP.STND_YEAR  = ?                                                  
              AND    TSP.MEET_CD    = ?                                                    
              AND    TSP.TMS        = ?                                                        
              GROUP BY                                                                           
                       STND_YEAR                                                                 
                     , TMS                                                                       
           ) PRE                                                                                 
  WHERE  1=1
  AND MST.STND_YEAR = TMS.STND_YEAR(+)                                                        
  AND    MST.STND_YEAR = YEAR.STND_YEAR(+)                                                       
  AND    MST.STND_YEAR = PRE.STND_YEAR(+)
 #String#2012#String#2012#String#003#String#29#String#2012#String#003#String#29#String#2012#String#003#String#29#String#2012#String#2012#String#003#String#29#String#2012#String#003#String#29#String#2012#String#003#String#29#
>
[I][UbiData][2012-08-30 11:00:09]	- Row size : 2
[I][UbiData][2012-08-30 11:00:09]	- Data
<
매출총액^t447847776200^t7611877600^t^t^t^t7873160200^t104300^t^t^t7873264500^t16207566900^t-8334302400^t-51.42^t^n전년대비^t492220572100^t10739036800^t^t^t^t12047278100^t9790405600^t^t^t21837683700^t0^t-13964419200^t-63.95^t^n
>
[I][UbiData][2012-08-30 11:00:09][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-08-30 11:00:09][DATA QUERY START]
[I][UbiData][2012-08-30 11:00:09]	- sql id : rsm2020_s04
[I][UbiData][2012-08-30 11:00:09]	- Db charset : KSC5601
[I][UbiData][2012-08-30 11:00:09]	- Sql
<
SELECT 
   ROW_ORDER,
   MANA_DESC, 
   TOTAL        
        ,SUN_NUM     
        ,TUE_NUM     
        ,WEN_NUM     
        ,THU_NUM     
        ,TOT_PRSN_NUM,    
        
        B_TOT_PRSN_NUM,          
        
        CASE 
              WHEN ROW_ORDER='2' THEN N_TOT_PRSN_NUM - TOT_PRSN_NUM
              ELSE PRSN_NUM_MINUS
        END PRSN_NUM_MINUS,          
        
        ROUND(CASE 
              WHEN ROW_ORDER='2' THEN (N_TOT_PRSN_NUM - TOT_PRSN_NUM)/TOT_PRSN_NUM*100
              ELSE PER
        END,2) AS PER             
  FROM
 (
  
  SELECT '1' AS ROW_ORDER,
    '입장인원' AS MANA_DESC,
     A.TMS                                                               
        ,TOT_PRSN_NUM                     
        ,MON_NUM 
              ,TUE_NUM 
              ,WEN_NUM 
              ,THU_NUM 
              ,FRI_NUM 
              ,SAT_NUM 
              ,SUN_NUM 
              ,B_TOT_PRSN_NUM
              ,(TOT_PRSN_NUM-B_TOT_PRSN_NUM) AS PRSN_NUM_MINUS
              ,DECODE(B_TOT_PRSN_NUM,0,0,(TOT_PRSN_NUM-B_TOT_PRSN_NUM)/B_TOT_PRSN_NUM*100)  AS PER
              ,TOTAL          
  
    FROM
    
    
    (
    
     SELECT   MAX(TMS) TMS
           ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
           ,NVL(SUM(A.ENT_PRSN_NUM ),0)         TOT_PRSN_NUM                                                      
           
          
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'2', A.ENT_PRSN_NUM,0 )) ,0) MON_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'3', A.ENT_PRSN_NUM,0 )) ,0) TUE_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'4', A.ENT_PRSN_NUM,0 )) ,0) WEN_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'5', A.ENT_PRSN_NUM,0 )) ,0) THU_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'6', A.ENT_PRSN_NUM,0 )) ,0) FRI_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'7', A.ENT_PRSN_NUM,0 )) ,0) SAT_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'1', A.ENT_PRSN_NUM,0 )) ,0) SUN_NUM       
    
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) =  ?  
                AND MEET_CD = ?   
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE 1=1
             AND STND_YEAR = ?  
                AND MEET_CD = ? 
                AND TMS  = ?  
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    GROUP BY B.TMS
    ) A,
    
    
    (
    
     SELECT   
            MAX(TMS) TMS
           ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
           ,NVL(SUM(A.ENT_PRSN_NUM ),0)         B_TOT_PRSN_NUM  
           
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) =  ?  
                AND MEET_CD = ?    
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE 1=1
             AND STND_YEAR = ?    
                AND MEET_CD = ? 
                AND TMS  = ?  - 1   
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    GROUP BY B.TMS
    ) B,
    
    (
    
     SELECT NVL(SUM(A.ENT_PRSN_NUM ),0)         TOTAL  
           
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) = ?  
                AND MEET_CD = ?   
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE STND_YEAR = ?  
                AND MEET_CD = ? 
                AND TMS <= ?  
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    )C
  UNION ALL 
  
  
  SELECT '2' AS ROW_ORDER,
    '전년대비' AS MANA_DESC,
     A.TMS                                                               
        ,TOT_PRSN_NUM                     
        ,MON_NUM 
              ,TUE_NUM 
              ,WEN_NUM 
              ,THU_NUM 
              ,FRI_NUM 
              ,SAT_NUM 
              ,SUN_NUM 
              ,B_TOT_PRSN_NUM
              ,(TOT_PRSN_NUM-B_TOT_PRSN_NUM) AS PRSN_NUM_MINUS
              ,DECODE(B_TOT_PRSN_NUM,0,0,(TOT_PRSN_NUM-B_TOT_PRSN_NUM)/B_TOT_PRSN_NUM*100)  AS PER
              ,TOT          
  
    FROM
    
    
    (
    
     SELECT   MAX(TMS) TMS
           ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
           ,NVL(SUM(A.ENT_PRSN_NUM ),0)         TOT_PRSN_NUM                                                      
           
          
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'2', A.ENT_PRSN_NUM,0 )) ,0) MON_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'3', A.ENT_PRSN_NUM,0 )) ,0) TUE_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'4', A.ENT_PRSN_NUM,0 )) ,0) WEN_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'5', A.ENT_PRSN_NUM,0 )) ,0) THU_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'6', A.ENT_PRSN_NUM,0 )) ,0) FRI_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'7', A.ENT_PRSN_NUM,0 )) ,0) SAT_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'1', A.ENT_PRSN_NUM,0 )) ,0) SUN_NUM       
    
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) = ?  - 1  
                AND MEET_CD    = ?   
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE STND_YEAR = ?  - 1  
                AND MEET_CD =?  
                AND TMS  = ?    
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    GROUP BY B.TMS
    ) A,
    
    
    (
    
     SELECT   
            MAX(TMS) TMS
           ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
           ,NVL(SUM(A.ENT_PRSN_NUM ),0)         B_TOT_PRSN_NUM  
           
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) = ?  -1 
                AND MEET_CD = ?     
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE STND_YEAR = ?  - 1  
                AND MEET_CD = ? 
                AND TMS  = ?  - 1  
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    GROUP BY B.TMS
    ) B,
    
    (
    
     SELECT NVL(SUM(A.ENT_PRSN_NUM ),0)         TOT  
           
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) =  ?  -1 
                AND MEET_CD = '003'
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE STND_YEAR = ?  -1  
                AND MEET_CD = ? 
                AND TMS  <= ?   
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    )C
  ),
  (
  SELECT SUM(A.ENT_PRSN_NUM ) AS N_TOT_PRSN_NUM
      FROM 
          TBRC_STAY_MANA  A,       
          VW_SDL_INFO B
      WHERE 1 =1
        AND A.RACE_DT(+) = B.RACE_DAY
        AND B.STND_YEAR =  ?  
        AND B.MEET_CD = ?    
        AND B.TMS  = ?       
  )BB  
 ORDER BY MANA_DESC
 #String#2012#String#003#String#2012#String#003#String#29#String#2012#String#003#String#2012#String#003#String#29#String#2012#String#003#String#2012#String#003#String#29#String#2012#String#003#String#2012#String#003#String#29#String#2012#String#003#String#2012#String#003#String#29#String#2012#String#2012#String#003#String#29#String#2012#String#003#String#29#
>
[I][UbiData][2012-08-30 11:00:09]	- Row size : 2
[I][UbiData][2012-08-30 11:00:09]	- Data
<
1^t입장인원^t1800735^t0^t0^t32777^t0^t32777^t68262^t-35485^t-51.98^t^n2^t전년대비^t2277692^t0^t0^t46661^t41127^t87788^t78873^t-55011^t-62.66^t^n
>
[I][UbiData][2012-08-30 11:00:09][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-08-30 11:00:09][DATA QUERY START]
[I][UbiData][2012-08-30 11:00:09]	- sql id : rsm2020_s07
[I][UbiData][2012-08-30 11:00:09]	- Db charset : KSC5601
[I][UbiData][2012-08-30 11:00:09]	- Sql
<
SELECT  
   '0~'||BB.RACE_NO||'R' AS RACE_DESC,
   DECODE(LEV,1,'인원','점유율') AS MANA_DESC,
      DECODE(LEV,1,INWON_12,DECODE(INWON_TOTAL,0,0,ROUND(INWON_12/INWON_TOTAL*100,2))) AS INWON_12, 
      DECODE(LEV,1,INWON_13,DECODE(INWON_TOTAL,0,0,ROUND(INWON_13/INWON_TOTAL*100,2))) AS INWON_13, 
      DECODE(LEV,1,INWON_14,DECODE(INWON_TOTAL,0,0,ROUND(INWON_14/INWON_TOTAL*100,2))) AS INWON_14, 
      DECODE(LEV,1,INWON_16,DECODE(INWON_TOTAL,0,0,ROUND(INWON_16/INWON_TOTAL*100,2))) AS INWON_16, 
      DECODE(LEV,1,INWON_19,DECODE(INWON_TOTAL,0,0,ROUND(INWON_19/INWON_TOTAL*100,2))) AS INWON_19, 
      DECODE(LEV,1,INWON_20,DECODE(INWON_TOTAL,0,0,ROUND(INWON_20/INWON_TOTAL*100,2))) AS INWON_20, 
      DECODE(LEV,1,INWON_22,DECODE(INWON_TOTAL,0,0,ROUND(INWON_22/INWON_TOTAL*100,2))) AS INWON_22, 
      DECODE(LEV,1,INWON_23,DECODE(INWON_TOTAL,0,0,ROUND(INWON_23/INWON_TOTAL*100,2))) AS INWON_23, 
      DECODE(LEV,1,INWON_24,DECODE(INWON_TOTAL,0,0,ROUND(INWON_24/INWON_TOTAL*100,2))) AS INWON_24, 
      DECODE(LEV,1,INWON_25,DECODE(INWON_TOTAL,0,0,ROUND(INWON_25/INWON_TOTAL*100,2))) AS INWON_25, 
      DECODE(LEV,1,INWON_26,DECODE(INWON_TOTAL,0,0,ROUND(INWON_26/INWON_TOTAL*100,2))) AS INWON_26, 
      DECODE(LEV,1,INWON_27,DECODE(INWON_TOTAL,0,0,ROUND(INWON_27/INWON_TOTAL*100,2))) AS INWON_27, 
      DECODE(LEV,1,INWON_28,DECODE(INWON_TOTAL,0,0,ROUND(INWON_28/INWON_TOTAL*100,2))) AS INWON_28, 
      DECODE(LEV,1,INWON_100,DECODE(INWON_TOTAL,0,0,ROUND(INWON_100/INWON_TOTAL*100,2))) AS INWON_100, 
      DECODE(LEV,1,INWON_101,DECODE(INWON_TOTAL,0,0,ROUND(INWON_101/INWON_TOTAL*100,2))) AS INWON_101, 
      DECODE(LEV,1,INWON_102,DECODE(INWON_TOTAL,0,0,ROUND(INWON_102/INWON_TOTAL*100,2))) AS INWON_102, 
      DECODE(LEV,1,INWON_103,DECODE(INWON_TOTAL,0,0,ROUND(INWON_103/INWON_TOTAL*100,2))) AS INWON_103, 
      DECODE(LEV,1,INWON_SUM,DECODE(INWON_TOTAL,0,0,ROUND(INWON_SUM/INWON_TOTAL*100,2))) AS INWON_TOTAL 
  FROM
 (
             SELECT  
        SUM(CASE WHEN BRNC_CD='12' THEN INWON END) AS INWON_12, 
        SUM(CASE WHEN BRNC_CD='13' THEN INWON END) AS INWON_13, 
        SUM(CASE WHEN BRNC_CD='14' THEN INWON END) AS INWON_14, 
        SUM(CASE WHEN BRNC_CD='16' THEN INWON END) AS INWON_16, 
        SUM(CASE WHEN BRNC_CD='19' THEN INWON END) AS INWON_19, 
        SUM(CASE WHEN BRNC_CD='20' THEN INWON END) AS INWON_20, 
        SUM(CASE WHEN BRNC_CD='22' THEN INWON END) AS INWON_22, 
        SUM(CASE WHEN BRNC_CD='23' THEN INWON END) AS INWON_23, 
        SUM(CASE WHEN BRNC_CD='24' THEN INWON END) AS INWON_24, 
        SUM(CASE WHEN BRNC_CD='25' THEN INWON END) AS INWON_25, 
        SUM(CASE WHEN BRNC_CD='26' THEN INWON END) AS INWON_26, 
        SUM(CASE WHEN BRNC_CD='27' THEN INWON END) AS INWON_27, 
        SUM(CASE WHEN BRNC_CD='28' THEN INWON END) AS INWON_28, 
        SUM(CASE WHEN BRNC_CD='100' THEN INWON END) AS INWON_100, 
        SUM(CASE WHEN BRNC_CD='101' THEN INWON END) AS INWON_101, 
        SUM(CASE WHEN BRNC_CD='102' THEN INWON END) AS INWON_102, 
        SUM(CASE WHEN BRNC_CD='103' THEN INWON END) AS INWON_103, 
        SUM(INWON ) AS INWON_TOTAL,
        SUM(CASE WHEN BRNC_CD='12' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='13' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='14' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='16' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='19' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='20' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='22' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='23' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='24' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='25' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='26' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='27' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='28' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='100' THEN INWON END) + 
                 SUM(CASE WHEN BRNC_CD='101' THEN INWON END) + 
                 SUM(CASE WHEN BRNC_CD='102' THEN INWON END) +
                 SUM(CASE WHEN BRNC_CD='103' THEN INWON END)  AS INWON_SUM 
     FROM
    (
    SELECT C.CD_NM, 
           E.BRNC_CD,                                      
            SUM( E.ENT_PRSN_NUM) INWON 
        FROM                                                   
         VW_SDL_INFO R       
         ,TBRC_STAY_MANA E, 
         TBRK_SPEC_CD C                      
        WHERE  1=1
           AND R.MEET_CD  = ?  
        AND R.STND_YEAR(+) = ?  
          AND R.TMS(+)   = ?  
          AND R.DAY_ORD(+) = ?  
         AND E.MEET_CD='003'                        
         AND E.RACE_DT=R.RACE_DAY                 
         AND C.GRP_CD IN ('018','032')                      
         AND C.CD=E.BRNC_CD                
         
        GROUP BY E.BRNC_CD,C.CD_NM          
        ORDER BY E.BRNC_CD
    )A
   )AA,
 (
  SELECT                                                                   
          MAX(RACE_NO)  AS RACE_NO
          
   FROM   (                                                                 
               SELECT                                                       
                        TOR.RACE_NO                                         
                      , TOR.RACE_REG_NO                                     
                      , TOR.RACER_NO                                        
                      , TOR.RANK                                            
                      , TRM.NM_KOR                                          
                      , RANK() OVER (PARTITION BY TOR.RACE_NO               
                                                , TOR.RANK                  
                                         ORDER BY TOR.RACE_REG_NO) SEQ      
               FROM     TBEB_ORGAN@MRASYSLINK        TOR                        
                      , TBEC_RACER_MASTER@MRASYSLINK TRM                        
               WHERE 1=1                                                        
               
               AND    TOR.RACER_NO   = TRM.RACER_NO                         
               AND    TOR.STND_YEAR  = ?  
               AND    TOR.MBR_CD     = '001'                                
               AND    TOR.TMS        = ?  
               
               AND    TOR.RANK BETWEEN 1                                    
                                   AND 3                                    
          )                                                                 
   START WITH SEQ = 1                                                       
   CONNECT BY PRIOR SEQ = SEQ - 1                                           
   AND PRIOR RACE_NO = RACE_NO AND RANK = RANK                           
 )BB , (SELECT LEVEL LEV FROM DUAL CONNECT BY LEVEL <=2 ) DU
 #String#003#String#2012#String#29#String#1#String#2012#String#29#
>
[I][UbiData][2012-08-30 11:00:09]	- Row size : 2
[I][UbiData][2012-08-30 11:00:09]	- Data
<
0~15R^t인원^t2525^t2523^t2397^t3101^t3558^t2575^t1341^t2040^t1768^t1293^t922^t2765^t1106^t431^t498^t369^t406^t29618^t^n0~15R^t점유율^t7.7^t7.7^t7.31^t9.46^t10.86^t7.86^t4.09^t6.22^t5.39^t3.94^t2.81^t8.44^t3.37^t1.31^t1.52^t1.13^t1.24^t90.36^t^n
>
[I][UbiData][2012-08-30 11:00:09][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-08-30 11:00:09][DATA QUERY START]
[I][UbiData][2012-08-30 11:00:09]	- sql id : rsm2020_s08
[I][UbiData][2012-08-30 11:00:09]	- Db charset : KSC5601
[I][UbiData][2012-08-30 11:00:09]	- Sql
<
SELECT                                       
       STND_YEAR,  
       TMS,           
       DAY_ORD,   
       SPEC_DESC   
  FROM TBRD_RACE_SPEC_DESC 
  WHERE 1=1
       AND STND_YEAR = ?  
       AND TMS  = ?  
       AND DAY_ORD = ?  
       AND MEET_CD   = ?  
 UNION ALL
 SELECT 
       ' ', 999, 999, ' '
 FROM DUAL          
 ORDER BY TMS
 #String#2012#String#29#String#1#String#003#
>
[I][UbiData][2012-08-30 11:00:09]	- Row size : 1
[I][UbiData][2012-08-30 11:00:09]	- Data
<
 ^t999^t999^t ^t^n
>
[I][UbiData][2012-08-30 11:00:09][DATA QUERY END]
--------------------------------------------------------------------------------


[I][UbiForm][2012-08-30 11:00:13][REQUEST FILE]
[I][UbiForm][2012-08-30 11:00:13]	- Report : /web/waspage/usrbm/report/rsm/rsm2020_1.jrf
[I][UbiForm][2012-08-30 11:00:13]	- Common : /web/waspage/usrbm/report/rsm/property/commonitem.xml [Not found]
--------------------------------------------------------------------------------


[I][UbiData][2012-08-30 11:00:13][REQUEST FILE]
[I][UbiData][2012-08-30 11:00:13]	- Report : rsm2020_1.jrf
--------------------------------------------------------------------------------
[I][UbiData][2012-08-30 11:00:13][DB CONNECT]
[I][UbiData][2012-08-30 11:00:13]	- Type : nonlookup
[I][UbiData][2012-08-30 11:00:13]	- Db id : RBM
[I][UbiData][2012-08-30 11:00:13]	- Sql id : SQL
[I][UbiData][2012-08-30 11:00:13]	- Datasource : jdbc/RBM
[I][UbiData][2012-08-30 11:00:13]	- Status : Success
--------------------------------------------------------------------------------
[I][UbiData][2012-08-30 11:00:13][DATA QUERY START]
[I][UbiData][2012-08-30 11:00:13]	- sql id : SQL
[I][UbiData][2012-08-30 11:00:13]	- Db charset : KSC5601
[I][UbiData][2012-08-30 11:00:13]	- Sql
<
SELECT TO_CHAR(TO_NUMBER(I.RACE_NO))||'경주' AS RACE_NO,
                ROW_NUM AS GBN,
                GBN_DESC AS GBN_DESC,
                TRIM(TO_CHAR(SUM(DIV_TOTAL), '999,999,999,999,999')) || 
                DECODE(NVL(SUM(P.REFUND),0),0,'',CHR(10)||'(환불액:'||TRIM(TO_CHAR(SUM(P.REFUND),'999,999,999,999,999'))||')') AS TOT
         FROM TBES_SDL_DT P,
             (
                 SELECT ROWNUM AS ROW_NUM, A.*
                 FROM   (
                     SELECT MEET_CD, STND_YEAR, TMS, DAY_ORD, RACE_NO,
                            SUBSTR(STND_YEAR,3,2)||'년 '||TMS||'회 '||DAY_ORD||'일차' AS GBN_DESC
                     FROM (
                         SELECT '003' AS MEET_CD, STND_YEAR, TMS, DAY_ORD, RACE_NO
                         FROM MRASYS.TBEB_RACE@ISPDB_MRASYS
                         WHERE MBR_CD = '001' 
                          AND  STND_YEAR||TMS||DAY_ORD <= ? ||? ||? 
                         ORDER BY STND_YEAR DESC, TMS DESC
                     )
                     WHERE ROWNUM < 46
                     UNION ALL
                     SELECT '003' AS MEET_CD, STND_YEAR, TMS, DAY_ORD, RACE_NO,
                            SUBSTR(STND_YEAR,3,2)||'년 '||TMS||'회 '||DAY_ORD||'일차' AS GBN_DESC
                     FROM  MRASYS.TBEB_RACE@ISPDB_MRASYS
                     WHERE MBR_CD = '001' 
                     AND   STND_YEAR= ?  -1
                     AND   TMS = ? 
                     AND   DAY_ORD = ? 
                     ORDER BY 1,2,3,4,5
                     ) A
             ) I
         WHERE P.MEET_CD(+)    = I.MEET_CD
           AND P.STND_YEAR(+)  = I.STND_YEAR
           AND P.TMS(+)        = I.TMS
           AND P.DAY_ORD(+)    = I.DAY_ORD
           AND P.RACE_NO(+)    = I.RACE_NO
         GROUP BY ROW_NUM, I.RACE_NO, GBN_DESC  
 
 UNION ALL
 
 SELECT '계' AS RACE_NO,
                99 AS GBN,
                GBN_DESC AS GBN_DESC,
                TRIM(TO_CHAR(SUM(DIV_TOTAL), '999,999,999,999,999')) || 
                DECODE(NVL(SUM(P.REFUND),0),0,'',CHR(10)||'(환불액:'||TRIM(TO_CHAR(SUM(P.REFUND),'999,999,999,999,999'))||')') AS TOT
         FROM TBES_SDL_DT P,
             (
                 SELECT ROWNUM AS ROW_NUM, A.*
                 FROM   (
                     SELECT MEET_CD, STND_YEAR, TMS, DAY_ORD, SUBSTR(STND_YEAR,3,2)||'년 '||TMS||'회 '||DAY_ORD||'일차' AS GBN_DESC
                     FROM (
                         SELECT '003' AS MEET_CD, STND_YEAR, TMS, DAY_ORD
                         FROM  VW_SDL_INFO
                         WHERE MEET_CD = '003' 
                          AND  STND_YEAR||TMS||DAY_ORD <= ? ||? ||? 
                         ORDER BY STND_YEAR DESC, TMS DESC
                         )
                         WHERE ROWNUM < 4
                     UNION ALL
                     SELECT '003' AS MEET_CD, STND_YEAR, TMS, DAY_ORD, SUBSTR(STND_YEAR,3,2)||'년 '||TMS||'회 '||DAY_ORD||'일차' AS GBN_DESC
                     FROM  VW_SDL_INFO
                     WHERE MEET_CD = '003' 
                     AND   STND_YEAR= ?  -1
                     AND   TMS = ? 
                     AND   DAY_ORD = ? 
                     ORDER BY 2, 3, 4
                     ) A
             ) I
         WHERE P.MEET_CD(+)    = I.MEET_CD
           AND P.STND_YEAR(+)  = I.STND_YEAR
           AND P.TMS(+)        = I.TMS
           AND P.DAY_ORD(+)    = I.DAY_ORD
         GROUP BY ROW_NUM, GBN_DESC
 
         ORDER BY 2
 #String#2012#String#29#String#1#String#2012#String#29#String#1#String#2012#String#29#String#1#String#2012#String#29#String#1#
>
[I][UbiData][2012-08-30 11:00:13]	- Row size : 64
[I][UbiData][2012-08-30 11:00:13]	- Data
<
1경주^t1^t11년 29회 1일차^t362,067,400^t^n2경주^t2^t11년 29회 1일차^t435,724,900^t^n3경주^t3^t11년 29회 1일차^t540,193,100^t^n4경주^t4^t11년 29회 1일차^t585,888,700^t^n5경주^t5^t11년 29회 1일차^t713,814,700^t^n6경주^t6^t11년 29회 1일차^t703,952,900^t^n7경주^t7^t11년 29회 1일차^t816,389,000^t^n8경주^t8^t11년 29회 1일차^t765,247,900^t^n9경주^t9^t11년 29회 1일차^t837,437,000^t^n10경주^t10^t11년 29회 1일차^t1,027,102,600^t^n11경주^t11^t11년 29회 1일차^t1,028,587,700^t^n12경주^t12^t11년 29회 1일차^t1,045,831,500^t^n13경주^t13^t11년 29회 1일차^t1,041,568,100^t^n14경주^t14^t11년 29회 1일차^t1,028,398,700^t^n15경주^t15^t11년 29회 1일차^t1,115,073,900^t^n1경주^t16^t12년 28회 1일차^t217,587,000^t^n2경주^t17^t12년 28회 1일차^t288,870,500^t^n3경주^t18^t12년 28회 1일차^t331,700,500^t^n4경주^t19^t12년 28회 1일차^t401,165,100^t^n5경주^t20^t12년 28회 1일차^t267,456,000
(환불액:157,367,200)^t^n6경주^t21^t12년 28회 1일차^t473,793,800^t^n7경주^t22^t12년 28회 1일차^t231,828,800
(환불액:295,403,000)^t^n8경주^t23^t12년 28회 1일차^t622,902,900^t^n9경주^t24^t12년 28회 1일차^t672,517,300^t^n10경주^t25^t12년 28회 1일차^t728,939,200^t^n11경주^t26^t12년 28회 1일차^t738,205,800^t^n12경주^t27^t12년 28회 1일차^t766,810,900^t^n13경주^t28^t12년 28회 1일차^t749,433,600^t^n14경주^t29^t12년 28회 1일차^t773,742,700^t^n15경주^t30^t12년 28회 1일차^t845,780,400^t^n1경주^t31^t12년 28회 2일차^t214,659,800^t^n2경주^t32^t12년 28회 2일차^t290,471,500^t^n3경주^t33^t12년 28회 2일차^t341,957,700^t^n4경주^t34^t12년 28회 2일차^t399,049,600^t^n5경주^t35^t12년 28회 2일차^t465,126,700^t^n6경주^t36^t12년 28회 2일차^t471,139,300^t^n7경주^t37^t12년 28회 2일차^t529,893,800^t^n8경주^t38^t12년 28회 2일차^t559,139,800^t^n9경주^t39^t12년 28회 2일차^t544,572,800^t^n10경주^t40^t12년 28회 2일차^t686,099,500^t^n11경주^t41^t12년 28회 2일차^t715,540,700^t^n12경주^t42^t12년 28회 2일차^t610,728,000^t^n13경주^t43^t12년 28회 2일차^t741,798,400^t^n14경주^t44^t12년 28회 2일차^t727,854,400^t^n15경주^t45^t12년 28회 2일차^t798,800,400^t^n1경주^t46^t12년 29회 1일차^t223,920,200^t^n2경주^t47^t12년 29회 1일차^t279,912,900^t^n3경주^t48^t12년 29회 1일차^t345,790,500^t^n4경주^t49^t12년 29회 1일차^t392,601,800^t^n5경주^t50^t12년 29회 1일차^t427,616,700^t^n6경주^t51^t12년 29회 1일차^t471,638,000^t^n7경주^t52^t12년 29회 1일차^t496,669,200^t^n8경주^t53^t12년 29회 1일차^t529,223,200^t^n9경주^t54^t12년 29회 1일차^t555,284,900^t^n10경주^t55^t12년 29회 1일차^t638,245,000^t^n11경주^t56^t12년 29회 1일차^t651,509,400^t^n12경주^t57^t12년 29회 1일차^t682,585,500^t^n13경주^t58^t12년 29회 1일차^t690,808,800^t^n14경주^t59^t12년 29회 1일차^t728,140,700^t^n15경주^t60^t12년 29회 1일차^t759,213,400^t^n계^t99^t12년 29회 1일차^t7,873,160,200^t^n계^t99^t12년 28회 1일차^t8,110,734,500
(환불액:452,770,200)^t^n계^t99^t11년 29회 1일차^t12,047,278,100^t^n계^t99^t12년 28회 2일차^t8,096,832,400^t^n
>
[I][UbiData][2012-08-30 11:00:13][DATA QUERY END]
--------------------------------------------------------------------------------


[I][UbiForm][2012-08-30 18:43:53][REQUEST FILE]
[I][UbiForm][2012-08-30 18:43:53]	- Report : /web/waspage/usrbm/report/rsm/rsm4060.jrf
[I][UbiForm][2012-08-30 18:43:53]	- Common : /web/waspage/usrbm/report/rsm/property/commonitem.xml [Not found]
--------------------------------------------------------------------------------


[I][UbiData][2012-08-30 18:43:53][REQUEST FILE]
[I][UbiData][2012-08-30 18:43:53]	- Report : rsm4060.jrf
--------------------------------------------------------------------------------
[I][UbiData][2012-08-30 18:43:53][DB CONNECT]
[I][UbiData][2012-08-30 18:43:53]	- Type : nonlookup
[I][UbiData][2012-08-30 18:43:53]	- Db id : rbm
[I][UbiData][2012-08-30 18:43:53]	- Sql id : SQL1
[I][UbiData][2012-08-30 18:43:53]	- Datasource : jdbc/RBM
[I][UbiData][2012-08-30 18:43:53]	- Status : Success
--------------------------------------------------------------------------------
[I][UbiData][2012-08-30 18:43:53][DATA QUERY START]
[I][UbiData][2012-08-30 18:43:53]	- sql id : SQL1
[I][UbiData][2012-08-30 18:43:53]	- Db charset : KSC5601
[I][UbiData][2012-08-30 18:43:53]	- Sql
<
SELECT *
 FROM (
     SELECT  
           MEET_CD,  
           STND_YEAR,  
           DT,   
          BRNC_CD,  
          CD_NM,      
          GROSS_SALES, 
          CANCELS,  
          TOT_SALES,  
          CASHES,  
          NET_INCOME,  
          DRAWS,   
          RETURNS,
          BALANCE,  
          VERI,   
          VERI_DT,  
          FILE_PATH,  
          FILE_NM  
     FROM TBRD_LIS_FILE A 
     ,TBRK_SPEC_CD B    
     WHERE 1=1
      AND BRNC_CD=B.CD
      AND B.GRP_CD = '018'         
      AND BRNC_CD NOT IN ('00','01','02','03','04','06','08','98')
      AND STND_YEAR = ? 
      AND DT  = ? 
    ORDER BY BRNC_CD
 ) A
 #String#2012#String#0830#
>
[I][UbiData][2012-08-30 18:43:53]	- Row size : 14
[I][UbiData][2012-08-30 18:43:53]	- Data
<
003^t2012^t0830^t12^t상봉^t822224200^t77000^t822147200^t673875270^t148271930^t91455530^t239727460^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120830/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0830^t13^t일산^t723664840^t12000^t723652840^t606562170^t117090670^t38400000^t155490670^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120830/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0830^t14^t분당^t1100927712^t148000^t1100779712^t874916202^t225863510^t66356000^t292219510^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120830/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0830^t16^t장안^t742744970^t12000^t742732970^t563320370^t179412600^t68371000^t247783600^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120830/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0830^t19^t관악^t857696360^t44000^t857652360^t657929290^t199723070^t72542290^t272265360^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120830/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0830^t20^t길음^t836468220^t0^t836468220^t723695730^t112772490^t46850000^t159622490^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120830/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0830^t21^t당산^t0^t0^t0^t51000^t-51000^t51000^t0^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120830/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0830^t22^t유성^t560896060^t0^t560896060^t431646000^t129250060^t43230850^t172480910^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120830/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0830^t23^t인천^t568829490^t35000^t568794490^t455955860^t112838630^t65145800^t177984430^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120830/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0830^t24^t시흥^t1127890690^t114000^t1127776690^t915280220^t212496470^t57954500^t270450970^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120830/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0830^t25^t논현^t656490380^t0^t656490380^t549822680^t106667700^t13420000^t120087700^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120830/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0830^t26^t천안^t602897820^t0^t602897820^t494939250^t107958570^t4839470^t112798040^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120830/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0830^t27^t올림픽^t1098352250^t150000^t1098202250^t925873980^t172328270^t105310000^t277638270^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120830/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0830^t28^t의정부^t522269850^t205000^t522064850^t464851160^t57213690^t22600000^t79813690^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120830/divstatrpt.lis^tdivstatrpt.lis^t^n
>
[I][UbiData][2012-08-30 18:43:53][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-08-30 18:43:53][DATA QUERY START]
[I][UbiData][2012-08-30 18:43:53]	- sql id : SQL3
[I][UbiData][2012-08-30 18:43:53]	- Db charset : KSC5601
[I][UbiData][2012-08-30 18:43:53]	- Sql
<
SELECT *
 FROM (
     SELECT 
         '그린카드' AS MYCAT, 
         COMM_NO, 
         DIV_NO, 
         CD_NM AS COMM_NAME, 
         OUT_AMT, 
         IN_AMT, 
         MILEAGE_AMT, 
         BONUS_AMT,
         (IN_AMT-OUT_AMT-MILEAGE_AMT-BONUS_AMT) AS SIL_IN_AMT 
     FROM VW_MYCAT_INOUT A, TBRK_SPEC_CD B                                              
    WHERE 1=1
      AND RACE_DAY    = ?  
      AND A.DIV_NO = B.CD(+)
      AND B.GRP_CD(+) = '127'                                     
    ORDER BY DIV_NO   
 ) A
 #String#20120830#
>
[I][UbiData][2012-08-30 18:43:54]	- Row size : 2
[I][UbiData][2012-08-30 18:43:54]	- Data
<
그린카드^t06^t00^t본장^t2252750^t4295570^t2220^t0^t2040600^t^n그린카드^t06^t15^t논현^t1073740^t6707760^t0^t0^t5634020^t^n
>
[I][UbiData][2012-08-30 18:43:54][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-08-30 18:43:54][DB CONNECT]
[I][UbiData][2012-08-30 18:43:54]	- Type : nonlookup
[I][UbiData][2012-08-30 18:43:54]	- Db id : RBM
[I][UbiData][2012-08-30 18:43:54]	- Sql id : SQL2
[I][UbiData][2012-08-30 18:43:54]	- Datasource : jdbc/RBM
[I][UbiData][2012-08-30 18:43:54]	- Status : Success
--------------------------------------------------------------------------------
[I][UbiData][2012-08-30 18:43:54][DATA QUERY START]
[I][UbiData][2012-08-30 18:43:54]	- sql id : SQL2
[I][UbiData][2012-08-30 18:43:54]	- Db charset : KSC5601
[I][UbiData][2012-08-30 18:43:54]	- Sql
<
SELECT *
 FROM (
  SELECT 
    MEET_CD,
          MEET_DESC,
          BRNC_CD,
          SUM(GROSS_SALES) AS GROSS_SALES,
          SUM(CANCELS) AS CANCELS,  
          SUM(TOT_SALES) AS TOT_SALES,  
          SUM(CASHES) AS CASHES,  
          SUM(NET_INCOME) AS NET_INCOME,  
          SUM(BALANCE) AS BALANCE  
  FROM
  (            
      SELECT 
        
              MEET_CD,  
        STND_YEAR,  
        DT,   
        CASE 
                          WHEN  A.BRNC_CD NOT IN ('00','01','02','03','04','06','08','98') THEN '지점계' 
                          WHEN  A.BRNC_CD IN ('06') THEN '그린카드'
                          WHEN  A.BRNC_CD IN ('08','98') AND MEET_CD ='003' THEN '미사리'
                          WHEN  A.BRNC_CD IN ('01','02','03','04','06') AND MEET_CD ='003' THEN '스피돔'
                          WHEN  A.BRNC_CD IN ('01','02','03','04','06','08','98') AND MEET_CD ='001' THEN '스피돔'
           ELSE  'X' 
           END AS  MEET_DESC, 
           CASE 
            WHEN  A.BRNC_CD NOT IN ('00','01','02','03','04','06','08','98') THEN '18' 
            WHEN  A.BRNC_CD IN ('06') THEN '06'
            WHEN  A.BRNC_CD IN ('01','02','03','04','06','08','98') THEN '00'
           ELSE  'X'
           END AS BRNC_CD,
           CASE 
            WHEN  A.BRNC_CD NOT IN ('00','01','02','03','04','06','08','98') THEN '1' 
            WHEN  A.BRNC_CD IN ('06') THEN '2'
            WHEN  A.BRNC_CD IN ('01','02','03','04','06','08','98') THEN '3'
           ELSE  'X' 
           END AS MEET_ORDER,           
           SUM(GROSS_SALES) AS GROSS_SALES,
           SUM(CANCELS) AS CANCELS,  
           SUM(TOT_SALES) AS TOT_SALES,  
           SUM(CASHES) AS CASHES,  
           SUM(NET_INCOME) AS NET_INCOME,  
           SUM(BALANCE) AS BALANCE  
     FROM TBRD_LIS_FILE A 
     WHERE 1=1     
       AND STND_YEAR = ? 
       AND DT    = ? 
     GROUP BY MEET_CD,  
        STND_YEAR,  
        DT,  
        A.BRNC_CD
  )        
  WHERE BRNC_CD != 'X'
  GROUP BY MEET_CD,MEET_ORDER,MEET_DESC,
          BRNC_CD        
  ORDER BY  MEET_ORDER                                  
 ) A
 #String#2012#String#0830#
>
[I][UbiData][2012-08-30 18:43:54]	- Row size : 3
[I][UbiData][2012-08-30 18:43:54]	- Data
<
003^t지점계^t18^t10221352842^t797000^t10220555842^t8338719182^t1881836660^t0^t^n003^t그린카드^t06^t29009630^t0^t29009630^t13848100^t15161530^t15161530^t^n003^t미사리^t00^t2050330180^t46000^t2050284180^t1773793070^t276491110^t0^t^n
>
[I][UbiData][2012-08-30 18:43:54][DATA QUERY END]
--------------------------------------------------------------------------------


[I][UbiForm][2012-08-30 22:58:58][REQUEST FILE]
[I][UbiForm][2012-08-30 22:58:58]	- Report : /web/waspage/can_boa/report/d08000001.jrf
[I][UbiForm][2012-08-30 22:58:58]	- Common : /web/waspage/can_boa/report/property/commonitem.xml [Not found]
--------------------------------------------------------------------------------


[I][UbiData][2012-08-30 22:58:58][REQUEST FILE]
[I][UbiData][2012-08-30 22:58:58]	- Report : d08000001.jrf
--------------------------------------------------------------------------------
[I][UbiData][2012-08-30 22:58:58][DB CONNECT]
[I][UbiData][2012-08-30 22:58:58]	- Type : nonlookup
[I][UbiData][2012-08-30 22:58:58]	- Db id : uscanboa
[I][UbiData][2012-08-30 22:58:58]	- Sql id : SQL
[I][UbiData][2012-08-30 22:58:58]	- Datasource : jdbc/BOADS
[I][UbiData][2012-08-30 22:58:58]	- Status : Success
--------------------------------------------------------------------------------
[I][UbiData][2012-08-30 22:58:58][DATA QUERY START]
[I][UbiData][2012-08-30 22:58:58]	- sql id : SQL
[I][UbiData][2012-08-30 22:58:58]	- Db charset : KSC5601
[I][UbiData][2012-08-30 22:58:58]	- Sql
<
SELECT dt,
        in_quant_01, out_quant_01, SUM(in_quant_01) OVER (ORDER BY dt ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)-out_quant_01 cum1,
        in_quant_02, out_quant_02, SUM(in_quant_02) OVER (ORDER BY dt ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)-out_quant_02 cum2
 FROM (      
     SELECT ? ||'00' AS dt,
            NVL(SUM(CASE WHEN gbn ='001' THEN quant END),0) AS in_quant_01, 0 AS out_quant_01,
            NVL(SUM(CASE WHEN gbn ='002' THEN quant END),0) AS in_quant_02, 0 AS out_quant_02
     FROM     
         (
         SELECT oil_gbn AS gbn,
                ent_quant AS quant
         FROM tbdp_oil_ent
         WHERE ent_dt < ? ||? 
         UNION ALL
         SELECT oil_gbn AS gbn,
                out_quant * -1 AS quant
         FROM tbdp_oil_out
         WHERE out_dt < ? ||? 
         )
     UNION ALL
     SELECT substr(dt,5,4), 
            NVL(SUM(CASE WHEN inout = '01' AND gbn = '001' THEN ent_quant END),0) in_quant_01,
            NVL(SUM(CASE WHEN inout = '02' AND gbn = '001' THEN out_quant END),0) out_quant_01,
            NVL(SUM(CASE WHEN inout = '01' AND gbn = '002' THEN ent_quant END),0) in_quant_02,
            NVL(SUM(CASE WHEN inout = '02' AND gbn = '002' THEN out_quant END),0) out_quant_02
     FROM (       
         SELECT ent_dt AS dt, '01' AS inout, oil_gbn AS gbn, ent_quant, 0 AS out_quant
         FROM tbdp_oil_ent
         WHERE ent_dt LIKE ? ||? ||'%' 
         UNION ALL
         SELECT out_dt, '02' AS out_gbn, oil_gbn, 0, out_quant
         FROM tbdp_oil_out
         WHERE out_dt LIKE ? ||? ||'%' 
         )
     GROUP BY dt
     ORDER BY 1
 )
 #String##String##String##String##String##String##String##String##String##
>
[I][UbiData][2012-08-30 22:58:58]	- Row size : 88
[I][UbiData][2012-08-30 22:58:58]	- Data
<
00^t0^t0^t0^t0^t0^t0^t^n0103^t360^t320^t40^t2034^t13^t2021^t^n0104^t400^t220^t540^t0^t10^t2024^t^n0107^t400^t260^t900^t0^t13^t2021^t^n0108^t0^t260^t900^t0^t12^t2022^t^n0110^t400^t240^t1320^t0^t12^t2022^t^n0111^t0^t80^t1480^t0^t4^t2030^t^n0114^t400^t220^t1740^t0^t11^t2023^t^n0115^t0^t250^t1710^t0^t12^t2022^t^n0116^t400^t170^t2190^t0^t8^t2026^t^n0117^t0^t190^t2170^t0^t10^t2024^t^n0121^t400^t220^t2540^t0^t11^t2023^t^n0122^t0^t190^t2570^t0^t10^t2024^t^n0123^t400^t100^t3060^t0^t5^t2029^t^n0124^t0^t100^t3060^t0^t5^t2029^t^n0128^t0^t300^t2860^t0^t11^t2023^t^n0129^t400^t260^t3300^t0^t12^t2022^t^n0130^t0^t80^t3480^t0^t4^t2030^t^n0131^t400^t140^t3820^t0^t7^t2027^t^n0225^t0^t200^t3760^t0^t8^t2026^t^n0226^t400^t120^t4240^t0^t6^t2028^t^n0227^t0^t120^t4240^t0^t6^t2028^t^n0228^t0^t140^t4220^t0^t7^t2027^t^n0303^t400^t120^t4640^t0^t5^t2029^t^n0304^t0^t120^t4640^t0^t6^t2028^t^n0305^t0^t120^t4640^t0^t6^t2028^t^n0306^t0^t30^t4730^t0^t2^t2032^t^n0310^t400^t220^t4940^t0^t10^t2024^t^n0311^t0^t150^t5010^t0^t8^t2026^t^n0312^t0^t150^t5010^t0^t8^t2026^t^n0313^t400^t150^t5410^t0^t8^t2026^t^n0314^t0^t20^t5540^t0^t1^t2033^t^n0318^t0^t180^t5380^t0^t9^t2025^t^n0319^t400^t200^t5760^t0^t10^t2024^t^n0320^t0^t130^t5830^t0^t5^t2029^t^n0321^t0^t150^t5810^t0^t8^t2026^t^n0324^t400^t160^t6200^t0^t8^t2026^t^n0325^t0^t180^t6180^t0^t9^t2025^t^n0326^t400^t140^t6620^t0^t7^t2027^t^n0327^t0^t210^t6550^t0^t11^t2023^t^n0328^t0^t30^t6730^t0^t2^t2032^t^n0331^t400^t180^t6980^t0^t8^t2026^t^n0401^t0^t200^t6960^t0^t10^t2024^t^n0402^t400^t120^t7440^t0^t6^t2028^t^n0403^t0^t200^t7360^t0^t10^t2024^t^n0404^t0^t40^t7520^t0^t2^t2032^t^n0407^t400^t180^t7780^t0^t9^t2025^t^n0408^t0^t230^t7730^t0^t10^t2024^t^n0410^t0^t60^t7900^t0^t3^t2031^t^n0411^t400^t50^t8310^t0^t3^t2031^t^n0411^t0^t0^t8360^t0^t14^t2020^t^n0414^t0^t200^t8160^t0^t9^t2025^t^n0415^t0^t180^t8180^t0^t7^t2027^t^n0416^t400^t200^t8560^t0^t10^t2024^t^n0417^t0^t160^t8600^t0^t8^t2026^t^n0418^t0^t30^t8730^t0^t2^t2032^t^n0421^t400^t180^t8980^t0^t9^t2025^t^n0422^t0^t250^t8910^t0^t13^t2021^t^n0423^t400^t160^t9400^t0^t8^t2026^t^n0424^t0^t180^t9380^t0^t9^t2025^t^n0425^t0^t20^t9540^t0^t1^t2033^t^n0429^t400^t140^t9820^t0^t7^t2027^t^n0430^t0^t160^t9800^t0^t8^t2026^t^n0501^t0^t140^t9820^t0^t6^t2028^t^n0502^t400^t120^t10240^t0^t6^t2028^t^n0509^t0^t70^t10290^t0^t4^t2030^t^n0512^t0^t200^t10160^t0^t10^t2024^t^n0513^t400^t220^t10540^t0^t10^t2024^t^n0514^t0^t210^t10550^t0^t11^t2023^t^n0515^t400^t200^t10960^t0^t10^t2024^t^n0516^t0^t80^t11080^t0^t4^t2030^t^n0519^t400^t140^t11420^t0^t7^t2027^t^n0520^t0^t180^t11380^t0^t9^t2025^t^n0521^t0^t130^t11430^t0^t6^t2028^t^n0522^t400^t150^t11810^t0^t8^t2026^t^n0523^t0^t110^t11850^t0^t6^t2028^t^n0526^t0^t210^t11750^t0^t10^t2024^t^n0527^t400^t170^t12190^t0^t9^t2025^t^n0528^t0^t160^t12200^t0^t8^t2026^t^n0529^t400^t170^t12590^t0^t9^t2025^t^n0530^t0^t30^t12730^t0^t2^t2032^t^n0602^t0^t160^t12600^t0^t8^t2026^t^n0603^t0^t100^t12660^t0^t5^t2029^t^n0604^t400^t70^t13090^t0^t4^t2030^t^n0605^t0^t70^t13090^t0^t4^t2030^t^n0606^t0^t50^t13110^t0^t1^t2033^t^n0609^t0^t140^t13020^t0^t7^t2027^t^n0706^t0^t1^t13159^t0^t0^t2034^t^n
>
[I][UbiData][2012-08-30 22:58:58][DATA QUERY END]
--------------------------------------------------------------------------------


[I][UbiForm][2012-08-30 22:59:10][REQUEST FILE]
[I][UbiForm][2012-08-30 22:59:10]	- Report : /web/waspage/can_boa/report/d08000001.jrf
[I][UbiForm][2012-08-30 22:59:10]	- Common : /web/waspage/can_boa/report/property/commonitem.xml [Not found]
--------------------------------------------------------------------------------


[I][UbiData][2012-08-30 22:59:10][REQUEST FILE]
[I][UbiData][2012-08-30 22:59:10]	- Report : d08000001.jrf
--------------------------------------------------------------------------------
[I][UbiData][2012-08-30 22:59:10][DB CONNECT]
[I][UbiData][2012-08-30 22:59:10]	- Type : nonlookup
[I][UbiData][2012-08-30 22:59:10]	- Db id : uscanboa
[I][UbiData][2012-08-30 22:59:10]	- Sql id : SQL
[I][UbiData][2012-08-30 22:59:10]	- Datasource : jdbc/BOADS
[I][UbiData][2012-08-30 22:59:10]	- Status : Success
--------------------------------------------------------------------------------
[I][UbiData][2012-08-30 22:59:10][DATA QUERY START]
[I][UbiData][2012-08-30 22:59:10]	- sql id : SQL
[I][UbiData][2012-08-30 22:59:10]	- Db charset : KSC5601
[I][UbiData][2012-08-30 22:59:10]	- Sql
<
SELECT dt,
        in_quant_01, out_quant_01, SUM(in_quant_01) OVER (ORDER BY dt ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)-out_quant_01 cum1,
        in_quant_02, out_quant_02, SUM(in_quant_02) OVER (ORDER BY dt ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)-out_quant_02 cum2
 FROM (      
     SELECT ? ||'00' AS dt,
            NVL(SUM(CASE WHEN gbn ='001' THEN quant END),0) AS in_quant_01, 0 AS out_quant_01,
            NVL(SUM(CASE WHEN gbn ='002' THEN quant END),0) AS in_quant_02, 0 AS out_quant_02
     FROM     
         (
         SELECT oil_gbn AS gbn,
                ent_quant AS quant
         FROM tbdp_oil_ent
         WHERE ent_dt < ? ||? 
         UNION ALL
         SELECT oil_gbn AS gbn,
                out_quant * -1 AS quant
         FROM tbdp_oil_out
         WHERE out_dt < ? ||? 
         )
     UNION ALL
     SELECT substr(dt,5,4), 
            NVL(SUM(CASE WHEN inout = '01' AND gbn = '001' THEN ent_quant END),0) in_quant_01,
            NVL(SUM(CASE WHEN inout = '02' AND gbn = '001' THEN out_quant END),0) out_quant_01,
            NVL(SUM(CASE WHEN inout = '01' AND gbn = '002' THEN ent_quant END),0) in_quant_02,
            NVL(SUM(CASE WHEN inout = '02' AND gbn = '002' THEN out_quant END),0) out_quant_02
     FROM (       
         SELECT ent_dt AS dt, '01' AS inout, oil_gbn AS gbn, ent_quant, 0 AS out_quant
         FROM tbdp_oil_ent
         WHERE ent_dt LIKE ? ||? ||'%' 
         UNION ALL
         SELECT out_dt, '02' AS out_gbn, oil_gbn, 0, out_quant
         FROM tbdp_oil_out
         WHERE out_dt LIKE ? ||? ||'%' 
         )
     GROUP BY dt
     ORDER BY 1
 )
 #String##String##String##String##String##String##String##String##String##
>
[I][UbiData][2012-08-30 22:59:10]	- Row size : 88
[I][UbiData][2012-08-30 22:59:10]	- Data
<
00^t0^t0^t0^t0^t0^t0^t^n0103^t360^t320^t40^t2034^t13^t2021^t^n0104^t400^t220^t540^t0^t10^t2024^t^n0107^t400^t260^t900^t0^t13^t2021^t^n0108^t0^t260^t900^t0^t12^t2022^t^n0110^t400^t240^t1320^t0^t12^t2022^t^n0111^t0^t80^t1480^t0^t4^t2030^t^n0114^t400^t220^t1740^t0^t11^t2023^t^n0115^t0^t250^t1710^t0^t12^t2022^t^n0116^t400^t170^t2190^t0^t8^t2026^t^n0117^t0^t190^t2170^t0^t10^t2024^t^n0121^t400^t220^t2540^t0^t11^t2023^t^n0122^t0^t190^t2570^t0^t10^t2024^t^n0123^t400^t100^t3060^t0^t5^t2029^t^n0124^t0^t100^t3060^t0^t5^t2029^t^n0128^t0^t300^t2860^t0^t11^t2023^t^n0129^t400^t260^t3300^t0^t12^t2022^t^n0130^t0^t80^t3480^t0^t4^t2030^t^n0131^t400^t140^t3820^t0^t7^t2027^t^n0225^t0^t200^t3760^t0^t8^t2026^t^n0226^t400^t120^t4240^t0^t6^t2028^t^n0227^t0^t120^t4240^t0^t6^t2028^t^n0228^t0^t140^t4220^t0^t7^t2027^t^n0303^t400^t120^t4640^t0^t5^t2029^t^n0304^t0^t120^t4640^t0^t6^t2028^t^n0305^t0^t120^t4640^t0^t6^t2028^t^n0306^t0^t30^t4730^t0^t2^t2032^t^n0310^t400^t220^t4940^t0^t10^t2024^t^n0311^t0^t150^t5010^t0^t8^t2026^t^n0312^t0^t150^t5010^t0^t8^t2026^t^n0313^t400^t150^t5410^t0^t8^t2026^t^n0314^t0^t20^t5540^t0^t1^t2033^t^n0318^t0^t180^t5380^t0^t9^t2025^t^n0319^t400^t200^t5760^t0^t10^t2024^t^n0320^t0^t130^t5830^t0^t5^t2029^t^n0321^t0^t150^t5810^t0^t8^t2026^t^n0324^t400^t160^t6200^t0^t8^t2026^t^n0325^t0^t180^t6180^t0^t9^t2025^t^n0326^t400^t140^t6620^t0^t7^t2027^t^n0327^t0^t210^t6550^t0^t11^t2023^t^n0328^t0^t30^t6730^t0^t2^t2032^t^n0331^t400^t180^t6980^t0^t8^t2026^t^n0401^t0^t200^t6960^t0^t10^t2024^t^n0402^t400^t120^t7440^t0^t6^t2028^t^n0403^t0^t200^t7360^t0^t10^t2024^t^n0404^t0^t40^t7520^t0^t2^t2032^t^n0407^t400^t180^t7780^t0^t9^t2025^t^n0408^t0^t230^t7730^t0^t10^t2024^t^n0410^t0^t60^t7900^t0^t3^t2031^t^n0411^t400^t50^t8310^t0^t3^t2031^t^n0411^t0^t0^t8360^t0^t14^t2020^t^n0414^t0^t200^t8160^t0^t9^t2025^t^n0415^t0^t180^t8180^t0^t7^t2027^t^n0416^t400^t200^t8560^t0^t10^t2024^t^n0417^t0^t160^t8600^t0^t8^t2026^t^n0418^t0^t30^t8730^t0^t2^t2032^t^n0421^t400^t180^t8980^t0^t9^t2025^t^n0422^t0^t250^t8910^t0^t13^t2021^t^n0423^t400^t160^t9400^t0^t8^t2026^t^n0424^t0^t180^t9380^t0^t9^t2025^t^n0425^t0^t20^t9540^t0^t1^t2033^t^n0429^t400^t140^t9820^t0^t7^t2027^t^n0430^t0^t160^t9800^t0^t8^t2026^t^n0501^t0^t140^t9820^t0^t6^t2028^t^n0502^t400^t120^t10240^t0^t6^t2028^t^n0509^t0^t70^t10290^t0^t4^t2030^t^n0512^t0^t200^t10160^t0^t10^t2024^t^n0513^t400^t220^t10540^t0^t10^t2024^t^n0514^t0^t210^t10550^t0^t11^t2023^t^n0515^t400^t200^t10960^t0^t10^t2024^t^n0516^t0^t80^t11080^t0^t4^t2030^t^n0519^t400^t140^t11420^t0^t7^t2027^t^n0520^t0^t180^t11380^t0^t9^t2025^t^n0521^t0^t130^t11430^t0^t6^t2028^t^n0522^t400^t150^t11810^t0^t8^t2026^t^n0523^t0^t110^t11850^t0^t6^t2028^t^n0526^t0^t210^t11750^t0^t10^t2024^t^n0527^t400^t170^t12190^t0^t9^t2025^t^n0528^t0^t160^t12200^t0^t8^t2026^t^n0529^t400^t170^t12590^t0^t9^t2025^t^n0530^t0^t30^t12730^t0^t2^t2032^t^n0602^t0^t160^t12600^t0^t8^t2026^t^n0603^t0^t100^t12660^t0^t5^t2029^t^n0604^t400^t70^t13090^t0^t4^t2030^t^n0605^t0^t70^t13090^t0^t4^t2030^t^n0606^t0^t50^t13110^t0^t1^t2033^t^n0609^t0^t140^t13020^t0^t7^t2027^t^n0706^t0^t1^t13159^t0^t0^t2034^t^n
>
[I][UbiData][2012-08-30 22:59:10][DATA QUERY END]
--------------------------------------------------------------------------------


[I][UbiForm][2012-08-30 22:59:46][REQUEST FILE]
[I][UbiForm][2012-08-30 22:59:46]	- Report : /web/waspage/can_boa/report/d07000003_1.jrf [Not found]
[I][UbiForm][2012-08-30 22:59:46]	- Common : /web/waspage/can_boa/report/property/commonitem.xml [Not found]
--------------------------------------------------------------------------------


[I][UbiForm][2012-08-30 23:01:29][REQUEST FILE]
[I][UbiForm][2012-08-30 23:01:29]	- Report : /web/waspage/can_boa/report/d07000003_1.jrf
[I][UbiForm][2012-08-30 23:01:29]	- Common : /web/waspage/can_boa/report/property/commonitem.xml [Not found]
--------------------------------------------------------------------------------


[I][UbiData][2012-08-30 23:01:29][REQUEST FILE]
[I][UbiData][2012-08-30 23:01:29]	- Report : d07000003_1.jrf
--------------------------------------------------------------------------------
[I][UbiData][2012-08-30 23:01:29][DB CONNECT]
[I][UbiData][2012-08-30 23:01:29]	- Type : nonlookup
[I][UbiData][2012-08-30 23:01:29]	- Db id : canboa
[I][UbiData][2012-08-30 23:01:29]	- Sql id : SQL
[I][UbiData][2012-08-30 23:01:29]	- Datasource : jdbc/BOADS
[I][UbiData][2012-08-30 23:01:29]	- Status : Success
--------------------------------------------------------------------------------
[I][UbiData][2012-08-30 23:01:29][DATA QUERY START]
[I][UbiData][2012-08-30 23:01:29]	- sql id : SQL
[I][UbiData][2012-08-30 23:01:29]	- Db charset : KSC5601
[I][UbiData][2012-08-30 23:01:29]	- Sql
<
SELECT   
                      TTAR.TRNG_ASK_SEQ
                    , TTAR.RACER_NO
                    , TRM .NM_KOR
                    , NVL(TRTS.ESTI_DT, ? ) ESTI_DT
                    , TRTS.RSLT1
                    , TRTS.RSLT2
                    , TRTS.RSLT3
                    , TRTS.RSLT4
                    , TRTS.RSLT5
                    , TRTS.RSLT6
                    , TRTS.RSLT
                    , TRTS.ESTIER
                    , FC_GET_USERNAME(TRTS.ESTIER) AS ESTIER_NM
                    , FC_CODE_NM_003('D10006', TRTS.RSLT) AS RSLT_NM
             FROM     MRASYS.TBEB_TRNG_ASK_RACER  TTAR
                    , MRASYS.TBEC_RACER_MASTER    TRM
                    , TBDO_RACER_TRNG_START TRTS
             WHERE  1=1
             AND    TTAR.RACER_NO     = TRM .RACER_NO
             AND    TTAR.TRNG_ASK_SEQ = TRTS.TRNG_ASK_SEQ(+)
             AND    TTAR.RACER_NO     = TRTS.RACER_NO    (+)
             AND    TTAR.TRNG_ASK_SEQ = ? 
             AND    TRTS.ESTI_DT(+) = ? 
             ORDER BY TTAR.RACER_NO
 #String#20120903#String#12-0002#String#20120903#
>
[I][UbiData][2012-08-30 23:01:29]	- Row size : 0
[I][UbiData][2012-08-30 23:01:29]	- Data
<

>
[I][UbiData][2012-08-30 23:01:29][DATA QUERY END]
--------------------------------------------------------------------------------


[I][UbiForm][2012-08-30 23:01:34][REQUEST FILE]
[I][UbiForm][2012-08-30 23:01:34]	- Report : /web/waspage/can_boa/report/d07000003_1.jrf
[I][UbiForm][2012-08-30 23:01:34]	- Common : /web/waspage/can_boa/report/property/commonitem.xml [Not found]
--------------------------------------------------------------------------------


[I][UbiData][2012-08-30 23:01:34][REQUEST FILE]
[I][UbiData][2012-08-30 23:01:34]	- Report : d07000003_1.jrf
--------------------------------------------------------------------------------
[I][UbiData][2012-08-30 23:01:34][DB CONNECT]
[I][UbiData][2012-08-30 23:01:34]	- Type : nonlookup
[I][UbiData][2012-08-30 23:01:34]	- Db id : canboa
[I][UbiData][2012-08-30 23:01:34]	- Sql id : SQL
[I][UbiData][2012-08-30 23:01:34]	- Datasource : jdbc/BOADS
[I][UbiData][2012-08-30 23:01:34]	- Status : Success
--------------------------------------------------------------------------------
[I][UbiData][2012-08-30 23:01:34][DATA QUERY START]
[I][UbiData][2012-08-30 23:01:34]	- sql id : SQL
[I][UbiData][2012-08-30 23:01:34]	- Db charset : KSC5601
[I][UbiData][2012-08-30 23:01:34]	- Sql
<
SELECT   
                      TTAR.TRNG_ASK_SEQ
                    , TTAR.RACER_NO
                    , TRM .NM_KOR
                    , NVL(TRTS.ESTI_DT, ? ) ESTI_DT
                    , TRTS.RSLT1
                    , TRTS.RSLT2
                    , TRTS.RSLT3
                    , TRTS.RSLT4
                    , TRTS.RSLT5
                    , TRTS.RSLT6
                    , TRTS.RSLT
                    , TRTS.ESTIER
                    , FC_GET_USERNAME(TRTS.ESTIER) AS ESTIER_NM
                    , FC_CODE_NM_003('D10006', TRTS.RSLT) AS RSLT_NM
             FROM     MRASYS.TBEB_TRNG_ASK_RACER  TTAR
                    , MRASYS.TBEC_RACER_MASTER    TRM
                    , TBDO_RACER_TRNG_START TRTS
             WHERE  1=1
             AND    TTAR.RACER_NO     = TRM .RACER_NO
             AND    TTAR.TRNG_ASK_SEQ = TRTS.TRNG_ASK_SEQ(+)
             AND    TTAR.RACER_NO     = TRTS.RACER_NO    (+)
             AND    TTAR.TRNG_ASK_SEQ = ? 
             AND    TRTS.ESTI_DT(+) = ? 
             ORDER BY TTAR.RACER_NO
 #String#20120903#String#12-0002#String#20120903#
>
[I][UbiData][2012-08-30 23:01:34]	- Row size : 0
[I][UbiData][2012-08-30 23:01:34]	- Data
<

>
[I][UbiData][2012-08-30 23:01:34][DATA QUERY END]
--------------------------------------------------------------------------------


[I][UbiForm][2012-08-30 23:02:17][REQUEST FILE]
[I][UbiForm][2012-08-30 23:02:17]	- Report : /web/waspage/can_boa/report/d07000003_1.jrf
[I][UbiForm][2012-08-30 23:02:17]	- Common : /web/waspage/can_boa/report/property/commonitem.xml [Not found]
--------------------------------------------------------------------------------


[I][UbiData][2012-08-30 23:02:17][REQUEST FILE]
[I][UbiData][2012-08-30 23:02:17]	- Report : d07000003_1.jrf
--------------------------------------------------------------------------------
[I][UbiData][2012-08-30 23:02:17][DB CONNECT]
[I][UbiData][2012-08-30 23:02:17]	- Type : nonlookup
[I][UbiData][2012-08-30 23:02:17]	- Db id : canboa
[I][UbiData][2012-08-30 23:02:17]	- Sql id : SQL
[I][UbiData][2012-08-30 23:02:17]	- Datasource : jdbc/BOADS
[I][UbiData][2012-08-30 23:02:17]	- Status : Success
--------------------------------------------------------------------------------
[I][UbiData][2012-08-30 23:02:17][DATA QUERY START]
[I][UbiData][2012-08-30 23:02:17]	- sql id : SQL
[I][UbiData][2012-08-30 23:02:17]	- Db charset : KSC5601
[I][UbiData][2012-08-30 23:02:17]	- Sql
<
SELECT   
                      TTAR.TRNG_ASK_SEQ
                    , TTAR.RACER_NO
                    , TRM .NM_KOR
                    , NVL(TRTS.ESTI_DT, ? ) ESTI_DT
                    , TRTS.RSLT1
                    , TRTS.RSLT2
                    , TRTS.RSLT3
                    , TRTS.RSLT4
                    , TRTS.RSLT5
                    , TRTS.RSLT6
                    , TRTS.RSLT
                    , TRTS.ESTIER
                    , FC_GET_USERNAME(TRTS.ESTIER) AS ESTIER_NM
                    , FC_CODE_NM_003('D10006', TRTS.RSLT) AS RSLT_NM
             FROM     MRASYS.TBEB_TRNG_ASK_RACER  TTAR
                    , MRASYS.TBEC_RACER_MASTER    TRM
                    , TBDO_RACER_TRNG_START TRTS
             WHERE  1=1
             AND    TTAR.RACER_NO     = TRM .RACER_NO
             AND    TTAR.TRNG_ASK_SEQ = TRTS.TRNG_ASK_SEQ(+)
             AND    TTAR.RACER_NO     = TRTS.RACER_NO    (+)
             AND    TTAR.TRNG_ASK_SEQ = ? 
             AND    TRTS.ESTI_DT(+) = ? 
             ORDER BY TTAR.RACER_NO
 #String#20120903#String#12-0002#String#20120903#
>
[I][UbiData][2012-08-30 23:02:17]	- Row size : 0
[I][UbiData][2012-08-30 23:02:17]	- Data
<

>
[I][UbiData][2012-08-30 23:02:17][DATA QUERY END]
--------------------------------------------------------------------------------


[I][UbiForm][2012-08-30 23:03:16][REQUEST FILE]
[I][UbiForm][2012-08-30 23:03:16]	- Report : /web/waspage/can_boa/report/d07000003_2.jrf
[I][UbiForm][2012-08-30 23:03:16]	- Common : /web/waspage/can_boa/report/property/commonitem.xml [Not found]
--------------------------------------------------------------------------------


[I][UbiData][2012-08-30 23:03:16][REQUEST FILE]
[I][UbiData][2012-08-30 23:03:16]	- Report : d07000003_2.jrf
--------------------------------------------------------------------------------
[I][UbiData][2012-08-30 23:03:16][DB CONNECT]
[I][UbiData][2012-08-30 23:03:16]	- Type : nonlookup
[I][UbiData][2012-08-30 23:03:16]	- Db id : canboa
[I][UbiData][2012-08-30 23:03:16]	- Sql id : SQL
[I][UbiData][2012-08-30 23:03:16]	- Datasource : jdbc/BOADS
[I][UbiData][2012-08-30 23:03:16]	- Status : Success
--------------------------------------------------------------------------------
[I][UbiData][2012-08-30 23:03:16][DATA QUERY START]
[I][UbiData][2012-08-30 23:03:16]	- sql id : SQL
[I][UbiData][2012-08-30 23:03:16]	- Db charset : KSC5601
[I][UbiData][2012-08-30 23:03:16]	- Sql
<
SELECT   
                      TTAR.TRNG_ASK_SEQ
                    , TTAR.RACER_NO
                    , TRM .NM_KOR
                    , NVL(TRTT.ESTI_DT, ? ) ESTI_DT
                    , TRTT.ITEM1
                    , TRTT.ITEM2
                    , TRTT.ITEM3
                    , TRTT.ITEM4
                    , TRTT.ITEM5
                    , TRTT.DISQUAL
                    , TRTT.RSLT
                    , TRTT.ESTIER
                    , FC_GET_USERNAME(TRTT.ESTIER) AS ESTIER_NM
                    , FC_CODE_NM_003('D10006', TRTT.RSLT) AS RSLT_NM
             FROM     MRASYS.TBEB_TRNG_ASK_RACER  TTAR
                    , MRASYS.TBEC_RACER_MASTER    TRM
                    , TBDO_RACER_TRNG_MNGTECH TRTT
             WHERE  1=1
             AND    TTAR.RACER_NO     = TRM .RACER_NO
             AND    TTAR.TRNG_ASK_SEQ = TRTT.TRNG_ASK_SEQ(+)
             AND    TTAR.RACER_NO     = TRTT.RACER_NO    (+)
             AND    TTAR.TRNG_ASK_SEQ = ? 
             AND    TRTT.ESTI_DT(+) = ? 
             ORDER BY TTAR.RACER_NO
 #String#20120903#String#12-0002#String#20120903#
>
[I][UbiData][2012-08-30 23:03:16]	- Row size : 0
[I][UbiData][2012-08-30 23:03:16]	- Data
<

>
[I][UbiData][2012-08-30 23:03:16][DATA QUERY END]
--------------------------------------------------------------------------------


[I][UbiForm][2012-08-30 23:03:20][REQUEST FILE]
[I][UbiForm][2012-08-30 23:03:20]	- Report : /web/waspage/can_boa/report/d07000003_3.jrf
[I][UbiForm][2012-08-30 23:03:20]	- Common : /web/waspage/can_boa/report/property/commonitem.xml [Not found]
--------------------------------------------------------------------------------


[I][UbiData][2012-08-30 23:03:20][REQUEST FILE]
[I][UbiData][2012-08-30 23:03:20]	- Report : d07000003_3.jrf
--------------------------------------------------------------------------------
[I][UbiData][2012-08-30 23:03:20][DB CONNECT]
[I][UbiData][2012-08-30 23:03:20]	- Type : nonlookup
[I][UbiData][2012-08-30 23:03:20]	- Db id : canboa
[I][UbiData][2012-08-30 23:03:20]	- Sql id : SQL
[I][UbiData][2012-08-30 23:03:20]	- Datasource : jdbc/BOADS
[I][UbiData][2012-08-30 23:03:20]	- Status : Success
--------------------------------------------------------------------------------
[I][UbiData][2012-08-30 23:03:20][DATA QUERY START]
[I][UbiData][2012-08-30 23:03:20]	- sql id : SQL
[I][UbiData][2012-08-30 23:03:20]	- Db charset : KSC5601
[I][UbiData][2012-08-30 23:03:20]	- Sql
<
SELECT   
                      TTAR.TRNG_ASK_SEQ
                    , TTAR.RACER_NO
                    , TRM .NM_KOR
                    , NVL(TRTM.ESTI_DT, ? ) ESTI_DT
                    , TRTM.ITEM1
                    , TRTM.ITEM2
                    , TRTM.ITEM3
                    , TRTM.ITEM4
                    , TRTM.ITEM5
                    , TRTM.ITEM6
                    , TRTM.ITEM7
                    , TRTM.DISQUAL
                    , TRTM.RSLT
                    , TRTM.ESTIER
                    , FC_GET_USERNAME(TRTM.ESTIER) AS ESTIER_NM
                    , FC_CODE_NM_003('D10006', TRTM.RSLT) AS RSLT_NM
             FROM     MRASYS.TBEB_TRNG_ASK_RACER  TTAR
                    , MRASYS.TBEC_RACER_MASTER    TRM
                    , TBDO_RACER_TRNG_MANIEX TRTM
             WHERE  1=1
             AND    TTAR.RACER_NO     = TRM .RACER_NO
             AND    TTAR.TRNG_ASK_SEQ = TRTM.TRNG_ASK_SEQ(+)
             AND    TTAR.RACER_NO     = TRTM.RACER_NO    (+)
             AND    TTAR.TRNG_ASK_SEQ = ? 
             AND    TRTM.ESTI_DT(+) = ? 
             ORDER BY TTAR.RACER_NO
 #String#20120903#String#12-0002#String#20120903#
>
[I][UbiData][2012-08-30 23:03:20]	- Row size : 0
[I][UbiData][2012-08-30 23:03:20]	- Data
<

>
[I][UbiData][2012-08-30 23:03:20][DATA QUERY END]
--------------------------------------------------------------------------------

