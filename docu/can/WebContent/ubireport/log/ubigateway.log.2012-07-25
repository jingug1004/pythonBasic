
[I][UbiForm][2012-07-25 14:43:31][REQUEST FILE]
[I][UbiForm][2012-07-25 14:43:31]	- Report : /web/waspage/usrbm/report/rsm/rsm2020.jrf
[I][UbiForm][2012-07-25 14:43:31]	- Common : /web/waspage/usrbm/report/rsm/property/commonitem.xml [Not found]
--------------------------------------------------------------------------------


[I][UbiData][2012-07-25 14:43:32][REQUEST FILE]
[I][UbiData][2012-07-25 14:43:32]	- Report : rsm2020.jrf
--------------------------------------------------------------------------------
[I][UbiData][2012-07-25 14:43:32][DB CONNECT]
[I][UbiData][2012-07-25 14:43:32]	- Type : nonlookup
[I][UbiData][2012-07-25 14:43:32]	- Db id : rbm
[I][UbiData][2012-07-25 14:43:32]	- Sql id : rsm2020_s06Today
[I][UbiData][2012-07-25 14:43:32]	- Datasource : jdbc/RBM
[I][UbiData][2012-07-25 14:43:32]	- Status : Success
--------------------------------------------------------------------------------
[I][UbiData][2012-07-25 14:43:32][DATA QUERY START]
[I][UbiData][2012-07-25 14:43:32]	- sql id : rsm2020_s06Today
[I][UbiData][2012-07-25 14:43:32]	- Db charset : KSC5601
[I][UbiData][2012-07-25 14:43:32]	- Sql
<
WITH J 
 AS
 (SELECT    
         '전회' AS COL_DESC  
     , tms                                                                                       
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='12' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_02    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='16' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_06    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='22'  THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_12    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='20' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_10    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='23' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_13    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='24' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_14    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='13' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_03    
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='25'  THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_15    
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='19' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_09    
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='14' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_05    
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='26' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_16    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='27' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_17    
     , SUM(                                                                              
           CASE                                                                          
              WHEN COMM_NO='06'  THEN NVL(DIV_TOTAL, 0)                                  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_01_06_01    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='28' THEN NVL(DIV_TOTAL, 0) 
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_01_07_18    
         , SUM(                                                                              
               CASE                                                                          
                  WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_04_07_01    
         , SUM(                                                                              
               CASE                                                                          
                  WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='02' THEN NVL(DIV_TOTAL, 0)  
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_04_07_02    
        , SUM(                                                                              
               CASE                                                                          
                  WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='03' THEN NVL(DIV_TOTAL, 0)  
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_04_07_03    
         , SUM(                                                                              
               CASE                                                                          
                  WHEN SELL_CD='02' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_02_07_01    
 
         , SUM(                                                                              
               CASE                                                                          
                  WHEN COMM_NO NOT IN ('01','02','03','04','08') THEN NVL(DIV_TOTAL, 0)                         
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_JIJUM    
         , SUM(DIV_TOTAL)/100 DIV_TOTAL                                                             
  FROM   TBES_SDL_DT_SUM                                                                         
  WHERE  1=1                                                                                    
    AND STND_YEAR  = ?                                                            
    AND MEET_CD    = ?                                                        
    AND TMS        BETWEEN ?  - 1 AND ? 
    AND DAY_ORD    = ? 
  GROUP BY TMS 
 )
 SELECT  DECODE(TMS, ? , '합계','전회') COL_DESC
        , TMS
        ,'1' AS GUBN
        ,DIV_01_07_02 
        ,DIV_01_07_06 
        ,DIV_01_07_12 
        ,DIV_01_07_10 
        ,DIV_01_07_13 
        ,DIV_01_07_14 
        ,DIV_01_07_03 
        ,DIV_01_07_15 
        ,DIV_01_07_09 
        ,DIV_01_07_05 
        ,DIV_01_07_16 
        ,DIV_01_07_17 
        ,DIV_01_06_01 
        ,DIV_01_07_18 
        ,DIV_04_07_01 
        ,DIV_04_07_02 
        ,DIV_04_07_03 
        ,DIV_02_07_01
        ,DIV_JIJUM
        ,1
 FROM J
 UNION ALL
 SELECT '점유율'
       , TMS
       , '2'
       , ROUND(DIV_01_07_02 / DIV_TOTAL * 100, 2) 
       , ROUND(DIV_01_07_06 / DIV_TOTAL * 100, 2)   
       , ROUND(DIV_01_07_12 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_10 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_13 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_14 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_03 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_15 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_09 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_05 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_16 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_17 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_06_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_18 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_02 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_03 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_02_07_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_JIJUM / DIV_TOTAL * 100, 2)    
       , 100
 FROM J
 WHERE tms = ? 
 UNION ALL
 SELECT '전회차'
       , TMS
       , '2'
       , ROUND(DIV_01_07_02 / DIV_TOTAL * 100, 2) 
       , ROUND(DIV_01_07_06 / DIV_TOTAL * 100, 2)   
       , ROUND(DIV_01_07_12 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_10 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_13 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_14 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_03 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_15 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_09 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_05 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_16 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_17 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_06_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_18 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_02 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_03 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_02_07_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_JIJUM / DIV_TOTAL * 100, 2)    
       , 100
 FROM J
 WHERE TMS = ?  -1
 ORDER BY 3, 2 DESC
 #String#2012#String#003#String#24#String#24#String#1#String#24#String#24#String#24#
>
[I][UbiData][2012-07-25 14:43:32]	- Row size : 2
[I][UbiData][2012-07-25 14:43:32]	- Data
<
전회^t23^t1^t5604762^t6649467^t4324938^t4841670^t4018207^t7296676^t4219007^t3258551^t7134231^t6493783^t4037171^t5730847^t145310^t2644921^t1957843^t3420346^t0^t0^t71777730^t1^t^n전회차^t23^t2^t6.64^t7.88^t5.13^t5.74^t4.76^t8.65^t5^t3.86^t8.46^t7.7^t4.79^t6.79^t.17^t3.14^t2.32^t4.06^t0^t0^t85.1^t100^t^n
>
[I][UbiData][2012-07-25 14:43:32][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-07-25 14:43:32][DATA QUERY START]
[I][UbiData][2012-07-25 14:43:32]	- sql id : rsm2020_s11
[I][UbiData][2012-07-25 14:43:32]	- Db charset : KSC5601
[I][UbiData][2012-07-25 14:43:32]	- Sql
<
SELECT 
         '0~'||BB.RACE_NO||'R' AS RACE_DESC,
         DECODE(LEV,1,'인원','점유율') AS MANA_DESC,
         CASE 
             WHEN LEV='2' AND IN_PRSN_NUM > 0 AND TOT_PRSN_NUM > 0 THEN ROUND(IN_PRSN_NUM / TOT_PRSN_NUM *100,2)    
             ELSE IN_PRSN_NUM
        END AS IN_PRSN_NUM, 
        CASE 
             WHEN LEV='2' AND BRNC_PRSN_NUM > 0 AND TOT_PRSN_NUM > 0 THEN ROUND(BRNC_PRSN_NUM / TOT_PRSN_NUM *100,2)    
             ELSE BRNC_PRSN_NUM
        END AS BRNC_PRSN_NUM, 
        CASE 
             WHEN LEV='2' AND TOT_PRSN_NUM > 0 THEN ROUND(TOT_PRSN_NUM / TOT_PRSN_NUM *100,2)    
             ELSE TOT_PRSN_NUM
        END AS TOT_PRSN_NUM, 
        CASE 
             WHEN LEV='1' THEN B_TOT_PRSN_NUM
        END AS B_TOT_PRSN_NUM, 
        CASE 
             WHEN LEV='1' THEN MINUS_PRSN_NUM
        END AS MINUS_PRSN_NUM, 
        CASE 
 
             WHEN LEV='1' AND TOT_PRSN_NUM>0 AND B_TOT_PRSN_NUM >0 THEN ROUND((TOT_PRSN_NUM - B_TOT_PRSN_NUM) / B_TOT_PRSN_NUM*100,2)
        END AS PER_PRSN_NUM 
 FROM
 (
      SELECT DU.LEV,
             SUM(CASE WHEN R.TMS =DU.TMS AND BRNC_CD = '98' THEN E.ENT_PRSN_NUM END) AS IN_PRSN_NUM,    
              SUM(CASE WHEN R.TMS =DU.TMS AND BRNC_CD <> '98' THEN E.ENT_PRSN_NUM END) AS BRNC_PRSN_NUM,    
              SUM(CASE WHEN R.TMS =DU.TMS THEN E.ENT_PRSN_NUM END) AS TOT_PRSN_NUM,    
              SUM(CASE WHEN R.TMS =DU.B_TMS THEN E.ENT_PRSN_NUM END) AS B_TOT_PRSN_NUM,    
              (SUM(CASE WHEN R.TMS =DU.TMS THEN E.ENT_PRSN_NUM END) - SUM(CASE WHEN R.TMS =DU.B_TMS THEN E.ENT_PRSN_NUM END)) AS MINUS_PRSN_NUM    
                      
          FROM                                                   
              TBRC_STAY_MANA E,    
              TBRK_SPEC_CD C,
              VW_SDL_INFO R,       
              (SELECT LEVEL AS LEV, ?  AS TMS,(?  - 1) AS B_TMS FROM DUAL CONNECT BY LEVEL<=2) DU 
          WHERE  1=1                
            AND E.BRNC_CD    = C.CD
            AND E.RACE_DT    = R.RACE_DAY                 
            AND C.GRP_CD        IN ('018','032')    
            AND R.MEET_CD    = '003'   
            AND R.STND_YEAR    = ?         
            AND R.TMS IN (? , ?  - 1)    
            AND R.DAY_ORD ='2'             
          GROUP BY DU.LEV
 )AA,
 (
     SELECT                                                                   
          MAX(RACE_NO)  AS RACE_NO
       FROM   (                                                                 
                   SELECT                                                       
                            TOR.RACE_NO                                         
                          , TOR.RACE_REG_NO                                     
                          , TOR.RACER_NO                                        
                          , TOR.RANK                                            
                          , TRM.NM_KOR                                          
                          , RANK() OVER (PARTITION BY TOR.RACE_NO               
                                                    , TOR.RANK                  
                                             ORDER BY TOR.RACE_REG_NO) SEQ      
                   FROM     TBEB_ORGAN@MRASYSLINK        TOR                        
                          , TBEC_RACER_MASTER@MRASYSLINK TRM                        
                   WHERE 1=1                                                        
                           
                   AND    TOR.RACER_NO   = TRM.RACER_NO                         
                   AND    TOR.STND_YEAR  = ?         
                   AND    TOR.MBR_CD     = '001'                                
                   AND    TOR.TMS        = ?         
                           
                   AND    TOR.RANK BETWEEN 1                                    
                                       AND 3                                    
              )                                                                 
       START WITH SEQ = 1                                                       
       CONNECT BY PRIOR SEQ = SEQ - 1                                           
       AND PRIOR RACE_NO = RACE_NO AND RANK = RANK     
 )BB
 ORDER BY AA.LEV
 #String#24#String#24#String#2012#String#24#String#24#String#2012#String#24#
>
[I][UbiData][2012-07-25 14:43:32]	- Row size : 2
[I][UbiData][2012-07-25 14:43:32]	- Data
<
0~08R^t인원^t^t^t^t38440^t^t^t^n0~08R^t점유율^t^t^t^t^t^t^t^n
>
[I][UbiData][2012-07-25 14:43:32][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-07-25 14:43:32][DATA QUERY START]
[I][UbiData][2012-07-25 14:43:32]	- sql id : rsm2020_s01
[I][UbiData][2012-07-25 14:43:32]	- Db charset : KSC5601
[I][UbiData][2012-07-25 14:43:32]	- Sql
<
SELECT 
           AA.MEET_CD,      
           AA.STND_YEAR,    
           AA.TMS,          
           AA.DAY_ORD,      
           TO_CHAR(TO_DATE(AA.RACE_DAY,'YYYYMMDD'),'YYYY-MM-DD') AS RACE_DAY, 
           AA.RACE_YOIL,    
           TO_CHAR(TO_DATE(AA.RACE_DAY,'YYYYMMDD'),'YYYY')||'년 '||AA.TMS||'회차 '||AA.DAY_ORD||'일차 ('|| TO_CHAR(TO_DATE(AA.RACE_DAY,'YYYYMMDD'),'YYYY-MM-DD')||') 경주 개최 결과'  
           AS RACE_DAY_INFO  
     
       FROM (         
             SELECT                              
             MEET_CD,      
             STND_YEAR,    
             TMS,          
             DAY_ORD,      
             RACE_DAY,     
             RACE_YOIL,    
             DECODE(RACE_YOIL,'MON','월','TUE','화','WED','수','THE','목','FRI','금','SAT','토','SUN','일','일') AS RACE_YOIL_KOR, 
             TO_CHAR(TO_DATE(RACE_DAY,'YYYYMMDD'),'YYYY-MM-DD')||
             ' ('||RACE_YOIL||') '||TMS||'회차 '||DAY_ORD||'일차'  
             AS RACE_INFO  
      FROM                                
             VW_SDL_INFO      
      WHERE  1=1                             
             AND MEET_CD = ?   
            AND STND_YEAR = ?   
            AND TMS= ?     
            AND DAY_ORD = ?        
    )AA
 #String#003#String#2012#String#24#String#1#
>
[I][UbiData][2012-07-25 14:43:32]	- Row size : 1
[I][UbiData][2012-07-25 14:43:32]	- Data
<
003^t2012^t24^t1^t2012-07-25^tWED^t2012년 24회차 1일차 (2012-07-25) 경주 개최 결과^t^n
>
[I][UbiData][2012-07-25 14:43:32][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-07-25 14:43:32][DATA QUERY START]
[I][UbiData][2012-07-25 14:43:32]	- sql id : rsm2020_s05Today
[I][UbiData][2012-07-25 14:43:32]	- Db charset : KSC5601
[I][UbiData][2012-07-25 14:43:32]	- Sql
<
SELECT                                                                                      
       DECODE(GROUPING(RACE_NO),0,RACE_NO,'TOTAL') RACE_NO 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='12' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_02 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='16' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_06 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='22'  THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_12 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='20' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_10 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='23' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_13 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='24' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_14 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='13' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_03 
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='25'  THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_15 
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='19' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_09 
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='14' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_05 
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='26' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_16 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='27' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_17 
     , SUM(                                                                              
           CASE                                                                          
              WHEN COMM_NO='06'  THEN NVL(DIV_TOTAL, 0)                                  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_01_06_01 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='28' THEN NVL(DIV_TOTAL, 0) 
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_01_07_18 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_04_07_01 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='02' THEN NVL(DIV_TOTAL, 0)  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_04_07_02 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='03' THEN NVL(DIV_TOTAL, 0)  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_04_07_03    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='02' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_02_07_01 
     , SUM(                                                                              
           CASE                                                                          
              WHEN  COMM_NO NOT IN ('01','02','03','04','08') THEN NVL(DIV_TOTAL, 0)                         
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_JIJUM  
 
     , SUM(DIV_TOTAL)/100 DIV_TOTAL                                                          
 FROM   TBES_SDL_DT                                                                         
 WHERE   1=1                                                                                   
      AND STND_YEAR  = ?                                                             
      AND    MEET_CD    = ?                                                        
      AND    TMS        = ?                                                            
      AND    DAY_ORD    = ?                                                        
 
 GROUP BY RACE_NO                                                                                   
       
 ORDER BY RACE_NO
 #String#2012#String#003#String#24#String#1#
>
[I][UbiData][2012-07-25 14:43:32]	- Row size : 8
[I][UbiData][2012-07-25 14:43:32]	- Data
<
01^t117750^t162914^t71148^t109416^t112935^t150015^t111690^t82653^t193333^t148217^t75718^t136001^t5346^t50449^t45038^t99495^t0^t0^t1674918^t1983277^t^n02^t154442^t199121^t87325^t139105^t147862^t231680^t154463^t129972^t235116^t185332^t93623^t162738^t7559^t87532^t57282^t120759^t0^t0^t2195508^t2550495^t^n03^t203558^t280920^t119379^t175650^t193091^t303518^t195684^t170459^t299297^t260458^t127967^t231998^t8153^t99198^t77307^t148679^t0^t0^t2897781^t3397961^t^n04^t186864^t249821^t123739^t176609^t161691^t268408^t166768^t147381^t258622^t249683^t122441^t242232^t7543^t98261^t82142^t160525^t0^t0^t2708209^t3223648^t^n05^t265177^t338939^t186366^t229886^t230208^t333609^t222750^t198703^t376084^t309587^t190013^t292324^t9712^t113897^t114891^t212140^t0^t0^t3629987^t4312655^t^n06^t293203^t391116^t218162^t242502^t249817^t397644^t240172^t254182^t414300^t340206^t185601^t340734^t9545^t120808^t123205^t214122^t0^t0^t4042092^t4783739^t^n07^t313030^t388919^t208324^t241320^t246392^t405240^t252697^t202649^t455772^t358373^t187478^t425404^t10515^t136184^t122424^t220500^t0^t0^t4181873^t4942508^t^n08^t344594^t423671^t230347^t293654^t267928^t470260^t261269^t236561^t455485^t412691^t216426^t368230^t10505^t139163^t125029^t247056^t0^t0^t4513862^t5346633^t^n
>
[I][UbiData][2012-07-25 14:43:32][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-07-25 14:43:32][DATA QUERY START]
[I][UbiData][2012-07-25 14:43:32]	- sql id : rsm2020_s03Today
[I][UbiData][2012-07-25 14:43:32]	- Db charset : KSC5601
[I][UbiData][2012-07-25 14:43:32]	- Sql
<
SELECT                                                                                    
      Z.RACE_NO, 
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          FC_GET_RSLT_RANK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO)                
      END RSLT_RANK, 
      R.RANK_1,  
      R.RANK_2,  
      R.RANK_3,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '001', NULL) 
      END WIN,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '002', '1')  
      END PLC,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '002', '2')  
      END PLC2,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '004', NULL) 
      END EX,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '005', NULL) 
      END QU,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '006', NULL) 
      END TRI,  
      D.BONJANG_TOTAL/1000 AS BONJANG_TOTAL, 
      D.JIJUM_TOTAL/1000 AS JIJUM_TOTAL,  
      D.DIV_TOTAL/1000 AS DIV_TOTAL,  
      NVL(D.REFUND,0)/1000 AS REFUND, 
      NVL(B.B_DIV_TOTAL,0)/1000 AS B_DIV_TOTAL,    
      NVL2(D.DIV_TOTAL, NVL((C.DIV_TOTAL-B.B_DIV_TOTAL),0),0)/1000 AS PLUS_MINUS, 
      CASE                                                                                  
          WHEN B.B_DIV_TOTAL<>0 THEN                                                        
          ROUND((C.DIV_TOTAL-B.B_DIV_TOTAL)/B.B_DIV_TOTAL*100,2)                            
          ELSE 0                                                                            
      END RATE,   
      SAME_PAYOFF_TOTAL,  
      SAME_PAYOFF_001, 
   SAME_PAYOFF_002, 
   SAME_PAYOFF_004, 
   SAME_PAYOFF_005, 
   SAME_PAYOFF_006 
  FROM   
   
      (   
                                                                 
          SELECT                                                                            
                D.MEET_CD,                                                                   
                D.STND_YEAR,                                                                 
                D.TMS,                                                                       
                D.DAY_ORD,                                                                   
                DECODE(D.RACE_NO,NULL,'TOTAL',D.RACE_NO) RACE_NO,                              
                SUM(                                                                        
                    CASE                                                                    
                      WHEN D.SELL_CD='03' THEN D.DIV_TOTAL                                    
                      ELSE 0                                                                
                    END                                                                     
                ) BONJANG_TOTAL,                                                            
                SUM(                                                                        
                    CASE                                                                    
                      WHEN D.SELL_CD !='03' THEN D.DIV_TOTAL                                     
                    END                                                                     
                ) JIJUM_TOTAL,                                                              
                SUM(D.REFUND) REFUND,
                SUM(D.DIV_TOTAL) AS DIV_TOTAL                                                         
          FROM   TBES_SDL_DT D                                                              
          WHERE 1=1                                                                             
              AND D.STND_YEAR(+)  = ? 
              AND D.MEET_CD(+)    = ? 
              AND D.TMS(+)        = ? 
              AND D.DAY_ORD(+)    = ? 
          GROUP BY                                                                          
                D.MEET_CD,                                                                   
                D.STND_YEAR,                                                                 
                D.TMS,                                                                       
                D.DAY_ORD,                                                                   
                ROLLUP(D.RACE_NO)                                                           
      ) D,                                                                                  
      (                                                                                     
         SELECT                                                                             
            P.MEET_CD,                                                                      
            P.STND_YEAR,                                                                    
            P.TMS,                                                                          
            P.DAY_ORD,                                                                      
            DECODE(P.RACE_NO,NULL,'TOTAL',P.RACE_NO) RACE_NO,                               
            SUM(POOL_TOTAL) DIV_TOTAL                                                       
         FROM                                                                               
             TBES_SDL_PT P                                                                  
         WHERE 1=1                                                                              
             AND P.STND_YEAR  = ? 
             AND P.MEET_CD    = ? 
             AND P.TMS        = ? 
             AND P.DAY_ORD    = ? 
         GROUP BY                                                                           
            P.MEET_CD,                                                                      
            P.STND_YEAR,                                                                    
            P.TMS,                                                                          
            P.DAY_ORD,                                                                      
            ROLLUP(P.RACE_NO)                                                               
      ) C,                                                                                  
      (                                                                                     
          SELECT                                                                            
                DECODE(RACE_NO,NULL,'TOTAL',RACE_NO) RACE_NO,                               
                SUM(DIV_TOTAL) B_DIV_TOTAL                                                  
          FROM   TBES_SDL_DT                                                                
          WHERE 1=1                                                                            
              AND  STND_YEAR  = ? 
              AND    MEET_CD    = ? 
              AND    TMS        = ?  -1                                                    
              AND    DAY_ORD    = ? 
          GROUP BY                                                                          
                ROLLUP(RACE_NO)                                                             
      ) B,                                                                                  
      (                                                                                     
          SELECT                                                                            
                RACE_NO                                                                     
              , MIN(DECODE(RANK, '1', NM_KOR)) RANK_1                                       
              , MIN(DECODE(RANK, '2', NM_KOR)) RANK_2                                       
              , MIN(DECODE(RANK, '3', NM_KOR)) RANK_3                                       
          FROM   (                                                                          
                   SELECT                                                                   
                            RACE_NO                                                         
                          , RANK                                                            
                          , SUBSTR(MAX(SYS_CONNECT_BY_PATH (NM_KOR, '/')), 2) NM_KOR        
                   FROM   (                                                                 
                               SELECT                                                       
                                        TOR.RACE_NO                                         
                                      , TOR.RACE_REG_NO                                     
                                      , TOR.RACER_NO                                        
                                      , TOR.RANK                                            
                                      , TRM.NM_KOR                                          
                                      , RANK() OVER (PARTITION BY TOR.RACE_NO               
                                                                , TOR.RANK                  
                                                         ORDER BY TOR.RACE_REG_NO) SEQ      
                               FROM     TBEB_ORGAN@MRASYSLINK        TOR                        
                                      , TBEC_RACER_MASTER@MRASYSLINK TRM                        
                               WHERE 1=1                
                               AND    TOR.RACER_NO   = TRM.RACER_NO                         
                               AND    TOR.STND_YEAR  = ? 
                               AND    TOR.MBR_CD     = '001'                                
                               AND    TOR.TMS        = ? 
                               AND    TOR.DAY_ORD    = ? 
                               AND    TOR.RANK BETWEEN 1                                    
                                                   AND 3                                    
                          )                                                                 
                   START WITH SEQ = 1                                                       
                   CONNECT BY PRIOR SEQ = SEQ - 1                                           
                   AND PRIOR RACE_NO = RACE_NO AND RANK = RANK                              
                   GROUP BY                                                                 
                            RACE_NO                                                         
                          , RANK                                                            
               )                                                                            
          GROUP BY RACE_NO                                                                  
          UNION ALL                                                                         
          SELECT 'TOTAL', '', '', '' FROM DUAL                                              
      ) R, 
      (   
     
       SELECT                                                                         
          RACE_NO,
            SUM(CASE 
                     WHEN POOL_CD = '001' AND RS_SEQ >= '2' THEN PAYOFF 
                     WHEN POOL_CD = '002' AND RS_SEQ >= '3' THEN PAYOFF 
                     WHEN POOL_CD = '004' AND RS_SEQ >= '2' THEN PAYOFF 
                     WHEN POOL_CD = '005' AND RS_SEQ >= '2' THEN PAYOFF 
                     WHEN POOL_CD = '006' AND RS_SEQ >= '2' THEN PAYOFF 
            END) AS SAME_PAYOFF_TOTAL, 
                               
            SUM(CASE WHEN POOL_CD = '001' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_001, 
            SUM(CASE WHEN POOL_CD = '002' AND RS_SEQ >= '3' THEN PAYOFF END) AS SAME_PAYOFF_002, 
            SUM(CASE WHEN POOL_CD = '004' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_004, 
            SUM(CASE WHEN POOL_CD = '005' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_005, 
            SUM(CASE WHEN POOL_CD = '006' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_006 
      FROM TBES_SDL_RS                                                                
      WHERE 1=1                                                                          
          AND MEET_CD  = '003'                                                              
          AND STND_YEAR = ?      
          AND TMS   = ?      
          AND DAY_ORD  = ?      
      GROUP BY          
       RACE_NO                                                              
 
   ) E,                                                                                  
  (                                       
    SELECT DISTINCT RACE_NO           
    FROM TBEB_RACE_DOC@MRASYSLINK D        
      WHERE 1=1                          
          AND D.STND_YEAR= ? 
          AND D.TMS=? 
           AND D.DAY_ORD=? 
 
   ) Z                                   
  WHERE 1=1                                                                                    
      AND C.RACE_NO(+)=Z.RACE_NO                                                                
      AND B.RACE_NO(+)=Z.RACE_NO                                                            
      AND R.RACE_NO(+)=Z.RACE_NO                                                            
      AND D.RACE_NO(+)=Z.RACE_NO
      AND E.RACE_NO(+)=Z.RACE_NO                                                            
  ORDER BY Z.RACE_NO
 #String#2012#String#003#String#24#String#1#String#2012#String#003#String#24#String#1#String#2012#String#003#String#24#String#1#String#2012#String#24#String#1#String#2012#String#24#String#1#String#2012#String#24#String#1#
>
[I][UbiData][2012-07-25 14:43:32]	- Row size : 15
[I][UbiData][2012-07-25 14:43:32]	- Data
<
01^t2-1-5^t고일수^t장영태^t김민길^t1.3^t1.3^t4^t7.6^t4.4^t6.6^t30835.9^t167491.8^t198327.7^t0^t215838.3^t-17510.6^t-8.11^t^t^t^t^t^t^t^n02^t5-6-3^t이재학^t김영욱^t심상철^t1.5^t1^t8.3^t10.7^t10.9^t3.9^t35498.7^t219550.8^t255049.5^t0^t291112.7^t-36063.2^t-12.39^t^t^t^t^t^t^t^n03^t2-1-3^t길현태^t김종민^t민영건^t3.5^t1.2^t1.1^t5.5^t1.7^t3.8^t50018^t289778.1^t339796.1^t0^t359821.6^t-20025.5^t-5.57^t^t^t^t^t^t^t^n04^t1-6-4^t정민수^t이주영^t이동준^t2.2^t1.5^t7.6^t33^t24.4^t26.9^t51543.9^t270820.9^t322364.8^t0^t401858.9^t-79494.1^t-19.78^t^t^t^t^t^t^t^n05^t3-2-4^t김계영^t배혜민^t우진수^t2.6^t1.4^t1.4^t5.6^t2.6^t7.2^t68266.8^t362998.7^t431265.5^t0^t466886.8^t-35621.3^t-7.63^t^t^t^t^t^t^t^n06^t6-2-3^t최재원^t이장호^t신동길^t53.8^t13.2^t1.3^t264.1^t64.3^t59.7^t74164.7^t404209.2^t478373.9^t0^t501702.6^t-23328.7^t-4.65^t^t^t^t^t^t^t^n07^t1-4-5^t어선규^t정철태^t김정구^t1.9^t1.5^t4.3^t17.3^t12.8^t20.7^t76063.5^t418187.3^t494250.8^t0^t540093.8^t-45843^t-8.49^t^t^t^t^t^t^t^n08^t1-3-5^t손동민^t이응석^t정용진^t2.8^t1.2^t1.9^t8^t4.7^t2.5^t83277.1^t451386.2^t534663.3^t0^t574142.2^t-39478.9^t-6.88^t^t^t^t^t^t^t^n09^t--^t^t^t^t^t^t^t^t^t^t^t^t^t0^t607820.9^t0^t-97.37^t^t^t^t^t^t^t^n10^t^t^t^t^t^t^t^t^t^t^t^t^t^t0^t706319.1^t0^t^t^t^t^t^t^t^t^n11^t^t^t^t^t^t^t^t^t^t^t^t^t^t0^t757588.9^t0^t^t^t^t^t^t^t^t^n12^t^t^t^t^t^t^t^t^t^t^t^t^t^t0^t745111.2^t0^t^t^t^t^t^t^t^t^n13^t^t^t^t^t^t^t^t^t^t^t^t^t^t0^t750387.9^t0^t^t^t^t^t^t^t^t^n14^t^t^t^t^t^t^t^t^t^t^t^t^t^t0^t725013.7^t0^t^t^t^t^t^t^t^t^n15^t^t^t^t^t^t^t^t^t^t^t^t^t^t0^t791161.3^t0^t^t^t^t^t^t^t^t^n
>
[I][UbiData][2012-07-25 14:43:32][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-07-25 14:43:32][DATA QUERY START]
[I][UbiData][2012-07-25 14:43:32]	- sql id : rsm2020_s02Today
[I][UbiData][2012-07-25 14:43:32]	- Db charset : KSC5601
[I][UbiData][2012-07-25 14:43:32]	- Sql
<
SELECT                                                                                          
           MST.GBN       
         , YEAR.DIV_TOTAL AS YEAR_TOTAL 
         , YEAR.REFUND    AS YEAR_REFUND 
         , TMS.D_1 
         , TMS.D_2   
         , TMS.D_3   
         , TMS.D_4   
         , TMS.D_5   
         , TMS.D_6   
         , TMS.D_7   
         , TMS.TOTAL 
         , PRE.TOTAL AS PRE_TOTAL 
         , NVL(TMS.TOTAL, 0) - NVL(PRE .TOTAL, 0) ADD_POOL 
         , CASE WHEN (NVL(PRE.TOTAL, 0) = 0) AND (NVL(TMS.TOTAL, 0) = 0) THEN 0                  
                WHEN NVL(PRE.TOTAL, 0) = 0                               THEN 100                
                WHEN NVL(TMS.TOTAL, 0) = 0                                THEN -100              
                ELSE ROUND((NVL(TMS.TOTAL, 0) - NVL(PRE.TOTAL, 0)) / NVL(PRE.TOTAL, 0) * 100, 2) 
           END ADD_RATE 
  FROM                                                                                           
           (                                                                                     
              SELECT                                                                             
                       ?  STND_YEAR                                                      
                     , '매출총액' GBN                                                            
              FROM   DUAL                                                                        
           ) MST                                                                                 
         , (                                                                                     
              SELECT                                                                             
                       TMS.STND_YEAR                                                             
                     , MIN(DECODE(TMS.D, 1, TMS.AMOUNT)) D_1                                     
                     , MIN(DECODE(TMS.D, 2, TMS.AMOUNT)) D_2                                     
                     , MIN(DECODE(TMS.D, 3, TMS.AMOUNT)) D_3                                     
                     , MIN(DECODE(TMS.D, 4, TMS.AMOUNT)) D_4                                     
                     , MIN(DECODE(TMS.D, 5, TMS.AMOUNT)) D_5                                     
                     , MIN(DECODE(TMS.D, 6, TMS.AMOUNT)) D_6                                     
                     , MIN(DECODE(TMS.D, 7, TMS.AMOUNT)) D_7                                     
                     , SUM(TMS.AMOUNT)                   TOTAL                                   
              FROM   (                                                                           
                          SELECT                                                                 
                                   TSP.STND_YEAR                                                 
                                 , TO_CHAR(TO_DATE(INFO.RACE_DAY, 'YYYYMMDD'), 'D') D            
                                 , SUM(TSP.POOL_TOTAL) AMOUNT                                    
                          FROM     VW_SDL_INFO INFO                                              
                                 , TBES_SDL_PT       TSP                                         
                          WHERE  1=1
                          AND    INFO.STND_YEAR = TSP.STND_YEAR                                  
                          AND    INFO.MEET_CD    = TSP.MEET_CD                                   
                          AND    INFO.TMS       = TSP.TMS                                        
                          AND    INFO.DAY_ORD   = TSP.DAY_ORD                                    
                          AND    TSP.STND_YEAR  = ?   
                          AND    TSP.MEET_CD    = ?       
                          AND    TSP.TMS        = ?       
                          GROUP BY                                                               
                                   TSP.STND_YEAR                                                 
                                 , INFO.RACE_DAY                                                 
                     ) TMS                                                                       
              GROUP BY TMS.STND_YEAR                                                             
           ) TMS                                                                                 
         , (                                                                                     
              SELECT                                                                             
                       STND_YEAR                                                                 
                     , SUM(TSP.DIV_TOTAL) DIV_TOTAL                                              
                     , SUM(TSP.REFUND    ) REFUND                                                
              FROM   TBES_SDL_DT_SUM       TSP                                                       
              WHERE  TSP.STND_YEAR  = ?                                                  
              AND    TSP.MEET_CD    = ?                                                    
              AND    TSP.TMS       <= ?                                                        
              GROUP BY                                                                           
                       STND_YEAR                                                                 
           ) YEAR                                                                                
         , (                                                                                     
              SELECT                                                                             
                       STND_YEAR                                                                 
                     , TMS                                                                       
                     , NVL(SUM(TSP.POOL_TOTAL), 0)  TOTAL                                        
              FROM   TBES_SDL_PT       TSP                                                       
              WHERE  1=1
              AND TSP.STND_YEAR  = ? 
              AND    TSP.MEET_CD    = ?                                                    
              AND    TSP.TMS        = ?  - 1                                                   
              GROUP BY                                                                           
                       STND_YEAR                                                                 
                     , TMS                                                                       
           ) PRE                                                                                 
  WHERE  1=1
  AND   MST.STND_YEAR = TMS .STND_YEAR(+)                                                       
  AND    MST.STND_YEAR = YEAR.STND_YEAR(+)                                                       
  AND    MST.STND_YEAR = PRE .STND_YEAR(+)                                                       
  UNION ALL                                                                                      
  SELECT                                                                                         
           MST.GBN                                                                               
         , YEAR.DIV_TOTAL                   YEAR_TOTAL                                           
         , YEAR.REFUND                      YEAR_REFUND                                          
         , TMS.D_1                                                                               
         , TMS.D_2                                                                               
         , TMS.D_3                                                                               
         , TMS.D_4                                                                               
         , TMS.D_5                                                                               
         , TMS.D_6                                                                               
         , TMS.D_7                                                                               
         , TMS.TOTAL                                                                             
         , 0 PRE_TOTAL                                                                           
         , NVL(PRE .TOTAL, 0) - NVL(TMS.TOTAL, 0) ADD_POOL                                       
         , CASE WHEN (NVL(PRE.TOTAL, 0) = 0) AND (NVL(TMS.TOTAL, 0) = 0) THEN 0                  
                WHEN NVL(PRE.TOTAL, 0) = 0                               THEN -100               
                WHEN NVL(TMS.TOTAL, 0) = 0                                THEN 100               
                ELSE ROUND((NVL(PRE.TOTAL, 0) - NVL(TMS.TOTAL, 0)) / NVL(TMS.TOTAL, 0) * 100, 2) 
           END ADD_RATE                                                                          
  FROM                                                                                           
           (                                                                                     
              SELECT                                                                             
                       ?  -1 STND_YEAR                                                    
                     , '전년대비' GBN                                                            
              FROM   DUAL                                                                        
           ) MST                                                                                 
         , (                                                                                     
              SELECT                                                                             
                       TMS.STND_YEAR                                                             
                     , MIN(DECODE(TMS.D, 1, TMS.AMOUNT)) D_1                                     
                     , MIN(DECODE(TMS.D, 2, TMS.AMOUNT)) D_2                                     
                     , MIN(DECODE(TMS.D, 3, TMS.AMOUNT)) D_3                                     
                     , MIN(DECODE(TMS.D, 4, TMS.AMOUNT)) D_4                                     
                     , MIN(DECODE(TMS.D, 5, TMS.AMOUNT)) D_5                                     
                     , MIN(DECODE(TMS.D, 6, TMS.AMOUNT)) D_6                                     
                     , MIN(DECODE(TMS.D, 7, TMS.AMOUNT)) D_7                                     
                     , SUM(TMS.AMOUNT)                   TOTAL                                   
              FROM   (                                                                           
                          SELECT                                                                 
                                   TSP.STND_YEAR                                                 
                                 , TO_CHAR(TO_DATE(INFO.RACE_DAY, 'YYYYMMDD'), 'D') D            
                                 , SUM(TSP.POOL_TOTAL) AMOUNT                                    
                          FROM     VW_SDL_INFO INFO                                              
                                 , TBES_SDL_PT       TSP                                         
                          WHERE  1=1
                          AND  INFO.STND_YEAR = TSP.STND_YEAR                                  
                          AND    INFO.MEET_CD    = TSP.MEET_CD                                   
                          AND    INFO.TMS       = TSP.TMS                                        
                          AND    INFO.DAY_ORD   = TSP.DAY_ORD                                    
                          AND    TSP.STND_YEAR  =  ?  -1                                   
                          AND    TSP.MEET_CD    = ?                                        
                          AND    TSP.TMS        = ?                                            
                          GROUP BY                                                               
                                   TSP.STND_YEAR                                                 
                                 , INFO.RACE_DAY                                                 
                     ) TMS                                                                       
              GROUP BY TMS.STND_YEAR                                                             
           ) TMS                                                                                 
         , (                                                                                     
              SELECT                                                                             
                       STND_YEAR                                                                 
                     , SUM(TSP.DIV_TOTAL) DIV_TOTAL                                              
                     , SUM(TSP.REFUND    ) REFUND                                                
              FROM   TBES_SDL_DT_SUM       TSP                                                       
              WHERE  1=1
              AND TSP.STND_YEAR  = ?  -1                                               
              AND    TSP.MEET_CD    = ?                                                    
              AND    TSP.TMS       <= ?                                                        
              GROUP BY                                                                           
                       STND_YEAR                                                                 
           ) YEAR                                                                                
         , (                                                                                     
              SELECT                                                                             
                       STND_YEAR-1 STND_YEAR                                                     
                     , TMS                                                                       
                     , NVL(SUM(TSP.POOL_TOTAL), 0)  TOTAL                                        
              FROM   TBES_SDL_PT       TSP                                                       
              WHERE  1=1
              AND TSP.STND_YEAR  = ?                                                  
              AND    TSP.MEET_CD    = ?                                                    
              AND    TSP.TMS        = ?                                                        
              GROUP BY                                                                           
                       STND_YEAR                                                                 
                     , TMS                                                                       
           ) PRE                                                                                 
  WHERE  1=1
  AND MST.STND_YEAR = TMS.STND_YEAR(+)                                                        
  AND    MST.STND_YEAR = YEAR.STND_YEAR(+)                                                       
  AND    MST.STND_YEAR = PRE.STND_YEAR(+)
 #String#2012#String#2012#String#003#String#24#String#2012#String#003#String#24#String#2012#String#003#String#24#String#2012#String#2012#String#003#String#24#String#2012#String#003#String#24#String#2012#String#003#String#24#
>
[I][UbiData][2012-07-25 14:43:33]	- Row size : 2
[I][UbiData][2012-07-25 14:43:33]	- Data
<
매출총액^t358271327600^t5718722800^t^t^t^t3070075500^t^t^t^t3070075500^t18485364600^t-15415289100^t-83.39^t^n전년대비^t406042307100^t7137145700^t^t^t^t7972541900^t8140317600^t^t^t16112859500^t0^t-13042784000^t-80.95^t^n
>
[I][UbiData][2012-07-25 14:43:33][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-07-25 14:43:33][DATA QUERY START]
[I][UbiData][2012-07-25 14:43:33]	- sql id : rsm2020_s04
[I][UbiData][2012-07-25 14:43:33]	- Db charset : KSC5601
[I][UbiData][2012-07-25 14:43:33]	- Sql
<
SELECT 
   ROW_ORDER,
   MANA_DESC, 
   TOTAL        
        ,SUN_NUM     
        ,TUE_NUM     
        ,WEN_NUM     
        ,THU_NUM     
        ,TOT_PRSN_NUM,    
        
        B_TOT_PRSN_NUM,          
        
        CASE 
              WHEN ROW_ORDER='2' THEN N_TOT_PRSN_NUM - TOT_PRSN_NUM
              ELSE PRSN_NUM_MINUS
        END PRSN_NUM_MINUS,          
        
        ROUND(CASE 
              WHEN ROW_ORDER='2' THEN (N_TOT_PRSN_NUM - TOT_PRSN_NUM)/TOT_PRSN_NUM*100
              ELSE PER
        END,2) AS PER             
  FROM
 (
  
  SELECT '1' AS ROW_ORDER,
    '입장인원' AS MANA_DESC,
     A.TMS                                                               
        ,TOT_PRSN_NUM                     
        ,MON_NUM 
              ,TUE_NUM 
              ,WEN_NUM 
              ,THU_NUM 
              ,FRI_NUM 
              ,SAT_NUM 
              ,SUN_NUM 
              ,B_TOT_PRSN_NUM
              ,(TOT_PRSN_NUM-B_TOT_PRSN_NUM) AS PRSN_NUM_MINUS
              ,DECODE(B_TOT_PRSN_NUM,0,0,(TOT_PRSN_NUM-B_TOT_PRSN_NUM)/B_TOT_PRSN_NUM*100)  AS PER
              ,TOTAL          
  
    FROM
    
    
    (
    
     SELECT   MAX(TMS) TMS
           ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
           ,NVL(SUM(A.ENT_PRSN_NUM ),0)         TOT_PRSN_NUM                                                      
           
          
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'2', A.ENT_PRSN_NUM,0 )) ,0) MON_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'3', A.ENT_PRSN_NUM,0 )) ,0) TUE_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'4', A.ENT_PRSN_NUM,0 )) ,0) WEN_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'5', A.ENT_PRSN_NUM,0 )) ,0) THU_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'6', A.ENT_PRSN_NUM,0 )) ,0) FRI_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'7', A.ENT_PRSN_NUM,0 )) ,0) SAT_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'1', A.ENT_PRSN_NUM,0 )) ,0) SUN_NUM       
    
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) =  ?  
                AND MEET_CD = ?   
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE 1=1
             AND STND_YEAR = ?  
                AND MEET_CD = ? 
                AND TMS  = ?  
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    GROUP BY B.TMS
    ) A,
    
    
    (
    
     SELECT   
            MAX(TMS) TMS
           ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
           ,NVL(SUM(A.ENT_PRSN_NUM ),0)         B_TOT_PRSN_NUM  
           
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) =  ?  
                AND MEET_CD = ?    
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE 1=1
             AND STND_YEAR = ?    
                AND MEET_CD = ? 
                AND TMS  = ?  - 1   
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    GROUP BY B.TMS
    ) B,
    
    (
    
     SELECT NVL(SUM(A.ENT_PRSN_NUM ),0)         TOTAL  
           
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) = ?  
                AND MEET_CD = ?   
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE STND_YEAR = ?  
                AND MEET_CD = ? 
                AND TMS <= ?  
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    )C
  UNION ALL 
  
  
  SELECT '2' AS ROW_ORDER,
    '전년대비' AS MANA_DESC,
     A.TMS                                                               
        ,TOT_PRSN_NUM                     
        ,MON_NUM 
              ,TUE_NUM 
              ,WEN_NUM 
              ,THU_NUM 
              ,FRI_NUM 
              ,SAT_NUM 
              ,SUN_NUM 
              ,B_TOT_PRSN_NUM
              ,(TOT_PRSN_NUM-B_TOT_PRSN_NUM) AS PRSN_NUM_MINUS
              ,DECODE(B_TOT_PRSN_NUM,0,0,(TOT_PRSN_NUM-B_TOT_PRSN_NUM)/B_TOT_PRSN_NUM*100)  AS PER
              ,TOT          
  
    FROM
    
    
    (
    
     SELECT   MAX(TMS) TMS
           ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
           ,NVL(SUM(A.ENT_PRSN_NUM ),0)         TOT_PRSN_NUM                                                      
           
          
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'2', A.ENT_PRSN_NUM,0 )) ,0) MON_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'3', A.ENT_PRSN_NUM,0 )) ,0) TUE_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'4', A.ENT_PRSN_NUM,0 )) ,0) WEN_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'5', A.ENT_PRSN_NUM,0 )) ,0) THU_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'6', A.ENT_PRSN_NUM,0 )) ,0) FRI_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'7', A.ENT_PRSN_NUM,0 )) ,0) SAT_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'1', A.ENT_PRSN_NUM,0 )) ,0) SUN_NUM       
    
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) = ?  - 1  
                AND MEET_CD    = ?   
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE STND_YEAR = ?  - 1  
                AND MEET_CD =?  
                AND TMS  = ?    
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    GROUP BY B.TMS
    ) A,
    
    
    (
    
     SELECT   
            MAX(TMS) TMS
           ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
           ,NVL(SUM(A.ENT_PRSN_NUM ),0)         B_TOT_PRSN_NUM  
           
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) = ?  -1 
                AND MEET_CD = ?     
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE STND_YEAR = ?  - 1  
                AND MEET_CD = ? 
                AND TMS  = ?  - 1  
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    GROUP BY B.TMS
    ) B,
    
    (
    
     SELECT NVL(SUM(A.ENT_PRSN_NUM ),0)         TOT  
           
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) =  ?  -1 
                AND MEET_CD = '003'
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE STND_YEAR = ?  -1  
                AND MEET_CD = ? 
                AND TMS  <= ?   
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    )C
  ),
  (
  SELECT SUM(A.ENT_PRSN_NUM ) AS N_TOT_PRSN_NUM
      FROM 
          TBRC_STAY_MANA  A,       
          VW_SDL_INFO B
      WHERE 1 =1
        AND A.RACE_DT(+) = B.RACE_DAY
        AND B.STND_YEAR =  ?  
        AND B.MEET_CD = ?    
        AND B.TMS  = ?       
  )BB  
 ORDER BY MANA_DESC
 #String#2012#String#003#String#2012#String#003#String#24#String#2012#String#003#String#2012#String#003#String#24#String#2012#String#003#String#2012#String#003#String#24#String#2012#String#003#String#2012#String#003#String#24#String#2012#String#003#String#2012#String#003#String#24#String#2012#String#2012#String#003#String#24#String#2012#String#003#String#24#
>
[I][UbiData][2012-07-25 14:43:33]	- Row size : 2
[I][UbiData][2012-07-25 14:43:33]	- Data
<
1^t입장인원^t1449123^t0^t0^t13834^t0^t13834^t72904^t-59070^t-81.02^t^n2^t전년대비^t1893112^t0^t0^t36334^t37093^t73427^t77958^t-59593^t-81.16^t^n
>
[I][UbiData][2012-07-25 14:43:33][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-07-25 14:43:33][DATA QUERY START]
[I][UbiData][2012-07-25 14:43:33]	- sql id : rsm2020_s07
[I][UbiData][2012-07-25 14:43:33]	- Db charset : KSC5601
[I][UbiData][2012-07-25 14:43:33]	- Sql
<
SELECT  
   '0~'||BB.RACE_NO||'R' AS RACE_DESC,
   DECODE(LEV,1,'인원','점유율') AS MANA_DESC,
      DECODE(LEV,1,INWON_12,DECODE(INWON_TOTAL,0,0,ROUND(INWON_12/INWON_TOTAL*100,2))) AS INWON_12, 
      DECODE(LEV,1,INWON_13,DECODE(INWON_TOTAL,0,0,ROUND(INWON_13/INWON_TOTAL*100,2))) AS INWON_13, 
      DECODE(LEV,1,INWON_14,DECODE(INWON_TOTAL,0,0,ROUND(INWON_14/INWON_TOTAL*100,2))) AS INWON_14, 
      DECODE(LEV,1,INWON_16,DECODE(INWON_TOTAL,0,0,ROUND(INWON_16/INWON_TOTAL*100,2))) AS INWON_16, 
      DECODE(LEV,1,INWON_19,DECODE(INWON_TOTAL,0,0,ROUND(INWON_19/INWON_TOTAL*100,2))) AS INWON_19, 
      DECODE(LEV,1,INWON_20,DECODE(INWON_TOTAL,0,0,ROUND(INWON_20/INWON_TOTAL*100,2))) AS INWON_20, 
      DECODE(LEV,1,INWON_22,DECODE(INWON_TOTAL,0,0,ROUND(INWON_22/INWON_TOTAL*100,2))) AS INWON_22, 
      DECODE(LEV,1,INWON_23,DECODE(INWON_TOTAL,0,0,ROUND(INWON_23/INWON_TOTAL*100,2))) AS INWON_23, 
      DECODE(LEV,1,INWON_24,DECODE(INWON_TOTAL,0,0,ROUND(INWON_24/INWON_TOTAL*100,2))) AS INWON_24, 
      DECODE(LEV,1,INWON_25,DECODE(INWON_TOTAL,0,0,ROUND(INWON_25/INWON_TOTAL*100,2))) AS INWON_25, 
      DECODE(LEV,1,INWON_26,DECODE(INWON_TOTAL,0,0,ROUND(INWON_26/INWON_TOTAL*100,2))) AS INWON_26, 
      DECODE(LEV,1,INWON_27,DECODE(INWON_TOTAL,0,0,ROUND(INWON_27/INWON_TOTAL*100,2))) AS INWON_27, 
      DECODE(LEV,1,INWON_28,DECODE(INWON_TOTAL,0,0,ROUND(INWON_28/INWON_TOTAL*100,2))) AS INWON_28, 
      DECODE(LEV,1,INWON_100,DECODE(INWON_TOTAL,0,0,ROUND(INWON_100/INWON_TOTAL*100,2))) AS INWON_100, 
      DECODE(LEV,1,INWON_101,DECODE(INWON_TOTAL,0,0,ROUND(INWON_101/INWON_TOTAL*100,2))) AS INWON_101, 
      DECODE(LEV,1,INWON_102,DECODE(INWON_TOTAL,0,0,ROUND(INWON_102/INWON_TOTAL*100,2))) AS INWON_102, 
      DECODE(LEV,1,INWON_103,DECODE(INWON_TOTAL,0,0,ROUND(INWON_103/INWON_TOTAL*100,2))) AS INWON_103, 
      DECODE(LEV,1,INWON_SUM,DECODE(INWON_TOTAL,0,0,ROUND(INWON_SUM/INWON_TOTAL*100,2))) AS INWON_TOTAL 
  FROM
 (
             SELECT  
        SUM(CASE WHEN BRNC_CD='12' THEN INWON END) AS INWON_12, 
        SUM(CASE WHEN BRNC_CD='13' THEN INWON END) AS INWON_13, 
        SUM(CASE WHEN BRNC_CD='14' THEN INWON END) AS INWON_14, 
        SUM(CASE WHEN BRNC_CD='16' THEN INWON END) AS INWON_16, 
        SUM(CASE WHEN BRNC_CD='19' THEN INWON END) AS INWON_19, 
        SUM(CASE WHEN BRNC_CD='20' THEN INWON END) AS INWON_20, 
        SUM(CASE WHEN BRNC_CD='22' THEN INWON END) AS INWON_22, 
        SUM(CASE WHEN BRNC_CD='23' THEN INWON END) AS INWON_23, 
        SUM(CASE WHEN BRNC_CD='24' THEN INWON END) AS INWON_24, 
        SUM(CASE WHEN BRNC_CD='25' THEN INWON END) AS INWON_25, 
        SUM(CASE WHEN BRNC_CD='26' THEN INWON END) AS INWON_26, 
        SUM(CASE WHEN BRNC_CD='27' THEN INWON END) AS INWON_27, 
        SUM(CASE WHEN BRNC_CD='28' THEN INWON END) AS INWON_28, 
        SUM(CASE WHEN BRNC_CD='100' THEN INWON END) AS INWON_100, 
        SUM(CASE WHEN BRNC_CD='101' THEN INWON END) AS INWON_101, 
        SUM(CASE WHEN BRNC_CD='102' THEN INWON END) AS INWON_102, 
        SUM(CASE WHEN BRNC_CD='103' THEN INWON END) AS INWON_103, 
        SUM(INWON ) AS INWON_TOTAL,
        SUM(CASE WHEN BRNC_CD='12' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='13' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='14' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='16' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='19' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='20' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='22' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='23' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='24' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='25' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='26' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='27' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='28' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='100' THEN INWON END) + 
                 SUM(CASE WHEN BRNC_CD='101' THEN INWON END) + 
                 SUM(CASE WHEN BRNC_CD='102' THEN INWON END) +
                 SUM(CASE WHEN BRNC_CD='103' THEN INWON END)  AS INWON_SUM 
     FROM
    (
    SELECT C.CD_NM, 
           E.BRNC_CD,                                      
            SUM( E.ENT_PRSN_NUM) INWON 
        FROM                                                   
         VW_SDL_INFO R       
         ,TBRC_STAY_MANA E, 
         TBRK_SPEC_CD C                      
        WHERE  1=1
           AND R.MEET_CD  = ?  
        AND R.STND_YEAR(+) = ?  
          AND R.TMS(+)   = ?  
          AND R.DAY_ORD(+) = ?  
         AND E.MEET_CD='003'                        
         AND E.RACE_DT=R.RACE_DAY                 
         AND C.GRP_CD IN ('018','032')                      
         AND C.CD=E.BRNC_CD                
         
        GROUP BY E.BRNC_CD,C.CD_NM          
        ORDER BY E.BRNC_CD
    )A
   )AA,
 (
  SELECT                                                                   
          MAX(RACE_NO)  AS RACE_NO
          
   FROM   (                                                                 
               SELECT                                                       
                        TOR.RACE_NO                                         
                      , TOR.RACE_REG_NO                                     
                      , TOR.RACER_NO                                        
                      , TOR.RANK                                            
                      , TRM.NM_KOR                                          
                      , RANK() OVER (PARTITION BY TOR.RACE_NO               
                                                , TOR.RANK                  
                                         ORDER BY TOR.RACE_REG_NO) SEQ      
               FROM     TBEB_ORGAN@MRASYSLINK        TOR                        
                      , TBEC_RACER_MASTER@MRASYSLINK TRM                        
               WHERE 1=1                                                        
               
               AND    TOR.RACER_NO   = TRM.RACER_NO                         
               AND    TOR.STND_YEAR  = ?  
               AND    TOR.MBR_CD     = '001'                                
               AND    TOR.TMS        = ?  
               
               AND    TOR.RANK BETWEEN 1                                    
                                   AND 3                                    
          )                                                                 
   START WITH SEQ = 1                                                       
   CONNECT BY PRIOR SEQ = SEQ - 1                                           
   AND PRIOR RACE_NO = RACE_NO AND RANK = RANK                           
 )BB , (SELECT LEVEL LEV FROM DUAL CONNECT BY LEVEL <=2 ) DU
 #String#003#String#2012#String#24#String#1#String#2012#String#24#
>
[I][UbiData][2012-07-25 14:43:33]	- Row size : 2
[I][UbiData][2012-07-25 14:43:33]	- Data
<
0~08R^t인원^t0^t1621^t1345^t2281^t2325^t2285^t801^t0^t0^t700^t0^t0^t0^t0^t0^t0^t0^t11358^t^n0~08R^t점유율^t0^t11.72^t9.72^t16.49^t16.81^t16.52^t5.79^t0^t0^t5.06^t0^t0^t0^t0^t0^t0^t0^t82.1^t^n
>
[I][UbiData][2012-07-25 14:43:33][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-07-25 14:43:33][DATA QUERY START]
[I][UbiData][2012-07-25 14:43:33]	- sql id : rsm2020_s08
[I][UbiData][2012-07-25 14:43:33]	- Db charset : KSC5601
[I][UbiData][2012-07-25 14:43:33]	- Sql
<
SELECT                                       
       STND_YEAR,  
       TMS,           
       DAY_ORD,   
       SPEC_DESC   
  FROM TBRD_RACE_SPEC_DESC 
  WHERE 1=1
       AND STND_YEAR = ?  
       AND TMS  = ?  
       AND DAY_ORD = ?  
       AND MEET_CD   = ?  
 UNION ALL
 SELECT 
       ' ', 999, 999, ' '
 FROM DUAL          
 ORDER BY TMS
 #String#2012#String#24#String#1#String#003#
>
[I][UbiData][2012-07-25 14:43:33]	- Row size : 1
[I][UbiData][2012-07-25 14:43:33]	- Data
<
 ^t999^t999^t ^t^n
>
[I][UbiData][2012-07-25 14:43:33][DATA QUERY END]
--------------------------------------------------------------------------------


[I][UbiForm][2012-07-25 14:43:42][REQUEST FILE]
[I][UbiForm][2012-07-25 14:43:42]	- Report : /web/waspage/usrbm/report/rsm/rsm2020_1.jrf
[I][UbiForm][2012-07-25 14:43:42]	- Common : /web/waspage/usrbm/report/rsm/property/commonitem.xml [Not found]
--------------------------------------------------------------------------------


[I][UbiData][2012-07-25 14:43:42][REQUEST FILE]
[I][UbiData][2012-07-25 14:43:42]	- Report : rsm2020_1.jrf
--------------------------------------------------------------------------------
[I][UbiData][2012-07-25 14:43:42][DB CONNECT]
[I][UbiData][2012-07-25 14:43:42]	- Type : nonlookup
[I][UbiData][2012-07-25 14:43:42]	- Db id : RBM
[I][UbiData][2012-07-25 14:43:42]	- Sql id : SQL
[I][UbiData][2012-07-25 14:43:42]	- Datasource : jdbc/RBM
[I][UbiData][2012-07-25 14:43:42]	- Status : Success
--------------------------------------------------------------------------------
[I][UbiData][2012-07-25 14:43:42][DATA QUERY START]
[I][UbiData][2012-07-25 14:43:42]	- sql id : SQL
[I][UbiData][2012-07-25 14:43:42]	- Db charset : KSC5601
[I][UbiData][2012-07-25 14:43:42]	- Sql
<
SELECT TO_CHAR(TO_NUMBER(RACE_NO))||'경주' AS RACE_NO,
                ROW_NUM as gbn,
                GBN_DESC AS GBN_DESC,
                SUM(POOL_TOTAL) - SUM(REFUND) AS TOT      
         FROM TBES_SDL_PT P,
             (
                 SELECT ROWNUM AS ROW_NUM, A.*
                 FROM   (
                     SELECT MEET_CD, STND_YEAR, TMS, DAY_ORD, SUBSTR(STND_YEAR,3,2)||'년 '||TMS||'회 '||DAY_ORD||'일차' AS GBN_DESC
                     FROM (
                         SELECT MEET_CD, STND_YEAR, TMS, DAY_ORD
                         FROM VW_SDL_INFO
                         WHERE MEET_CD = '003' 
                          AND  STND_YEAR||TMS||DAY_ORD <= ? ||? ||? 
                         ORDER BY STND_YEAR DESC, TMS DESC
                     )
                     WHERE ROWNUM < 4
                     UNION ALL
                     SELECT MEET_CD, STND_YEAR, TMS, DAY_ORD, SUBSTR(STND_YEAR,3,2)||'년 '||TMS||'회 '||DAY_ORD||'일차' AS GBN_DESC
                     FROM VW_SDL_INFO
                     WHERE MEET_CD = '003' 
                     AND   STND_YEAR= ?  -1
                     AND   TMS = ? 
                     AND   DAY_ORD = ? 
                     ORDER BY 1,2,3
                     ) A
             ) I
         WHERE P.MEET_CD(+)     = I.MEET_CD
           AND P.STND_YEAR(+)   = I.STND_YEAR
           AND P.TMS(+)         = I.TMS
           AND P.DAY_ORD(+)     = I.DAY_ORD
         GROUP BY ROW_NUM, RACE_NO, GBN_DESC  
         ORDER BY P.RACE_NO, I.ROW_NUM
 #String#2012#String#24#String#1#String#2012#String#24#String#1#
>
[I][UbiData][2012-07-25 14:43:42]	- Row size : 54
[I][UbiData][2012-07-25 14:43:42]	- Data
<
1경주^t1^t11년 24회 1일차^t218693000^t^n1경주^t2^t12년 23회 1일차^t215838300^t^n1경주^t3^t12년 23회 2일차^t250835500^t^n1경주^t4^t12년 24회 1일차^t198327700^t^n2경주^t1^t11년 24회 1일차^t109022600^t^n2경주^t2^t12년 23회 1일차^t291112700^t^n2경주^t3^t12년 23회 2일차^t343607300^t^n2경주^t4^t12년 24회 1일차^t255049500^t^n3경주^t1^t11년 24회 1일차^t264040400^t^n3경주^t2^t12년 23회 1일차^t359821600^t^n3경주^t3^t12년 23회 2일차^t417211500^t^n3경주^t4^t12년 24회 1일차^t339796100^t^n4경주^t1^t11년 24회 1일차^t392182000^t^n4경주^t2^t12년 23회 1일차^t401858900^t^n4경주^t3^t12년 23회 2일차^t456173400^t^n4경주^t4^t12년 24회 1일차^t322364800^t^n5경주^t1^t11년 24회 1일차^t458949500^t^n5경주^t2^t12년 23회 1일차^t466886800^t^n5경주^t3^t12년 23회 2일차^t527909000^t^n5경주^t4^t12년 24회 1일차^t431265500^t^n6경주^t1^t11년 24회 1일차^t474958900^t^n6경주^t2^t12년 23회 1일차^t501702600^t^n6경주^t3^t12년 23회 2일차^t607958500^t^n6경주^t4^t12년 24회 1일차^t478373900^t^n7경주^t1^t11년 24회 1일차^t443023200^t^n7경주^t2^t12년 23회 1일차^t540093800^t^n7경주^t3^t12년 23회 2일차^t613823900^t^n7경주^t4^t12년 24회 1일차^t494250800^t^n8경주^t1^t11년 24회 1일차^t555087700^t^n8경주^t2^t12년 23회 1일차^t574142200^t^n8경주^t3^t12년 23회 2일차^t685160100^t^n8경주^t4^t12년 24회 1일차^t534663300^t^n9경주^t1^t11년 24회 1일차^t589363600^t^n9경주^t2^t12년 23회 1일차^t607820900^t^n9경주^t3^t12년 23회 2일차^t722738000^t^n9경주^t4^t12년 24회 1일차^t15983900^t^n10경주^t1^t11년 24회 1일차^t676548600^t^n10경주^t2^t12년 23회 1일차^t706319100^t^n10경주^t3^t12년 23회 2일차^t849137700^t^n11경주^t1^t11년 24회 1일차^t714583900^t^n11경주^t2^t12년 23회 1일차^t757588900^t^n11경주^t3^t12년 23회 2일차^t874658600^t^n12경주^t1^t11년 24회 1일차^t741558700^t^n12경주^t2^t12년 23회 1일차^t745111200^t^n12경주^t3^t12년 23회 2일차^t938498200^t^n13경주^t1^t11년 24회 1일차^t728524300^t^n13경주^t2^t12년 23회 1일차^t750387900^t^n13경주^t3^t12년 23회 2일차^t903663500^t^n14경주^t1^t11년 24회 1일차^t733656000^t^n14경주^t2^t12년 23회 1일차^t725013700^t^n14경주^t3^t12년 23회 2일차^t909350600^t^n15경주^t1^t11년 24회 1일차^t781302300^t^n15경주^t2^t12년 23회 1일차^t791161300^t^n15경주^t3^t12년 23회 2일차^t949778900^t^n
>
[I][UbiData][2012-07-25 14:43:42][DATA QUERY END]
--------------------------------------------------------------------------------


[I][UbiForm][2012-07-25 16:04:10][REQUEST FILE]
[I][UbiForm][2012-07-25 16:04:10]	- Report : /web/waspage/usrbm/report/rsm/rsm4060.jrf
[I][UbiForm][2012-07-25 16:04:10]	- Common : /web/waspage/usrbm/report/rsm/property/commonitem.xml [Not found]
--------------------------------------------------------------------------------


[I][UbiData][2012-07-25 16:04:10][REQUEST FILE]
[I][UbiData][2012-07-25 16:04:10]	- Report : rsm4060.jrf
--------------------------------------------------------------------------------
[I][UbiData][2012-07-25 16:04:10][DB CONNECT]
[I][UbiData][2012-07-25 16:04:10]	- Type : nonlookup
[I][UbiData][2012-07-25 16:04:10]	- Db id : rbm
[I][UbiData][2012-07-25 16:04:10]	- Sql id : SQL1
[I][UbiData][2012-07-25 16:04:10]	- Datasource : jdbc/RBM
[I][UbiData][2012-07-25 16:04:10]	- Status : Success
--------------------------------------------------------------------------------
[I][UbiData][2012-07-25 16:04:10][DATA QUERY START]
[I][UbiData][2012-07-25 16:04:10]	- sql id : SQL1
[I][UbiData][2012-07-25 16:04:10]	- Db charset : KSC5601
[I][UbiData][2012-07-25 16:04:10]	- Sql
<
SELECT *
 FROM (
     SELECT  
           MEET_CD,  
           STND_YEAR,  
           DT,   
          BRNC_CD,  
          CD_NM,      
          GROSS_SALES, 
          CANCELS,  
          TOT_SALES,  
          CASHES,  
          NET_INCOME,  
          DRAWS,   
          RETURNS,
          BALANCE,  
          VERI,   
          VERI_DT,  
          FILE_PATH,  
          FILE_NM  
     FROM TBRD_LIS_FILE A 
     ,TBRK_SPEC_CD B    
     WHERE 1=1
      AND BRNC_CD=B.CD
      AND B.GRP_CD = '018'         
      AND BRNC_CD NOT IN ('00','01','02','03','04','06','08','98')
      AND STND_YEAR = ? 
      AND DT  = ? 
    ORDER BY BRNC_CD
 ) A
 #String#2012#String#0722#
>
[I][UbiData][2012-07-25 16:04:10]	- Row size : 18
[I][UbiData][2012-07-25 16:04:10]	- Data
<
001^t2012^t0722^t11^t수원^t1613690330^t0^t1613690330^t1389433950^t224256380^t87950310^t312206690^t0^t001^t2012-07-22 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120722/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0722^t12^t상봉^t1493747060^t42000^t1493705060^t1153495220^t340209840^t284046520^t624256360^t0^t001^t2012-07-22 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120722/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0722^t13^t일산^t1093160400^t127000^t1093033400^t941107870^t151925530^t99300000^t251225530^t0^t001^t2012-07-22 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120722/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0722^t14^t분당^t1589386470^t90000^t1589296470^t1292558430^t296738040^t97650500^t394388540^t0^t001^t2012-07-22 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120722/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0722^t15^t동대문^t770644434^t0^t770644434^t650405714^t120238720^t46789990^t167028710^t0^t001^t2012-07-22 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120722/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0722^t16^t장안^t1456924860^t0^t1456924860^t1082393380^t374531480^t211961039^t586492519^t0^t001^t2012-07-22 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120722/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0722^t17^t산본^t706708090^t0^t706708090^t520157840^t186550250^t43625000^t230175250^t0^t001^t2012-07-22 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120722/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0722^t18^t부천^t882004130^t0^t882004130^t676108330^t205895800^t101300000^t307195800^t0^t001^t2012-07-22 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120722/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0722^t19^t관악^t845372580^t0^t845372580^t631416260^t213956320^t229201000^t443157320^t0^t001^t2012-07-22 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120722/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0722^t20^t길음^t1169896470^t0^t1169896470^t976736410^t193160060^t55975000^t249135060^t0^t001^t2012-07-22 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120722/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0722^t21^t당산^t1892205220^t382900^t1891822320^t1661952740^t229869580^t71116000^t300985580^t0^t001^t2012-07-22 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120722/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0722^t22^t유성^t740415810^t0^t740415810^t583095150^t157320660^t70848360^t228169020^t0^t001^t2012-07-22 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120722/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0722^t23^t인천^t572768935^t64000^t572704935^t428435095^t144269840^t50970000^t195239840^t0^t001^t2012-07-22 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120722/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0722^t24^t시흥^t1027101310^t184000^t1026917310^t866176510^t160740800^t96042915^t256783715^t0^t001^t2012-07-22 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120722/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0722^t25^t논현^t968400680^t0^t968400680^t854597600^t113803080^t68625000^t182428080^t0^t001^t2012-07-22 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120722/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0722^t26^t천안^t858343900^t0^t858343900^t738336710^t120007190^t48486600^t168493790^t0^t001^t2012-07-22 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120722/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0722^t27^t올림픽^t3322557960^t1015000^t3321542960^t2819468520^t502074440^t191283000^t693357440^t0^t001^t2012-07-22 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120722/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0722^t28^t의정부^t817709700^t0^t817709700^t722140840^t95568860^t61200000^t156768860^t0^t001^t2012-07-22 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120722/divstatrpt.lis^tdivstatrpt.lis^t^n
>
[I][UbiData][2012-07-25 16:04:10][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-07-25 16:04:10][DATA QUERY START]
[I][UbiData][2012-07-25 16:04:10]	- sql id : SQL3
[I][UbiData][2012-07-25 16:04:10]	- Db charset : KSC5601
[I][UbiData][2012-07-25 16:04:10]	- Sql
<
SELECT *
 FROM (
     SELECT 
         '그린카드' AS MYCAT, 
         COMM_NO, 
         DIV_NO, 
         CD_NM AS COMM_NAME, 
         OUT_AMT, 
         IN_AMT, 
         MILEAGE_AMT, 
         BONUS_AMT,
         (IN_AMT-OUT_AMT-MILEAGE_AMT-BONUS_AMT) AS SIL_IN_AMT 
     FROM VW_MYCAT_INOUT A, TBRK_SPEC_CD B                                              
    WHERE 1=1
      AND RACE_DAY    = ?  
      AND A.DIV_NO = B.CD(+)
      AND B.GRP_CD(+) = '127'                                     
    ORDER BY DIV_NO   
 ) A
 #String#20120722#
>
[I][UbiData][2012-07-25 16:04:10]	- Row size : 4
[I][UbiData][2012-07-25 16:04:10]	- Data
<
그린카드^t06^t00^t본장^t27176190^t44170670^t104230^t0^t16890250^t^n그린카드^t06^t04^t동대문^t1094000^t2500000^t0^t15000^t1391000^t^n그린카드^t06^t07^t산본^t2296800^t2134000^t0^t12000^t-174800^t^n그린카드^t06^t15^t논현^t2591800^t5686050^t250^t0^t3094000^t^n
>
[I][UbiData][2012-07-25 16:04:10][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-07-25 16:04:10][DB CONNECT]
[I][UbiData][2012-07-25 16:04:10]	- Type : nonlookup
[I][UbiData][2012-07-25 16:04:10]	- Db id : RBM
[I][UbiData][2012-07-25 16:04:10]	- Sql id : SQL2
[I][UbiData][2012-07-25 16:04:10]	- Datasource : jdbc/RBM
[I][UbiData][2012-07-25 16:04:10]	- Status : Success
--------------------------------------------------------------------------------
[I][UbiData][2012-07-25 16:04:10][DATA QUERY START]
[I][UbiData][2012-07-25 16:04:10]	- sql id : SQL2
[I][UbiData][2012-07-25 16:04:10]	- Db charset : KSC5601
[I][UbiData][2012-07-25 16:04:10]	- Sql
<
SELECT *
 FROM (
  SELECT 
    MEET_CD,
          MEET_DESC,
          BRNC_CD,
          SUM(GROSS_SALES) AS GROSS_SALES,
          SUM(CANCELS) AS CANCELS,  
          SUM(TOT_SALES) AS TOT_SALES,  
          SUM(CASHES) AS CASHES,  
          SUM(NET_INCOME) AS NET_INCOME,  
          SUM(BALANCE) AS BALANCE  
  FROM
  (            
      SELECT 
        
              MEET_CD,  
        STND_YEAR,  
        DT,   
        CASE 
                          WHEN  A.BRNC_CD NOT IN ('00','01','02','03','04','06','08','98') THEN '지점계' 
                          WHEN  A.BRNC_CD IN ('06') THEN '그린카드'
                          WHEN  A.BRNC_CD IN ('08','98') AND MEET_CD ='003' THEN '미사리'
                          WHEN  A.BRNC_CD IN ('01','02','03','04','06') AND MEET_CD ='003' THEN '스피돔'
                          WHEN  A.BRNC_CD IN ('01','02','03','04','06','08','98') AND MEET_CD ='001' THEN '스피돔'
           ELSE  'X' 
           END AS  MEET_DESC, 
           CASE 
            WHEN  A.BRNC_CD NOT IN ('00','01','02','03','04','06','08','98') THEN '18' 
            WHEN  A.BRNC_CD IN ('06') THEN '06'
            WHEN  A.BRNC_CD IN ('01','02','03','04','06','08','98') THEN '00'
           ELSE  'X'
           END AS BRNC_CD,
           CASE 
            WHEN  A.BRNC_CD NOT IN ('00','01','02','03','04','06','08','98') THEN '1' 
            WHEN  A.BRNC_CD IN ('06') THEN '2'
            WHEN  A.BRNC_CD IN ('01','02','03','04','06','08','98') THEN '3'
           ELSE  'X' 
           END AS MEET_ORDER,           
           SUM(GROSS_SALES) AS GROSS_SALES,
           SUM(CANCELS) AS CANCELS,  
           SUM(TOT_SALES) AS TOT_SALES,  
           SUM(CASHES) AS CASHES,  
           SUM(NET_INCOME) AS NET_INCOME,  
           SUM(BALANCE) AS BALANCE  
     FROM TBRD_LIS_FILE A 
     WHERE 1=1     
       AND STND_YEAR = ? 
       AND DT    = ? 
     GROUP BY MEET_CD,  
        STND_YEAR,  
        DT,  
        A.BRNC_CD
  )        
  WHERE BRNC_CD != 'X'
  GROUP BY MEET_CD,MEET_ORDER,MEET_DESC,
          BRNC_CD        
  ORDER BY  MEET_ORDER                                  
 ) A
 #String#2012#String#0722#
>
[I][UbiData][2012-07-25 16:04:10]	- Row size : 3
[I][UbiData][2012-07-25 16:04:10]	- Data
<
001^t지점계^t18^t21821038339^t1904900^t21819133439^t17988016569^t3831116870^t0^t^n001^t그린카드^t06^t153752520^t0^t153752520^t105474080^t48278440^t48278440^t^n001^t스피돔^t00^t3808932825^t59500^t3808873325^t3165496565^t643376760^t0^t^n
>
[I][UbiData][2012-07-25 16:04:10][DATA QUERY END]
--------------------------------------------------------------------------------


[I][UbiForm][2012-07-25 18:30:07][REQUEST FILE]
[I][UbiForm][2012-07-25 18:30:07]	- Report : /web/waspage/usrbm/report/rsm/rsm4060.jrf
[I][UbiForm][2012-07-25 18:30:07]	- Common : /web/waspage/usrbm/report/rsm/property/commonitem.xml [Not found]
--------------------------------------------------------------------------------


[I][UbiData][2012-07-25 18:30:07][REQUEST FILE]
[I][UbiData][2012-07-25 18:30:07]	- Report : rsm4060.jrf
--------------------------------------------------------------------------------
[I][UbiData][2012-07-25 18:30:07][DB CONNECT]
[I][UbiData][2012-07-25 18:30:07]	- Type : nonlookup
[I][UbiData][2012-07-25 18:30:07]	- Db id : rbm
[I][UbiData][2012-07-25 18:30:07]	- Sql id : SQL1
[I][UbiData][2012-07-25 18:30:07]	- Datasource : jdbc/RBM
[I][UbiData][2012-07-25 18:30:07]	- Status : Success
--------------------------------------------------------------------------------
[I][UbiData][2012-07-25 18:30:07][DATA QUERY START]
[I][UbiData][2012-07-25 18:30:07]	- sql id : SQL1
[I][UbiData][2012-07-25 18:30:07]	- Db charset : KSC5601
[I][UbiData][2012-07-25 18:30:07]	- Sql
<
SELECT *
 FROM (
     SELECT  
           MEET_CD,  
           STND_YEAR,  
           DT,   
          BRNC_CD,  
          CD_NM,      
          GROSS_SALES, 
          CANCELS,  
          TOT_SALES,  
          CASHES,  
          NET_INCOME,  
          DRAWS,   
          RETURNS,
          BALANCE,  
          VERI,   
          VERI_DT,  
          FILE_PATH,  
          FILE_NM  
     FROM TBRD_LIS_FILE A 
     ,TBRK_SPEC_CD B    
     WHERE 1=1
      AND BRNC_CD=B.CD
      AND B.GRP_CD = '018'         
      AND BRNC_CD NOT IN ('00','01','02','03','04','06','08','98')
      AND STND_YEAR = ? 
      AND DT  = ? 
    ORDER BY BRNC_CD
 ) A
 #String#2012#String#0725#
>
[I][UbiData][2012-07-25 18:30:07]	- Row size : 15
[I][UbiData][2012-07-25 18:30:07]	- Data
<
003^t2012^t0725^t12^t상봉^t666772730^t10000^t666762730^t513230990^t153531740^t153819000^t307350740^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120725/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0725^t13^t일산^t667284440^t0^t667284440^t531136860^t136147580^t36730340^t172877920^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120725/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0725^t14^t분당^t839236870^t49000^t839187870^t654011580^t185176290^t39310000^t224486290^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120725/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0725^t16^t장안^t762868710^t130000^t762738710^t603601670^t159137040^t111379886^t270516926^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120725/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0725^t18^t부천^t0^t0^t0^t870000^t-870000^t1000000^t130000^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120725/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0725^t19^t관악^t753825660^t0^t753825660^t554988210^t198837450^t67120000^t265957450^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120725/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0725^t20^t길음^t756643370^t0^t756643370^t615434510^t141208860^t26177000^t167385860^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120725/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0725^t21^t당산^t0^t0^t0^t90000^t-90000^t90000^t0^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120725/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0725^t22^t유성^t380854050^t0^t380854050^t286887770^t93966280^t31048010^t125014290^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120725/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0725^t23^t인천^t431596440^t0^t431596440^t341578370^t90018070^t50124000^t140142070^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120725/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0725^t24^t시흥^t918565550^t184000^t918381550^t756570770^t161810780^t74888720^t236699500^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120725/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0725^t25^t논현^t591532940^t0^t591532940^t469587070^t121945870^t12500000^t134445870^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120725/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0725^t26^t천안^t537878680^t55000^t537823680^t427252700^t110570980^t24605000^t135175980^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120725/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0725^t27^t올림픽^t1018569280^t46000^t1018523280^t842859670^t175663610^t52197000^t227860610^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120725/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0725^t28^t의정부^t424126650^t17000^t424109650^t361382230^t62727420^t12405000^t75132420^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120725/divstatrpt.lis^tdivstatrpt.lis^t^n
>
[I][UbiData][2012-07-25 18:30:07][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-07-25 18:30:07][DATA QUERY START]
[I][UbiData][2012-07-25 18:30:07]	- sql id : SQL3
[I][UbiData][2012-07-25 18:30:07]	- Db charset : KSC5601
[I][UbiData][2012-07-25 18:30:07]	- Sql
<
SELECT *
 FROM (
     SELECT 
         '그린카드' AS MYCAT, 
         COMM_NO, 
         DIV_NO, 
         CD_NM AS COMM_NAME, 
         OUT_AMT, 
         IN_AMT, 
         MILEAGE_AMT, 
         BONUS_AMT,
         (IN_AMT-OUT_AMT-MILEAGE_AMT-BONUS_AMT) AS SIL_IN_AMT 
     FROM VW_MYCAT_INOUT A, TBRK_SPEC_CD B                                              
    WHERE 1=1
      AND RACE_DAY    = ?  
      AND A.DIV_NO = B.CD(+)
      AND B.GRP_CD(+) = '127'                                     
    ORDER BY DIV_NO   
 ) A
 #String#20120725#
>
[I][UbiData][2012-07-25 18:30:07]	- Row size : 2
[I][UbiData][2012-07-25 18:30:07]	- Data
<
그린카드^t06^t00^t본장^t2308670^t4954670^t27050^t0^t2618950^t^n그린카드^t06^t15^t논현^t3043000^t5613860^t4860^t0^t2566000^t^n
>
[I][UbiData][2012-07-25 18:30:07][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-07-25 18:30:07][DB CONNECT]
[I][UbiData][2012-07-25 18:30:07]	- Type : nonlookup
[I][UbiData][2012-07-25 18:30:07]	- Db id : RBM
[I][UbiData][2012-07-25 18:30:07]	- Sql id : SQL2
[I][UbiData][2012-07-25 18:30:07]	- Datasource : jdbc/RBM
[I][UbiData][2012-07-25 18:30:07]	- Status : Success
--------------------------------------------------------------------------------
[I][UbiData][2012-07-25 18:30:07][DATA QUERY START]
[I][UbiData][2012-07-25 18:30:07]	- sql id : SQL2
[I][UbiData][2012-07-25 18:30:07]	- Db charset : KSC5601
[I][UbiData][2012-07-25 18:30:07]	- Sql
<
SELECT *
 FROM (
  SELECT 
    MEET_CD,
          MEET_DESC,
          BRNC_CD,
          SUM(GROSS_SALES) AS GROSS_SALES,
          SUM(CANCELS) AS CANCELS,  
          SUM(TOT_SALES) AS TOT_SALES,  
          SUM(CASHES) AS CASHES,  
          SUM(NET_INCOME) AS NET_INCOME,  
          SUM(BALANCE) AS BALANCE  
  FROM
  (            
      SELECT 
        
              MEET_CD,  
        STND_YEAR,  
        DT,   
        CASE 
                          WHEN  A.BRNC_CD NOT IN ('00','01','02','03','04','06','08','98') THEN '지점계' 
                          WHEN  A.BRNC_CD IN ('06') THEN '그린카드'
                          WHEN  A.BRNC_CD IN ('08','98') AND MEET_CD ='003' THEN '미사리'
                          WHEN  A.BRNC_CD IN ('01','02','03','04','06') AND MEET_CD ='003' THEN '스피돔'
                          WHEN  A.BRNC_CD IN ('01','02','03','04','06','08','98') AND MEET_CD ='001' THEN '스피돔'
           ELSE  'X' 
           END AS  MEET_DESC, 
           CASE 
            WHEN  A.BRNC_CD NOT IN ('00','01','02','03','04','06','08','98') THEN '18' 
            WHEN  A.BRNC_CD IN ('06') THEN '06'
            WHEN  A.BRNC_CD IN ('01','02','03','04','06','08','98') THEN '00'
           ELSE  'X'
           END AS BRNC_CD,
           CASE 
            WHEN  A.BRNC_CD NOT IN ('00','01','02','03','04','06','08','98') THEN '1' 
            WHEN  A.BRNC_CD IN ('06') THEN '2'
            WHEN  A.BRNC_CD IN ('01','02','03','04','06','08','98') THEN '3'
           ELSE  'X' 
           END AS MEET_ORDER,           
           SUM(GROSS_SALES) AS GROSS_SALES,
           SUM(CANCELS) AS CANCELS,  
           SUM(TOT_SALES) AS TOT_SALES,  
           SUM(CASHES) AS CASHES,  
           SUM(NET_INCOME) AS NET_INCOME,  
           SUM(BALANCE) AS BALANCE  
     FROM TBRD_LIS_FILE A 
     WHERE 1=1     
       AND STND_YEAR = ? 
       AND DT    = ? 
     GROUP BY MEET_CD,  
        STND_YEAR,  
        DT,  
        A.BRNC_CD
  )        
  WHERE BRNC_CD != 'X'
  GROUP BY MEET_CD,MEET_ORDER,MEET_DESC,
          BRNC_CD        
  ORDER BY  MEET_ORDER                                  
 ) A
 #String#2012#String#0725#
>
[I][UbiData][2012-07-25 18:30:07]	- Row size : 3
[I][UbiData][2012-07-25 18:30:07]	- Data
<
003^t지점계^t18^t8749755370^t491000^t8749264370^t6959482400^t1789781970^t0^t^n003^t그린카드^t06^t26420130^t0^t26420130^t16557270^t9862860^t9862860^t^n003^t미사리^t00^t1886753220^t0^t1886753220^t1521955060^t364798160^t0^t^n
>
[I][UbiData][2012-07-25 18:30:07][DATA QUERY END]
--------------------------------------------------------------------------------

