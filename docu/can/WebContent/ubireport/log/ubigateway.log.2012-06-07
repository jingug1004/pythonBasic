
[I][UbiForm][2012-06-07 13:23:59][REQUEST FILE]
[I][UbiForm][2012-06-07 13:23:59]	- Report : /web/waspage/usrbm/report/rsm/rsm4060.jrf
[I][UbiForm][2012-06-07 13:23:59]	- Common : /web/waspage/usrbm/report/rsm/property/commonitem.xml [Not found]
--------------------------------------------------------------------------------


[I][UbiData][2012-06-07 13:23:59][REQUEST FILE]
[I][UbiData][2012-06-07 13:23:59]	- Report : rsm4060.jrf
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 13:23:59][DB CONNECT]
[I][UbiData][2012-06-07 13:23:59]	- Type : nonlookup
[I][UbiData][2012-06-07 13:23:59]	- Db id : rbm
[I][UbiData][2012-06-07 13:23:59]	- Sql id : SQL1
[I][UbiData][2012-06-07 13:23:59]	- Datasource : jdbc/RBM
[I][UbiData][2012-06-07 13:23:59]	- Status : Success
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 13:23:59][DATA QUERY START]
[I][UbiData][2012-06-07 13:23:59]	- sql id : SQL1
[I][UbiData][2012-06-07 13:23:59]	- Db charset : KSC5601
[I][UbiData][2012-06-07 13:23:59]	- Sql
<
SELECT *
 FROM (
     SELECT  
           MEET_CD,  
           STND_YEAR,  
           DT,   
          BRNC_CD,  
          CD_NM,      
          GROSS_SALES, 
          CANCELS,  
          TOT_SALES,  
          CASHES,  
          NET_INCOME,  
          DRAWS,   
          RETURNS,
          BALANCE,  
          VERI,   
          VERI_DT,  
          FILE_PATH,  
          FILE_NM  
     FROM TBRD_LIS_FILE A 
     ,TBRK_SPEC_CD B    
     WHERE 1=1
      AND BRNC_CD=B.CD
      AND B.GRP_CD = '018'         
      AND BRNC_CD NOT IN ('00','01','02','03','04','06','08','98')
      AND STND_YEAR = ? 
      AND DT  = ? 
    ORDER BY BRNC_CD
 ) A
 #String#2012#String#0603#
>
[I][UbiData][2012-06-07 13:23:59]	- Row size : 18
[I][UbiData][2012-06-07 13:23:59]	- Data
<
001^t2012^t0603^t11^t수원^t1549952840^t0^t1549952840^t1315242650^t234710190^t80196270^t314906460^t0^t001^t2012-06-03 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120603/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0603^t12^t상봉^t1380619920^t25500^t1380594420^t1044408720^t336185700^t122574410^t458760110^t0^t001^t2012-06-03 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120603/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0603^t13^t일산^t999083110^t100000^t998983110^t814568720^t184414390^t144386520^t328800910^t0^t001^t2012-06-03 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120603/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0603^t14^t분당^t1349730400^t110000^t1349620400^t1079242250^t270378150^t87300000^t357678150^t0^t001^t2012-06-03 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120603/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0603^t15^t동대문^t718493263^t75000^t718418263^t587746263^t130672000^t43900000^t174572000^t0^t001^t2012-06-03 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120603/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0603^t16^t장안^t1402261386^t70000^t1402191386^t1039636586^t362554800^t152577300^t515132100^t0^t001^t2012-06-03 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120603/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0603^t17^t산본^t679762180^t0^t679762180^t482661910^t197100270^t40930000^t238030270^t0^t001^t2012-06-03 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120603/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0603^t18^t부천^t798614210^t420000^t798194210^t618843630^t179350580^t93730000^t273080580^t0^t001^t2012-06-03 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120603/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0603^t19^t관악^t783098227^t0^t783098227^t579778027^t203320200^t95111500^t298431700^t0^t001^t2012-06-03 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120603/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0603^t20^t길음^t1093122040^t0^t1093122040^t918869000^t174253040^t56956650^t231209690^t0^t001^t2012-06-03 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120603/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0603^t21^t당산^t1736432628^t509000^t1735923628^t1499392548^t236531080^t79796090^t316327170^t0^t001^t2012-06-03 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120603/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0603^t22^t유성^t624883960^t0^t624883960^t474121350^t150762610^t62444761^t213207371^t0^t001^t2012-06-03 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120603/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0603^t23^t인천^t523398940^t0^t523398940^t370091630^t153307310^t45898000^t199205310^t0^t001^t2012-06-03 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120603/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0603^t24^t시흥^t948746130^t227000^t948519130^t809545110^t138974020^t131931400^t270905420^t0^t001^t2012-06-03 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120603/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0603^t25^t논현^t921943320^t0^t921943320^t775671590^t146271730^t52254840^t198526570^t0^t001^t2012-06-03 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120603/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0603^t26^t천안^t710902750^t0^t710902750^t588884490^t122018260^t32969040^t154987300^t0^t001^t2012-06-03 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120603/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0603^t27^t올림픽^t3071846130^t344600^t3071501530^t2638828220^t432673310^t180263900^t612937210^t0^t001^t2012-06-03 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120603/divstatrpt.lis^tdivstatrpt.lis^t^n001^t2012^t0603^t28^t의정부^t658058080^t0^t658058080^t562815610^t95242470^t45300000^t140542470^t0^t001^t2012-06-03 23:00:00.0^t/web/waspage/usrbm/upload_file/lis_file/2012/20120603/divstatrpt.lis^tdivstatrpt.lis^t^n
>
[I][UbiData][2012-06-07 13:23:59][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 13:23:59][DATA QUERY START]
[I][UbiData][2012-06-07 13:23:59]	- sql id : SQL3
[I][UbiData][2012-06-07 13:23:59]	- Db charset : KSC5601
[I][UbiData][2012-06-07 13:23:59]	- Sql
<
SELECT *
 FROM (
     SELECT 
         '그린카드' AS MYCAT, 
         COMM_NO, 
         DIV_NO, 
         CD_NM AS COMM_NAME, 
         OUT_AMT, 
         IN_AMT, 
         MILEAGE_AMT, 
         BONUS_AMT,
         (IN_AMT-OUT_AMT-MILEAGE_AMT-BONUS_AMT) AS SIL_IN_AMT 
     FROM VW_MYCAT_INOUT A, TBRK_SPEC_CD B                                              
    WHERE 1=1
      AND RACE_DAY    = ?  
      AND A.DIV_NO = B.CD(+)
      AND B.GRP_CD(+) = '127'                                     
    ORDER BY DIV_NO   
 ) A
 #String#20120603#
>
[I][UbiData][2012-06-07 13:23:59]	- Row size : 5
[I][UbiData][2012-06-07 13:23:59]	- Data
<
그린카드^t06^t00^t본장^t31703670^t47837770^t756300^t0^t15377800^t^n그린카드^t06^t04^t동대문^t107000^t2752000^t0^t12000^t2633000^t^n그린카드^t06^t07^t산본^t2990000^t954000^t0^t9000^t-2045000^t^n그린카드^t06^t15^t논현^t1980020^t3699720^t122700^t0^t1597000^t^n그린카드^t06^t17^t올림픽^t60000^t0^t0^t0^t-60000^t^n
>
[I][UbiData][2012-06-07 13:23:59][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 13:23:59][DB CONNECT]
[I][UbiData][2012-06-07 13:23:59]	- Type : nonlookup
[I][UbiData][2012-06-07 13:23:59]	- Db id : RBM
[I][UbiData][2012-06-07 13:23:59]	- Sql id : SQL2
[I][UbiData][2012-06-07 13:23:59]	- Datasource : jdbc/RBM
[I][UbiData][2012-06-07 13:23:59]	- Status : Success
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 13:23:59][DATA QUERY START]
[I][UbiData][2012-06-07 13:23:59]	- sql id : SQL2
[I][UbiData][2012-06-07 13:23:59]	- Db charset : KSC5601
[I][UbiData][2012-06-07 13:23:59]	- Sql
<
SELECT *
 FROM (
  SELECT 
    MEET_CD,
          MEET_DESC,
          BRNC_CD,
          SUM(GROSS_SALES) AS GROSS_SALES,
          SUM(CANCELS) AS CANCELS,  
          SUM(TOT_SALES) AS TOT_SALES,  
          SUM(CASHES) AS CASHES,  
          SUM(NET_INCOME) AS NET_INCOME,  
          SUM(BALANCE) AS BALANCE  
  FROM
  (            
      SELECT 
        
              MEET_CD,  
        STND_YEAR,  
        DT,   
        CASE 
                          WHEN  A.BRNC_CD NOT IN ('00','01','02','03','04','06','08','98') THEN '지점계' 
                          WHEN  A.BRNC_CD IN ('06') THEN '그린카드'
                          WHEN  A.BRNC_CD IN ('08','98') AND MEET_CD ='003' THEN '미사리'
                          WHEN  A.BRNC_CD IN ('01','02','03','04','06') AND MEET_CD ='003' THEN '스피돔'
                          WHEN  A.BRNC_CD IN ('01','02','03','04','06','08','98') AND MEET_CD ='001' THEN '스피돔'
           ELSE  'X' 
           END AS  MEET_DESC, 
           CASE 
            WHEN  A.BRNC_CD NOT IN ('00','01','02','03','04','06','08','98') THEN '18' 
            WHEN  A.BRNC_CD IN ('06') THEN '06'
            WHEN  A.BRNC_CD IN ('01','02','03','04','06','08','98') THEN '00'
           ELSE  'X'
           END AS BRNC_CD,
           CASE 
            WHEN  A.BRNC_CD NOT IN ('00','01','02','03','04','06','08','98') THEN '1' 
            WHEN  A.BRNC_CD IN ('06') THEN '2'
            WHEN  A.BRNC_CD IN ('01','02','03','04','06','08','98') THEN '3'
           ELSE  'X' 
           END AS MEET_ORDER,           
           SUM(GROSS_SALES) AS GROSS_SALES,
           SUM(CANCELS) AS CANCELS,  
           SUM(TOT_SALES) AS TOT_SALES,  
           SUM(CASHES) AS CASHES,  
           SUM(NET_INCOME) AS NET_INCOME,  
           SUM(BALANCE) AS BALANCE  
     FROM TBRD_LIS_FILE A 
     WHERE 1=1     
       AND STND_YEAR = ? 
       AND DT    = ? 
     GROUP BY MEET_CD,  
        STND_YEAR,  
        DT,  
        A.BRNC_CD
  )        
  WHERE BRNC_CD != 'X'
  GROUP BY MEET_CD,MEET_ORDER,MEET_DESC,
          BRNC_CD        
  ORDER BY  MEET_ORDER                                  
 ) A
 #String#2012#String#0603#
>
[I][UbiData][2012-06-07 13:23:59]	- Row size : 3
[I][UbiData][2012-06-07 13:23:59]	- Data
<
001^t지점계^t18^t19950949514^t1881100^t19949068414^t16200348304^t3748720110^t0^t^n001^t그린카드^t06^t148166690^t0^t148166690^t105222360^t42944330^t42944330^t^n001^t스피돔^t00^t3403404660^t450000^t3402954660^t2845090500^t557864160^t0^t^n
>
[I][UbiData][2012-06-07 13:23:59][DATA QUERY END]
--------------------------------------------------------------------------------


[I][UbiForm][2012-06-07 18:23:15][REQUEST FILE]
[I][UbiForm][2012-06-07 18:23:15]	- Report : /web/waspage/usrbm/report/rsm/rsm4060.jrf
[I][UbiForm][2012-06-07 18:23:15]	- Common : /web/waspage/usrbm/report/rsm/property/commonitem.xml [Not found]
--------------------------------------------------------------------------------


[I][UbiData][2012-06-07 18:23:15][REQUEST FILE]
[I][UbiData][2012-06-07 18:23:15]	- Report : rsm4060.jrf
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 18:23:15][DB CONNECT]
[I][UbiData][2012-06-07 18:23:15]	- Type : nonlookup
[I][UbiData][2012-06-07 18:23:15]	- Db id : rbm
[I][UbiData][2012-06-07 18:23:15]	- Sql id : SQL1
[I][UbiData][2012-06-07 18:23:15]	- Datasource : jdbc/RBM
[I][UbiData][2012-06-07 18:23:15]	- Status : Success
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 18:23:15][DATA QUERY START]
[I][UbiData][2012-06-07 18:23:15]	- sql id : SQL1
[I][UbiData][2012-06-07 18:23:15]	- Db charset : KSC5601
[I][UbiData][2012-06-07 18:23:15]	- Sql
<
SELECT *
 FROM (
     SELECT  
           MEET_CD,  
           STND_YEAR,  
           DT,   
          BRNC_CD,  
          CD_NM,      
          GROSS_SALES, 
          CANCELS,  
          TOT_SALES,  
          CASHES,  
          NET_INCOME,  
          DRAWS,   
          RETURNS,
          BALANCE,  
          VERI,   
          VERI_DT,  
          FILE_PATH,  
          FILE_NM  
     FROM TBRD_LIS_FILE A 
     ,TBRK_SPEC_CD B    
     WHERE 1=1
      AND BRNC_CD=B.CD
      AND B.GRP_CD = '018'         
      AND BRNC_CD NOT IN ('00','01','02','03','04','06','08','98')
      AND STND_YEAR = ? 
      AND DT  = ? 
    ORDER BY BRNC_CD
 ) A
 #String#2012#String#0607#
>
[I][UbiData][2012-06-07 18:23:15]	- Row size : 14
[I][UbiData][2012-06-07 18:23:15]	- Data
<
003^t2012^t0607^t11^t수원^t0^t0^t0^t495000^t-495000^t495000^t0^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120607/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0607^t12^t상봉^t735963080^t140000^t735823080^t583250230^t152572850^t83472311^t236045161^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120607/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0607^t13^t일산^t617584530^t100000^t617484530^t484016200^t133468330^t122344100^t255812430^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120607/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0607^t14^t분당^t871535880^t0^t871535880^t682194790^t189341090^t45100000^t234441090^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120607/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0607^t16^t장안^t748714980^t71000^t748643980^t549349990^t199293990^t60523860^t259817850^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120607/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0607^t19^t관악^t777767150^t41000^t777726150^t570248830^t207477320^t178830002^t386307322^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120607/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0607^t20^t길음^t798979550^t0^t798979550^t674594060^t124385490^t41878400^t166263890^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120607/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0607^t22^t유성^t395318360^t0^t395318360^t284514830^t110803530^t27460000^t138263530^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120607/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0607^t23^t인천^t458024810^t0^t458024810^t327336340^t130688470^t37921000^t168609470^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120607/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0607^t24^t시흥^t965494500^t0^t965494500^t797189190^t168305310^t68936950^t237242260^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120607/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0607^t25^t논현^t609031030^t0^t609031030^t486906110^t122124920^t20950000^t143074920^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120607/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0607^t26^t천안^t532234380^t0^t532234380^t451628800^t80605580^t22749000^t103354580^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120607/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0607^t27^t올림픽^t1039868680^t24000^t1039844680^t840761840^t199082840^t138589000^t337671840^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120607/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0607^t28^t의정부^t566068790^t20000^t566048790^t488936780^t77112010^t70005000^t147117010^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120607/divstatrpt.lis^tdivstatrpt.lis^t^n
>
[I][UbiData][2012-06-07 18:23:15][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 18:23:15][DATA QUERY START]
[I][UbiData][2012-06-07 18:23:15]	- sql id : SQL3
[I][UbiData][2012-06-07 18:23:15]	- Db charset : KSC5601
[I][UbiData][2012-06-07 18:23:15]	- Sql
<
SELECT *
 FROM (
     SELECT 
         '그린카드' AS MYCAT, 
         COMM_NO, 
         DIV_NO, 
         CD_NM AS COMM_NAME, 
         OUT_AMT, 
         IN_AMT, 
         MILEAGE_AMT, 
         BONUS_AMT,
         (IN_AMT-OUT_AMT-MILEAGE_AMT-BONUS_AMT) AS SIL_IN_AMT 
     FROM VW_MYCAT_INOUT A, TBRK_SPEC_CD B                                              
    WHERE 1=1
      AND RACE_DAY    = ?  
      AND A.DIV_NO = B.CD(+)
      AND B.GRP_CD(+) = '127'                                     
    ORDER BY DIV_NO   
 ) A
 #String#20120607#
>
[I][UbiData][2012-06-07 18:23:15]	- Row size : 2
[I][UbiData][2012-06-07 18:23:15]	- Data
<
그린카드^t06^t00^t본장^t3577200^t5510700^t81300^t0^t1852200^t^n그린카드^t06^t15^t논현^t2454400^t4700000^t86600^t0^t2159000^t^n
>
[I][UbiData][2012-06-07 18:23:15][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 18:23:15][DB CONNECT]
[I][UbiData][2012-06-07 18:23:15]	- Type : nonlookup
[I][UbiData][2012-06-07 18:23:15]	- Db id : RBM
[I][UbiData][2012-06-07 18:23:15]	- Sql id : SQL2
[I][UbiData][2012-06-07 18:23:15]	- Datasource : jdbc/RBM
[I][UbiData][2012-06-07 18:23:15]	- Status : Success
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 18:23:15][DATA QUERY START]
[I][UbiData][2012-06-07 18:23:15]	- sql id : SQL2
[I][UbiData][2012-06-07 18:23:15]	- Db charset : KSC5601
[I][UbiData][2012-06-07 18:23:15]	- Sql
<
SELECT *
 FROM (
  SELECT 
    MEET_CD,
          MEET_DESC,
          BRNC_CD,
          SUM(GROSS_SALES) AS GROSS_SALES,
          SUM(CANCELS) AS CANCELS,  
          SUM(TOT_SALES) AS TOT_SALES,  
          SUM(CASHES) AS CASHES,  
          SUM(NET_INCOME) AS NET_INCOME,  
          SUM(BALANCE) AS BALANCE  
  FROM
  (            
      SELECT 
        
              MEET_CD,  
        STND_YEAR,  
        DT,   
        CASE 
                          WHEN  A.BRNC_CD NOT IN ('00','01','02','03','04','06','08','98') THEN '지점계' 
                          WHEN  A.BRNC_CD IN ('06') THEN '그린카드'
                          WHEN  A.BRNC_CD IN ('08','98') AND MEET_CD ='003' THEN '미사리'
                          WHEN  A.BRNC_CD IN ('01','02','03','04','06') AND MEET_CD ='003' THEN '스피돔'
                          WHEN  A.BRNC_CD IN ('01','02','03','04','06','08','98') AND MEET_CD ='001' THEN '스피돔'
           ELSE  'X' 
           END AS  MEET_DESC, 
           CASE 
            WHEN  A.BRNC_CD NOT IN ('00','01','02','03','04','06','08','98') THEN '18' 
            WHEN  A.BRNC_CD IN ('06') THEN '06'
            WHEN  A.BRNC_CD IN ('01','02','03','04','06','08','98') THEN '00'
           ELSE  'X'
           END AS BRNC_CD,
           CASE 
            WHEN  A.BRNC_CD NOT IN ('00','01','02','03','04','06','08','98') THEN '1' 
            WHEN  A.BRNC_CD IN ('06') THEN '2'
            WHEN  A.BRNC_CD IN ('01','02','03','04','06','08','98') THEN '3'
           ELSE  'X' 
           END AS MEET_ORDER,           
           SUM(GROSS_SALES) AS GROSS_SALES,
           SUM(CANCELS) AS CANCELS,  
           SUM(TOT_SALES) AS TOT_SALES,  
           SUM(CASHES) AS CASHES,  
           SUM(NET_INCOME) AS NET_INCOME,  
           SUM(BALANCE) AS BALANCE  
     FROM TBRD_LIS_FILE A 
     WHERE 1=1     
       AND STND_YEAR = ? 
       AND DT    = ? 
     GROUP BY MEET_CD,  
        STND_YEAR,  
        DT,  
        A.BRNC_CD
  )        
  WHERE BRNC_CD != 'X'
  GROUP BY MEET_CD,MEET_ORDER,MEET_DESC,
          BRNC_CD        
  ORDER BY  MEET_ORDER                                  
 ) A
 #String#2012#String#0607#
>
[I][UbiData][2012-06-07 18:23:15]	- Row size : 3
[I][UbiData][2012-06-07 18:23:15]	- Data
<
003^t지점계^t18^t9116585720^t396000^t9116189720^t7221422990^t1894766730^t0^t^n003^t그린카드^t06^t27445300^t0^t27445300^t19470560^t7974740^t7974740^t^n003^t미사리^t00^t1884273320^t104000^t1884169320^t1554151850^t330017470^t0^t^n
>
[I][UbiData][2012-06-07 18:23:15][DATA QUERY END]
--------------------------------------------------------------------------------


[I][UbiForm][2012-06-07 18:58:45][REQUEST FILE]
[I][UbiForm][2012-06-07 18:58:45]	- Report : /web/waspage/usrbm/report/rsm/rsm2020.jrf
[I][UbiForm][2012-06-07 18:58:45]	- Common : /web/waspage/usrbm/report/rsm/property/commonitem.xml [Not found]
--------------------------------------------------------------------------------


[I][UbiData][2012-06-07 18:58:45][REQUEST FILE]
[I][UbiData][2012-06-07 18:58:45]	- Report : rsm2020.jrf
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 18:58:45][DB CONNECT]
[I][UbiData][2012-06-07 18:58:45]	- Type : nonlookup
[I][UbiData][2012-06-07 18:58:45]	- Db id : rbm
[I][UbiData][2012-06-07 18:58:45]	- Sql id : rsm2020_s06Today
[I][UbiData][2012-06-07 18:58:45]	- Datasource : jdbc/RBM
[I][UbiData][2012-06-07 18:58:45]	- Status : Success
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 18:58:45][DATA QUERY START]
[I][UbiData][2012-06-07 18:58:45]	- sql id : rsm2020_s06Today
[I][UbiData][2012-06-07 18:58:45]	- Db charset : KSC5601
[I][UbiData][2012-06-07 18:58:45]	- Sql
<
WITH J 
 AS
 (SELECT    
         '전회' AS COL_DESC  
     , tms                                                                                       
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='12' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_02    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='16' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_06    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='22'  THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_12    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='20' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_10    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='23' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_13    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='24' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_14    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='13' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_03    
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='25'  THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_15    
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='19' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_09    
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='14' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_05    
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='26' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_16    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='27' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_17    
     , SUM(                                                                              
           CASE                                                                          
              WHEN COMM_NO='06'  THEN NVL(DIV_TOTAL, 0)                                  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_01_06_01    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='28' THEN NVL(DIV_TOTAL, 0) 
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_01_07_18    
         , SUM(                                                                              
               CASE                                                                          
                  WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_04_07_01    
         , SUM(                                                                              
               CASE                                                                          
                  WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='02' THEN NVL(DIV_TOTAL, 0)  
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_04_07_02    
        , SUM(                                                                              
               CASE                                                                          
                  WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='03' THEN NVL(DIV_TOTAL, 0)  
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_04_07_03    
         , SUM(                                                                              
               CASE                                                                          
                  WHEN SELL_CD='02' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_02_07_01    
 
         , SUM(                                                                              
               CASE                                                                          
                  WHEN COMM_NO NOT IN ('01','02','03','04','08') THEN NVL(DIV_TOTAL, 0)                         
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_JIJUM    
         , SUM(DIV_TOTAL)/100 DIV_TOTAL                                                             
  FROM   TBES_SDL_DT_SUM                                                                         
  WHERE  1=1                                                                                    
    AND STND_YEAR  = ?                                                            
    AND MEET_CD    = ?                                                        
    AND TMS        BETWEEN ?  - 1 AND ? 
    AND DAY_ORD    = ? 
  GROUP BY TMS 
 )
 SELECT  DECODE(TMS, ? , '합계','전회') COL_DESC
        , TMS
        ,'1' AS GUBN
        ,DIV_01_07_02 
        ,DIV_01_07_06 
        ,DIV_01_07_12 
        ,DIV_01_07_10 
        ,DIV_01_07_13 
        ,DIV_01_07_14 
        ,DIV_01_07_03 
        ,DIV_01_07_15 
        ,DIV_01_07_09 
        ,DIV_01_07_05 
        ,DIV_01_07_16 
        ,DIV_01_07_17 
        ,DIV_01_06_01 
        ,DIV_01_07_18 
        ,DIV_04_07_01 
        ,DIV_04_07_02 
        ,DIV_04_07_03 
        ,DIV_02_07_01
        ,DIV_JIJUM
        ,1
 FROM J
 UNION ALL
 SELECT '점유율'
       , TMS
       , '2'
       , ROUND(DIV_01_07_02 / DIV_TOTAL * 100, 2) 
       , ROUND(DIV_01_07_06 / DIV_TOTAL * 100, 2)   
       , ROUND(DIV_01_07_12 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_10 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_13 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_14 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_03 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_15 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_09 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_05 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_16 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_17 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_06_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_18 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_02 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_03 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_02_07_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_JIJUM / DIV_TOTAL * 100, 2)    
       , 100
 FROM J
 WHERE tms = ? 
 UNION ALL
 SELECT '전회차'
       , TMS
       , '2'
       , ROUND(DIV_01_07_02 / DIV_TOTAL * 100, 2) 
       , ROUND(DIV_01_07_06 / DIV_TOTAL * 100, 2)   
       , ROUND(DIV_01_07_12 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_10 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_13 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_14 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_03 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_15 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_09 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_05 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_16 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_17 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_06_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_18 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_02 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_03 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_02_07_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_JIJUM / DIV_TOTAL * 100, 2)    
       , 100
 FROM J
 WHERE TMS = ?  -1
 ORDER BY 3, 2 DESC
 #String#2012#String#003#String#17#String#17#String#1#String#17#String#17#String#17#
>
[I][UbiData][2012-06-07 18:58:45]	- Row size : 4
[I][UbiData][2012-06-07 18:58:45]	- Data
<
합계^t17^t1^t5759243^t6768872^t3464367^t4581356^t3964638^t6685253^t3899352^t3606854^t6970537^t6270105^t3005424^t6179547^t172346^t2917226^t1910858^t2796109^t0^t0^t68952087^t1^t^n전회^t16^t1^t5110145^t6625240^t3652284^t4516474^t4532647^t6596680^t4323166^t3600994^t7080707^t6011354^t3246328^t5786326^t150613^t2709578^t1871131^t2728615^t0^t0^t68542282^t1^t^n점유율^t17^t2^t7.06^t8.29^t4.25^t5.61^t4.86^t8.19^t4.78^t4.42^t8.54^t7.68^t3.68^t7.57^t.21^t3.57^t2.34^t3.43^t0^t0^t84.5^t100^t^n전회차^t16^t2^t6.31^t8.17^t4.51^t5.57^t5.59^t8.14^t5.33^t4.44^t8.74^t7.42^t4.01^t7.14^t.19^t3.34^t2.31^t3.37^t0^t0^t84.57^t100^t^n
>
[I][UbiData][2012-06-07 18:58:45][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 18:58:45][DATA QUERY START]
[I][UbiData][2012-06-07 18:58:45]	- sql id : rsm2020_s11
[I][UbiData][2012-06-07 18:58:45]	- Db charset : KSC5601
[I][UbiData][2012-06-07 18:58:45]	- Sql
<
SELECT 
         '0~'||BB.RACE_NO||'R' AS RACE_DESC,
         DECODE(LEV,1,'인원','점유율') AS MANA_DESC,
         CASE 
             WHEN LEV='2' AND IN_PRSN_NUM > 0 AND TOT_PRSN_NUM > 0 THEN ROUND(IN_PRSN_NUM / TOT_PRSN_NUM *100,2)    
             ELSE IN_PRSN_NUM
        END AS IN_PRSN_NUM, 
        CASE 
             WHEN LEV='2' AND BRNC_PRSN_NUM > 0 AND TOT_PRSN_NUM > 0 THEN ROUND(BRNC_PRSN_NUM / TOT_PRSN_NUM *100,2)    
             ELSE BRNC_PRSN_NUM
        END AS BRNC_PRSN_NUM, 
        CASE 
             WHEN LEV='2' AND TOT_PRSN_NUM > 0 THEN ROUND(TOT_PRSN_NUM / TOT_PRSN_NUM *100,2)    
             ELSE TOT_PRSN_NUM
        END AS TOT_PRSN_NUM, 
        CASE 
             WHEN LEV='1' THEN B_TOT_PRSN_NUM
        END AS B_TOT_PRSN_NUM, 
        CASE 
             WHEN LEV='1' THEN MINUS_PRSN_NUM
        END AS MINUS_PRSN_NUM, 
        CASE 
 
             WHEN LEV='1' AND TOT_PRSN_NUM>0 AND B_TOT_PRSN_NUM >0 THEN ROUND((TOT_PRSN_NUM - B_TOT_PRSN_NUM) / B_TOT_PRSN_NUM*100,2)
        END AS PER_PRSN_NUM 
 FROM
 (
      SELECT DU.LEV,
             SUM(CASE WHEN R.TMS =DU.TMS AND BRNC_CD = '98' THEN E.ENT_PRSN_NUM END) AS IN_PRSN_NUM,    
              SUM(CASE WHEN R.TMS =DU.TMS AND BRNC_CD <> '98' THEN E.ENT_PRSN_NUM END) AS BRNC_PRSN_NUM,    
              SUM(CASE WHEN R.TMS =DU.TMS THEN E.ENT_PRSN_NUM END) AS TOT_PRSN_NUM,    
              SUM(CASE WHEN R.TMS =DU.B_TMS THEN E.ENT_PRSN_NUM END) AS B_TOT_PRSN_NUM,    
              (SUM(CASE WHEN R.TMS =DU.TMS THEN E.ENT_PRSN_NUM END) - SUM(CASE WHEN R.TMS =DU.B_TMS THEN E.ENT_PRSN_NUM END)) AS MINUS_PRSN_NUM    
                      
          FROM                                                   
              TBRC_STAY_MANA E,    
              TBRK_SPEC_CD C,
              VW_SDL_INFO R,       
              (SELECT LEVEL AS LEV, ?  AS TMS,(?  - 1) AS B_TMS FROM DUAL CONNECT BY LEVEL<=2) DU 
          WHERE  1=1                
            AND E.BRNC_CD    = C.CD
            AND E.RACE_DT    = R.RACE_DAY                 
            AND C.GRP_CD        IN ('018','032')    
            AND R.MEET_CD    = '003'   
            AND R.STND_YEAR    = ?         
            AND R.TMS IN (? , ?  - 1)    
            AND R.DAY_ORD ='2'             
          GROUP BY DU.LEV
 )AA,
 (
     SELECT                                                                   
          MAX(RACE_NO)  AS RACE_NO
       FROM   (                                                                 
                   SELECT                                                       
                            TOR.RACE_NO                                         
                          , TOR.RACE_REG_NO                                     
                          , TOR.RACER_NO                                        
                          , TOR.RANK                                            
                          , TRM.NM_KOR                                          
                          , RANK() OVER (PARTITION BY TOR.RACE_NO               
                                                    , TOR.RANK                  
                                             ORDER BY TOR.RACE_REG_NO) SEQ      
                   FROM     TBEB_ORGAN@MRASYSLINK        TOR                        
                          , TBEC_RACER_MASTER@MRASYSLINK TRM                        
                   WHERE 1=1                                                        
                           
                   AND    TOR.RACER_NO   = TRM.RACER_NO                         
                   AND    TOR.STND_YEAR  = ?         
                   AND    TOR.MBR_CD     = '001'                                
                   AND    TOR.TMS        = ?         
                           
                   AND    TOR.RANK BETWEEN 1                                    
                                       AND 3                                    
              )                                                                 
       START WITH SEQ = 1                                                       
       CONNECT BY PRIOR SEQ = SEQ - 1                                           
       AND PRIOR RACE_NO = RACE_NO AND RANK = RANK     
 )BB
 ORDER BY AA.LEV
 #String#17#String#17#String#2012#String#17#String#17#String#2012#String#17#
>
[I][UbiData][2012-06-07 18:58:45]	- Row size : 2
[I][UbiData][2012-06-07 18:58:45]	- Data
<
0~15R^t인원^t^t^t^t33830^t^t^t^n0~15R^t점유율^t^t^t^t^t^t^t^n
>
[I][UbiData][2012-06-07 18:58:45][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 18:58:45][DATA QUERY START]
[I][UbiData][2012-06-07 18:58:45]	- sql id : rsm2020_s01
[I][UbiData][2012-06-07 18:58:45]	- Db charset : KSC5601
[I][UbiData][2012-06-07 18:58:45]	- Sql
<
SELECT 
           AA.MEET_CD,      
           AA.STND_YEAR,    
           AA.TMS,          
           AA.DAY_ORD,      
           TO_CHAR(TO_DATE(AA.RACE_DAY,'YYYYMMDD'),'YYYY-MM-DD') AS RACE_DAY, 
           AA.RACE_YOIL,    
           TO_CHAR(TO_DATE(AA.RACE_DAY,'YYYYMMDD'),'YYYY')||'년 '||AA.TMS||'회차 '||AA.DAY_ORD||'일차 ('|| TO_CHAR(TO_DATE(AA.RACE_DAY,'YYYYMMDD'),'YYYY-MM-DD')||') 경주 개최 결과'  
           AS RACE_DAY_INFO  
     
       FROM (         
             SELECT                              
             MEET_CD,      
             STND_YEAR,    
             TMS,          
             DAY_ORD,      
             RACE_DAY,     
             RACE_YOIL,    
             DECODE(RACE_YOIL,'MON','월','TUE','화','WED','수','THE','목','FRI','금','SAT','토','SUN','일','일') AS RACE_YOIL_KOR, 
             TO_CHAR(TO_DATE(RACE_DAY,'YYYYMMDD'),'YYYY-MM-DD')||
             ' ('||RACE_YOIL||') '||TMS||'회차 '||DAY_ORD||'일차'  
             AS RACE_INFO  
      FROM                                
             VW_SDL_INFO      
      WHERE  1=1                             
             AND MEET_CD = ?   
            AND STND_YEAR = ?   
            AND TMS= ?     
            AND DAY_ORD = ?        
    )AA
 #String#003#String#2012#String#17#String#1#
>
[I][UbiData][2012-06-07 18:58:45]	- Row size : 1
[I][UbiData][2012-06-07 18:58:45]	- Data
<
003^t2012^t17^t1^t2012-06-07^tTHU^t2012년 17회차 1일차 (2012-06-07) 경주 개최 결과^t^n
>
[I][UbiData][2012-06-07 18:58:45][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 18:58:45][DATA QUERY START]
[I][UbiData][2012-06-07 18:58:45]	- sql id : rsm2020_s05Today
[I][UbiData][2012-06-07 18:58:45]	- Db charset : KSC5601
[I][UbiData][2012-06-07 18:58:45]	- Sql
<
SELECT                                                                                      
       DECODE(GROUPING(RACE_NO),0,RACE_NO,'TOTAL') RACE_NO 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='12' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_02 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='16' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_06 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='22'  THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_12 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='20' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_10 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='23' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_13 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='24' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_14 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='13' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_03 
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='25'  THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_15 
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='19' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_09 
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='14' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_05 
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='26' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_16 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='27' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_17 
     , SUM(                                                                              
           CASE                                                                          
              WHEN COMM_NO='06'  THEN NVL(DIV_TOTAL, 0)                                  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_01_06_01 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='28' THEN NVL(DIV_TOTAL, 0) 
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_01_07_18 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_04_07_01 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='02' THEN NVL(DIV_TOTAL, 0)  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_04_07_02 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='03' THEN NVL(DIV_TOTAL, 0)  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_04_07_03    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='02' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_02_07_01 
     , SUM(                                                                              
           CASE                                                                          
              WHEN  COMM_NO NOT IN ('01','02','03','04','08') THEN NVL(DIV_TOTAL, 0)                         
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_JIJUM  
 
     , SUM(DIV_TOTAL)/100 DIV_TOTAL                                                          
 FROM   TBES_SDL_DT                                                                         
 WHERE   1=1                                                                                   
      AND STND_YEAR  = ?                                                             
      AND    MEET_CD    = ?                                                        
      AND    TMS        = ?                                                            
      AND    DAY_ORD    = ?                                                        
 
 GROUP BY RACE_NO                                                                                   
       
 ORDER BY RACE_NO
 #String#2012#String#003#String#17#String#1#
>
[I][UbiData][2012-06-07 18:58:46]	- Row size : 15
[I][UbiData][2012-06-07 18:58:46]	- Data
<
01^t140920^t197602^t96849^t127436^t119903^t187379^t128299^t116374^t219027^t183487^t108516^t160073^t7355^t93039^t59949^t93886^t0^t0^t2040094^t2396211^t^n02^t191278^t267508^t123529^t187360^t147399^t249704^t155747^t145620^t287810^t240820^t134529^t231415^t9365^t106436^t78894^t112202^t0^t0^t2669616^t3119757^t^n03^t218916^t312291^t160473^t214643^t185000^t303210^t189537^t171252^t321899^t281904^t151802^t275390^t11275^t162159^t84773^t131614^t0^t0^t3176138^t3739571^t^n04^t280723^t349162^t162668^t220723^t205104^t363694^t198947^t193854^t366506^t314797^t163251^t307239^t11636^t153198^t99509^t147397^t0^t0^t3538408^t4222315^t^n05^t293914^t356666^t179380^t247835^t236853^t376743^t193986^t198487^t385927^t363196^t170821^t362879^t10456^t178289^t114597^t157145^t0^t0^t3827174^t4600038^t^n06^t320577^t410766^t191760^t262742^t239275^t397830^t224139^t213663^t422296^t374549^t185676^t384443^t13418^t167359^t119122^t168329^t0^t0^t4095944^t4848817^t^n07^t373535^t432760^t204667^t303599^t258807^t408985^t246625^t214315^t457794^t408705^t182639^t417527^t12501^t187942^t128436^t184125^t0^t0^t4422962^t5262700^t^n08^t401087^t454010^t227928^t317354^t270820^t432896^t260257^t226171^t475649^t433911^t198906^t420465^t13274^t209941^t132238^t183879^t0^t0^t4658786^t5538248^t^n09^t437100^t484053^t233189^t323376^t300022^t463847^t282180^t288344^t503532^t460256^t213710^t426704^t12038^t218223^t137100^t184059^t0^t0^t4967733^t5873616^t^n10^t470862^t541950^t272328^t368669^t328440^t540666^t313885^t273198^t534426^t520280^t238905^t480109^t11995^t217489^t148525^t221558^t0^t0^t5483285^t6538531^t^n11^t466591^t561617^t317067^t365940^t318869^t591737^t323108^t316413^t577350^t534047^t224160^t502776^t13236^t222034^t156791^t213870^t0^t0^t5705606^t6735069^t^n12^t517154^t573936^t314455^t371388^t339082^t549091^t330869^t298274^t572163^t534089^t257848^t538886^t9827^t224241^t153182^t226909^t0^t0^t5811394^t6964681^t^n13^t526295^t583973^t330714^t397538^t324448^t593547^t335641^t314764^t598821^t528560^t248840^t537767^t13014^t243974^t168937^t238429^t0^t0^t5985262^t7085157^t^n14^t544820^t611235^t322648^t422943^t330535^t594065^t339607^t303922^t617748^t541795^t257654^t539796^t11784^t260972^t158394^t255072^t0^t0^t6112990^t7164971^t^n15^t575471^t631343^t326712^t449810^t360081^t631859^t376525^t332203^t629589^t549709^t268167^t594078^t11172^t271930^t170411^t277635^t0^t0^t6456695^t7513552^t^n
>
[I][UbiData][2012-06-07 18:58:46][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 18:58:46][DATA QUERY START]
[I][UbiData][2012-06-07 18:58:46]	- sql id : rsm2020_s03Today
[I][UbiData][2012-06-07 18:58:46]	- Db charset : KSC5601
[I][UbiData][2012-06-07 18:58:46]	- Sql
<
SELECT                                                                                    
      Z.RACE_NO, 
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          FC_GET_RSLT_RANK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO)                
      END RSLT_RANK, 
      R.RANK_1,  
      R.RANK_2,  
      R.RANK_3,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '001', NULL) 
      END WIN,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '002', '1')  
      END PLC,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '002', '2')  
      END PLC2,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '004', NULL) 
      END EX,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '005', NULL) 
      END QU,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '006', NULL) 
      END TRI,  
      D.BONJANG_TOTAL, 
      D.JIJUM_TOTAL,  
      C.DIV_TOTAL,  
      NVL(D.REFUND,0) REFUND, 
      NVL(B.B_DIV_TOTAL,0) AS B_DIV_TOTAL,    
      NVL((C.DIV_TOTAL-B.B_DIV_TOTAL),0) AS PLUS_MINUS, 
      CASE                                                                                  
          WHEN B.B_DIV_TOTAL<>0 THEN                                                        
          ROUND((C.DIV_TOTAL-B.B_DIV_TOTAL)/B.B_DIV_TOTAL*100,2)                            
          ELSE 0                                                                            
      END RATE,   
      SAME_PAYOFF_TOTAL,  
      SAME_PAYOFF_001, 
   SAME_PAYOFF_002, 
   SAME_PAYOFF_004, 
   SAME_PAYOFF_005, 
   SAME_PAYOFF_006 
  FROM   
   
      (   
                                                                 
          SELECT                                                                            
                D.MEET_CD,                                                                   
                D.STND_YEAR,                                                                 
                D.TMS,                                                                       
                D.DAY_ORD,                                                                   
                DECODE(D.RACE_NO,NULL,'TOTAL',D.RACE_NO) RACE_NO,                              
                SUM(                                                                        
                    CASE                                                                    
                      WHEN D.SELL_CD='03' THEN D.DIV_TOTAL                                    
                      ELSE 0                                                                
                    END                                                                     
                ) BONJANG_TOTAL,                                                            
                SUM(                                                                        
                    CASE                                                                    
                      WHEN D.SELL_CD !='03' THEN D.DIV_TOTAL                                     
                    END                                                                     
                ) JIJUM_TOTAL,                                                              
                SUM(D.REFUND) REFUND                                                         
          FROM   TBES_SDL_DT D                                                              
          WHERE 1=1                                                                             
              AND D.STND_YEAR(+)  = ? 
              AND D.MEET_CD(+)    = ? 
              AND D.TMS(+)        = ? 
              AND D.DAY_ORD(+)    = ? 
          GROUP BY                                                                          
                D.MEET_CD,                                                                   
                D.STND_YEAR,                                                                 
                D.TMS,                                                                       
                D.DAY_ORD,                                                                   
                ROLLUP(D.RACE_NO)                                                           
      ) D,                                                                                  
      (                                                                                     
         SELECT                                                                             
            P.MEET_CD,                                                                      
            P.STND_YEAR,                                                                    
            P.TMS,                                                                          
            P.DAY_ORD,                                                                      
            DECODE(P.RACE_NO,NULL,'TOTAL',P.RACE_NO) RACE_NO,                               
            SUM(POOL_TOTAL) DIV_TOTAL                                                       
         FROM                                                                               
             TBES_SDL_PT P                                                                  
         WHERE 1=1                                                                              
             AND P.STND_YEAR  = ? 
             AND P.MEET_CD    = ? 
             AND P.TMS        = ? 
             AND P.DAY_ORD    = ? 
         GROUP BY                                                                           
            P.MEET_CD,                                                                      
            P.STND_YEAR,                                                                    
            P.TMS,                                                                          
            P.DAY_ORD,                                                                      
            ROLLUP(P.RACE_NO)                                                               
      ) C,                                                                                  
      (                                                                                     
          SELECT                                                                            
                DECODE(RACE_NO,NULL,'TOTAL',RACE_NO) RACE_NO,                               
                SUM(DIV_TOTAL) B_DIV_TOTAL                                                  
          FROM   TBES_SDL_DT                                                                
          WHERE 1=1                                                                            
              AND  STND_YEAR  = ? 
              AND    MEET_CD    = ? 
              AND    TMS        = ?  -1                                                    
              AND    DAY_ORD    = ? 
          GROUP BY                                                                          
                ROLLUP(RACE_NO)                                                             
      ) B,                                                                                  
      (                                                                                     
          SELECT                                                                            
                RACE_NO                                                                     
              , MIN(DECODE(RANK, '1', NM_KOR)) RANK_1                                       
              , MIN(DECODE(RANK, '2', NM_KOR)) RANK_2                                       
              , MIN(DECODE(RANK, '3', NM_KOR)) RANK_3                                       
          FROM   (                                                                          
                   SELECT                                                                   
                            RACE_NO                                                         
                          , RANK                                                            
                          , SUBSTR(MAX(SYS_CONNECT_BY_PATH (NM_KOR, '/')), 2) NM_KOR        
                   FROM   (                                                                 
                               SELECT                                                       
                                        TOR.RACE_NO                                         
                                      , TOR.RACE_REG_NO                                     
                                      , TOR.RACER_NO                                        
                                      , TOR.RANK                                            
                                      , TRM.NM_KOR                                          
                                      , RANK() OVER (PARTITION BY TOR.RACE_NO               
                                                                , TOR.RANK                  
                                                         ORDER BY TOR.RACE_REG_NO) SEQ      
                               FROM     TBEB_ORGAN@MRASYSLINK        TOR                        
                                      , TBEC_RACER_MASTER@MRASYSLINK TRM                        
                               WHERE 1=1                
                               AND    TOR.RACER_NO   = TRM.RACER_NO                         
                               AND    TOR.STND_YEAR  = ? 
                               AND    TOR.MBR_CD     = '001'                                
                               AND    TOR.TMS        = ? 
                               AND    TOR.DAY_ORD    = ? 
                               AND    TOR.RANK BETWEEN 1                                    
                                                   AND 3                                    
                          )                                                                 
                   START WITH SEQ = 1                                                       
                   CONNECT BY PRIOR SEQ = SEQ - 1                                           
                   AND PRIOR RACE_NO = RACE_NO AND RANK = RANK                              
                   GROUP BY                                                                 
                            RACE_NO                                                         
                          , RANK                                                            
               )                                                                            
          GROUP BY RACE_NO                                                                  
          UNION ALL                                                                         
          SELECT 'TOTAL', '', '', '' FROM DUAL                                              
      ) R, 
      (   
     
       SELECT                                                                         
          RACE_NO,
            SUM(CASE 
                     WHEN POOL_CD = '001' AND RS_SEQ >= '2' THEN PAYOFF 
                     WHEN POOL_CD = '002' AND RS_SEQ >= '3' THEN PAYOFF 
                     WHEN POOL_CD = '004' AND RS_SEQ >= '2' THEN PAYOFF 
                     WHEN POOL_CD = '005' AND RS_SEQ >= '2' THEN PAYOFF 
                     WHEN POOL_CD = '006' AND RS_SEQ >= '2' THEN PAYOFF 
            END) AS SAME_PAYOFF_TOTAL, 
                               
            SUM(CASE WHEN POOL_CD = '001' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_001, 
            SUM(CASE WHEN POOL_CD = '002' AND RS_SEQ >= '3' THEN PAYOFF END) AS SAME_PAYOFF_002, 
            SUM(CASE WHEN POOL_CD = '004' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_004, 
            SUM(CASE WHEN POOL_CD = '005' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_005, 
            SUM(CASE WHEN POOL_CD = '006' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_006 
      FROM TBES_SDL_RS                                                                
      WHERE 1=1                                                                          
          AND MEET_CD  = '003'                                                              
          AND STND_YEAR = ?      
          AND TMS   = ?      
          AND DAY_ORD  = ?      
      GROUP BY          
       RACE_NO                                                              
 
   ) E,                                                                                  
  (                                       
    SELECT DISTINCT RACE_NO           
    FROM TBEB_RACE_DOC@MRASYSLINK D        
      WHERE 1=1                          
          AND D.STND_YEAR= ? 
          AND D.TMS=? 
           AND D.DAY_ORD=? 
 
   ) Z                                   
  WHERE 1=1                                                                                    
      AND C.RACE_NO(+)=Z.RACE_NO                                                                
      AND B.RACE_NO(+)=Z.RACE_NO                                                            
      AND R.RACE_NO(+)=Z.RACE_NO                                                            
      AND D.RACE_NO(+)=Z.RACE_NO
      AND E.RACE_NO(+)=Z.RACE_NO                                                            
  ORDER BY Z.RACE_NO
 #String#2012#String#003#String#17#String#1#String#2012#String#003#String#17#String#1#String#2012#String#003#String#17#String#1#String#2012#String#17#String#1#String#2012#String#17#String#1#String#2012#String#17#String#1#
>
[I][UbiData][2012-06-07 18:58:46]	- Row size : 15
[I][UbiData][2012-06-07 18:58:46]	- Data
<
01^t3-5-6^t윤영근^t배혜민^t박광혁^t4.9^t1.5^t2.5^t15.2^t9.6^t12.6^t35611700^t204009400^t239621100^t0^t241173800^t-1552700^t-.64^t^t^t^t^t^t^t^n02^t2-1-6^t사재준^t김민길^t이주영^t1.3^t1^t2.3^t5^t3.6^t8.6^t45014100^t266961600^t311975700^t0^t306515100^t5460600^t1.78^t^t^t^t^t^t^t^n03^t5-1-3^t심상철^t최재원^t서지혜^t2.6^t1.2^t1.5^t4.1^t2^t1.8^t56343300^t317613800^t373957100^t0^t367015400^t6941700^t1.89^t^t^t^t^t^t^t^n04^t3-6-4^t정인교^t유해광^t진석현^t3.5^t1.4^t3.7^t17.9^t13.6^t6.7^t68390700^t353840800^t422231500^t0^t425410100^t-3178600^t-.75^t^t^t^t^t^t^t^n05^t6-5-1^t이승일^t강창효^t이종우^t7.8^t2.7^t4^t58.7^t25^t32.3^t77286400^t382717400^t460003800^t0^t479149900^t-19146100^t-4^t^t^t^t^t^t^t^n06^t1-4-6^t이지수^t서화모^t오승철^t2.1^t1.2^t1.5^t5.1^t2.8^t23.3^t75287300^t409594400^t484881700^t0^t469081700^t15800000^t3.37^t^t^t^t^t^t^t^n07^t6-2-1^t황이태^t민영건^t배혜민^t21.1^t7.4^t3.4^t84.1^t48^t14.6^t83973800^t442296200^t526270000^t0^t515496200^t10773800^t2.09^t^t^t^t^t^t^t^n08^t4-1-6^t신동길^t우진수^t구현구^t1.5^t1.2^t2^t5^t3^t6.1^t87946200^t465878600^t553824800^t0^t556565300^t-2740500^t-.49^t^t^t^t^t^t^t^n09^t2-4-1^t김정구^t손동민^t이흥우^t1.7^t1.2^t1.9^t4.5^t3.2^t3.3^t90588300^t496773300^t587361600^t0^t548482300^t38879300^t7.09^t^t^t^t^t^t^t^n10^t1-6-5^t김영욱^t사재준^t윤영근^t1.9^t1.3^t1.5^t4.4^t2.6^t3.6^t105524600^t548328500^t653853100^t0^t669189800^t-15336700^t-2.29^t^t^t^t^t^t^t^n11^t1-4-2^t심상철^t김민길^t박광혁^t1.8^t1.3^t3.6^t11.9^t8.6^t7.4^t102946300^t570560600^t673506900^t0^t707765400^t-34258500^t-4.84^t^t^t^t^t^t^t^n12^t1-4-6^t경상수^t김선필^t최재원^t2.4^t1.4^t8.3^t30.6^t24.2^t21.1^t115328700^t581139400^t696468100^t0^t682622600^t13845500^t2.03^t^t^t^t^t^t^t^n13^t5-3-1^t김효년^t문주엽^t주은석^t6^t2.3^t1.3^t14.7^t6.5^t3.3^t109989500^t598526200^t708515700^t0^t702342900^t6172800^t.88^t^t^t^t^t^t^t^n14^t2-4-3^t구현구^t장영태^t강창효^t1.7^t1.5^t1.7^t5.2^t3.7^t4.2^t105198100^t611299000^t716497100^t0^t698218300^t18278800^t2.62^t^t^t^t^t^t^t^n15^t3-5-1^t이태희^t어선규^t유해광^t2.2^t1.3^t1.5^t4^t2.5^t2.4^t105685700^t645669500^t751355200^t0^t735842100^t15513100^t2.11^t^t^t^t^t^t^t^n
>
[I][UbiData][2012-06-07 18:58:46][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 18:58:46][DATA QUERY START]
[I][UbiData][2012-06-07 18:58:46]	- sql id : rsm2020_s02Today
[I][UbiData][2012-06-07 18:58:46]	- Db charset : KSC5601
[I][UbiData][2012-06-07 18:58:46]	- Sql
<
SELECT                                                                                          
           MST.GBN       
         , YEAR.DIV_TOTAL AS YEAR_TOTAL 
         , YEAR.REFUND    AS YEAR_REFUND 
         , TMS.D_1 
         , TMS.D_2   
         , TMS.D_3   
         , TMS.D_4   
         , TMS.D_5   
         , TMS.D_6   
         , TMS.D_7   
         , TMS.TOTAL 
         , PRE.TOTAL AS PRE_TOTAL 
         , NVL(TMS.TOTAL, 0) - NVL(PRE .TOTAL, 0) ADD_POOL 
         , CASE WHEN (NVL(PRE.TOTAL, 0) = 0) AND (NVL(TMS.TOTAL, 0) = 0) THEN 0                  
                WHEN NVL(PRE.TOTAL, 0) = 0                               THEN 100                
                WHEN NVL(TMS.TOTAL, 0) = 0                                THEN -100              
                ELSE ROUND((NVL(TMS.TOTAL, 0) - NVL(PRE.TOTAL, 0)) / NVL(PRE.TOTAL, 0) * 100, 2) 
           END ADD_RATE 
  FROM                                                                                           
           (                                                                                     
              SELECT                                                                             
                       ?  STND_YEAR                                                      
                     , '매출총액' GBN                                                            
              FROM   DUAL                                                                        
           ) MST                                                                                 
         , (                                                                                     
              SELECT                                                                             
                       TMS.STND_YEAR                                                             
                     , MIN(DECODE(TMS.D, 1, TMS.AMOUNT)) D_1                                     
                     , MIN(DECODE(TMS.D, 2, TMS.AMOUNT)) D_2                                     
                     , MIN(DECODE(TMS.D, 3, TMS.AMOUNT)) D_3                                     
                     , MIN(DECODE(TMS.D, 4, TMS.AMOUNT)) D_4                                     
                     , MIN(DECODE(TMS.D, 5, TMS.AMOUNT)) D_5                                     
                     , MIN(DECODE(TMS.D, 6, TMS.AMOUNT)) D_6                                     
                     , MIN(DECODE(TMS.D, 7, TMS.AMOUNT)) D_7                                     
                     , SUM(TMS.AMOUNT)                   TOTAL                                   
              FROM   (                                                                           
                          SELECT                                                                 
                                   TSP.STND_YEAR                                                 
                                 , TO_CHAR(TO_DATE(INFO.RACE_DAY, 'YYYYMMDD'), 'D') D            
                                 , SUM(TSP.POOL_TOTAL) AMOUNT                                    
                          FROM     VW_SDL_INFO INFO                                              
                                 , TBES_SDL_PT       TSP                                         
                          WHERE  1=1
                          AND    INFO.STND_YEAR = TSP.STND_YEAR                                  
                          AND    INFO.MEET_CD    = TSP.MEET_CD                                   
                          AND    INFO.TMS       = TSP.TMS                                        
                          AND    INFO.DAY_ORD   = TSP.DAY_ORD                                    
                          AND    TSP.STND_YEAR  = ?   
                          AND    TSP.MEET_CD    = ?       
                          AND    TSP.TMS        = ?       
                          GROUP BY                                                               
                                   TSP.STND_YEAR                                                 
                                 , INFO.RACE_DAY                                                 
                     ) TMS                                                                       
              GROUP BY TMS.STND_YEAR                                                             
           ) TMS                                                                                 
         , (                                                                                     
              SELECT                                                                             
                       STND_YEAR                                                                 
                     , SUM(TSP.DIV_TOTAL) DIV_TOTAL                                              
                     , SUM(TSP.REFUND    ) REFUND                                                
              FROM   TBES_SDL_DT_SUM       TSP                                                       
              WHERE  TSP.STND_YEAR  = ?                                                  
              AND    TSP.MEET_CD    = ?                                                    
              AND    TSP.TMS       <= ?                                                        
              GROUP BY                                                                           
                       STND_YEAR                                                                 
           ) YEAR                                                                                
         , (                                                                                     
              SELECT                                                                             
                       STND_YEAR                                                                 
                     , TMS                                                                       
                     , NVL(SUM(TSP.POOL_TOTAL), 0)  TOTAL                                        
              FROM   TBES_SDL_PT       TSP                                                       
              WHERE  1=1
              AND TSP.STND_YEAR  = ? 
              AND    TSP.MEET_CD    = ?                                                    
              AND    TSP.TMS        = ?  - 1                                                   
              GROUP BY                                                                           
                       STND_YEAR                                                                 
                     , TMS                                                                       
           ) PRE                                                                                 
  WHERE  1=1
  AND   MST.STND_YEAR = TMS .STND_YEAR(+)                                                       
  AND    MST.STND_YEAR = YEAR.STND_YEAR(+)                                                       
  AND    MST.STND_YEAR = PRE .STND_YEAR(+)                                                       
  UNION ALL                                                                                      
  SELECT                                                                                         
           MST.GBN                                                                               
         , YEAR.DIV_TOTAL                   YEAR_TOTAL                                           
         , YEAR.REFUND                      YEAR_REFUND                                          
         , TMS.D_1                                                                               
         , TMS.D_2                                                                               
         , TMS.D_3                                                                               
         , TMS.D_4                                                                               
         , TMS.D_5                                                                               
         , TMS.D_6                                                                               
         , TMS.D_7                                                                               
         , TMS.TOTAL                                                                             
         , 0 PRE_TOTAL                                                                           
         , NVL(PRE .TOTAL, 0) - NVL(TMS.TOTAL, 0) ADD_POOL                                       
         , CASE WHEN (NVL(PRE.TOTAL, 0) = 0) AND (NVL(TMS.TOTAL, 0) = 0) THEN 0                  
                WHEN NVL(PRE.TOTAL, 0) = 0                               THEN -100               
                WHEN NVL(TMS.TOTAL, 0) = 0                                THEN 100               
                ELSE ROUND((NVL(PRE.TOTAL, 0) - NVL(TMS.TOTAL, 0)) / NVL(TMS.TOTAL, 0) * 100, 2) 
           END ADD_RATE                                                                          
  FROM                                                                                           
           (                                                                                     
              SELECT                                                                             
                       ?  -1 STND_YEAR                                                    
                     , '전년대비' GBN                                                            
              FROM   DUAL                                                                        
           ) MST                                                                                 
         , (                                                                                     
              SELECT                                                                             
                       TMS.STND_YEAR                                                             
                     , MIN(DECODE(TMS.D, 1, TMS.AMOUNT)) D_1                                     
                     , MIN(DECODE(TMS.D, 2, TMS.AMOUNT)) D_2                                     
                     , MIN(DECODE(TMS.D, 3, TMS.AMOUNT)) D_3                                     
                     , MIN(DECODE(TMS.D, 4, TMS.AMOUNT)) D_4                                     
                     , MIN(DECODE(TMS.D, 5, TMS.AMOUNT)) D_5                                     
                     , MIN(DECODE(TMS.D, 6, TMS.AMOUNT)) D_6                                     
                     , MIN(DECODE(TMS.D, 7, TMS.AMOUNT)) D_7                                     
                     , SUM(TMS.AMOUNT)                   TOTAL                                   
              FROM   (                                                                           
                          SELECT                                                                 
                                   TSP.STND_YEAR                                                 
                                 , TO_CHAR(TO_DATE(INFO.RACE_DAY, 'YYYYMMDD'), 'D') D            
                                 , SUM(TSP.POOL_TOTAL) AMOUNT                                    
                          FROM     VW_SDL_INFO INFO                                              
                                 , TBES_SDL_PT       TSP                                         
                          WHERE  1=1
                          AND  INFO.STND_YEAR = TSP.STND_YEAR                                  
                          AND    INFO.MEET_CD    = TSP.MEET_CD                                   
                          AND    INFO.TMS       = TSP.TMS                                        
                          AND    INFO.DAY_ORD   = TSP.DAY_ORD                                    
                          AND    TSP.STND_YEAR  =  ?  -1                                   
                          AND    TSP.MEET_CD    = ?                                        
                          AND    TSP.TMS        = ?                                            
                          GROUP BY                                                               
                                   TSP.STND_YEAR                                                 
                                 , INFO.RACE_DAY                                                 
                     ) TMS                                                                       
              GROUP BY TMS.STND_YEAR                                                             
           ) TMS                                                                                 
         , (                                                                                     
              SELECT                                                                             
                       STND_YEAR                                                                 
                     , SUM(TSP.DIV_TOTAL) DIV_TOTAL                                              
                     , SUM(TSP.REFUND    ) REFUND                                                
              FROM   TBES_SDL_DT_SUM       TSP                                                       
              WHERE  1=1
              AND TSP.STND_YEAR  = ?  -1                                               
              AND    TSP.MEET_CD    = ?                                                    
              AND    TSP.TMS       <= ?                                                        
              GROUP BY                                                                           
                       STND_YEAR                                                                 
           ) YEAR                                                                                
         , (                                                                                     
              SELECT                                                                             
                       STND_YEAR-1 STND_YEAR                                                     
                     , TMS                                                                       
                     , NVL(SUM(TSP.POOL_TOTAL), 0)  TOTAL                                        
              FROM   TBES_SDL_PT       TSP                                                       
              WHERE  1=1
              AND TSP.STND_YEAR  = ?                                                  
              AND    TSP.MEET_CD    = ?                                                    
              AND    TSP.TMS        = ?                                                        
              GROUP BY                                                                           
                       STND_YEAR                                                                 
                     , TMS                                                                       
           ) PRE                                                                                 
  WHERE  1=1
  AND MST.STND_YEAR = TMS.STND_YEAR(+)                                                        
  AND    MST.STND_YEAR = YEAR.STND_YEAR(+)                                                       
  AND    MST.STND_YEAR = PRE.STND_YEAR(+)
 #String#2012#String#2012#String#003#String#17#String#2012#String#003#String#17#String#2012#String#003#String#17#String#2012#String#2012#String#003#String#17#String#2012#String#003#String#17#String#2012#String#003#String#17#
>
[I][UbiData][2012-06-07 18:58:46]	- Row size : 2
[I][UbiData][2012-06-07 18:58:46]	- Data
<
매출총액^t255807593000^t4674302200^t^t^t^t^t8160323400^t^t^t8160323400^t16874921600^t-8714598200^t-51.64^t^n전년대비^t298819077500^t5513386200^t^t^t^t8970408300^t10464906900^t^t^t19435315200^t0^t-11274991800^t-58.01^t^n
>
[I][UbiData][2012-06-07 18:58:46][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 18:58:46][DATA QUERY START]
[I][UbiData][2012-06-07 18:58:46]	- sql id : rsm2020_s04
[I][UbiData][2012-06-07 18:58:46]	- Db charset : KSC5601
[I][UbiData][2012-06-07 18:58:46]	- Sql
<
SELECT 
   ROW_ORDER,
   MANA_DESC, 
   TOTAL        
        ,SUN_NUM     
        ,TUE_NUM     
        ,WEN_NUM     
        ,THU_NUM     
        ,TOT_PRSN_NUM,    
        
        B_TOT_PRSN_NUM,          
        
        CASE 
              WHEN ROW_ORDER='2' THEN N_TOT_PRSN_NUM - TOT_PRSN_NUM
              ELSE PRSN_NUM_MINUS
        END PRSN_NUM_MINUS,          
        
        ROUND(CASE 
              WHEN ROW_ORDER='2' THEN (N_TOT_PRSN_NUM - TOT_PRSN_NUM)/TOT_PRSN_NUM*100
              ELSE PER
        END,2) AS PER             
  FROM
 (
  
  SELECT '1' AS ROW_ORDER,
    '입장인원' AS MANA_DESC,
     A.TMS                                                               
        ,TOT_PRSN_NUM                     
        ,MON_NUM 
              ,TUE_NUM 
              ,WEN_NUM 
              ,THU_NUM 
              ,FRI_NUM 
              ,SAT_NUM 
              ,SUN_NUM 
              ,B_TOT_PRSN_NUM
              ,(TOT_PRSN_NUM-B_TOT_PRSN_NUM) AS PRSN_NUM_MINUS
              ,DECODE(B_TOT_PRSN_NUM,0,0,(TOT_PRSN_NUM-B_TOT_PRSN_NUM)/B_TOT_PRSN_NUM*100)  AS PER
              ,TOTAL          
  
    FROM
    
    
    (
    
     SELECT   MAX(TMS) TMS
           ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
           ,NVL(SUM(A.ENT_PRSN_NUM ),0)         TOT_PRSN_NUM                                                      
           
          
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'2', A.ENT_PRSN_NUM,0 )) ,0) MON_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'3', A.ENT_PRSN_NUM,0 )) ,0) TUE_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'4', A.ENT_PRSN_NUM,0 )) ,0) WEN_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'5', A.ENT_PRSN_NUM,0 )) ,0) THU_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'6', A.ENT_PRSN_NUM,0 )) ,0) FRI_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'7', A.ENT_PRSN_NUM,0 )) ,0) SAT_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'1', A.ENT_PRSN_NUM,0 )) ,0) SUN_NUM       
    
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) =  ?  
                AND MEET_CD = ?   
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE 1=1
             AND STND_YEAR = ?  
                AND MEET_CD = ? 
                AND TMS  = ?  
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    GROUP BY B.TMS
    ) A,
    
    
    (
    
     SELECT   
            MAX(TMS) TMS
           ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
           ,NVL(SUM(A.ENT_PRSN_NUM ),0)         B_TOT_PRSN_NUM  
           
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) =  ?  
                AND MEET_CD = ?    
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE 1=1
             AND STND_YEAR = ?    
                AND MEET_CD = ? 
                AND TMS  = ?  - 1   
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    GROUP BY B.TMS
    ) B,
    
    (
    
     SELECT NVL(SUM(A.ENT_PRSN_NUM ),0)         TOTAL  
           
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) = ?  
                AND MEET_CD = ?   
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE STND_YEAR = ?  
                AND MEET_CD = ? 
                AND TMS <= ?  
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    )C
  UNION ALL 
  
  
  SELECT '2' AS ROW_ORDER,
    '전년대비' AS MANA_DESC,
     A.TMS                                                               
        ,TOT_PRSN_NUM                     
        ,MON_NUM 
              ,TUE_NUM 
              ,WEN_NUM 
              ,THU_NUM 
              ,FRI_NUM 
              ,SAT_NUM 
              ,SUN_NUM 
              ,B_TOT_PRSN_NUM
              ,(TOT_PRSN_NUM-B_TOT_PRSN_NUM) AS PRSN_NUM_MINUS
              ,DECODE(B_TOT_PRSN_NUM,0,0,(TOT_PRSN_NUM-B_TOT_PRSN_NUM)/B_TOT_PRSN_NUM*100)  AS PER
              ,TOT          
  
    FROM
    
    
    (
    
     SELECT   MAX(TMS) TMS
           ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
           ,NVL(SUM(A.ENT_PRSN_NUM ),0)         TOT_PRSN_NUM                                                      
           
          
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'2', A.ENT_PRSN_NUM,0 )) ,0) MON_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'3', A.ENT_PRSN_NUM,0 )) ,0) TUE_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'4', A.ENT_PRSN_NUM,0 )) ,0) WEN_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'5', A.ENT_PRSN_NUM,0 )) ,0) THU_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'6', A.ENT_PRSN_NUM,0 )) ,0) FRI_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'7', A.ENT_PRSN_NUM,0 )) ,0) SAT_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'1', A.ENT_PRSN_NUM,0 )) ,0) SUN_NUM       
    
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) = ?  - 1  
                AND MEET_CD    = ?   
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE STND_YEAR = ?  - 1  
                AND MEET_CD =?  
                AND TMS  = ?    
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    GROUP BY B.TMS
    ) A,
    
    
    (
    
     SELECT   
            MAX(TMS) TMS
           ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
           ,NVL(SUM(A.ENT_PRSN_NUM ),0)         B_TOT_PRSN_NUM  
           
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) = ?  -1 
                AND MEET_CD = ?     
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE STND_YEAR = ?  - 1  
                AND MEET_CD = ? 
                AND TMS  = ?  - 1  
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    GROUP BY B.TMS
    ) B,
    
    (
    
     SELECT NVL(SUM(A.ENT_PRSN_NUM ),0)         TOT  
           
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) =  ?  -1 
                AND MEET_CD = '003'
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE STND_YEAR = ?  -1  
                AND MEET_CD = ? 
                AND TMS  <= ?   
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    )C
  ),
  (
  SELECT SUM(A.ENT_PRSN_NUM ) AS N_TOT_PRSN_NUM
      FROM 
          TBRC_STAY_MANA  A,       
          VW_SDL_INFO B
      WHERE 1 =1
        AND A.RACE_DT(+) = B.RACE_DAY
        AND B.STND_YEAR =  ?  
        AND B.MEET_CD = ?    
        AND B.TMS  = ?       
  )BB  
 ORDER BY MANA_DESC
 #String#2012#String#003#String#2012#String#003#String#17#String#2012#String#003#String#2012#String#003#String#17#String#2012#String#003#String#2012#String#003#String#17#String#2012#String#003#String#2012#String#003#String#17#String#2012#String#003#String#2012#String#003#String#17#String#2012#String#2012#String#003#String#17#String#2012#String#003#String#17#
>
[I][UbiData][2012-06-07 18:58:46]	- Row size : 2
[I][UbiData][2012-06-07 18:58:46]	- Data
<
1^t입장인원^t998229^t0^t0^t0^t32508^t32508^t67325^t-34817^t-51.71^t^n2^t전년대비^t1417977^t0^t0^t44040^t44345^t88385^t80393^t-55877^t-63.22^t^n
>
[I][UbiData][2012-06-07 18:58:46][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 18:58:46][DATA QUERY START]
[I][UbiData][2012-06-07 18:58:46]	- sql id : rsm2020_s07
[I][UbiData][2012-06-07 18:58:46]	- Db charset : KSC5601
[I][UbiData][2012-06-07 18:58:46]	- Sql
<
SELECT  
   '0~'||BB.RACE_NO||'R' AS RACE_DESC,
   DECODE(LEV,1,'인원','점유율') AS MANA_DESC,
      DECODE(LEV,1,INWON_12,DECODE(INWON_TOTAL,0,0,ROUND(INWON_12/INWON_TOTAL*100,2))) AS INWON_12, 
      DECODE(LEV,1,INWON_13,DECODE(INWON_TOTAL,0,0,ROUND(INWON_13/INWON_TOTAL*100,2))) AS INWON_13, 
      DECODE(LEV,1,INWON_14,DECODE(INWON_TOTAL,0,0,ROUND(INWON_14/INWON_TOTAL*100,2))) AS INWON_14, 
      DECODE(LEV,1,INWON_16,DECODE(INWON_TOTAL,0,0,ROUND(INWON_16/INWON_TOTAL*100,2))) AS INWON_16, 
      DECODE(LEV,1,INWON_19,DECODE(INWON_TOTAL,0,0,ROUND(INWON_19/INWON_TOTAL*100,2))) AS INWON_19, 
      DECODE(LEV,1,INWON_20,DECODE(INWON_TOTAL,0,0,ROUND(INWON_20/INWON_TOTAL*100,2))) AS INWON_20, 
      DECODE(LEV,1,INWON_22,DECODE(INWON_TOTAL,0,0,ROUND(INWON_22/INWON_TOTAL*100,2))) AS INWON_22, 
      DECODE(LEV,1,INWON_23,DECODE(INWON_TOTAL,0,0,ROUND(INWON_23/INWON_TOTAL*100,2))) AS INWON_23, 
      DECODE(LEV,1,INWON_24,DECODE(INWON_TOTAL,0,0,ROUND(INWON_24/INWON_TOTAL*100,2))) AS INWON_24, 
      DECODE(LEV,1,INWON_25,DECODE(INWON_TOTAL,0,0,ROUND(INWON_25/INWON_TOTAL*100,2))) AS INWON_25, 
      DECODE(LEV,1,INWON_26,DECODE(INWON_TOTAL,0,0,ROUND(INWON_26/INWON_TOTAL*100,2))) AS INWON_26, 
      DECODE(LEV,1,INWON_27,DECODE(INWON_TOTAL,0,0,ROUND(INWON_27/INWON_TOTAL*100,2))) AS INWON_27, 
      DECODE(LEV,1,INWON_28,DECODE(INWON_TOTAL,0,0,ROUND(INWON_28/INWON_TOTAL*100,2))) AS INWON_28, 
      DECODE(LEV,1,INWON_100,DECODE(INWON_TOTAL,0,0,ROUND(INWON_100/INWON_TOTAL*100,2))) AS INWON_100, 
      DECODE(LEV,1,INWON_101,DECODE(INWON_TOTAL,0,0,ROUND(INWON_101/INWON_TOTAL*100,2))) AS INWON_101, 
      DECODE(LEV,1,INWON_102,DECODE(INWON_TOTAL,0,0,ROUND(INWON_102/INWON_TOTAL*100,2))) AS INWON_102, 
      DECODE(LEV,1,INWON_103,DECODE(INWON_TOTAL,0,0,ROUND(INWON_103/INWON_TOTAL*100,2))) AS INWON_103, 
      DECODE(LEV,1,INWON_SUM,DECODE(INWON_TOTAL,0,0,ROUND(INWON_SUM/INWON_TOTAL*100,2))) AS INWON_TOTAL 
  FROM
 (
             SELECT  
        SUM(CASE WHEN BRNC_CD='12' THEN INWON END) AS INWON_12, 
        SUM(CASE WHEN BRNC_CD='13' THEN INWON END) AS INWON_13, 
        SUM(CASE WHEN BRNC_CD='14' THEN INWON END) AS INWON_14, 
        SUM(CASE WHEN BRNC_CD='16' THEN INWON END) AS INWON_16, 
        SUM(CASE WHEN BRNC_CD='19' THEN INWON END) AS INWON_19, 
        SUM(CASE WHEN BRNC_CD='20' THEN INWON END) AS INWON_20, 
        SUM(CASE WHEN BRNC_CD='22' THEN INWON END) AS INWON_22, 
        SUM(CASE WHEN BRNC_CD='23' THEN INWON END) AS INWON_23, 
        SUM(CASE WHEN BRNC_CD='24' THEN INWON END) AS INWON_24, 
        SUM(CASE WHEN BRNC_CD='25' THEN INWON END) AS INWON_25, 
        SUM(CASE WHEN BRNC_CD='26' THEN INWON END) AS INWON_26, 
        SUM(CASE WHEN BRNC_CD='27' THEN INWON END) AS INWON_27, 
        SUM(CASE WHEN BRNC_CD='28' THEN INWON END) AS INWON_28, 
        SUM(CASE WHEN BRNC_CD='100' THEN INWON END) AS INWON_100, 
        SUM(CASE WHEN BRNC_CD='101' THEN INWON END) AS INWON_101, 
        SUM(CASE WHEN BRNC_CD='102' THEN INWON END) AS INWON_102, 
        SUM(CASE WHEN BRNC_CD='103' THEN INWON END) AS INWON_103, 
        SUM(INWON ) AS INWON_TOTAL,
        SUM(CASE WHEN BRNC_CD='12' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='13' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='14' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='16' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='19' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='20' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='22' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='23' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='24' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='25' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='26' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='27' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='28' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='100' THEN INWON END) + 
                 SUM(CASE WHEN BRNC_CD='101' THEN INWON END) + 
                 SUM(CASE WHEN BRNC_CD='102' THEN INWON END) +
                 SUM(CASE WHEN BRNC_CD='103' THEN INWON END)  AS INWON_SUM 
     FROM
    (
    SELECT C.CD_NM, 
           E.BRNC_CD,                                      
            SUM( E.ENT_PRSN_NUM) INWON 
        FROM                                                   
         VW_SDL_INFO R       
         ,TBRC_STAY_MANA E, 
         TBRK_SPEC_CD C                      
        WHERE  1=1
           AND R.MEET_CD  = ?  
        AND R.STND_YEAR(+) = ?  
          AND R.TMS(+)   = ?  
          AND R.DAY_ORD(+) = ?  
         AND E.MEET_CD='003'                        
         AND E.RACE_DT=R.RACE_DAY                 
         AND C.GRP_CD IN ('018','032')                      
         AND C.CD=E.BRNC_CD                
         
        GROUP BY E.BRNC_CD,C.CD_NM          
        ORDER BY E.BRNC_CD
    )A
   )AA,
 (
  SELECT                                                                   
          MAX(RACE_NO)  AS RACE_NO
          
   FROM   (                                                                 
               SELECT                                                       
                        TOR.RACE_NO                                         
                      , TOR.RACE_REG_NO                                     
                      , TOR.RACER_NO                                        
                      , TOR.RANK                                            
                      , TRM.NM_KOR                                          
                      , RANK() OVER (PARTITION BY TOR.RACE_NO               
                                                , TOR.RANK                  
                                         ORDER BY TOR.RACE_REG_NO) SEQ      
               FROM     TBEB_ORGAN@MRASYSLINK        TOR                        
                      , TBEC_RACER_MASTER@MRASYSLINK TRM                        
               WHERE 1=1                                                        
               
               AND    TOR.RACER_NO   = TRM.RACER_NO                         
               AND    TOR.STND_YEAR  = ?  
               AND    TOR.MBR_CD     = '001'                                
               AND    TOR.TMS        = ?  
               
               AND    TOR.RANK BETWEEN 1                                    
                                   AND 3                                    
          )                                                                 
   START WITH SEQ = 1                                                       
   CONNECT BY PRIOR SEQ = SEQ - 1                                           
   AND PRIOR RACE_NO = RACE_NO AND RANK = RANK                           
 )BB , (SELECT LEVEL LEV FROM DUAL CONNECT BY LEVEL <=2 ) DU
 #String#003#String#2012#String#17#String#1#String#2012#String#17#
>
[I][UbiData][2012-06-07 18:58:46]	- Row size : 2
[I][UbiData][2012-06-07 18:58:46]	- Data
<
0~15R^t인원^t2680^t2455^t3022^t3198^t3442^t2948^t1271^t1987^t1627^t1257^t988^t3289^t1143^t0^t0^t0^t0^t29307^t^n0~15R^t점유율^t8.24^t7.55^t9.3^t9.84^t10.59^t9.07^t3.91^t6.11^t5^t3.87^t3.04^t10.12^t3.52^t0^t0^t0^t0^t90.15^t^n
>
[I][UbiData][2012-06-07 18:58:46][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 18:58:46][DATA QUERY START]
[I][UbiData][2012-06-07 18:58:46]	- sql id : rsm2020_s08
[I][UbiData][2012-06-07 18:58:46]	- Db charset : KSC5601
[I][UbiData][2012-06-07 18:58:46]	- Sql
<
SELECT                                       
       STND_YEAR,  
       TMS,           
       DAY_ORD,   
       SPEC_DESC   
  FROM TBRD_RACE_SPEC_DESC 
  WHERE 1=1
       AND STND_YEAR = ?  
       AND TMS  = ?  
       AND DAY_ORD = ?  
       AND MEET_CD   = ?  
 UNION ALL
 SELECT 
       ' ', 999, 999, ' '
 FROM DUAL          
 ORDER BY TMS
 #String#2012#String#17#String#1#String#003#
>
[I][UbiData][2012-06-07 18:58:46]	- Row size : 1
[I][UbiData][2012-06-07 18:58:46]	- Data
<
 ^t999^t999^t ^t^n
>
[I][UbiData][2012-06-07 18:58:46][DATA QUERY END]
--------------------------------------------------------------------------------


[I][UbiForm][2012-06-07 19:01:42][REQUEST FILE]
[I][UbiForm][2012-06-07 19:01:42]	- Report : /web/waspage/usrbm/report/rsm/rsm2020.jrf
[I][UbiForm][2012-06-07 19:01:42]	- Common : /web/waspage/usrbm/report/rsm/property/commonitem.xml [Not found]
--------------------------------------------------------------------------------


[I][UbiData][2012-06-07 19:01:42][REQUEST FILE]
[I][UbiData][2012-06-07 19:01:42]	- Report : rsm2020.jrf
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 19:01:42][DB CONNECT]
[I][UbiData][2012-06-07 19:01:42]	- Type : nonlookup
[I][UbiData][2012-06-07 19:01:42]	- Db id : rbm
[I][UbiData][2012-06-07 19:01:42]	- Sql id : rsm2020_s06Today
[I][UbiData][2012-06-07 19:01:42]	- Datasource : jdbc/RBM
[I][UbiData][2012-06-07 19:01:42]	- Status : Success
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 19:01:42][DATA QUERY START]
[I][UbiData][2012-06-07 19:01:42]	- sql id : rsm2020_s06Today
[I][UbiData][2012-06-07 19:01:42]	- Db charset : KSC5601
[I][UbiData][2012-06-07 19:01:42]	- Sql
<
WITH J 
 AS
 (SELECT    
         '전회' AS COL_DESC  
     , tms                                                                                       
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='12' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_02    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='16' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_06    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='22'  THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_12    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='20' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_10    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='23' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_13    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='24' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_14    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='13' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_03    
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='25'  THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_15    
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='19' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_09    
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='14' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_05    
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='26' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_16    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='27' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_17    
     , SUM(                                                                              
           CASE                                                                          
              WHEN COMM_NO='06'  THEN NVL(DIV_TOTAL, 0)                                  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_01_06_01    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='28' THEN NVL(DIV_TOTAL, 0) 
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_01_07_18    
         , SUM(                                                                              
               CASE                                                                          
                  WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_04_07_01    
         , SUM(                                                                              
               CASE                                                                          
                  WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='02' THEN NVL(DIV_TOTAL, 0)  
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_04_07_02    
        , SUM(                                                                              
               CASE                                                                          
                  WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='03' THEN NVL(DIV_TOTAL, 0)  
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_04_07_03    
         , SUM(                                                                              
               CASE                                                                          
                  WHEN SELL_CD='02' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_02_07_01    
 
         , SUM(                                                                              
               CASE                                                                          
                  WHEN COMM_NO NOT IN ('01','02','03','04','08') THEN NVL(DIV_TOTAL, 0)                         
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_JIJUM    
         , SUM(DIV_TOTAL)/100 DIV_TOTAL                                                             
  FROM   TBES_SDL_DT_SUM                                                                         
  WHERE  1=1                                                                                    
    AND STND_YEAR  = ?                                                            
    AND MEET_CD    = ?                                                        
    AND TMS        BETWEEN ?  - 1 AND ? 
    AND DAY_ORD    = ? 
  GROUP BY TMS 
 )
 SELECT  DECODE(TMS, ? , '합계','전회') COL_DESC
        , TMS
        ,'1' AS GUBN
        ,DIV_01_07_02 
        ,DIV_01_07_06 
        ,DIV_01_07_12 
        ,DIV_01_07_10 
        ,DIV_01_07_13 
        ,DIV_01_07_14 
        ,DIV_01_07_03 
        ,DIV_01_07_15 
        ,DIV_01_07_09 
        ,DIV_01_07_05 
        ,DIV_01_07_16 
        ,DIV_01_07_17 
        ,DIV_01_06_01 
        ,DIV_01_07_18 
        ,DIV_04_07_01 
        ,DIV_04_07_02 
        ,DIV_04_07_03 
        ,DIV_02_07_01
        ,DIV_JIJUM
        ,1
 FROM J
 UNION ALL
 SELECT '점유율'
       , TMS
       , '2'
       , ROUND(DIV_01_07_02 / DIV_TOTAL * 100, 2) 
       , ROUND(DIV_01_07_06 / DIV_TOTAL * 100, 2)   
       , ROUND(DIV_01_07_12 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_10 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_13 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_14 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_03 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_15 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_09 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_05 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_16 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_17 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_06_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_18 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_02 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_03 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_02_07_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_JIJUM / DIV_TOTAL * 100, 2)    
       , 100
 FROM J
 WHERE tms = ? 
 UNION ALL
 SELECT '전회차'
       , TMS
       , '2'
       , ROUND(DIV_01_07_02 / DIV_TOTAL * 100, 2) 
       , ROUND(DIV_01_07_06 / DIV_TOTAL * 100, 2)   
       , ROUND(DIV_01_07_12 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_10 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_13 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_14 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_03 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_15 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_09 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_05 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_16 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_17 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_06_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_18 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_02 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_03 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_02_07_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_JIJUM / DIV_TOTAL * 100, 2)    
       , 100
 FROM J
 WHERE TMS = ?  -1
 ORDER BY 3, 2 DESC
 #String#2012#String#003#String#17#String#17#String#1#String#17#String#17#String#17#
>
[I][UbiData][2012-06-07 19:01:42]	- Row size : 4
[I][UbiData][2012-06-07 19:01:42]	- Data
<
합계^t17^t1^t5759243^t6768872^t3464367^t4581356^t3964638^t6685253^t3899352^t3606854^t6970537^t6270105^t3005424^t6179547^t172346^t2917226^t1910858^t2796109^t0^t0^t68952087^t1^t^n전회^t16^t1^t5110145^t6625240^t3652284^t4516474^t4532647^t6596680^t4323166^t3600994^t7080707^t6011354^t3246328^t5786326^t150613^t2709578^t1871131^t2728615^t0^t0^t68542282^t1^t^n점유율^t17^t2^t7.06^t8.29^t4.25^t5.61^t4.86^t8.19^t4.78^t4.42^t8.54^t7.68^t3.68^t7.57^t.21^t3.57^t2.34^t3.43^t0^t0^t84.5^t100^t^n전회차^t16^t2^t6.31^t8.17^t4.51^t5.57^t5.59^t8.14^t5.33^t4.44^t8.74^t7.42^t4.01^t7.14^t.19^t3.34^t2.31^t3.37^t0^t0^t84.57^t100^t^n
>
[I][UbiData][2012-06-07 19:01:42][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 19:01:42][DATA QUERY START]
[I][UbiData][2012-06-07 19:01:42]	- sql id : rsm2020_s11
[I][UbiData][2012-06-07 19:01:42]	- Db charset : KSC5601
[I][UbiData][2012-06-07 19:01:42]	- Sql
<
SELECT 
         '0~'||BB.RACE_NO||'R' AS RACE_DESC,
         DECODE(LEV,1,'인원','점유율') AS MANA_DESC,
         CASE 
             WHEN LEV='2' AND IN_PRSN_NUM > 0 AND TOT_PRSN_NUM > 0 THEN ROUND(IN_PRSN_NUM / TOT_PRSN_NUM *100,2)    
             ELSE IN_PRSN_NUM
        END AS IN_PRSN_NUM, 
        CASE 
             WHEN LEV='2' AND BRNC_PRSN_NUM > 0 AND TOT_PRSN_NUM > 0 THEN ROUND(BRNC_PRSN_NUM / TOT_PRSN_NUM *100,2)    
             ELSE BRNC_PRSN_NUM
        END AS BRNC_PRSN_NUM, 
        CASE 
             WHEN LEV='2' AND TOT_PRSN_NUM > 0 THEN ROUND(TOT_PRSN_NUM / TOT_PRSN_NUM *100,2)    
             ELSE TOT_PRSN_NUM
        END AS TOT_PRSN_NUM, 
        CASE 
             WHEN LEV='1' THEN B_TOT_PRSN_NUM
        END AS B_TOT_PRSN_NUM, 
        CASE 
             WHEN LEV='1' THEN MINUS_PRSN_NUM
        END AS MINUS_PRSN_NUM, 
        CASE 
 
             WHEN LEV='1' AND TOT_PRSN_NUM>0 AND B_TOT_PRSN_NUM >0 THEN ROUND((TOT_PRSN_NUM - B_TOT_PRSN_NUM) / B_TOT_PRSN_NUM*100,2)
        END AS PER_PRSN_NUM 
 FROM
 (
      SELECT DU.LEV,
             SUM(CASE WHEN R.TMS =DU.TMS AND BRNC_CD = '98' THEN E.ENT_PRSN_NUM END) AS IN_PRSN_NUM,    
              SUM(CASE WHEN R.TMS =DU.TMS AND BRNC_CD <> '98' THEN E.ENT_PRSN_NUM END) AS BRNC_PRSN_NUM,    
              SUM(CASE WHEN R.TMS =DU.TMS THEN E.ENT_PRSN_NUM END) AS TOT_PRSN_NUM,    
              SUM(CASE WHEN R.TMS =DU.B_TMS THEN E.ENT_PRSN_NUM END) AS B_TOT_PRSN_NUM,    
              (SUM(CASE WHEN R.TMS =DU.TMS THEN E.ENT_PRSN_NUM END) - SUM(CASE WHEN R.TMS =DU.B_TMS THEN E.ENT_PRSN_NUM END)) AS MINUS_PRSN_NUM    
                      
          FROM                                                   
              TBRC_STAY_MANA E,    
              TBRK_SPEC_CD C,
              VW_SDL_INFO R,       
              (SELECT LEVEL AS LEV, ?  AS TMS,(?  - 1) AS B_TMS FROM DUAL CONNECT BY LEVEL<=2) DU 
          WHERE  1=1                
            AND E.BRNC_CD    = C.CD
            AND E.RACE_DT    = R.RACE_DAY                 
            AND C.GRP_CD        IN ('018','032')    
            AND R.MEET_CD    = '003'   
            AND R.STND_YEAR    = ?         
            AND R.TMS IN (? , ?  - 1)    
            AND R.DAY_ORD ='2'             
          GROUP BY DU.LEV
 )AA,
 (
     SELECT                                                                   
          MAX(RACE_NO)  AS RACE_NO
       FROM   (                                                                 
                   SELECT                                                       
                            TOR.RACE_NO                                         
                          , TOR.RACE_REG_NO                                     
                          , TOR.RACER_NO                                        
                          , TOR.RANK                                            
                          , TRM.NM_KOR                                          
                          , RANK() OVER (PARTITION BY TOR.RACE_NO               
                                                    , TOR.RANK                  
                                             ORDER BY TOR.RACE_REG_NO) SEQ      
                   FROM     TBEB_ORGAN@MRASYSLINK        TOR                        
                          , TBEC_RACER_MASTER@MRASYSLINK TRM                        
                   WHERE 1=1                                                        
                           
                   AND    TOR.RACER_NO   = TRM.RACER_NO                         
                   AND    TOR.STND_YEAR  = ?         
                   AND    TOR.MBR_CD     = '001'                                
                   AND    TOR.TMS        = ?         
                           
                   AND    TOR.RANK BETWEEN 1                                    
                                       AND 3                                    
              )                                                                 
       START WITH SEQ = 1                                                       
       CONNECT BY PRIOR SEQ = SEQ - 1                                           
       AND PRIOR RACE_NO = RACE_NO AND RANK = RANK     
 )BB
 ORDER BY AA.LEV
 #String#17#String#17#String#2012#String#17#String#17#String#2012#String#17#
>
[I][UbiData][2012-06-07 19:01:42]	- Row size : 2
[I][UbiData][2012-06-07 19:01:42]	- Data
<
0~15R^t인원^t^t^t^t33830^t^t^t^n0~15R^t점유율^t^t^t^t^t^t^t^n
>
[I][UbiData][2012-06-07 19:01:42][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 19:01:42][DATA QUERY START]
[I][UbiData][2012-06-07 19:01:42]	- sql id : rsm2020_s01
[I][UbiData][2012-06-07 19:01:42]	- Db charset : KSC5601
[I][UbiData][2012-06-07 19:01:42]	- Sql
<
SELECT 
           AA.MEET_CD,      
           AA.STND_YEAR,    
           AA.TMS,          
           AA.DAY_ORD,      
           TO_CHAR(TO_DATE(AA.RACE_DAY,'YYYYMMDD'),'YYYY-MM-DD') AS RACE_DAY, 
           AA.RACE_YOIL,    
           TO_CHAR(TO_DATE(AA.RACE_DAY,'YYYYMMDD'),'YYYY')||'년 '||AA.TMS||'회차 '||AA.DAY_ORD||'일차 ('|| TO_CHAR(TO_DATE(AA.RACE_DAY,'YYYYMMDD'),'YYYY-MM-DD')||') 경주 개최 결과'  
           AS RACE_DAY_INFO  
     
       FROM (         
             SELECT                              
             MEET_CD,      
             STND_YEAR,    
             TMS,          
             DAY_ORD,      
             RACE_DAY,     
             RACE_YOIL,    
             DECODE(RACE_YOIL,'MON','월','TUE','화','WED','수','THE','목','FRI','금','SAT','토','SUN','일','일') AS RACE_YOIL_KOR, 
             TO_CHAR(TO_DATE(RACE_DAY,'YYYYMMDD'),'YYYY-MM-DD')||
             ' ('||RACE_YOIL||') '||TMS||'회차 '||DAY_ORD||'일차'  
             AS RACE_INFO  
      FROM                                
             VW_SDL_INFO      
      WHERE  1=1                             
             AND MEET_CD = ?   
            AND STND_YEAR = ?   
            AND TMS= ?     
            AND DAY_ORD = ?        
    )AA
 #String#003#String#2012#String#17#String#1#
>
[I][UbiData][2012-06-07 19:01:42]	- Row size : 1
[I][UbiData][2012-06-07 19:01:42]	- Data
<
003^t2012^t17^t1^t2012-06-07^tTHU^t2012년 17회차 1일차 (2012-06-07) 경주 개최 결과^t^n
>
[I][UbiData][2012-06-07 19:01:42][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 19:01:42][DATA QUERY START]
[I][UbiData][2012-06-07 19:01:42]	- sql id : rsm2020_s05Today
[I][UbiData][2012-06-07 19:01:42]	- Db charset : KSC5601
[I][UbiData][2012-06-07 19:01:42]	- Sql
<
SELECT                                                                                      
       DECODE(GROUPING(RACE_NO),0,RACE_NO,'TOTAL') RACE_NO 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='12' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_02 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='16' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_06 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='22'  THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_12 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='20' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_10 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='23' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_13 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='24' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_14 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='13' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_03 
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='25'  THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_15 
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='19' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_09 
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='14' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_05 
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='26' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_16 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='27' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_17 
     , SUM(                                                                              
           CASE                                                                          
              WHEN COMM_NO='06'  THEN NVL(DIV_TOTAL, 0)                                  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_01_06_01 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='28' THEN NVL(DIV_TOTAL, 0) 
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_01_07_18 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_04_07_01 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='02' THEN NVL(DIV_TOTAL, 0)  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_04_07_02 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='03' THEN NVL(DIV_TOTAL, 0)  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_04_07_03    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='02' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_02_07_01 
     , SUM(                                                                              
           CASE                                                                          
              WHEN  COMM_NO NOT IN ('01','02','03','04','08') THEN NVL(DIV_TOTAL, 0)                         
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_JIJUM  
 
     , SUM(DIV_TOTAL)/100 DIV_TOTAL                                                          
 FROM   TBES_SDL_DT                                                                         
 WHERE   1=1                                                                                   
      AND STND_YEAR  = ?                                                             
      AND    MEET_CD    = ?                                                        
      AND    TMS        = ?                                                            
      AND    DAY_ORD    = ?                                                        
 
 GROUP BY RACE_NO                                                                                   
       
 ORDER BY RACE_NO
 #String#2012#String#003#String#17#String#1#
>
[I][UbiData][2012-06-07 19:01:43]	- Row size : 15
[I][UbiData][2012-06-07 19:01:43]	- Data
<
01^t140920^t197602^t96849^t127436^t119903^t187379^t128299^t116374^t219027^t183487^t108516^t160073^t7355^t93039^t59949^t93886^t0^t0^t2040094^t2396211^t^n02^t191278^t267508^t123529^t187360^t147399^t249704^t155747^t145620^t287810^t240820^t134529^t231415^t9365^t106436^t78894^t112202^t0^t0^t2669616^t3119757^t^n03^t218916^t312291^t160473^t214643^t185000^t303210^t189537^t171252^t321899^t281904^t151802^t275390^t11275^t162159^t84773^t131614^t0^t0^t3176138^t3739571^t^n04^t280723^t349162^t162668^t220723^t205104^t363694^t198947^t193854^t366506^t314797^t163251^t307239^t11636^t153198^t99509^t147397^t0^t0^t3538408^t4222315^t^n05^t293914^t356666^t179380^t247835^t236853^t376743^t193986^t198487^t385927^t363196^t170821^t362879^t10456^t178289^t114597^t157145^t0^t0^t3827174^t4600038^t^n06^t320577^t410766^t191760^t262742^t239275^t397830^t224139^t213663^t422296^t374549^t185676^t384443^t13418^t167359^t119122^t168329^t0^t0^t4095944^t4848817^t^n07^t373535^t432760^t204667^t303599^t258807^t408985^t246625^t214315^t457794^t408705^t182639^t417527^t12501^t187942^t128436^t184125^t0^t0^t4422962^t5262700^t^n08^t401087^t454010^t227928^t317354^t270820^t432896^t260257^t226171^t475649^t433911^t198906^t420465^t13274^t209941^t132238^t183879^t0^t0^t4658786^t5538248^t^n09^t437100^t484053^t233189^t323376^t300022^t463847^t282180^t288344^t503532^t460256^t213710^t426704^t12038^t218223^t137100^t184059^t0^t0^t4967733^t5873616^t^n10^t470862^t541950^t272328^t368669^t328440^t540666^t313885^t273198^t534426^t520280^t238905^t480109^t11995^t217489^t148525^t221558^t0^t0^t5483285^t6538531^t^n11^t466591^t561617^t317067^t365940^t318869^t591737^t323108^t316413^t577350^t534047^t224160^t502776^t13236^t222034^t156791^t213870^t0^t0^t5705606^t6735069^t^n12^t517154^t573936^t314455^t371388^t339082^t549091^t330869^t298274^t572163^t534089^t257848^t538886^t9827^t224241^t153182^t226909^t0^t0^t5811394^t6964681^t^n13^t526295^t583973^t330714^t397538^t324448^t593547^t335641^t314764^t598821^t528560^t248840^t537767^t13014^t243974^t168937^t238429^t0^t0^t5985262^t7085157^t^n14^t544820^t611235^t322648^t422943^t330535^t594065^t339607^t303922^t617748^t541795^t257654^t539796^t11784^t260972^t158394^t255072^t0^t0^t6112990^t7164971^t^n15^t575471^t631343^t326712^t449810^t360081^t631859^t376525^t332203^t629589^t549709^t268167^t594078^t11172^t271930^t170411^t277635^t0^t0^t6456695^t7513552^t^n
>
[I][UbiData][2012-06-07 19:01:43][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 19:01:43][DATA QUERY START]
[I][UbiData][2012-06-07 19:01:43]	- sql id : rsm2020_s03Today
[I][UbiData][2012-06-07 19:01:43]	- Db charset : KSC5601
[I][UbiData][2012-06-07 19:01:43]	- Sql
<
SELECT                                                                                    
      Z.RACE_NO, 
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          FC_GET_RSLT_RANK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO)                
      END RSLT_RANK, 
      R.RANK_1,  
      R.RANK_2,  
      R.RANK_3,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '001', NULL) 
      END WIN,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '002', '1')  
      END PLC,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '002', '2')  
      END PLC2,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '004', NULL) 
      END EX,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '005', NULL) 
      END QU,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '006', NULL) 
      END TRI,  
      D.BONJANG_TOTAL, 
      D.JIJUM_TOTAL,  
      C.DIV_TOTAL,  
      NVL(D.REFUND,0) REFUND, 
      NVL(B.B_DIV_TOTAL,0) AS B_DIV_TOTAL,    
      NVL((C.DIV_TOTAL-B.B_DIV_TOTAL),0) AS PLUS_MINUS, 
      CASE                                                                                  
          WHEN B.B_DIV_TOTAL<>0 THEN                                                        
          ROUND((C.DIV_TOTAL-B.B_DIV_TOTAL)/B.B_DIV_TOTAL*100,2)                            
          ELSE 0                                                                            
      END RATE,   
      SAME_PAYOFF_TOTAL,  
      SAME_PAYOFF_001, 
   SAME_PAYOFF_002, 
   SAME_PAYOFF_004, 
   SAME_PAYOFF_005, 
   SAME_PAYOFF_006 
  FROM   
   
      (   
                                                                 
          SELECT                                                                            
                D.MEET_CD,                                                                   
                D.STND_YEAR,                                                                 
                D.TMS,                                                                       
                D.DAY_ORD,                                                                   
                DECODE(D.RACE_NO,NULL,'TOTAL',D.RACE_NO) RACE_NO,                              
                SUM(                                                                        
                    CASE                                                                    
                      WHEN D.SELL_CD='03' THEN D.DIV_TOTAL                                    
                      ELSE 0                                                                
                    END                                                                     
                ) BONJANG_TOTAL,                                                            
                SUM(                                                                        
                    CASE                                                                    
                      WHEN D.SELL_CD !='03' THEN D.DIV_TOTAL                                     
                    END                                                                     
                ) JIJUM_TOTAL,                                                              
                SUM(D.REFUND) REFUND                                                         
          FROM   TBES_SDL_DT D                                                              
          WHERE 1=1                                                                             
              AND D.STND_YEAR(+)  = ? 
              AND D.MEET_CD(+)    = ? 
              AND D.TMS(+)        = ? 
              AND D.DAY_ORD(+)    = ? 
          GROUP BY                                                                          
                D.MEET_CD,                                                                   
                D.STND_YEAR,                                                                 
                D.TMS,                                                                       
                D.DAY_ORD,                                                                   
                ROLLUP(D.RACE_NO)                                                           
      ) D,                                                                                  
      (                                                                                     
         SELECT                                                                             
            P.MEET_CD,                                                                      
            P.STND_YEAR,                                                                    
            P.TMS,                                                                          
            P.DAY_ORD,                                                                      
            DECODE(P.RACE_NO,NULL,'TOTAL',P.RACE_NO) RACE_NO,                               
            SUM(POOL_TOTAL) DIV_TOTAL                                                       
         FROM                                                                               
             TBES_SDL_PT P                                                                  
         WHERE 1=1                                                                              
             AND P.STND_YEAR  = ? 
             AND P.MEET_CD    = ? 
             AND P.TMS        = ? 
             AND P.DAY_ORD    = ? 
         GROUP BY                                                                           
            P.MEET_CD,                                                                      
            P.STND_YEAR,                                                                    
            P.TMS,                                                                          
            P.DAY_ORD,                                                                      
            ROLLUP(P.RACE_NO)                                                               
      ) C,                                                                                  
      (                                                                                     
          SELECT                                                                            
                DECODE(RACE_NO,NULL,'TOTAL',RACE_NO) RACE_NO,                               
                SUM(DIV_TOTAL) B_DIV_TOTAL                                                  
          FROM   TBES_SDL_DT                                                                
          WHERE 1=1                                                                            
              AND  STND_YEAR  = ? 
              AND    MEET_CD    = ? 
              AND    TMS        = ?  -1                                                    
              AND    DAY_ORD    = ? 
          GROUP BY                                                                          
                ROLLUP(RACE_NO)                                                             
      ) B,                                                                                  
      (                                                                                     
          SELECT                                                                            
                RACE_NO                                                                     
              , MIN(DECODE(RANK, '1', NM_KOR)) RANK_1                                       
              , MIN(DECODE(RANK, '2', NM_KOR)) RANK_2                                       
              , MIN(DECODE(RANK, '3', NM_KOR)) RANK_3                                       
          FROM   (                                                                          
                   SELECT                                                                   
                            RACE_NO                                                         
                          , RANK                                                            
                          , SUBSTR(MAX(SYS_CONNECT_BY_PATH (NM_KOR, '/')), 2) NM_KOR        
                   FROM   (                                                                 
                               SELECT                                                       
                                        TOR.RACE_NO                                         
                                      , TOR.RACE_REG_NO                                     
                                      , TOR.RACER_NO                                        
                                      , TOR.RANK                                            
                                      , TRM.NM_KOR                                          
                                      , RANK() OVER (PARTITION BY TOR.RACE_NO               
                                                                , TOR.RANK                  
                                                         ORDER BY TOR.RACE_REG_NO) SEQ      
                               FROM     TBEB_ORGAN@MRASYSLINK        TOR                        
                                      , TBEC_RACER_MASTER@MRASYSLINK TRM                        
                               WHERE 1=1                
                               AND    TOR.RACER_NO   = TRM.RACER_NO                         
                               AND    TOR.STND_YEAR  = ? 
                               AND    TOR.MBR_CD     = '001'                                
                               AND    TOR.TMS        = ? 
                               AND    TOR.DAY_ORD    = ? 
                               AND    TOR.RANK BETWEEN 1                                    
                                                   AND 3                                    
                          )                                                                 
                   START WITH SEQ = 1                                                       
                   CONNECT BY PRIOR SEQ = SEQ - 1                                           
                   AND PRIOR RACE_NO = RACE_NO AND RANK = RANK                              
                   GROUP BY                                                                 
                            RACE_NO                                                         
                          , RANK                                                            
               )                                                                            
          GROUP BY RACE_NO                                                                  
          UNION ALL                                                                         
          SELECT 'TOTAL', '', '', '' FROM DUAL                                              
      ) R, 
      (   
     
       SELECT                                                                         
          RACE_NO,
            SUM(CASE 
                     WHEN POOL_CD = '001' AND RS_SEQ >= '2' THEN PAYOFF 
                     WHEN POOL_CD = '002' AND RS_SEQ >= '3' THEN PAYOFF 
                     WHEN POOL_CD = '004' AND RS_SEQ >= '2' THEN PAYOFF 
                     WHEN POOL_CD = '005' AND RS_SEQ >= '2' THEN PAYOFF 
                     WHEN POOL_CD = '006' AND RS_SEQ >= '2' THEN PAYOFF 
            END) AS SAME_PAYOFF_TOTAL, 
                               
            SUM(CASE WHEN POOL_CD = '001' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_001, 
            SUM(CASE WHEN POOL_CD = '002' AND RS_SEQ >= '3' THEN PAYOFF END) AS SAME_PAYOFF_002, 
            SUM(CASE WHEN POOL_CD = '004' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_004, 
            SUM(CASE WHEN POOL_CD = '005' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_005, 
            SUM(CASE WHEN POOL_CD = '006' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_006 
      FROM TBES_SDL_RS                                                                
      WHERE 1=1                                                                          
          AND MEET_CD  = '003'                                                              
          AND STND_YEAR = ?      
          AND TMS   = ?      
          AND DAY_ORD  = ?      
      GROUP BY          
       RACE_NO                                                              
 
   ) E,                                                                                  
  (                                       
    SELECT DISTINCT RACE_NO           
    FROM TBEB_RACE_DOC@MRASYSLINK D        
      WHERE 1=1                          
          AND D.STND_YEAR= ? 
          AND D.TMS=? 
           AND D.DAY_ORD=? 
 
   ) Z                                   
  WHERE 1=1                                                                                    
      AND C.RACE_NO(+)=Z.RACE_NO                                                                
      AND B.RACE_NO(+)=Z.RACE_NO                                                            
      AND R.RACE_NO(+)=Z.RACE_NO                                                            
      AND D.RACE_NO(+)=Z.RACE_NO
      AND E.RACE_NO(+)=Z.RACE_NO                                                            
  ORDER BY Z.RACE_NO
 #String#2012#String#003#String#17#String#1#String#2012#String#003#String#17#String#1#String#2012#String#003#String#17#String#1#String#2012#String#17#String#1#String#2012#String#17#String#1#String#2012#String#17#String#1#
>
[I][UbiData][2012-06-07 19:01:43]	- Row size : 15
[I][UbiData][2012-06-07 19:01:43]	- Data
<
01^t3-5-6^t윤영근^t배혜민^t박광혁^t4.9^t1.5^t2.5^t15.2^t9.6^t12.6^t35611700^t204009400^t239621100^t0^t241173800^t-1552700^t-.64^t^t^t^t^t^t^t^n02^t2-1-6^t사재준^t김민길^t이주영^t1.3^t1^t2.3^t5^t3.6^t8.6^t45014100^t266961600^t311975700^t0^t306515100^t5460600^t1.78^t^t^t^t^t^t^t^n03^t5-1-3^t심상철^t최재원^t서지혜^t2.6^t1.2^t1.5^t4.1^t2^t1.8^t56343300^t317613800^t373957100^t0^t367015400^t6941700^t1.89^t^t^t^t^t^t^t^n04^t3-6-4^t정인교^t유해광^t진석현^t3.5^t1.4^t3.7^t17.9^t13.6^t6.7^t68390700^t353840800^t422231500^t0^t425410100^t-3178600^t-.75^t^t^t^t^t^t^t^n05^t6-5-1^t이승일^t강창효^t이종우^t7.8^t2.7^t4^t58.7^t25^t32.3^t77286400^t382717400^t460003800^t0^t479149900^t-19146100^t-4^t^t^t^t^t^t^t^n06^t1-4-6^t이지수^t서화모^t오승철^t2.1^t1.2^t1.5^t5.1^t2.8^t23.3^t75287300^t409594400^t484881700^t0^t469081700^t15800000^t3.37^t^t^t^t^t^t^t^n07^t6-2-1^t황이태^t민영건^t배혜민^t21.1^t7.4^t3.4^t84.1^t48^t14.6^t83973800^t442296200^t526270000^t0^t515496200^t10773800^t2.09^t^t^t^t^t^t^t^n08^t4-1-6^t신동길^t우진수^t구현구^t1.5^t1.2^t2^t5^t3^t6.1^t87946200^t465878600^t553824800^t0^t556565300^t-2740500^t-.49^t^t^t^t^t^t^t^n09^t2-4-1^t김정구^t손동민^t이흥우^t1.7^t1.2^t1.9^t4.5^t3.2^t3.3^t90588300^t496773300^t587361600^t0^t548482300^t38879300^t7.09^t^t^t^t^t^t^t^n10^t1-6-5^t김영욱^t사재준^t윤영근^t1.9^t1.3^t1.5^t4.4^t2.6^t3.6^t105524600^t548328500^t653853100^t0^t669189800^t-15336700^t-2.29^t^t^t^t^t^t^t^n11^t1-4-2^t심상철^t김민길^t박광혁^t1.8^t1.3^t3.6^t11.9^t8.6^t7.4^t102946300^t570560600^t673506900^t0^t707765400^t-34258500^t-4.84^t^t^t^t^t^t^t^n12^t1-4-6^t경상수^t김선필^t최재원^t2.4^t1.4^t8.3^t30.6^t24.2^t21.1^t115328700^t581139400^t696468100^t0^t682622600^t13845500^t2.03^t^t^t^t^t^t^t^n13^t5-3-1^t김효년^t문주엽^t주은석^t6^t2.3^t1.3^t14.7^t6.5^t3.3^t109989500^t598526200^t708515700^t0^t702342900^t6172800^t.88^t^t^t^t^t^t^t^n14^t2-4-3^t구현구^t장영태^t강창효^t1.7^t1.5^t1.7^t5.2^t3.7^t4.2^t105198100^t611299000^t716497100^t0^t698218300^t18278800^t2.62^t^t^t^t^t^t^t^n15^t3-5-1^t이태희^t어선규^t유해광^t2.2^t1.3^t1.5^t4^t2.5^t2.4^t105685700^t645669500^t751355200^t0^t735842100^t15513100^t2.11^t^t^t^t^t^t^t^n
>
[I][UbiData][2012-06-07 19:01:43][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 19:01:43][DATA QUERY START]
[I][UbiData][2012-06-07 19:01:43]	- sql id : rsm2020_s02Today
[I][UbiData][2012-06-07 19:01:43]	- Db charset : KSC5601
[I][UbiData][2012-06-07 19:01:43]	- Sql
<
SELECT                                                                                          
           MST.GBN       
         , YEAR.DIV_TOTAL AS YEAR_TOTAL 
         , YEAR.REFUND    AS YEAR_REFUND 
         , TMS.D_1 
         , TMS.D_2   
         , TMS.D_3   
         , TMS.D_4   
         , TMS.D_5   
         , TMS.D_6   
         , TMS.D_7   
         , TMS.TOTAL 
         , PRE.TOTAL AS PRE_TOTAL 
         , NVL(TMS.TOTAL, 0) - NVL(PRE .TOTAL, 0) ADD_POOL 
         , CASE WHEN (NVL(PRE.TOTAL, 0) = 0) AND (NVL(TMS.TOTAL, 0) = 0) THEN 0                  
                WHEN NVL(PRE.TOTAL, 0) = 0                               THEN 100                
                WHEN NVL(TMS.TOTAL, 0) = 0                                THEN -100              
                ELSE ROUND((NVL(TMS.TOTAL, 0) - NVL(PRE.TOTAL, 0)) / NVL(PRE.TOTAL, 0) * 100, 2) 
           END ADD_RATE 
  FROM                                                                                           
           (                                                                                     
              SELECT                                                                             
                       ?  STND_YEAR                                                      
                     , '매출총액' GBN                                                            
              FROM   DUAL                                                                        
           ) MST                                                                                 
         , (                                                                                     
              SELECT                                                                             
                       TMS.STND_YEAR                                                             
                     , MIN(DECODE(TMS.D, 1, TMS.AMOUNT)) D_1                                     
                     , MIN(DECODE(TMS.D, 2, TMS.AMOUNT)) D_2                                     
                     , MIN(DECODE(TMS.D, 3, TMS.AMOUNT)) D_3                                     
                     , MIN(DECODE(TMS.D, 4, TMS.AMOUNT)) D_4                                     
                     , MIN(DECODE(TMS.D, 5, TMS.AMOUNT)) D_5                                     
                     , MIN(DECODE(TMS.D, 6, TMS.AMOUNT)) D_6                                     
                     , MIN(DECODE(TMS.D, 7, TMS.AMOUNT)) D_7                                     
                     , SUM(TMS.AMOUNT)                   TOTAL                                   
              FROM   (                                                                           
                          SELECT                                                                 
                                   TSP.STND_YEAR                                                 
                                 , TO_CHAR(TO_DATE(INFO.RACE_DAY, 'YYYYMMDD'), 'D') D            
                                 , SUM(TSP.POOL_TOTAL) AMOUNT                                    
                          FROM     VW_SDL_INFO INFO                                              
                                 , TBES_SDL_PT       TSP                                         
                          WHERE  1=1
                          AND    INFO.STND_YEAR = TSP.STND_YEAR                                  
                          AND    INFO.MEET_CD    = TSP.MEET_CD                                   
                          AND    INFO.TMS       = TSP.TMS                                        
                          AND    INFO.DAY_ORD   = TSP.DAY_ORD                                    
                          AND    TSP.STND_YEAR  = ?   
                          AND    TSP.MEET_CD    = ?       
                          AND    TSP.TMS        = ?       
                          GROUP BY                                                               
                                   TSP.STND_YEAR                                                 
                                 , INFO.RACE_DAY                                                 
                     ) TMS                                                                       
              GROUP BY TMS.STND_YEAR                                                             
           ) TMS                                                                                 
         , (                                                                                     
              SELECT                                                                             
                       STND_YEAR                                                                 
                     , SUM(TSP.DIV_TOTAL) DIV_TOTAL                                              
                     , SUM(TSP.REFUND    ) REFUND                                                
              FROM   TBES_SDL_DT_SUM       TSP                                                       
              WHERE  TSP.STND_YEAR  = ?                                                  
              AND    TSP.MEET_CD    = ?                                                    
              AND    TSP.TMS       <= ?                                                        
              GROUP BY                                                                           
                       STND_YEAR                                                                 
           ) YEAR                                                                                
         , (                                                                                     
              SELECT                                                                             
                       STND_YEAR                                                                 
                     , TMS                                                                       
                     , NVL(SUM(TSP.POOL_TOTAL), 0)  TOTAL                                        
              FROM   TBES_SDL_PT       TSP                                                       
              WHERE  1=1
              AND TSP.STND_YEAR  = ? 
              AND    TSP.MEET_CD    = ?                                                    
              AND    TSP.TMS        = ?  - 1                                                   
              GROUP BY                                                                           
                       STND_YEAR                                                                 
                     , TMS                                                                       
           ) PRE                                                                                 
  WHERE  1=1
  AND   MST.STND_YEAR = TMS .STND_YEAR(+)                                                       
  AND    MST.STND_YEAR = YEAR.STND_YEAR(+)                                                       
  AND    MST.STND_YEAR = PRE .STND_YEAR(+)                                                       
  UNION ALL                                                                                      
  SELECT                                                                                         
           MST.GBN                                                                               
         , YEAR.DIV_TOTAL                   YEAR_TOTAL                                           
         , YEAR.REFUND                      YEAR_REFUND                                          
         , TMS.D_1                                                                               
         , TMS.D_2                                                                               
         , TMS.D_3                                                                               
         , TMS.D_4                                                                               
         , TMS.D_5                                                                               
         , TMS.D_6                                                                               
         , TMS.D_7                                                                               
         , TMS.TOTAL                                                                             
         , 0 PRE_TOTAL                                                                           
         , NVL(PRE .TOTAL, 0) - NVL(TMS.TOTAL, 0) ADD_POOL                                       
         , CASE WHEN (NVL(PRE.TOTAL, 0) = 0) AND (NVL(TMS.TOTAL, 0) = 0) THEN 0                  
                WHEN NVL(PRE.TOTAL, 0) = 0                               THEN -100               
                WHEN NVL(TMS.TOTAL, 0) = 0                                THEN 100               
                ELSE ROUND((NVL(PRE.TOTAL, 0) - NVL(TMS.TOTAL, 0)) / NVL(TMS.TOTAL, 0) * 100, 2) 
           END ADD_RATE                                                                          
  FROM                                                                                           
           (                                                                                     
              SELECT                                                                             
                       ?  -1 STND_YEAR                                                    
                     , '전년대비' GBN                                                            
              FROM   DUAL                                                                        
           ) MST                                                                                 
         , (                                                                                     
              SELECT                                                                             
                       TMS.STND_YEAR                                                             
                     , MIN(DECODE(TMS.D, 1, TMS.AMOUNT)) D_1                                     
                     , MIN(DECODE(TMS.D, 2, TMS.AMOUNT)) D_2                                     
                     , MIN(DECODE(TMS.D, 3, TMS.AMOUNT)) D_3                                     
                     , MIN(DECODE(TMS.D, 4, TMS.AMOUNT)) D_4                                     
                     , MIN(DECODE(TMS.D, 5, TMS.AMOUNT)) D_5                                     
                     , MIN(DECODE(TMS.D, 6, TMS.AMOUNT)) D_6                                     
                     , MIN(DECODE(TMS.D, 7, TMS.AMOUNT)) D_7                                     
                     , SUM(TMS.AMOUNT)                   TOTAL                                   
              FROM   (                                                                           
                          SELECT                                                                 
                                   TSP.STND_YEAR                                                 
                                 , TO_CHAR(TO_DATE(INFO.RACE_DAY, 'YYYYMMDD'), 'D') D            
                                 , SUM(TSP.POOL_TOTAL) AMOUNT                                    
                          FROM     VW_SDL_INFO INFO                                              
                                 , TBES_SDL_PT       TSP                                         
                          WHERE  1=1
                          AND  INFO.STND_YEAR = TSP.STND_YEAR                                  
                          AND    INFO.MEET_CD    = TSP.MEET_CD                                   
                          AND    INFO.TMS       = TSP.TMS                                        
                          AND    INFO.DAY_ORD   = TSP.DAY_ORD                                    
                          AND    TSP.STND_YEAR  =  ?  -1                                   
                          AND    TSP.MEET_CD    = ?                                        
                          AND    TSP.TMS        = ?                                            
                          GROUP BY                                                               
                                   TSP.STND_YEAR                                                 
                                 , INFO.RACE_DAY                                                 
                     ) TMS                                                                       
              GROUP BY TMS.STND_YEAR                                                             
           ) TMS                                                                                 
         , (                                                                                     
              SELECT                                                                             
                       STND_YEAR                                                                 
                     , SUM(TSP.DIV_TOTAL) DIV_TOTAL                                              
                     , SUM(TSP.REFUND    ) REFUND                                                
              FROM   TBES_SDL_DT_SUM       TSP                                                       
              WHERE  1=1
              AND TSP.STND_YEAR  = ?  -1                                               
              AND    TSP.MEET_CD    = ?                                                    
              AND    TSP.TMS       <= ?                                                        
              GROUP BY                                                                           
                       STND_YEAR                                                                 
           ) YEAR                                                                                
         , (                                                                                     
              SELECT                                                                             
                       STND_YEAR-1 STND_YEAR                                                     
                     , TMS                                                                       
                     , NVL(SUM(TSP.POOL_TOTAL), 0)  TOTAL                                        
              FROM   TBES_SDL_PT       TSP                                                       
              WHERE  1=1
              AND TSP.STND_YEAR  = ?                                                  
              AND    TSP.MEET_CD    = ?                                                    
              AND    TSP.TMS        = ?                                                        
              GROUP BY                                                                           
                       STND_YEAR                                                                 
                     , TMS                                                                       
           ) PRE                                                                                 
  WHERE  1=1
  AND MST.STND_YEAR = TMS.STND_YEAR(+)                                                        
  AND    MST.STND_YEAR = YEAR.STND_YEAR(+)                                                       
  AND    MST.STND_YEAR = PRE.STND_YEAR(+)
 #String#2012#String#2012#String#003#String#17#String#2012#String#003#String#17#String#2012#String#003#String#17#String#2012#String#2012#String#003#String#17#String#2012#String#003#String#17#String#2012#String#003#String#17#
>
[I][UbiData][2012-06-07 19:01:43]	- Row size : 2
[I][UbiData][2012-06-07 19:01:43]	- Data
<
매출총액^t255807593000^t4674302200^t^t^t^t^t8160323400^t^t^t8160323400^t16874921600^t-8714598200^t-51.64^t^n전년대비^t298819077500^t5513386200^t^t^t^t8970408300^t10464906900^t^t^t19435315200^t0^t-11274991800^t-58.01^t^n
>
[I][UbiData][2012-06-07 19:01:43][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 19:01:43][DATA QUERY START]
[I][UbiData][2012-06-07 19:01:43]	- sql id : rsm2020_s04
[I][UbiData][2012-06-07 19:01:43]	- Db charset : KSC5601
[I][UbiData][2012-06-07 19:01:43]	- Sql
<
SELECT 
   ROW_ORDER,
   MANA_DESC, 
   TOTAL        
        ,SUN_NUM     
        ,TUE_NUM     
        ,WEN_NUM     
        ,THU_NUM     
        ,TOT_PRSN_NUM,    
        
        B_TOT_PRSN_NUM,          
        
        CASE 
              WHEN ROW_ORDER='2' THEN N_TOT_PRSN_NUM - TOT_PRSN_NUM
              ELSE PRSN_NUM_MINUS
        END PRSN_NUM_MINUS,          
        
        ROUND(CASE 
              WHEN ROW_ORDER='2' THEN (N_TOT_PRSN_NUM - TOT_PRSN_NUM)/TOT_PRSN_NUM*100
              ELSE PER
        END,2) AS PER             
  FROM
 (
  
  SELECT '1' AS ROW_ORDER,
    '입장인원' AS MANA_DESC,
     A.TMS                                                               
        ,TOT_PRSN_NUM                     
        ,MON_NUM 
              ,TUE_NUM 
              ,WEN_NUM 
              ,THU_NUM 
              ,FRI_NUM 
              ,SAT_NUM 
              ,SUN_NUM 
              ,B_TOT_PRSN_NUM
              ,(TOT_PRSN_NUM-B_TOT_PRSN_NUM) AS PRSN_NUM_MINUS
              ,DECODE(B_TOT_PRSN_NUM,0,0,(TOT_PRSN_NUM-B_TOT_PRSN_NUM)/B_TOT_PRSN_NUM*100)  AS PER
              ,TOTAL          
  
    FROM
    
    
    (
    
     SELECT   MAX(TMS) TMS
           ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
           ,NVL(SUM(A.ENT_PRSN_NUM ),0)         TOT_PRSN_NUM                                                      
           
          
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'2', A.ENT_PRSN_NUM,0 )) ,0) MON_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'3', A.ENT_PRSN_NUM,0 )) ,0) TUE_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'4', A.ENT_PRSN_NUM,0 )) ,0) WEN_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'5', A.ENT_PRSN_NUM,0 )) ,0) THU_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'6', A.ENT_PRSN_NUM,0 )) ,0) FRI_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'7', A.ENT_PRSN_NUM,0 )) ,0) SAT_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'1', A.ENT_PRSN_NUM,0 )) ,0) SUN_NUM       
    
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) =  ?  
                AND MEET_CD = ?   
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE 1=1
             AND STND_YEAR = ?  
                AND MEET_CD = ? 
                AND TMS  = ?  
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    GROUP BY B.TMS
    ) A,
    
    
    (
    
     SELECT   
            MAX(TMS) TMS
           ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
           ,NVL(SUM(A.ENT_PRSN_NUM ),0)         B_TOT_PRSN_NUM  
           
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) =  ?  
                AND MEET_CD = ?    
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE 1=1
             AND STND_YEAR = ?    
                AND MEET_CD = ? 
                AND TMS  = ?  - 1   
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    GROUP BY B.TMS
    ) B,
    
    (
    
     SELECT NVL(SUM(A.ENT_PRSN_NUM ),0)         TOTAL  
           
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) = ?  
                AND MEET_CD = ?   
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE STND_YEAR = ?  
                AND MEET_CD = ? 
                AND TMS <= ?  
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    )C
  UNION ALL 
  
  
  SELECT '2' AS ROW_ORDER,
    '전년대비' AS MANA_DESC,
     A.TMS                                                               
        ,TOT_PRSN_NUM                     
        ,MON_NUM 
              ,TUE_NUM 
              ,WEN_NUM 
              ,THU_NUM 
              ,FRI_NUM 
              ,SAT_NUM 
              ,SUN_NUM 
              ,B_TOT_PRSN_NUM
              ,(TOT_PRSN_NUM-B_TOT_PRSN_NUM) AS PRSN_NUM_MINUS
              ,DECODE(B_TOT_PRSN_NUM,0,0,(TOT_PRSN_NUM-B_TOT_PRSN_NUM)/B_TOT_PRSN_NUM*100)  AS PER
              ,TOT          
  
    FROM
    
    
    (
    
     SELECT   MAX(TMS) TMS
           ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
           ,NVL(SUM(A.ENT_PRSN_NUM ),0)         TOT_PRSN_NUM                                                      
           
          
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'2', A.ENT_PRSN_NUM,0 )) ,0) MON_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'3', A.ENT_PRSN_NUM,0 )) ,0) TUE_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'4', A.ENT_PRSN_NUM,0 )) ,0) WEN_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'5', A.ENT_PRSN_NUM,0 )) ,0) THU_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'6', A.ENT_PRSN_NUM,0 )) ,0) FRI_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'7', A.ENT_PRSN_NUM,0 )) ,0) SAT_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'1', A.ENT_PRSN_NUM,0 )) ,0) SUN_NUM       
    
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) = ?  - 1  
                AND MEET_CD    = ?   
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE STND_YEAR = ?  - 1  
                AND MEET_CD =?  
                AND TMS  = ?    
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    GROUP BY B.TMS
    ) A,
    
    
    (
    
     SELECT   
            MAX(TMS) TMS
           ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
           ,NVL(SUM(A.ENT_PRSN_NUM ),0)         B_TOT_PRSN_NUM  
           
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) = ?  -1 
                AND MEET_CD = ?     
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE STND_YEAR = ?  - 1  
                AND MEET_CD = ? 
                AND TMS  = ?  - 1  
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    GROUP BY B.TMS
    ) B,
    
    (
    
     SELECT NVL(SUM(A.ENT_PRSN_NUM ),0)         TOT  
           
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) =  ?  -1 
                AND MEET_CD = '003'
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE STND_YEAR = ?  -1  
                AND MEET_CD = ? 
                AND TMS  <= ?   
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    )C
  ),
  (
  SELECT SUM(A.ENT_PRSN_NUM ) AS N_TOT_PRSN_NUM
      FROM 
          TBRC_STAY_MANA  A,       
          VW_SDL_INFO B
      WHERE 1 =1
        AND A.RACE_DT(+) = B.RACE_DAY
        AND B.STND_YEAR =  ?  
        AND B.MEET_CD = ?    
        AND B.TMS  = ?       
  )BB  
 ORDER BY MANA_DESC
 #String#2012#String#003#String#2012#String#003#String#17#String#2012#String#003#String#2012#String#003#String#17#String#2012#String#003#String#2012#String#003#String#17#String#2012#String#003#String#2012#String#003#String#17#String#2012#String#003#String#2012#String#003#String#17#String#2012#String#2012#String#003#String#17#String#2012#String#003#String#17#
>
[I][UbiData][2012-06-07 19:01:43]	- Row size : 2
[I][UbiData][2012-06-07 19:01:43]	- Data
<
1^t입장인원^t998229^t0^t0^t0^t32508^t32508^t67325^t-34817^t-51.71^t^n2^t전년대비^t1417977^t0^t0^t44040^t44345^t88385^t80393^t-55877^t-63.22^t^n
>
[I][UbiData][2012-06-07 19:01:43][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 19:01:43][DATA QUERY START]
[I][UbiData][2012-06-07 19:01:43]	- sql id : rsm2020_s07
[I][UbiData][2012-06-07 19:01:43]	- Db charset : KSC5601
[I][UbiData][2012-06-07 19:01:43]	- Sql
<
SELECT  
   '0~'||BB.RACE_NO||'R' AS RACE_DESC,
   DECODE(LEV,1,'인원','점유율') AS MANA_DESC,
      DECODE(LEV,1,INWON_12,DECODE(INWON_TOTAL,0,0,ROUND(INWON_12/INWON_TOTAL*100,2))) AS INWON_12, 
      DECODE(LEV,1,INWON_13,DECODE(INWON_TOTAL,0,0,ROUND(INWON_13/INWON_TOTAL*100,2))) AS INWON_13, 
      DECODE(LEV,1,INWON_14,DECODE(INWON_TOTAL,0,0,ROUND(INWON_14/INWON_TOTAL*100,2))) AS INWON_14, 
      DECODE(LEV,1,INWON_16,DECODE(INWON_TOTAL,0,0,ROUND(INWON_16/INWON_TOTAL*100,2))) AS INWON_16, 
      DECODE(LEV,1,INWON_19,DECODE(INWON_TOTAL,0,0,ROUND(INWON_19/INWON_TOTAL*100,2))) AS INWON_19, 
      DECODE(LEV,1,INWON_20,DECODE(INWON_TOTAL,0,0,ROUND(INWON_20/INWON_TOTAL*100,2))) AS INWON_20, 
      DECODE(LEV,1,INWON_22,DECODE(INWON_TOTAL,0,0,ROUND(INWON_22/INWON_TOTAL*100,2))) AS INWON_22, 
      DECODE(LEV,1,INWON_23,DECODE(INWON_TOTAL,0,0,ROUND(INWON_23/INWON_TOTAL*100,2))) AS INWON_23, 
      DECODE(LEV,1,INWON_24,DECODE(INWON_TOTAL,0,0,ROUND(INWON_24/INWON_TOTAL*100,2))) AS INWON_24, 
      DECODE(LEV,1,INWON_25,DECODE(INWON_TOTAL,0,0,ROUND(INWON_25/INWON_TOTAL*100,2))) AS INWON_25, 
      DECODE(LEV,1,INWON_26,DECODE(INWON_TOTAL,0,0,ROUND(INWON_26/INWON_TOTAL*100,2))) AS INWON_26, 
      DECODE(LEV,1,INWON_27,DECODE(INWON_TOTAL,0,0,ROUND(INWON_27/INWON_TOTAL*100,2))) AS INWON_27, 
      DECODE(LEV,1,INWON_28,DECODE(INWON_TOTAL,0,0,ROUND(INWON_28/INWON_TOTAL*100,2))) AS INWON_28, 
      DECODE(LEV,1,INWON_100,DECODE(INWON_TOTAL,0,0,ROUND(INWON_100/INWON_TOTAL*100,2))) AS INWON_100, 
      DECODE(LEV,1,INWON_101,DECODE(INWON_TOTAL,0,0,ROUND(INWON_101/INWON_TOTAL*100,2))) AS INWON_101, 
      DECODE(LEV,1,INWON_102,DECODE(INWON_TOTAL,0,0,ROUND(INWON_102/INWON_TOTAL*100,2))) AS INWON_102, 
      DECODE(LEV,1,INWON_103,DECODE(INWON_TOTAL,0,0,ROUND(INWON_103/INWON_TOTAL*100,2))) AS INWON_103, 
      DECODE(LEV,1,INWON_SUM,DECODE(INWON_TOTAL,0,0,ROUND(INWON_SUM/INWON_TOTAL*100,2))) AS INWON_TOTAL 
  FROM
 (
             SELECT  
        SUM(CASE WHEN BRNC_CD='12' THEN INWON END) AS INWON_12, 
        SUM(CASE WHEN BRNC_CD='13' THEN INWON END) AS INWON_13, 
        SUM(CASE WHEN BRNC_CD='14' THEN INWON END) AS INWON_14, 
        SUM(CASE WHEN BRNC_CD='16' THEN INWON END) AS INWON_16, 
        SUM(CASE WHEN BRNC_CD='19' THEN INWON END) AS INWON_19, 
        SUM(CASE WHEN BRNC_CD='20' THEN INWON END) AS INWON_20, 
        SUM(CASE WHEN BRNC_CD='22' THEN INWON END) AS INWON_22, 
        SUM(CASE WHEN BRNC_CD='23' THEN INWON END) AS INWON_23, 
        SUM(CASE WHEN BRNC_CD='24' THEN INWON END) AS INWON_24, 
        SUM(CASE WHEN BRNC_CD='25' THEN INWON END) AS INWON_25, 
        SUM(CASE WHEN BRNC_CD='26' THEN INWON END) AS INWON_26, 
        SUM(CASE WHEN BRNC_CD='27' THEN INWON END) AS INWON_27, 
        SUM(CASE WHEN BRNC_CD='28' THEN INWON END) AS INWON_28, 
        SUM(CASE WHEN BRNC_CD='100' THEN INWON END) AS INWON_100, 
        SUM(CASE WHEN BRNC_CD='101' THEN INWON END) AS INWON_101, 
        SUM(CASE WHEN BRNC_CD='102' THEN INWON END) AS INWON_102, 
        SUM(CASE WHEN BRNC_CD='103' THEN INWON END) AS INWON_103, 
        SUM(INWON ) AS INWON_TOTAL,
        SUM(CASE WHEN BRNC_CD='12' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='13' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='14' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='16' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='19' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='20' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='22' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='23' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='24' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='25' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='26' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='27' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='28' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='100' THEN INWON END) + 
                 SUM(CASE WHEN BRNC_CD='101' THEN INWON END) + 
                 SUM(CASE WHEN BRNC_CD='102' THEN INWON END) +
                 SUM(CASE WHEN BRNC_CD='103' THEN INWON END)  AS INWON_SUM 
     FROM
    (
    SELECT C.CD_NM, 
           E.BRNC_CD,                                      
            SUM( E.ENT_PRSN_NUM) INWON 
        FROM                                                   
         VW_SDL_INFO R       
         ,TBRC_STAY_MANA E, 
         TBRK_SPEC_CD C                      
        WHERE  1=1
           AND R.MEET_CD  = ?  
        AND R.STND_YEAR(+) = ?  
          AND R.TMS(+)   = ?  
          AND R.DAY_ORD(+) = ?  
         AND E.MEET_CD='003'                        
         AND E.RACE_DT=R.RACE_DAY                 
         AND C.GRP_CD IN ('018','032')                      
         AND C.CD=E.BRNC_CD                
         
        GROUP BY E.BRNC_CD,C.CD_NM          
        ORDER BY E.BRNC_CD
    )A
   )AA,
 (
  SELECT                                                                   
          MAX(RACE_NO)  AS RACE_NO
          
   FROM   (                                                                 
               SELECT                                                       
                        TOR.RACE_NO                                         
                      , TOR.RACE_REG_NO                                     
                      , TOR.RACER_NO                                        
                      , TOR.RANK                                            
                      , TRM.NM_KOR                                          
                      , RANK() OVER (PARTITION BY TOR.RACE_NO               
                                                , TOR.RANK                  
                                         ORDER BY TOR.RACE_REG_NO) SEQ      
               FROM     TBEB_ORGAN@MRASYSLINK        TOR                        
                      , TBEC_RACER_MASTER@MRASYSLINK TRM                        
               WHERE 1=1                                                        
               
               AND    TOR.RACER_NO   = TRM.RACER_NO                         
               AND    TOR.STND_YEAR  = ?  
               AND    TOR.MBR_CD     = '001'                                
               AND    TOR.TMS        = ?  
               
               AND    TOR.RANK BETWEEN 1                                    
                                   AND 3                                    
          )                                                                 
   START WITH SEQ = 1                                                       
   CONNECT BY PRIOR SEQ = SEQ - 1                                           
   AND PRIOR RACE_NO = RACE_NO AND RANK = RANK                           
 )BB , (SELECT LEVEL LEV FROM DUAL CONNECT BY LEVEL <=2 ) DU
 #String#003#String#2012#String#17#String#1#String#2012#String#17#
>
[I][UbiData][2012-06-07 19:01:43]	- Row size : 2
[I][UbiData][2012-06-07 19:01:43]	- Data
<
0~15R^t인원^t2680^t2455^t3022^t3198^t3442^t2948^t1271^t1987^t1627^t1257^t988^t3289^t1143^t0^t0^t0^t0^t29307^t^n0~15R^t점유율^t8.24^t7.55^t9.3^t9.84^t10.59^t9.07^t3.91^t6.11^t5^t3.87^t3.04^t10.12^t3.52^t0^t0^t0^t0^t90.15^t^n
>
[I][UbiData][2012-06-07 19:01:43][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 19:01:43][DATA QUERY START]
[I][UbiData][2012-06-07 19:01:43]	- sql id : rsm2020_s08
[I][UbiData][2012-06-07 19:01:43]	- Db charset : KSC5601
[I][UbiData][2012-06-07 19:01:43]	- Sql
<
SELECT                                       
       STND_YEAR,  
       TMS,           
       DAY_ORD,   
       SPEC_DESC   
  FROM TBRD_RACE_SPEC_DESC 
  WHERE 1=1
       AND STND_YEAR = ?  
       AND TMS  = ?  
       AND DAY_ORD = ?  
       AND MEET_CD   = ?  
 UNION ALL
 SELECT 
       ' ', 999, 999, ' '
 FROM DUAL          
 ORDER BY TMS
 #String#2012#String#17#String#1#String#003#
>
[I][UbiData][2012-06-07 19:01:43]	- Row size : 1
[I][UbiData][2012-06-07 19:01:43]	- Data
<
 ^t999^t999^t ^t^n
>
[I][UbiData][2012-06-07 19:01:43][DATA QUERY END]
--------------------------------------------------------------------------------


[I][UbiForm][2012-06-07 19:15:40][REQUEST FILE]
[I][UbiForm][2012-06-07 19:15:40]	- Report : /web/waspage/usrbm/report/rsm/rsm2020.jrf
[I][UbiForm][2012-06-07 19:15:40]	- Common : /web/waspage/usrbm/report/rsm/property/commonitem.xml [Not found]
--------------------------------------------------------------------------------


[I][UbiData][2012-06-07 19:15:41][REQUEST FILE]
[I][UbiData][2012-06-07 19:15:41]	- Report : rsm2020.jrf
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 19:15:41][DB CONNECT]
[I][UbiData][2012-06-07 19:15:41]	- Type : nonlookup
[I][UbiData][2012-06-07 19:15:41]	- Db id : rbm
[I][UbiData][2012-06-07 19:15:41]	- Sql id : rsm2020_s06Today
[I][UbiData][2012-06-07 19:15:41]	- Datasource : jdbc/RBM
[I][UbiData][2012-06-07 19:15:41]	- Status : Success
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 19:15:41][DATA QUERY START]
[I][UbiData][2012-06-07 19:15:41]	- sql id : rsm2020_s06Today
[I][UbiData][2012-06-07 19:15:41]	- Db charset : KSC5601
[I][UbiData][2012-06-07 19:15:41]	- Sql
<
WITH J 
 AS
 (SELECT    
         '전회' AS COL_DESC  
     , tms                                                                                       
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='12' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_02    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='16' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_06    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='22'  THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_12    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='20' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_10    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='23' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_13    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='24' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_14    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='13' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_03    
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='25'  THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_15    
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='19' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_09    
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='14' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_05    
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='26' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_16    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='27' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_17    
     , SUM(                                                                              
           CASE                                                                          
              WHEN COMM_NO='06'  THEN NVL(DIV_TOTAL, 0)                                  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_01_06_01    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='28' THEN NVL(DIV_TOTAL, 0) 
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_01_07_18    
         , SUM(                                                                              
               CASE                                                                          
                  WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_04_07_01    
         , SUM(                                                                              
               CASE                                                                          
                  WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='02' THEN NVL(DIV_TOTAL, 0)  
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_04_07_02    
        , SUM(                                                                              
               CASE                                                                          
                  WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='03' THEN NVL(DIV_TOTAL, 0)  
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_04_07_03    
         , SUM(                                                                              
               CASE                                                                          
                  WHEN SELL_CD='02' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_02_07_01    
 
         , SUM(                                                                              
               CASE                                                                          
                  WHEN COMM_NO NOT IN ('01','02','03','04','08') THEN NVL(DIV_TOTAL, 0)                         
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_JIJUM    
         , SUM(DIV_TOTAL)/100 DIV_TOTAL                                                             
  FROM   TBES_SDL_DT_SUM                                                                         
  WHERE  1=1                                                                                    
    AND STND_YEAR  = ?                                                            
    AND MEET_CD    = ?                                                        
    AND TMS        BETWEEN ?  - 1 AND ? 
    AND DAY_ORD    = ? 
  GROUP BY TMS 
 )
 SELECT  DECODE(TMS, ? , '합계','전회') COL_DESC
        , TMS
        ,'1' AS GUBN
        ,DIV_01_07_02 
        ,DIV_01_07_06 
        ,DIV_01_07_12 
        ,DIV_01_07_10 
        ,DIV_01_07_13 
        ,DIV_01_07_14 
        ,DIV_01_07_03 
        ,DIV_01_07_15 
        ,DIV_01_07_09 
        ,DIV_01_07_05 
        ,DIV_01_07_16 
        ,DIV_01_07_17 
        ,DIV_01_06_01 
        ,DIV_01_07_18 
        ,DIV_04_07_01 
        ,DIV_04_07_02 
        ,DIV_04_07_03 
        ,DIV_02_07_01
        ,DIV_JIJUM
        ,1
 FROM J
 UNION ALL
 SELECT '점유율'
       , TMS
       , '2'
       , ROUND(DIV_01_07_02 / DIV_TOTAL * 100, 2) 
       , ROUND(DIV_01_07_06 / DIV_TOTAL * 100, 2)   
       , ROUND(DIV_01_07_12 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_10 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_13 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_14 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_03 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_15 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_09 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_05 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_16 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_17 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_06_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_18 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_02 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_03 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_02_07_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_JIJUM / DIV_TOTAL * 100, 2)    
       , 100
 FROM J
 WHERE tms = ? 
 UNION ALL
 SELECT '전회차'
       , TMS
       , '2'
       , ROUND(DIV_01_07_02 / DIV_TOTAL * 100, 2) 
       , ROUND(DIV_01_07_06 / DIV_TOTAL * 100, 2)   
       , ROUND(DIV_01_07_12 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_10 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_13 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_14 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_03 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_15 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_09 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_05 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_16 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_17 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_06_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_18 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_02 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_03 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_02_07_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_JIJUM / DIV_TOTAL * 100, 2)    
       , 100
 FROM J
 WHERE TMS = ?  -1
 ORDER BY 3, 2 DESC
 #String#2012#String#003#String#17#String#17#String#1#String#17#String#17#String#17#
>
[I][UbiData][2012-06-07 19:15:41]	- Row size : 4
[I][UbiData][2012-06-07 19:15:41]	- Data
<
합계^t17^t1^t5759243^t6768872^t3464367^t4581356^t3964638^t6685253^t3899352^t3606854^t6970537^t6270105^t3005424^t6179547^t172346^t2917226^t1910858^t2796109^t0^t0^t68952087^t1^t^n전회^t16^t1^t5110145^t6625240^t3652284^t4516474^t4532647^t6596680^t4323166^t3600994^t7080707^t6011354^t3246328^t5786326^t150613^t2709578^t1871131^t2728615^t0^t0^t68542282^t1^t^n점유율^t17^t2^t7.06^t8.29^t4.25^t5.61^t4.86^t8.19^t4.78^t4.42^t8.54^t7.68^t3.68^t7.57^t.21^t3.57^t2.34^t3.43^t0^t0^t84.5^t100^t^n전회차^t16^t2^t6.31^t8.17^t4.51^t5.57^t5.59^t8.14^t5.33^t4.44^t8.74^t7.42^t4.01^t7.14^t.19^t3.34^t2.31^t3.37^t0^t0^t84.57^t100^t^n
>
[I][UbiData][2012-06-07 19:15:41][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 19:15:41][DATA QUERY START]
[I][UbiData][2012-06-07 19:15:41]	- sql id : rsm2020_s11
[I][UbiData][2012-06-07 19:15:41]	- Db charset : KSC5601
[I][UbiData][2012-06-07 19:15:41]	- Sql
<
SELECT 
         '0~'||BB.RACE_NO||'R' AS RACE_DESC,
         DECODE(LEV,1,'인원','점유율') AS MANA_DESC,
         CASE 
             WHEN LEV='2' AND IN_PRSN_NUM > 0 AND TOT_PRSN_NUM > 0 THEN ROUND(IN_PRSN_NUM / TOT_PRSN_NUM *100,2)    
             ELSE IN_PRSN_NUM
        END AS IN_PRSN_NUM, 
        CASE 
             WHEN LEV='2' AND BRNC_PRSN_NUM > 0 AND TOT_PRSN_NUM > 0 THEN ROUND(BRNC_PRSN_NUM / TOT_PRSN_NUM *100,2)    
             ELSE BRNC_PRSN_NUM
        END AS BRNC_PRSN_NUM, 
        CASE 
             WHEN LEV='2' AND TOT_PRSN_NUM > 0 THEN ROUND(TOT_PRSN_NUM / TOT_PRSN_NUM *100,2)    
             ELSE TOT_PRSN_NUM
        END AS TOT_PRSN_NUM, 
        CASE 
             WHEN LEV='1' THEN B_TOT_PRSN_NUM
        END AS B_TOT_PRSN_NUM, 
        CASE 
             WHEN LEV='1' THEN MINUS_PRSN_NUM
        END AS MINUS_PRSN_NUM, 
        CASE 
 
             WHEN LEV='1' AND TOT_PRSN_NUM>0 AND B_TOT_PRSN_NUM >0 THEN ROUND((TOT_PRSN_NUM - B_TOT_PRSN_NUM) / B_TOT_PRSN_NUM*100,2)
        END AS PER_PRSN_NUM 
 FROM
 (
      SELECT DU.LEV,
             SUM(CASE WHEN R.TMS =DU.TMS AND BRNC_CD = '98' THEN E.ENT_PRSN_NUM END) AS IN_PRSN_NUM,    
              SUM(CASE WHEN R.TMS =DU.TMS AND BRNC_CD <> '98' THEN E.ENT_PRSN_NUM END) AS BRNC_PRSN_NUM,    
              SUM(CASE WHEN R.TMS =DU.TMS THEN E.ENT_PRSN_NUM END) AS TOT_PRSN_NUM,    
              SUM(CASE WHEN R.TMS =DU.B_TMS THEN E.ENT_PRSN_NUM END) AS B_TOT_PRSN_NUM,    
              (SUM(CASE WHEN R.TMS =DU.TMS THEN E.ENT_PRSN_NUM END) - SUM(CASE WHEN R.TMS =DU.B_TMS THEN E.ENT_PRSN_NUM END)) AS MINUS_PRSN_NUM    
                      
          FROM                                                   
              TBRC_STAY_MANA E,    
              TBRK_SPEC_CD C,
              VW_SDL_INFO R,       
              (SELECT LEVEL AS LEV, ?  AS TMS,(?  - 1) AS B_TMS FROM DUAL CONNECT BY LEVEL<=2) DU 
          WHERE  1=1                
            AND E.BRNC_CD    = C.CD
            AND E.RACE_DT    = R.RACE_DAY                 
            AND C.GRP_CD        IN ('018','032')    
            AND R.MEET_CD    = '003'   
            AND R.STND_YEAR    = ?         
            AND R.TMS IN (? , ?  - 1)    
            AND R.DAY_ORD ='2'             
          GROUP BY DU.LEV
 )AA,
 (
     SELECT                                                                   
          MAX(RACE_NO)  AS RACE_NO
       FROM   (                                                                 
                   SELECT                                                       
                            TOR.RACE_NO                                         
                          , TOR.RACE_REG_NO                                     
                          , TOR.RACER_NO                                        
                          , TOR.RANK                                            
                          , TRM.NM_KOR                                          
                          , RANK() OVER (PARTITION BY TOR.RACE_NO               
                                                    , TOR.RANK                  
                                             ORDER BY TOR.RACE_REG_NO) SEQ      
                   FROM     TBEB_ORGAN@MRASYSLINK        TOR                        
                          , TBEC_RACER_MASTER@MRASYSLINK TRM                        
                   WHERE 1=1                                                        
                           
                   AND    TOR.RACER_NO   = TRM.RACER_NO                         
                   AND    TOR.STND_YEAR  = ?         
                   AND    TOR.MBR_CD     = '001'                                
                   AND    TOR.TMS        = ?         
                           
                   AND    TOR.RANK BETWEEN 1                                    
                                       AND 3                                    
              )                                                                 
       START WITH SEQ = 1                                                       
       CONNECT BY PRIOR SEQ = SEQ - 1                                           
       AND PRIOR RACE_NO = RACE_NO AND RANK = RANK     
 )BB
 ORDER BY AA.LEV
 #String#17#String#17#String#2012#String#17#String#17#String#2012#String#17#
>
[I][UbiData][2012-06-07 19:15:41]	- Row size : 2
[I][UbiData][2012-06-07 19:15:41]	- Data
<
0~15R^t인원^t^t^t^t33830^t^t^t^n0~15R^t점유율^t^t^t^t^t^t^t^n
>
[I][UbiData][2012-06-07 19:15:41][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 19:15:41][DATA QUERY START]
[I][UbiData][2012-06-07 19:15:41]	- sql id : rsm2020_s01
[I][UbiData][2012-06-07 19:15:41]	- Db charset : KSC5601
[I][UbiData][2012-06-07 19:15:41]	- Sql
<
SELECT 
           AA.MEET_CD,      
           AA.STND_YEAR,    
           AA.TMS,          
           AA.DAY_ORD,      
           TO_CHAR(TO_DATE(AA.RACE_DAY,'YYYYMMDD'),'YYYY-MM-DD') AS RACE_DAY, 
           AA.RACE_YOIL,    
           TO_CHAR(TO_DATE(AA.RACE_DAY,'YYYYMMDD'),'YYYY')||'년 '||AA.TMS||'회차 '||AA.DAY_ORD||'일차 ('|| TO_CHAR(TO_DATE(AA.RACE_DAY,'YYYYMMDD'),'YYYY-MM-DD')||') 경주 개최 결과'  
           AS RACE_DAY_INFO  
     
       FROM (         
             SELECT                              
             MEET_CD,      
             STND_YEAR,    
             TMS,          
             DAY_ORD,      
             RACE_DAY,     
             RACE_YOIL,    
             DECODE(RACE_YOIL,'MON','월','TUE','화','WED','수','THE','목','FRI','금','SAT','토','SUN','일','일') AS RACE_YOIL_KOR, 
             TO_CHAR(TO_DATE(RACE_DAY,'YYYYMMDD'),'YYYY-MM-DD')||
             ' ('||RACE_YOIL||') '||TMS||'회차 '||DAY_ORD||'일차'  
             AS RACE_INFO  
      FROM                                
             VW_SDL_INFO      
      WHERE  1=1                             
             AND MEET_CD = ?   
            AND STND_YEAR = ?   
            AND TMS= ?     
            AND DAY_ORD = ?        
    )AA
 #String#003#String#2012#String#17#String#1#
>
[I][UbiData][2012-06-07 19:15:41]	- Row size : 1
[I][UbiData][2012-06-07 19:15:41]	- Data
<
003^t2012^t17^t1^t2012-06-07^tTHU^t2012년 17회차 1일차 (2012-06-07) 경주 개최 결과^t^n
>
[I][UbiData][2012-06-07 19:15:41][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 19:15:41][DATA QUERY START]
[I][UbiData][2012-06-07 19:15:41]	- sql id : rsm2020_s05Today
[I][UbiData][2012-06-07 19:15:41]	- Db charset : KSC5601
[I][UbiData][2012-06-07 19:15:41]	- Sql
<
SELECT                                                                                      
       DECODE(GROUPING(RACE_NO),0,RACE_NO,'TOTAL') RACE_NO 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='12' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_02 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='16' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_06 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='22'  THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_12 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='20' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_10 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='23' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_13 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='24' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_14 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='13' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_03 
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='25'  THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_15 
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='19' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_09 
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='14' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_05 
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='26' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_16 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='27' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_17 
     , SUM(                                                                              
           CASE                                                                          
              WHEN COMM_NO='06'  THEN NVL(DIV_TOTAL, 0)                                  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_01_06_01 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='28' THEN NVL(DIV_TOTAL, 0) 
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_01_07_18 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_04_07_01 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='02' THEN NVL(DIV_TOTAL, 0)  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_04_07_02 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='03' THEN NVL(DIV_TOTAL, 0)  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_04_07_03    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='02' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_02_07_01 
     , SUM(                                                                              
           CASE                                                                          
              WHEN  COMM_NO NOT IN ('01','02','03','04','08') THEN NVL(DIV_TOTAL, 0)                         
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_JIJUM  
 
     , SUM(DIV_TOTAL)/100 DIV_TOTAL                                                          
 FROM   TBES_SDL_DT                                                                         
 WHERE   1=1                                                                                   
      AND STND_YEAR  = ?                                                             
      AND    MEET_CD    = ?                                                        
      AND    TMS        = ?                                                            
      AND    DAY_ORD    = ?                                                        
 
 GROUP BY RACE_NO                                                                                   
       
 ORDER BY RACE_NO
 #String#2012#String#003#String#17#String#1#
>
[I][UbiData][2012-06-07 19:15:41]	- Row size : 15
[I][UbiData][2012-06-07 19:15:41]	- Data
<
01^t140920^t197602^t96849^t127436^t119903^t187379^t128299^t116374^t219027^t183487^t108516^t160073^t7355^t93039^t59949^t93886^t0^t0^t2040094^t2396211^t^n02^t191278^t267508^t123529^t187360^t147399^t249704^t155747^t145620^t287810^t240820^t134529^t231415^t9365^t106436^t78894^t112202^t0^t0^t2669616^t3119757^t^n03^t218916^t312291^t160473^t214643^t185000^t303210^t189537^t171252^t321899^t281904^t151802^t275390^t11275^t162159^t84773^t131614^t0^t0^t3176138^t3739571^t^n04^t280723^t349162^t162668^t220723^t205104^t363694^t198947^t193854^t366506^t314797^t163251^t307239^t11636^t153198^t99509^t147397^t0^t0^t3538408^t4222315^t^n05^t293914^t356666^t179380^t247835^t236853^t376743^t193986^t198487^t385927^t363196^t170821^t362879^t10456^t178289^t114597^t157145^t0^t0^t3827174^t4600038^t^n06^t320577^t410766^t191760^t262742^t239275^t397830^t224139^t213663^t422296^t374549^t185676^t384443^t13418^t167359^t119122^t168329^t0^t0^t4095944^t4848817^t^n07^t373535^t432760^t204667^t303599^t258807^t408985^t246625^t214315^t457794^t408705^t182639^t417527^t12501^t187942^t128436^t184125^t0^t0^t4422962^t5262700^t^n08^t401087^t454010^t227928^t317354^t270820^t432896^t260257^t226171^t475649^t433911^t198906^t420465^t13274^t209941^t132238^t183879^t0^t0^t4658786^t5538248^t^n09^t437100^t484053^t233189^t323376^t300022^t463847^t282180^t288344^t503532^t460256^t213710^t426704^t12038^t218223^t137100^t184059^t0^t0^t4967733^t5873616^t^n10^t470862^t541950^t272328^t368669^t328440^t540666^t313885^t273198^t534426^t520280^t238905^t480109^t11995^t217489^t148525^t221558^t0^t0^t5483285^t6538531^t^n11^t466591^t561617^t317067^t365940^t318869^t591737^t323108^t316413^t577350^t534047^t224160^t502776^t13236^t222034^t156791^t213870^t0^t0^t5705606^t6735069^t^n12^t517154^t573936^t314455^t371388^t339082^t549091^t330869^t298274^t572163^t534089^t257848^t538886^t9827^t224241^t153182^t226909^t0^t0^t5811394^t6964681^t^n13^t526295^t583973^t330714^t397538^t324448^t593547^t335641^t314764^t598821^t528560^t248840^t537767^t13014^t243974^t168937^t238429^t0^t0^t5985262^t7085157^t^n14^t544820^t611235^t322648^t422943^t330535^t594065^t339607^t303922^t617748^t541795^t257654^t539796^t11784^t260972^t158394^t255072^t0^t0^t6112990^t7164971^t^n15^t575471^t631343^t326712^t449810^t360081^t631859^t376525^t332203^t629589^t549709^t268167^t594078^t11172^t271930^t170411^t277635^t0^t0^t6456695^t7513552^t^n
>
[I][UbiData][2012-06-07 19:15:41][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 19:15:41][DATA QUERY START]
[I][UbiData][2012-06-07 19:15:41]	- sql id : rsm2020_s03Today
[I][UbiData][2012-06-07 19:15:41]	- Db charset : KSC5601
[I][UbiData][2012-06-07 19:15:41]	- Sql
<
SELECT                                                                                    
      Z.RACE_NO, 
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          FC_GET_RSLT_RANK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO)                
      END RSLT_RANK, 
      R.RANK_1,  
      R.RANK_2,  
      R.RANK_3,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '001', NULL) 
      END WIN,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '002', '1')  
      END PLC,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '002', '2')  
      END PLC2,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '004', NULL) 
      END EX,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '005', NULL) 
      END QU,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '006', NULL) 
      END TRI,  
      D.BONJANG_TOTAL, 
      D.JIJUM_TOTAL,  
      C.DIV_TOTAL,  
      NVL(D.REFUND,0) REFUND, 
      NVL(B.B_DIV_TOTAL,0) AS B_DIV_TOTAL,    
      NVL((C.DIV_TOTAL-B.B_DIV_TOTAL),0) AS PLUS_MINUS, 
      CASE                                                                                  
          WHEN B.B_DIV_TOTAL<>0 THEN                                                        
          ROUND((C.DIV_TOTAL-B.B_DIV_TOTAL)/B.B_DIV_TOTAL*100,2)                            
          ELSE 0                                                                            
      END RATE,   
      SAME_PAYOFF_TOTAL,  
      SAME_PAYOFF_001, 
   SAME_PAYOFF_002, 
   SAME_PAYOFF_004, 
   SAME_PAYOFF_005, 
   SAME_PAYOFF_006 
  FROM   
   
      (   
                                                                 
          SELECT                                                                            
                D.MEET_CD,                                                                   
                D.STND_YEAR,                                                                 
                D.TMS,                                                                       
                D.DAY_ORD,                                                                   
                DECODE(D.RACE_NO,NULL,'TOTAL',D.RACE_NO) RACE_NO,                              
                SUM(                                                                        
                    CASE                                                                    
                      WHEN D.SELL_CD='03' THEN D.DIV_TOTAL                                    
                      ELSE 0                                                                
                    END                                                                     
                ) BONJANG_TOTAL,                                                            
                SUM(                                                                        
                    CASE                                                                    
                      WHEN D.SELL_CD !='03' THEN D.DIV_TOTAL                                     
                    END                                                                     
                ) JIJUM_TOTAL,                                                              
                SUM(D.REFUND) REFUND                                                         
          FROM   TBES_SDL_DT D                                                              
          WHERE 1=1                                                                             
              AND D.STND_YEAR(+)  = ? 
              AND D.MEET_CD(+)    = ? 
              AND D.TMS(+)        = ? 
              AND D.DAY_ORD(+)    = ? 
          GROUP BY                                                                          
                D.MEET_CD,                                                                   
                D.STND_YEAR,                                                                 
                D.TMS,                                                                       
                D.DAY_ORD,                                                                   
                ROLLUP(D.RACE_NO)                                                           
      ) D,                                                                                  
      (                                                                                     
         SELECT                                                                             
            P.MEET_CD,                                                                      
            P.STND_YEAR,                                                                    
            P.TMS,                                                                          
            P.DAY_ORD,                                                                      
            DECODE(P.RACE_NO,NULL,'TOTAL',P.RACE_NO) RACE_NO,                               
            SUM(POOL_TOTAL) DIV_TOTAL                                                       
         FROM                                                                               
             TBES_SDL_PT P                                                                  
         WHERE 1=1                                                                              
             AND P.STND_YEAR  = ? 
             AND P.MEET_CD    = ? 
             AND P.TMS        = ? 
             AND P.DAY_ORD    = ? 
         GROUP BY                                                                           
            P.MEET_CD,                                                                      
            P.STND_YEAR,                                                                    
            P.TMS,                                                                          
            P.DAY_ORD,                                                                      
            ROLLUP(P.RACE_NO)                                                               
      ) C,                                                                                  
      (                                                                                     
          SELECT                                                                            
                DECODE(RACE_NO,NULL,'TOTAL',RACE_NO) RACE_NO,                               
                SUM(DIV_TOTAL) B_DIV_TOTAL                                                  
          FROM   TBES_SDL_DT                                                                
          WHERE 1=1                                                                            
              AND  STND_YEAR  = ? 
              AND    MEET_CD    = ? 
              AND    TMS        = ?  -1                                                    
              AND    DAY_ORD    = ? 
          GROUP BY                                                                          
                ROLLUP(RACE_NO)                                                             
      ) B,                                                                                  
      (                                                                                     
          SELECT                                                                            
                RACE_NO                                                                     
              , MIN(DECODE(RANK, '1', NM_KOR)) RANK_1                                       
              , MIN(DECODE(RANK, '2', NM_KOR)) RANK_2                                       
              , MIN(DECODE(RANK, '3', NM_KOR)) RANK_3                                       
          FROM   (                                                                          
                   SELECT                                                                   
                            RACE_NO                                                         
                          , RANK                                                            
                          , SUBSTR(MAX(SYS_CONNECT_BY_PATH (NM_KOR, '/')), 2) NM_KOR        
                   FROM   (                                                                 
                               SELECT                                                       
                                        TOR.RACE_NO                                         
                                      , TOR.RACE_REG_NO                                     
                                      , TOR.RACER_NO                                        
                                      , TOR.RANK                                            
                                      , TRM.NM_KOR                                          
                                      , RANK() OVER (PARTITION BY TOR.RACE_NO               
                                                                , TOR.RANK                  
                                                         ORDER BY TOR.RACE_REG_NO) SEQ      
                               FROM     TBEB_ORGAN@MRASYSLINK        TOR                        
                                      , TBEC_RACER_MASTER@MRASYSLINK TRM                        
                               WHERE 1=1                
                               AND    TOR.RACER_NO   = TRM.RACER_NO                         
                               AND    TOR.STND_YEAR  = ? 
                               AND    TOR.MBR_CD     = '001'                                
                               AND    TOR.TMS        = ? 
                               AND    TOR.DAY_ORD    = ? 
                               AND    TOR.RANK BETWEEN 1                                    
                                                   AND 3                                    
                          )                                                                 
                   START WITH SEQ = 1                                                       
                   CONNECT BY PRIOR SEQ = SEQ - 1                                           
                   AND PRIOR RACE_NO = RACE_NO AND RANK = RANK                              
                   GROUP BY                                                                 
                            RACE_NO                                                         
                          , RANK                                                            
               )                                                                            
          GROUP BY RACE_NO                                                                  
          UNION ALL                                                                         
          SELECT 'TOTAL', '', '', '' FROM DUAL                                              
      ) R, 
      (   
     
       SELECT                                                                         
          RACE_NO,
            SUM(CASE 
                     WHEN POOL_CD = '001' AND RS_SEQ >= '2' THEN PAYOFF 
                     WHEN POOL_CD = '002' AND RS_SEQ >= '3' THEN PAYOFF 
                     WHEN POOL_CD = '004' AND RS_SEQ >= '2' THEN PAYOFF 
                     WHEN POOL_CD = '005' AND RS_SEQ >= '2' THEN PAYOFF 
                     WHEN POOL_CD = '006' AND RS_SEQ >= '2' THEN PAYOFF 
            END) AS SAME_PAYOFF_TOTAL, 
                               
            SUM(CASE WHEN POOL_CD = '001' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_001, 
            SUM(CASE WHEN POOL_CD = '002' AND RS_SEQ >= '3' THEN PAYOFF END) AS SAME_PAYOFF_002, 
            SUM(CASE WHEN POOL_CD = '004' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_004, 
            SUM(CASE WHEN POOL_CD = '005' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_005, 
            SUM(CASE WHEN POOL_CD = '006' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_006 
      FROM TBES_SDL_RS                                                                
      WHERE 1=1                                                                          
          AND MEET_CD  = '003'                                                              
          AND STND_YEAR = ?      
          AND TMS   = ?      
          AND DAY_ORD  = ?      
      GROUP BY          
       RACE_NO                                                              
 
   ) E,                                                                                  
  (                                       
    SELECT DISTINCT RACE_NO           
    FROM TBEB_RACE_DOC@MRASYSLINK D        
      WHERE 1=1                          
          AND D.STND_YEAR= ? 
          AND D.TMS=? 
           AND D.DAY_ORD=? 
 
   ) Z                                   
  WHERE 1=1                                                                                    
      AND C.RACE_NO(+)=Z.RACE_NO                                                                
      AND B.RACE_NO(+)=Z.RACE_NO                                                            
      AND R.RACE_NO(+)=Z.RACE_NO                                                            
      AND D.RACE_NO(+)=Z.RACE_NO
      AND E.RACE_NO(+)=Z.RACE_NO                                                            
  ORDER BY Z.RACE_NO
 #String#2012#String#003#String#17#String#1#String#2012#String#003#String#17#String#1#String#2012#String#003#String#17#String#1#String#2012#String#17#String#1#String#2012#String#17#String#1#String#2012#String#17#String#1#
>
[I][UbiData][2012-06-07 19:15:41]	- Row size : 15
[I][UbiData][2012-06-07 19:15:41]	- Data
<
01^t3-5-6^t윤영근^t배혜민^t박광혁^t4.9^t1.5^t2.5^t15.2^t9.6^t12.6^t35611700^t204009400^t239621100^t0^t241173800^t-1552700^t-.64^t^t^t^t^t^t^t^n02^t2-1-6^t사재준^t김민길^t이주영^t1.3^t1^t2.3^t5^t3.6^t8.6^t45014100^t266961600^t311975700^t0^t306515100^t5460600^t1.78^t^t^t^t^t^t^t^n03^t5-1-3^t심상철^t최재원^t서지혜^t2.6^t1.2^t1.5^t4.1^t2^t1.8^t56343300^t317613800^t373957100^t0^t367015400^t6941700^t1.89^t^t^t^t^t^t^t^n04^t3-6-4^t정인교^t유해광^t진석현^t3.5^t1.4^t3.7^t17.9^t13.6^t6.7^t68390700^t353840800^t422231500^t0^t425410100^t-3178600^t-.75^t^t^t^t^t^t^t^n05^t6-5-1^t이승일^t강창효^t이종우^t7.8^t2.7^t4^t58.7^t25^t32.3^t77286400^t382717400^t460003800^t0^t479149900^t-19146100^t-4^t^t^t^t^t^t^t^n06^t1-4-6^t이지수^t서화모^t오승철^t2.1^t1.2^t1.5^t5.1^t2.8^t23.3^t75287300^t409594400^t484881700^t0^t469081700^t15800000^t3.37^t^t^t^t^t^t^t^n07^t6-2-1^t황이태^t민영건^t배혜민^t21.1^t7.4^t3.4^t84.1^t48^t14.6^t83973800^t442296200^t526270000^t0^t515496200^t10773800^t2.09^t^t^t^t^t^t^t^n08^t4-1-6^t신동길^t우진수^t구현구^t1.5^t1.2^t2^t5^t3^t6.1^t87946200^t465878600^t553824800^t0^t556565300^t-2740500^t-.49^t^t^t^t^t^t^t^n09^t2-4-1^t김정구^t손동민^t이흥우^t1.7^t1.2^t1.9^t4.5^t3.2^t3.3^t90588300^t496773300^t587361600^t0^t548482300^t38879300^t7.09^t^t^t^t^t^t^t^n10^t1-6-5^t김영욱^t사재준^t윤영근^t1.9^t1.3^t1.5^t4.4^t2.6^t3.6^t105524600^t548328500^t653853100^t0^t669189800^t-15336700^t-2.29^t^t^t^t^t^t^t^n11^t1-4-2^t심상철^t김민길^t박광혁^t1.8^t1.3^t3.6^t11.9^t8.6^t7.4^t102946300^t570560600^t673506900^t0^t707765400^t-34258500^t-4.84^t^t^t^t^t^t^t^n12^t1-4-6^t경상수^t김선필^t최재원^t2.4^t1.4^t8.3^t30.6^t24.2^t21.1^t115328700^t581139400^t696468100^t0^t682622600^t13845500^t2.03^t^t^t^t^t^t^t^n13^t5-3-1^t김효년^t문주엽^t주은석^t6^t2.3^t1.3^t14.7^t6.5^t3.3^t109989500^t598526200^t708515700^t0^t702342900^t6172800^t.88^t^t^t^t^t^t^t^n14^t2-4-3^t구현구^t장영태^t강창효^t1.7^t1.5^t1.7^t5.2^t3.7^t4.2^t105198100^t611299000^t716497100^t0^t698218300^t18278800^t2.62^t^t^t^t^t^t^t^n15^t3-5-1^t이태희^t어선규^t유해광^t2.2^t1.3^t1.5^t4^t2.5^t2.4^t105685700^t645669500^t751355200^t0^t735842100^t15513100^t2.11^t^t^t^t^t^t^t^n
>
[I][UbiData][2012-06-07 19:15:41][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 19:15:41][DATA QUERY START]
[I][UbiData][2012-06-07 19:15:41]	- sql id : rsm2020_s02Today
[I][UbiData][2012-06-07 19:15:41]	- Db charset : KSC5601
[I][UbiData][2012-06-07 19:15:41]	- Sql
<
SELECT                                                                                          
           MST.GBN       
         , YEAR.DIV_TOTAL AS YEAR_TOTAL 
         , YEAR.REFUND    AS YEAR_REFUND 
         , TMS.D_1 
         , TMS.D_2   
         , TMS.D_3   
         , TMS.D_4   
         , TMS.D_5   
         , TMS.D_6   
         , TMS.D_7   
         , TMS.TOTAL 
         , PRE.TOTAL AS PRE_TOTAL 
         , NVL(TMS.TOTAL, 0) - NVL(PRE .TOTAL, 0) ADD_POOL 
         , CASE WHEN (NVL(PRE.TOTAL, 0) = 0) AND (NVL(TMS.TOTAL, 0) = 0) THEN 0                  
                WHEN NVL(PRE.TOTAL, 0) = 0                               THEN 100                
                WHEN NVL(TMS.TOTAL, 0) = 0                                THEN -100              
                ELSE ROUND((NVL(TMS.TOTAL, 0) - NVL(PRE.TOTAL, 0)) / NVL(PRE.TOTAL, 0) * 100, 2) 
           END ADD_RATE 
  FROM                                                                                           
           (                                                                                     
              SELECT                                                                             
                       ?  STND_YEAR                                                      
                     , '매출총액' GBN                                                            
              FROM   DUAL                                                                        
           ) MST                                                                                 
         , (                                                                                     
              SELECT                                                                             
                       TMS.STND_YEAR                                                             
                     , MIN(DECODE(TMS.D, 1, TMS.AMOUNT)) D_1                                     
                     , MIN(DECODE(TMS.D, 2, TMS.AMOUNT)) D_2                                     
                     , MIN(DECODE(TMS.D, 3, TMS.AMOUNT)) D_3                                     
                     , MIN(DECODE(TMS.D, 4, TMS.AMOUNT)) D_4                                     
                     , MIN(DECODE(TMS.D, 5, TMS.AMOUNT)) D_5                                     
                     , MIN(DECODE(TMS.D, 6, TMS.AMOUNT)) D_6                                     
                     , MIN(DECODE(TMS.D, 7, TMS.AMOUNT)) D_7                                     
                     , SUM(TMS.AMOUNT)                   TOTAL                                   
              FROM   (                                                                           
                          SELECT                                                                 
                                   TSP.STND_YEAR                                                 
                                 , TO_CHAR(TO_DATE(INFO.RACE_DAY, 'YYYYMMDD'), 'D') D            
                                 , SUM(TSP.POOL_TOTAL) AMOUNT                                    
                          FROM     VW_SDL_INFO INFO                                              
                                 , TBES_SDL_PT       TSP                                         
                          WHERE  1=1
                          AND    INFO.STND_YEAR = TSP.STND_YEAR                                  
                          AND    INFO.MEET_CD    = TSP.MEET_CD                                   
                          AND    INFO.TMS       = TSP.TMS                                        
                          AND    INFO.DAY_ORD   = TSP.DAY_ORD                                    
                          AND    TSP.STND_YEAR  = ?   
                          AND    TSP.MEET_CD    = ?       
                          AND    TSP.TMS        = ?       
                          GROUP BY                                                               
                                   TSP.STND_YEAR                                                 
                                 , INFO.RACE_DAY                                                 
                     ) TMS                                                                       
              GROUP BY TMS.STND_YEAR                                                             
           ) TMS                                                                                 
         , (                                                                                     
              SELECT                                                                             
                       STND_YEAR                                                                 
                     , SUM(TSP.DIV_TOTAL) DIV_TOTAL                                              
                     , SUM(TSP.REFUND    ) REFUND                                                
              FROM   TBES_SDL_DT_SUM       TSP                                                       
              WHERE  TSP.STND_YEAR  = ?                                                  
              AND    TSP.MEET_CD    = ?                                                    
              AND    TSP.TMS       <= ?                                                        
              GROUP BY                                                                           
                       STND_YEAR                                                                 
           ) YEAR                                                                                
         , (                                                                                     
              SELECT                                                                             
                       STND_YEAR                                                                 
                     , TMS                                                                       
                     , NVL(SUM(TSP.POOL_TOTAL), 0)  TOTAL                                        
              FROM   TBES_SDL_PT       TSP                                                       
              WHERE  1=1
              AND TSP.STND_YEAR  = ? 
              AND    TSP.MEET_CD    = ?                                                    
              AND    TSP.TMS        = ?  - 1                                                   
              GROUP BY                                                                           
                       STND_YEAR                                                                 
                     , TMS                                                                       
           ) PRE                                                                                 
  WHERE  1=1
  AND   MST.STND_YEAR = TMS .STND_YEAR(+)                                                       
  AND    MST.STND_YEAR = YEAR.STND_YEAR(+)                                                       
  AND    MST.STND_YEAR = PRE .STND_YEAR(+)                                                       
  UNION ALL                                                                                      
  SELECT                                                                                         
           MST.GBN                                                                               
         , YEAR.DIV_TOTAL                   YEAR_TOTAL                                           
         , YEAR.REFUND                      YEAR_REFUND                                          
         , TMS.D_1                                                                               
         , TMS.D_2                                                                               
         , TMS.D_3                                                                               
         , TMS.D_4                                                                               
         , TMS.D_5                                                                               
         , TMS.D_6                                                                               
         , TMS.D_7                                                                               
         , TMS.TOTAL                                                                             
         , 0 PRE_TOTAL                                                                           
         , NVL(PRE .TOTAL, 0) - NVL(TMS.TOTAL, 0) ADD_POOL                                       
         , CASE WHEN (NVL(PRE.TOTAL, 0) = 0) AND (NVL(TMS.TOTAL, 0) = 0) THEN 0                  
                WHEN NVL(PRE.TOTAL, 0) = 0                               THEN -100               
                WHEN NVL(TMS.TOTAL, 0) = 0                                THEN 100               
                ELSE ROUND((NVL(PRE.TOTAL, 0) - NVL(TMS.TOTAL, 0)) / NVL(TMS.TOTAL, 0) * 100, 2) 
           END ADD_RATE                                                                          
  FROM                                                                                           
           (                                                                                     
              SELECT                                                                             
                       ?  -1 STND_YEAR                                                    
                     , '전년대비' GBN                                                            
              FROM   DUAL                                                                        
           ) MST                                                                                 
         , (                                                                                     
              SELECT                                                                             
                       TMS.STND_YEAR                                                             
                     , MIN(DECODE(TMS.D, 1, TMS.AMOUNT)) D_1                                     
                     , MIN(DECODE(TMS.D, 2, TMS.AMOUNT)) D_2                                     
                     , MIN(DECODE(TMS.D, 3, TMS.AMOUNT)) D_3                                     
                     , MIN(DECODE(TMS.D, 4, TMS.AMOUNT)) D_4                                     
                     , MIN(DECODE(TMS.D, 5, TMS.AMOUNT)) D_5                                     
                     , MIN(DECODE(TMS.D, 6, TMS.AMOUNT)) D_6                                     
                     , MIN(DECODE(TMS.D, 7, TMS.AMOUNT)) D_7                                     
                     , SUM(TMS.AMOUNT)                   TOTAL                                   
              FROM   (                                                                           
                          SELECT                                                                 
                                   TSP.STND_YEAR                                                 
                                 , TO_CHAR(TO_DATE(INFO.RACE_DAY, 'YYYYMMDD'), 'D') D            
                                 , SUM(TSP.POOL_TOTAL) AMOUNT                                    
                          FROM     VW_SDL_INFO INFO                                              
                                 , TBES_SDL_PT       TSP                                         
                          WHERE  1=1
                          AND  INFO.STND_YEAR = TSP.STND_YEAR                                  
                          AND    INFO.MEET_CD    = TSP.MEET_CD                                   
                          AND    INFO.TMS       = TSP.TMS                                        
                          AND    INFO.DAY_ORD   = TSP.DAY_ORD                                    
                          AND    TSP.STND_YEAR  =  ?  -1                                   
                          AND    TSP.MEET_CD    = ?                                        
                          AND    TSP.TMS        = ?                                            
                          GROUP BY                                                               
                                   TSP.STND_YEAR                                                 
                                 , INFO.RACE_DAY                                                 
                     ) TMS                                                                       
              GROUP BY TMS.STND_YEAR                                                             
           ) TMS                                                                                 
         , (                                                                                     
              SELECT                                                                             
                       STND_YEAR                                                                 
                     , SUM(TSP.DIV_TOTAL) DIV_TOTAL                                              
                     , SUM(TSP.REFUND    ) REFUND                                                
              FROM   TBES_SDL_DT_SUM       TSP                                                       
              WHERE  1=1
              AND TSP.STND_YEAR  = ?  -1                                               
              AND    TSP.MEET_CD    = ?                                                    
              AND    TSP.TMS       <= ?                                                        
              GROUP BY                                                                           
                       STND_YEAR                                                                 
           ) YEAR                                                                                
         , (                                                                                     
              SELECT                                                                             
                       STND_YEAR-1 STND_YEAR                                                     
                     , TMS                                                                       
                     , NVL(SUM(TSP.POOL_TOTAL), 0)  TOTAL                                        
              FROM   TBES_SDL_PT       TSP                                                       
              WHERE  1=1
              AND TSP.STND_YEAR  = ?                                                  
              AND    TSP.MEET_CD    = ?                                                    
              AND    TSP.TMS        = ?                                                        
              GROUP BY                                                                           
                       STND_YEAR                                                                 
                     , TMS                                                                       
           ) PRE                                                                                 
  WHERE  1=1
  AND MST.STND_YEAR = TMS.STND_YEAR(+)                                                        
  AND    MST.STND_YEAR = YEAR.STND_YEAR(+)                                                       
  AND    MST.STND_YEAR = PRE.STND_YEAR(+)
 #String#2012#String#2012#String#003#String#17#String#2012#String#003#String#17#String#2012#String#003#String#17#String#2012#String#2012#String#003#String#17#String#2012#String#003#String#17#String#2012#String#003#String#17#
>
[I][UbiData][2012-06-07 19:15:41]	- Row size : 2
[I][UbiData][2012-06-07 19:15:41]	- Data
<
매출총액^t255807593000^t4674302200^t^t^t^t^t8160323400^t^t^t8160323400^t16874921600^t-8714598200^t-51.64^t^n전년대비^t298819077500^t5513386200^t^t^t^t8970408300^t10464906900^t^t^t19435315200^t0^t-11274991800^t-58.01^t^n
>
[I][UbiData][2012-06-07 19:15:41][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 19:15:41][DATA QUERY START]
[I][UbiData][2012-06-07 19:15:41]	- sql id : rsm2020_s04
[I][UbiData][2012-06-07 19:15:41]	- Db charset : KSC5601
[I][UbiData][2012-06-07 19:15:41]	- Sql
<
SELECT 
   ROW_ORDER,
   MANA_DESC, 
   TOTAL        
        ,SUN_NUM     
        ,TUE_NUM     
        ,WEN_NUM     
        ,THU_NUM     
        ,TOT_PRSN_NUM,    
        
        B_TOT_PRSN_NUM,          
        
        CASE 
              WHEN ROW_ORDER='2' THEN N_TOT_PRSN_NUM - TOT_PRSN_NUM
              ELSE PRSN_NUM_MINUS
        END PRSN_NUM_MINUS,          
        
        ROUND(CASE 
              WHEN ROW_ORDER='2' THEN (N_TOT_PRSN_NUM - TOT_PRSN_NUM)/TOT_PRSN_NUM*100
              ELSE PER
        END,2) AS PER             
  FROM
 (
  
  SELECT '1' AS ROW_ORDER,
    '입장인원' AS MANA_DESC,
     A.TMS                                                               
        ,TOT_PRSN_NUM                     
        ,MON_NUM 
              ,TUE_NUM 
              ,WEN_NUM 
              ,THU_NUM 
              ,FRI_NUM 
              ,SAT_NUM 
              ,SUN_NUM 
              ,B_TOT_PRSN_NUM
              ,(TOT_PRSN_NUM-B_TOT_PRSN_NUM) AS PRSN_NUM_MINUS
              ,DECODE(B_TOT_PRSN_NUM,0,0,(TOT_PRSN_NUM-B_TOT_PRSN_NUM)/B_TOT_PRSN_NUM*100)  AS PER
              ,TOTAL          
  
    FROM
    
    
    (
    
     SELECT   MAX(TMS) TMS
           ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
           ,NVL(SUM(A.ENT_PRSN_NUM ),0)         TOT_PRSN_NUM                                                      
           
          
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'2', A.ENT_PRSN_NUM,0 )) ,0) MON_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'3', A.ENT_PRSN_NUM,0 )) ,0) TUE_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'4', A.ENT_PRSN_NUM,0 )) ,0) WEN_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'5', A.ENT_PRSN_NUM,0 )) ,0) THU_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'6', A.ENT_PRSN_NUM,0 )) ,0) FRI_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'7', A.ENT_PRSN_NUM,0 )) ,0) SAT_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'1', A.ENT_PRSN_NUM,0 )) ,0) SUN_NUM       
    
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) =  ?  
                AND MEET_CD = ?   
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE 1=1
             AND STND_YEAR = ?  
                AND MEET_CD = ? 
                AND TMS  = ?  
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    GROUP BY B.TMS
    ) A,
    
    
    (
    
     SELECT   
            MAX(TMS) TMS
           ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
           ,NVL(SUM(A.ENT_PRSN_NUM ),0)         B_TOT_PRSN_NUM  
           
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) =  ?  
                AND MEET_CD = ?    
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE 1=1
             AND STND_YEAR = ?    
                AND MEET_CD = ? 
                AND TMS  = ?  - 1   
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    GROUP BY B.TMS
    ) B,
    
    (
    
     SELECT NVL(SUM(A.ENT_PRSN_NUM ),0)         TOTAL  
           
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) = ?  
                AND MEET_CD = ?   
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE STND_YEAR = ?  
                AND MEET_CD = ? 
                AND TMS <= ?  
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    )C
  UNION ALL 
  
  
  SELECT '2' AS ROW_ORDER,
    '전년대비' AS MANA_DESC,
     A.TMS                                                               
        ,TOT_PRSN_NUM                     
        ,MON_NUM 
              ,TUE_NUM 
              ,WEN_NUM 
              ,THU_NUM 
              ,FRI_NUM 
              ,SAT_NUM 
              ,SUN_NUM 
              ,B_TOT_PRSN_NUM
              ,(TOT_PRSN_NUM-B_TOT_PRSN_NUM) AS PRSN_NUM_MINUS
              ,DECODE(B_TOT_PRSN_NUM,0,0,(TOT_PRSN_NUM-B_TOT_PRSN_NUM)/B_TOT_PRSN_NUM*100)  AS PER
              ,TOT          
  
    FROM
    
    
    (
    
     SELECT   MAX(TMS) TMS
           ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
           ,NVL(SUM(A.ENT_PRSN_NUM ),0)         TOT_PRSN_NUM                                                      
           
          
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'2', A.ENT_PRSN_NUM,0 )) ,0) MON_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'3', A.ENT_PRSN_NUM,0 )) ,0) TUE_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'4', A.ENT_PRSN_NUM,0 )) ,0) WEN_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'5', A.ENT_PRSN_NUM,0 )) ,0) THU_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'6', A.ENT_PRSN_NUM,0 )) ,0) FRI_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'7', A.ENT_PRSN_NUM,0 )) ,0) SAT_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'1', A.ENT_PRSN_NUM,0 )) ,0) SUN_NUM       
    
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) = ?  - 1  
                AND MEET_CD    = ?   
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE STND_YEAR = ?  - 1  
                AND MEET_CD =?  
                AND TMS  = ?    
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    GROUP BY B.TMS
    ) A,
    
    
    (
    
     SELECT   
            MAX(TMS) TMS
           ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
           ,NVL(SUM(A.ENT_PRSN_NUM ),0)         B_TOT_PRSN_NUM  
           
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) = ?  -1 
                AND MEET_CD = ?     
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE STND_YEAR = ?  - 1  
                AND MEET_CD = ? 
                AND TMS  = ?  - 1  
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    GROUP BY B.TMS
    ) B,
    
    (
    
     SELECT NVL(SUM(A.ENT_PRSN_NUM ),0)         TOT  
           
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) =  ?  -1 
                AND MEET_CD = '003'
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE STND_YEAR = ?  -1  
                AND MEET_CD = ? 
                AND TMS  <= ?   
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    )C
  ),
  (
  SELECT SUM(A.ENT_PRSN_NUM ) AS N_TOT_PRSN_NUM
      FROM 
          TBRC_STAY_MANA  A,       
          VW_SDL_INFO B
      WHERE 1 =1
        AND A.RACE_DT(+) = B.RACE_DAY
        AND B.STND_YEAR =  ?  
        AND B.MEET_CD = ?    
        AND B.TMS  = ?       
  )BB  
 ORDER BY MANA_DESC
 #String#2012#String#003#String#2012#String#003#String#17#String#2012#String#003#String#2012#String#003#String#17#String#2012#String#003#String#2012#String#003#String#17#String#2012#String#003#String#2012#String#003#String#17#String#2012#String#003#String#2012#String#003#String#17#String#2012#String#2012#String#003#String#17#String#2012#String#003#String#17#
>
[I][UbiData][2012-06-07 19:15:42]	- Row size : 2
[I][UbiData][2012-06-07 19:15:42]	- Data
<
1^t입장인원^t998229^t0^t0^t0^t32508^t32508^t67325^t-34817^t-51.71^t^n2^t전년대비^t1417977^t0^t0^t44040^t44345^t88385^t80393^t-55877^t-63.22^t^n
>
[I][UbiData][2012-06-07 19:15:42][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 19:15:42][DATA QUERY START]
[I][UbiData][2012-06-07 19:15:42]	- sql id : rsm2020_s07
[I][UbiData][2012-06-07 19:15:42]	- Db charset : KSC5601
[I][UbiData][2012-06-07 19:15:42]	- Sql
<
SELECT  
   '0~'||BB.RACE_NO||'R' AS RACE_DESC,
   DECODE(LEV,1,'인원','점유율') AS MANA_DESC,
      DECODE(LEV,1,INWON_12,DECODE(INWON_TOTAL,0,0,ROUND(INWON_12/INWON_TOTAL*100,2))) AS INWON_12, 
      DECODE(LEV,1,INWON_13,DECODE(INWON_TOTAL,0,0,ROUND(INWON_13/INWON_TOTAL*100,2))) AS INWON_13, 
      DECODE(LEV,1,INWON_14,DECODE(INWON_TOTAL,0,0,ROUND(INWON_14/INWON_TOTAL*100,2))) AS INWON_14, 
      DECODE(LEV,1,INWON_16,DECODE(INWON_TOTAL,0,0,ROUND(INWON_16/INWON_TOTAL*100,2))) AS INWON_16, 
      DECODE(LEV,1,INWON_19,DECODE(INWON_TOTAL,0,0,ROUND(INWON_19/INWON_TOTAL*100,2))) AS INWON_19, 
      DECODE(LEV,1,INWON_20,DECODE(INWON_TOTAL,0,0,ROUND(INWON_20/INWON_TOTAL*100,2))) AS INWON_20, 
      DECODE(LEV,1,INWON_22,DECODE(INWON_TOTAL,0,0,ROUND(INWON_22/INWON_TOTAL*100,2))) AS INWON_22, 
      DECODE(LEV,1,INWON_23,DECODE(INWON_TOTAL,0,0,ROUND(INWON_23/INWON_TOTAL*100,2))) AS INWON_23, 
      DECODE(LEV,1,INWON_24,DECODE(INWON_TOTAL,0,0,ROUND(INWON_24/INWON_TOTAL*100,2))) AS INWON_24, 
      DECODE(LEV,1,INWON_25,DECODE(INWON_TOTAL,0,0,ROUND(INWON_25/INWON_TOTAL*100,2))) AS INWON_25, 
      DECODE(LEV,1,INWON_26,DECODE(INWON_TOTAL,0,0,ROUND(INWON_26/INWON_TOTAL*100,2))) AS INWON_26, 
      DECODE(LEV,1,INWON_27,DECODE(INWON_TOTAL,0,0,ROUND(INWON_27/INWON_TOTAL*100,2))) AS INWON_27, 
      DECODE(LEV,1,INWON_28,DECODE(INWON_TOTAL,0,0,ROUND(INWON_28/INWON_TOTAL*100,2))) AS INWON_28, 
      DECODE(LEV,1,INWON_100,DECODE(INWON_TOTAL,0,0,ROUND(INWON_100/INWON_TOTAL*100,2))) AS INWON_100, 
      DECODE(LEV,1,INWON_101,DECODE(INWON_TOTAL,0,0,ROUND(INWON_101/INWON_TOTAL*100,2))) AS INWON_101, 
      DECODE(LEV,1,INWON_102,DECODE(INWON_TOTAL,0,0,ROUND(INWON_102/INWON_TOTAL*100,2))) AS INWON_102, 
      DECODE(LEV,1,INWON_103,DECODE(INWON_TOTAL,0,0,ROUND(INWON_103/INWON_TOTAL*100,2))) AS INWON_103, 
      DECODE(LEV,1,INWON_SUM,DECODE(INWON_TOTAL,0,0,ROUND(INWON_SUM/INWON_TOTAL*100,2))) AS INWON_TOTAL 
  FROM
 (
             SELECT  
        SUM(CASE WHEN BRNC_CD='12' THEN INWON END) AS INWON_12, 
        SUM(CASE WHEN BRNC_CD='13' THEN INWON END) AS INWON_13, 
        SUM(CASE WHEN BRNC_CD='14' THEN INWON END) AS INWON_14, 
        SUM(CASE WHEN BRNC_CD='16' THEN INWON END) AS INWON_16, 
        SUM(CASE WHEN BRNC_CD='19' THEN INWON END) AS INWON_19, 
        SUM(CASE WHEN BRNC_CD='20' THEN INWON END) AS INWON_20, 
        SUM(CASE WHEN BRNC_CD='22' THEN INWON END) AS INWON_22, 
        SUM(CASE WHEN BRNC_CD='23' THEN INWON END) AS INWON_23, 
        SUM(CASE WHEN BRNC_CD='24' THEN INWON END) AS INWON_24, 
        SUM(CASE WHEN BRNC_CD='25' THEN INWON END) AS INWON_25, 
        SUM(CASE WHEN BRNC_CD='26' THEN INWON END) AS INWON_26, 
        SUM(CASE WHEN BRNC_CD='27' THEN INWON END) AS INWON_27, 
        SUM(CASE WHEN BRNC_CD='28' THEN INWON END) AS INWON_28, 
        SUM(CASE WHEN BRNC_CD='100' THEN INWON END) AS INWON_100, 
        SUM(CASE WHEN BRNC_CD='101' THEN INWON END) AS INWON_101, 
        SUM(CASE WHEN BRNC_CD='102' THEN INWON END) AS INWON_102, 
        SUM(CASE WHEN BRNC_CD='103' THEN INWON END) AS INWON_103, 
        SUM(INWON ) AS INWON_TOTAL,
        SUM(CASE WHEN BRNC_CD='12' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='13' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='14' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='16' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='19' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='20' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='22' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='23' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='24' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='25' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='26' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='27' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='28' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='100' THEN INWON END) + 
                 SUM(CASE WHEN BRNC_CD='101' THEN INWON END) + 
                 SUM(CASE WHEN BRNC_CD='102' THEN INWON END) +
                 SUM(CASE WHEN BRNC_CD='103' THEN INWON END)  AS INWON_SUM 
     FROM
    (
    SELECT C.CD_NM, 
           E.BRNC_CD,                                      
            SUM( E.ENT_PRSN_NUM) INWON 
        FROM                                                   
         VW_SDL_INFO R       
         ,TBRC_STAY_MANA E, 
         TBRK_SPEC_CD C                      
        WHERE  1=1
           AND R.MEET_CD  = ?  
        AND R.STND_YEAR(+) = ?  
          AND R.TMS(+)   = ?  
          AND R.DAY_ORD(+) = ?  
         AND E.MEET_CD='003'                        
         AND E.RACE_DT=R.RACE_DAY                 
         AND C.GRP_CD IN ('018','032')                      
         AND C.CD=E.BRNC_CD                
         
        GROUP BY E.BRNC_CD,C.CD_NM          
        ORDER BY E.BRNC_CD
    )A
   )AA,
 (
  SELECT                                                                   
          MAX(RACE_NO)  AS RACE_NO
          
   FROM   (                                                                 
               SELECT                                                       
                        TOR.RACE_NO                                         
                      , TOR.RACE_REG_NO                                     
                      , TOR.RACER_NO                                        
                      , TOR.RANK                                            
                      , TRM.NM_KOR                                          
                      , RANK() OVER (PARTITION BY TOR.RACE_NO               
                                                , TOR.RANK                  
                                         ORDER BY TOR.RACE_REG_NO) SEQ      
               FROM     TBEB_ORGAN@MRASYSLINK        TOR                        
                      , TBEC_RACER_MASTER@MRASYSLINK TRM                        
               WHERE 1=1                                                        
               
               AND    TOR.RACER_NO   = TRM.RACER_NO                         
               AND    TOR.STND_YEAR  = ?  
               AND    TOR.MBR_CD     = '001'                                
               AND    TOR.TMS        = ?  
               
               AND    TOR.RANK BETWEEN 1                                    
                                   AND 3                                    
          )                                                                 
   START WITH SEQ = 1                                                       
   CONNECT BY PRIOR SEQ = SEQ - 1                                           
   AND PRIOR RACE_NO = RACE_NO AND RANK = RANK                           
 )BB , (SELECT LEVEL LEV FROM DUAL CONNECT BY LEVEL <=2 ) DU
 #String#003#String#2012#String#17#String#1#String#2012#String#17#
>
[I][UbiData][2012-06-07 19:15:42]	- Row size : 2
[I][UbiData][2012-06-07 19:15:42]	- Data
<
0~15R^t인원^t2680^t2455^t3022^t3198^t3442^t2948^t1271^t1987^t1627^t1257^t988^t3289^t1143^t0^t0^t0^t0^t29307^t^n0~15R^t점유율^t8.24^t7.55^t9.3^t9.84^t10.59^t9.07^t3.91^t6.11^t5^t3.87^t3.04^t10.12^t3.52^t0^t0^t0^t0^t90.15^t^n
>
[I][UbiData][2012-06-07 19:15:42][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 19:15:42][DATA QUERY START]
[I][UbiData][2012-06-07 19:15:42]	- sql id : rsm2020_s08
[I][UbiData][2012-06-07 19:15:42]	- Db charset : KSC5601
[I][UbiData][2012-06-07 19:15:42]	- Sql
<
SELECT                                       
       STND_YEAR,  
       TMS,           
       DAY_ORD,   
       SPEC_DESC   
  FROM TBRD_RACE_SPEC_DESC 
  WHERE 1=1
       AND STND_YEAR = ?  
       AND TMS  = ?  
       AND DAY_ORD = ?  
       AND MEET_CD   = ?  
 UNION ALL
 SELECT 
       ' ', 999, 999, ' '
 FROM DUAL          
 ORDER BY TMS
 #String#2012#String#17#String#1#String#003#
>
[I][UbiData][2012-06-07 19:15:42]	- Row size : 1
[I][UbiData][2012-06-07 19:15:42]	- Data
<
 ^t999^t999^t ^t^n
>
[I][UbiData][2012-06-07 19:15:42][DATA QUERY END]
--------------------------------------------------------------------------------


[I][UbiForm][2012-06-07 19:15:53][REQUEST FILE]
[I][UbiForm][2012-06-07 19:15:53]	- Report : /web/waspage/usrbm/report/rsm/rsm2020.jrf
[I][UbiForm][2012-06-07 19:15:53]	- Common : /web/waspage/usrbm/report/rsm/property/commonitem.xml [Not found]
--------------------------------------------------------------------------------


[I][UbiData][2012-06-07 19:15:53][REQUEST FILE]
[I][UbiData][2012-06-07 19:15:53]	- Report : rsm2020.jrf
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 19:15:53][DB CONNECT]
[I][UbiData][2012-06-07 19:15:53]	- Type : nonlookup
[I][UbiData][2012-06-07 19:15:53]	- Db id : rbm
[I][UbiData][2012-06-07 19:15:53]	- Sql id : rsm2020_s06Today
[I][UbiData][2012-06-07 19:15:53]	- Datasource : jdbc/RBM
[I][UbiData][2012-06-07 19:15:53]	- Status : Success
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 19:15:53][DATA QUERY START]
[I][UbiData][2012-06-07 19:15:53]	- sql id : rsm2020_s06Today
[I][UbiData][2012-06-07 19:15:53]	- Db charset : KSC5601
[I][UbiData][2012-06-07 19:15:53]	- Sql
<
WITH J 
 AS
 (SELECT    
         '전회' AS COL_DESC  
     , tms                                                                                       
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='12' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_02    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='16' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_06    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='22'  THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_12    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='20' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_10    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='23' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_13    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='24' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_14    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='13' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_03    
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='25'  THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_15    
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='19' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_09    
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='14' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_05    
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='26' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_16    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='27' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_17    
     , SUM(                                                                              
           CASE                                                                          
              WHEN COMM_NO='06'  THEN NVL(DIV_TOTAL, 0)                                  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_01_06_01    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='28' THEN NVL(DIV_TOTAL, 0) 
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_01_07_18    
         , SUM(                                                                              
               CASE                                                                          
                  WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_04_07_01    
         , SUM(                                                                              
               CASE                                                                          
                  WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='02' THEN NVL(DIV_TOTAL, 0)  
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_04_07_02    
        , SUM(                                                                              
               CASE                                                                          
                  WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='03' THEN NVL(DIV_TOTAL, 0)  
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_04_07_03    
         , SUM(                                                                              
               CASE                                                                          
                  WHEN SELL_CD='02' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_02_07_01    
 
         , SUM(                                                                              
               CASE                                                                          
                  WHEN COMM_NO NOT IN ('01','02','03','04','08') THEN NVL(DIV_TOTAL, 0)                         
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_JIJUM    
         , SUM(DIV_TOTAL)/100 DIV_TOTAL                                                             
  FROM   TBES_SDL_DT_SUM                                                                         
  WHERE  1=1                                                                                    
    AND STND_YEAR  = ?                                                            
    AND MEET_CD    = ?                                                        
    AND TMS        BETWEEN ?  - 1 AND ? 
    AND DAY_ORD    = ? 
  GROUP BY TMS 
 )
 SELECT  DECODE(TMS, ? , '합계','전회') COL_DESC
        , TMS
        ,'1' AS GUBN
        ,DIV_01_07_02 
        ,DIV_01_07_06 
        ,DIV_01_07_12 
        ,DIV_01_07_10 
        ,DIV_01_07_13 
        ,DIV_01_07_14 
        ,DIV_01_07_03 
        ,DIV_01_07_15 
        ,DIV_01_07_09 
        ,DIV_01_07_05 
        ,DIV_01_07_16 
        ,DIV_01_07_17 
        ,DIV_01_06_01 
        ,DIV_01_07_18 
        ,DIV_04_07_01 
        ,DIV_04_07_02 
        ,DIV_04_07_03 
        ,DIV_02_07_01
        ,DIV_JIJUM
        ,1
 FROM J
 UNION ALL
 SELECT '점유율'
       , TMS
       , '2'
       , ROUND(DIV_01_07_02 / DIV_TOTAL * 100, 2) 
       , ROUND(DIV_01_07_06 / DIV_TOTAL * 100, 2)   
       , ROUND(DIV_01_07_12 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_10 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_13 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_14 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_03 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_15 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_09 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_05 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_16 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_17 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_06_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_18 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_02 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_03 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_02_07_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_JIJUM / DIV_TOTAL * 100, 2)    
       , 100
 FROM J
 WHERE tms = ? 
 UNION ALL
 SELECT '전회차'
       , TMS
       , '2'
       , ROUND(DIV_01_07_02 / DIV_TOTAL * 100, 2) 
       , ROUND(DIV_01_07_06 / DIV_TOTAL * 100, 2)   
       , ROUND(DIV_01_07_12 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_10 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_13 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_14 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_03 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_15 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_09 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_05 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_16 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_17 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_06_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_18 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_02 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_03 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_02_07_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_JIJUM / DIV_TOTAL * 100, 2)    
       , 100
 FROM J
 WHERE TMS = ?  -1
 ORDER BY 3, 2 DESC
 #String#2012#String#003#String#17#String#17#String#1#String#17#String#17#String#17#
>
[I][UbiData][2012-06-07 19:15:53]	- Row size : 4
[I][UbiData][2012-06-07 19:15:53]	- Data
<
합계^t17^t1^t5759243^t6768872^t3464367^t4581356^t3964638^t6685253^t3899352^t3606854^t6970537^t6270105^t3005424^t6179547^t172346^t2917226^t1910858^t2796109^t0^t0^t68952087^t1^t^n전회^t16^t1^t5110145^t6625240^t3652284^t4516474^t4532647^t6596680^t4323166^t3600994^t7080707^t6011354^t3246328^t5786326^t150613^t2709578^t1871131^t2728615^t0^t0^t68542282^t1^t^n점유율^t17^t2^t7.06^t8.29^t4.25^t5.61^t4.86^t8.19^t4.78^t4.42^t8.54^t7.68^t3.68^t7.57^t.21^t3.57^t2.34^t3.43^t0^t0^t84.5^t100^t^n전회차^t16^t2^t6.31^t8.17^t4.51^t5.57^t5.59^t8.14^t5.33^t4.44^t8.74^t7.42^t4.01^t7.14^t.19^t3.34^t2.31^t3.37^t0^t0^t84.57^t100^t^n
>
[I][UbiData][2012-06-07 19:15:53][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 19:15:53][DATA QUERY START]
[I][UbiData][2012-06-07 19:15:53]	- sql id : rsm2020_s11
[I][UbiData][2012-06-07 19:15:53]	- Db charset : KSC5601
[I][UbiData][2012-06-07 19:15:53]	- Sql
<
SELECT 
         '0~'||BB.RACE_NO||'R' AS RACE_DESC,
         DECODE(LEV,1,'인원','점유율') AS MANA_DESC,
         CASE 
             WHEN LEV='2' AND IN_PRSN_NUM > 0 AND TOT_PRSN_NUM > 0 THEN ROUND(IN_PRSN_NUM / TOT_PRSN_NUM *100,2)    
             ELSE IN_PRSN_NUM
        END AS IN_PRSN_NUM, 
        CASE 
             WHEN LEV='2' AND BRNC_PRSN_NUM > 0 AND TOT_PRSN_NUM > 0 THEN ROUND(BRNC_PRSN_NUM / TOT_PRSN_NUM *100,2)    
             ELSE BRNC_PRSN_NUM
        END AS BRNC_PRSN_NUM, 
        CASE 
             WHEN LEV='2' AND TOT_PRSN_NUM > 0 THEN ROUND(TOT_PRSN_NUM / TOT_PRSN_NUM *100,2)    
             ELSE TOT_PRSN_NUM
        END AS TOT_PRSN_NUM, 
        CASE 
             WHEN LEV='1' THEN B_TOT_PRSN_NUM
        END AS B_TOT_PRSN_NUM, 
        CASE 
             WHEN LEV='1' THEN MINUS_PRSN_NUM
        END AS MINUS_PRSN_NUM, 
        CASE 
 
             WHEN LEV='1' AND TOT_PRSN_NUM>0 AND B_TOT_PRSN_NUM >0 THEN ROUND((TOT_PRSN_NUM - B_TOT_PRSN_NUM) / B_TOT_PRSN_NUM*100,2)
        END AS PER_PRSN_NUM 
 FROM
 (
      SELECT DU.LEV,
             SUM(CASE WHEN R.TMS =DU.TMS AND BRNC_CD = '98' THEN E.ENT_PRSN_NUM END) AS IN_PRSN_NUM,    
              SUM(CASE WHEN R.TMS =DU.TMS AND BRNC_CD <> '98' THEN E.ENT_PRSN_NUM END) AS BRNC_PRSN_NUM,    
              SUM(CASE WHEN R.TMS =DU.TMS THEN E.ENT_PRSN_NUM END) AS TOT_PRSN_NUM,    
              SUM(CASE WHEN R.TMS =DU.B_TMS THEN E.ENT_PRSN_NUM END) AS B_TOT_PRSN_NUM,    
              (SUM(CASE WHEN R.TMS =DU.TMS THEN E.ENT_PRSN_NUM END) - SUM(CASE WHEN R.TMS =DU.B_TMS THEN E.ENT_PRSN_NUM END)) AS MINUS_PRSN_NUM    
                      
          FROM                                                   
              TBRC_STAY_MANA E,    
              TBRK_SPEC_CD C,
              VW_SDL_INFO R,       
              (SELECT LEVEL AS LEV, ?  AS TMS,(?  - 1) AS B_TMS FROM DUAL CONNECT BY LEVEL<=2) DU 
          WHERE  1=1                
            AND E.BRNC_CD    = C.CD
            AND E.RACE_DT    = R.RACE_DAY                 
            AND C.GRP_CD        IN ('018','032')    
            AND R.MEET_CD    = '003'   
            AND R.STND_YEAR    = ?         
            AND R.TMS IN (? , ?  - 1)    
            AND R.DAY_ORD ='2'             
          GROUP BY DU.LEV
 )AA,
 (
     SELECT                                                                   
          MAX(RACE_NO)  AS RACE_NO
       FROM   (                                                                 
                   SELECT                                                       
                            TOR.RACE_NO                                         
                          , TOR.RACE_REG_NO                                     
                          , TOR.RACER_NO                                        
                          , TOR.RANK                                            
                          , TRM.NM_KOR                                          
                          , RANK() OVER (PARTITION BY TOR.RACE_NO               
                                                    , TOR.RANK                  
                                             ORDER BY TOR.RACE_REG_NO) SEQ      
                   FROM     TBEB_ORGAN@MRASYSLINK        TOR                        
                          , TBEC_RACER_MASTER@MRASYSLINK TRM                        
                   WHERE 1=1                                                        
                           
                   AND    TOR.RACER_NO   = TRM.RACER_NO                         
                   AND    TOR.STND_YEAR  = ?         
                   AND    TOR.MBR_CD     = '001'                                
                   AND    TOR.TMS        = ?         
                           
                   AND    TOR.RANK BETWEEN 1                                    
                                       AND 3                                    
              )                                                                 
       START WITH SEQ = 1                                                       
       CONNECT BY PRIOR SEQ = SEQ - 1                                           
       AND PRIOR RACE_NO = RACE_NO AND RANK = RANK     
 )BB
 ORDER BY AA.LEV
 #String#17#String#17#String#2012#String#17#String#17#String#2012#String#17#
>
[I][UbiData][2012-06-07 19:15:53]	- Row size : 2
[I][UbiData][2012-06-07 19:15:53]	- Data
<
0~15R^t인원^t^t^t^t33830^t^t^t^n0~15R^t점유율^t^t^t^t^t^t^t^n
>
[I][UbiData][2012-06-07 19:15:53][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 19:15:53][DATA QUERY START]
[I][UbiData][2012-06-07 19:15:53]	- sql id : rsm2020_s01
[I][UbiData][2012-06-07 19:15:53]	- Db charset : KSC5601
[I][UbiData][2012-06-07 19:15:53]	- Sql
<
SELECT 
           AA.MEET_CD,      
           AA.STND_YEAR,    
           AA.TMS,          
           AA.DAY_ORD,      
           TO_CHAR(TO_DATE(AA.RACE_DAY,'YYYYMMDD'),'YYYY-MM-DD') AS RACE_DAY, 
           AA.RACE_YOIL,    
           TO_CHAR(TO_DATE(AA.RACE_DAY,'YYYYMMDD'),'YYYY')||'년 '||AA.TMS||'회차 '||AA.DAY_ORD||'일차 ('|| TO_CHAR(TO_DATE(AA.RACE_DAY,'YYYYMMDD'),'YYYY-MM-DD')||') 경주 개최 결과'  
           AS RACE_DAY_INFO  
     
       FROM (         
             SELECT                              
             MEET_CD,      
             STND_YEAR,    
             TMS,          
             DAY_ORD,      
             RACE_DAY,     
             RACE_YOIL,    
             DECODE(RACE_YOIL,'MON','월','TUE','화','WED','수','THE','목','FRI','금','SAT','토','SUN','일','일') AS RACE_YOIL_KOR, 
             TO_CHAR(TO_DATE(RACE_DAY,'YYYYMMDD'),'YYYY-MM-DD')||
             ' ('||RACE_YOIL||') '||TMS||'회차 '||DAY_ORD||'일차'  
             AS RACE_INFO  
      FROM                                
             VW_SDL_INFO      
      WHERE  1=1                             
             AND MEET_CD = ?   
            AND STND_YEAR = ?   
            AND TMS= ?     
            AND DAY_ORD = ?        
    )AA
 #String#003#String#2012#String#17#String#1#
>
[I][UbiData][2012-06-07 19:15:53]	- Row size : 1
[I][UbiData][2012-06-07 19:15:53]	- Data
<
003^t2012^t17^t1^t2012-06-07^tTHU^t2012년 17회차 1일차 (2012-06-07) 경주 개최 결과^t^n
>
[I][UbiData][2012-06-07 19:15:53][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 19:15:53][DATA QUERY START]
[I][UbiData][2012-06-07 19:15:53]	- sql id : rsm2020_s05Today
[I][UbiData][2012-06-07 19:15:53]	- Db charset : KSC5601
[I][UbiData][2012-06-07 19:15:53]	- Sql
<
SELECT                                                                                      
       DECODE(GROUPING(RACE_NO),0,RACE_NO,'TOTAL') RACE_NO 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='12' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_02 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='16' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_06 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='22'  THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_12 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='20' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_10 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='23' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_13 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='24' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_14 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='13' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_03 
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='25'  THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_15 
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='19' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_09 
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='14' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_05 
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='26' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_16 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='27' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_17 
     , SUM(                                                                              
           CASE                                                                          
              WHEN COMM_NO='06'  THEN NVL(DIV_TOTAL, 0)                                  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_01_06_01 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='28' THEN NVL(DIV_TOTAL, 0) 
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_01_07_18 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_04_07_01 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='02' THEN NVL(DIV_TOTAL, 0)  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_04_07_02 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='03' THEN NVL(DIV_TOTAL, 0)  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_04_07_03    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='02' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_02_07_01 
     , SUM(                                                                              
           CASE                                                                          
              WHEN  COMM_NO NOT IN ('01','02','03','04','08') THEN NVL(DIV_TOTAL, 0)                         
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_JIJUM  
 
     , SUM(DIV_TOTAL)/100 DIV_TOTAL                                                          
 FROM   TBES_SDL_DT                                                                         
 WHERE   1=1                                                                                   
      AND STND_YEAR  = ?                                                             
      AND    MEET_CD    = ?                                                        
      AND    TMS        = ?                                                            
      AND    DAY_ORD    = ?                                                        
 
 GROUP BY RACE_NO                                                                                   
       
 ORDER BY RACE_NO
 #String#2012#String#003#String#17#String#1#
>
[I][UbiData][2012-06-07 19:15:53]	- Row size : 15
[I][UbiData][2012-06-07 19:15:53]	- Data
<
01^t140920^t197602^t96849^t127436^t119903^t187379^t128299^t116374^t219027^t183487^t108516^t160073^t7355^t93039^t59949^t93886^t0^t0^t2040094^t2396211^t^n02^t191278^t267508^t123529^t187360^t147399^t249704^t155747^t145620^t287810^t240820^t134529^t231415^t9365^t106436^t78894^t112202^t0^t0^t2669616^t3119757^t^n03^t218916^t312291^t160473^t214643^t185000^t303210^t189537^t171252^t321899^t281904^t151802^t275390^t11275^t162159^t84773^t131614^t0^t0^t3176138^t3739571^t^n04^t280723^t349162^t162668^t220723^t205104^t363694^t198947^t193854^t366506^t314797^t163251^t307239^t11636^t153198^t99509^t147397^t0^t0^t3538408^t4222315^t^n05^t293914^t356666^t179380^t247835^t236853^t376743^t193986^t198487^t385927^t363196^t170821^t362879^t10456^t178289^t114597^t157145^t0^t0^t3827174^t4600038^t^n06^t320577^t410766^t191760^t262742^t239275^t397830^t224139^t213663^t422296^t374549^t185676^t384443^t13418^t167359^t119122^t168329^t0^t0^t4095944^t4848817^t^n07^t373535^t432760^t204667^t303599^t258807^t408985^t246625^t214315^t457794^t408705^t182639^t417527^t12501^t187942^t128436^t184125^t0^t0^t4422962^t5262700^t^n08^t401087^t454010^t227928^t317354^t270820^t432896^t260257^t226171^t475649^t433911^t198906^t420465^t13274^t209941^t132238^t183879^t0^t0^t4658786^t5538248^t^n09^t437100^t484053^t233189^t323376^t300022^t463847^t282180^t288344^t503532^t460256^t213710^t426704^t12038^t218223^t137100^t184059^t0^t0^t4967733^t5873616^t^n10^t470862^t541950^t272328^t368669^t328440^t540666^t313885^t273198^t534426^t520280^t238905^t480109^t11995^t217489^t148525^t221558^t0^t0^t5483285^t6538531^t^n11^t466591^t561617^t317067^t365940^t318869^t591737^t323108^t316413^t577350^t534047^t224160^t502776^t13236^t222034^t156791^t213870^t0^t0^t5705606^t6735069^t^n12^t517154^t573936^t314455^t371388^t339082^t549091^t330869^t298274^t572163^t534089^t257848^t538886^t9827^t224241^t153182^t226909^t0^t0^t5811394^t6964681^t^n13^t526295^t583973^t330714^t397538^t324448^t593547^t335641^t314764^t598821^t528560^t248840^t537767^t13014^t243974^t168937^t238429^t0^t0^t5985262^t7085157^t^n14^t544820^t611235^t322648^t422943^t330535^t594065^t339607^t303922^t617748^t541795^t257654^t539796^t11784^t260972^t158394^t255072^t0^t0^t6112990^t7164971^t^n15^t575471^t631343^t326712^t449810^t360081^t631859^t376525^t332203^t629589^t549709^t268167^t594078^t11172^t271930^t170411^t277635^t0^t0^t6456695^t7513552^t^n
>
[I][UbiData][2012-06-07 19:15:53][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 19:15:53][DATA QUERY START]
[I][UbiData][2012-06-07 19:15:53]	- sql id : rsm2020_s03Today
[I][UbiData][2012-06-07 19:15:53]	- Db charset : KSC5601
[I][UbiData][2012-06-07 19:15:53]	- Sql
<
SELECT                                                                                    
      Z.RACE_NO, 
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          FC_GET_RSLT_RANK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO)                
      END RSLT_RANK, 
      R.RANK_1,  
      R.RANK_2,  
      R.RANK_3,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '001', NULL) 
      END WIN,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '002', '1')  
      END PLC,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '002', '2')  
      END PLC2,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '004', NULL) 
      END EX,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '005', NULL) 
      END QU,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '006', NULL) 
      END TRI,  
      D.BONJANG_TOTAL, 
      D.JIJUM_TOTAL,  
      C.DIV_TOTAL,  
      NVL(D.REFUND,0) REFUND, 
      NVL(B.B_DIV_TOTAL,0) AS B_DIV_TOTAL,    
      NVL((C.DIV_TOTAL-B.B_DIV_TOTAL),0) AS PLUS_MINUS, 
      CASE                                                                                  
          WHEN B.B_DIV_TOTAL<>0 THEN                                                        
          ROUND((C.DIV_TOTAL-B.B_DIV_TOTAL)/B.B_DIV_TOTAL*100,2)                            
          ELSE 0                                                                            
      END RATE,   
      SAME_PAYOFF_TOTAL,  
      SAME_PAYOFF_001, 
   SAME_PAYOFF_002, 
   SAME_PAYOFF_004, 
   SAME_PAYOFF_005, 
   SAME_PAYOFF_006 
  FROM   
   
      (   
                                                                 
          SELECT                                                                            
                D.MEET_CD,                                                                   
                D.STND_YEAR,                                                                 
                D.TMS,                                                                       
                D.DAY_ORD,                                                                   
                DECODE(D.RACE_NO,NULL,'TOTAL',D.RACE_NO) RACE_NO,                              
                SUM(                                                                        
                    CASE                                                                    
                      WHEN D.SELL_CD='03' THEN D.DIV_TOTAL                                    
                      ELSE 0                                                                
                    END                                                                     
                ) BONJANG_TOTAL,                                                            
                SUM(                                                                        
                    CASE                                                                    
                      WHEN D.SELL_CD !='03' THEN D.DIV_TOTAL                                     
                    END                                                                     
                ) JIJUM_TOTAL,                                                              
                SUM(D.REFUND) REFUND                                                         
          FROM   TBES_SDL_DT D                                                              
          WHERE 1=1                                                                             
              AND D.STND_YEAR(+)  = ? 
              AND D.MEET_CD(+)    = ? 
              AND D.TMS(+)        = ? 
              AND D.DAY_ORD(+)    = ? 
          GROUP BY                                                                          
                D.MEET_CD,                                                                   
                D.STND_YEAR,                                                                 
                D.TMS,                                                                       
                D.DAY_ORD,                                                                   
                ROLLUP(D.RACE_NO)                                                           
      ) D,                                                                                  
      (                                                                                     
         SELECT                                                                             
            P.MEET_CD,                                                                      
            P.STND_YEAR,                                                                    
            P.TMS,                                                                          
            P.DAY_ORD,                                                                      
            DECODE(P.RACE_NO,NULL,'TOTAL',P.RACE_NO) RACE_NO,                               
            SUM(POOL_TOTAL) DIV_TOTAL                                                       
         FROM                                                                               
             TBES_SDL_PT P                                                                  
         WHERE 1=1                                                                              
             AND P.STND_YEAR  = ? 
             AND P.MEET_CD    = ? 
             AND P.TMS        = ? 
             AND P.DAY_ORD    = ? 
         GROUP BY                                                                           
            P.MEET_CD,                                                                      
            P.STND_YEAR,                                                                    
            P.TMS,                                                                          
            P.DAY_ORD,                                                                      
            ROLLUP(P.RACE_NO)                                                               
      ) C,                                                                                  
      (                                                                                     
          SELECT                                                                            
                DECODE(RACE_NO,NULL,'TOTAL',RACE_NO) RACE_NO,                               
                SUM(DIV_TOTAL) B_DIV_TOTAL                                                  
          FROM   TBES_SDL_DT                                                                
          WHERE 1=1                                                                            
              AND  STND_YEAR  = ? 
              AND    MEET_CD    = ? 
              AND    TMS        = ?  -1                                                    
              AND    DAY_ORD    = ? 
          GROUP BY                                                                          
                ROLLUP(RACE_NO)                                                             
      ) B,                                                                                  
      (                                                                                     
          SELECT                                                                            
                RACE_NO                                                                     
              , MIN(DECODE(RANK, '1', NM_KOR)) RANK_1                                       
              , MIN(DECODE(RANK, '2', NM_KOR)) RANK_2                                       
              , MIN(DECODE(RANK, '3', NM_KOR)) RANK_3                                       
          FROM   (                                                                          
                   SELECT                                                                   
                            RACE_NO                                                         
                          , RANK                                                            
                          , SUBSTR(MAX(SYS_CONNECT_BY_PATH (NM_KOR, '/')), 2) NM_KOR        
                   FROM   (                                                                 
                               SELECT                                                       
                                        TOR.RACE_NO                                         
                                      , TOR.RACE_REG_NO                                     
                                      , TOR.RACER_NO                                        
                                      , TOR.RANK                                            
                                      , TRM.NM_KOR                                          
                                      , RANK() OVER (PARTITION BY TOR.RACE_NO               
                                                                , TOR.RANK                  
                                                         ORDER BY TOR.RACE_REG_NO) SEQ      
                               FROM     TBEB_ORGAN@MRASYSLINK        TOR                        
                                      , TBEC_RACER_MASTER@MRASYSLINK TRM                        
                               WHERE 1=1                
                               AND    TOR.RACER_NO   = TRM.RACER_NO                         
                               AND    TOR.STND_YEAR  = ? 
                               AND    TOR.MBR_CD     = '001'                                
                               AND    TOR.TMS        = ? 
                               AND    TOR.DAY_ORD    = ? 
                               AND    TOR.RANK BETWEEN 1                                    
                                                   AND 3                                    
                          )                                                                 
                   START WITH SEQ = 1                                                       
                   CONNECT BY PRIOR SEQ = SEQ - 1                                           
                   AND PRIOR RACE_NO = RACE_NO AND RANK = RANK                              
                   GROUP BY                                                                 
                            RACE_NO                                                         
                          , RANK                                                            
               )                                                                            
          GROUP BY RACE_NO                                                                  
          UNION ALL                                                                         
          SELECT 'TOTAL', '', '', '' FROM DUAL                                              
      ) R, 
      (   
     
       SELECT                                                                         
          RACE_NO,
            SUM(CASE 
                     WHEN POOL_CD = '001' AND RS_SEQ >= '2' THEN PAYOFF 
                     WHEN POOL_CD = '002' AND RS_SEQ >= '3' THEN PAYOFF 
                     WHEN POOL_CD = '004' AND RS_SEQ >= '2' THEN PAYOFF 
                     WHEN POOL_CD = '005' AND RS_SEQ >= '2' THEN PAYOFF 
                     WHEN POOL_CD = '006' AND RS_SEQ >= '2' THEN PAYOFF 
            END) AS SAME_PAYOFF_TOTAL, 
                               
            SUM(CASE WHEN POOL_CD = '001' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_001, 
            SUM(CASE WHEN POOL_CD = '002' AND RS_SEQ >= '3' THEN PAYOFF END) AS SAME_PAYOFF_002, 
            SUM(CASE WHEN POOL_CD = '004' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_004, 
            SUM(CASE WHEN POOL_CD = '005' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_005, 
            SUM(CASE WHEN POOL_CD = '006' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_006 
      FROM TBES_SDL_RS                                                                
      WHERE 1=1                                                                          
          AND MEET_CD  = '003'                                                              
          AND STND_YEAR = ?      
          AND TMS   = ?      
          AND DAY_ORD  = ?      
      GROUP BY          
       RACE_NO                                                              
 
   ) E,                                                                                  
  (                                       
    SELECT DISTINCT RACE_NO           
    FROM TBEB_RACE_DOC@MRASYSLINK D        
      WHERE 1=1                          
          AND D.STND_YEAR= ? 
          AND D.TMS=? 
           AND D.DAY_ORD=? 
 
   ) Z                                   
  WHERE 1=1                                                                                    
      AND C.RACE_NO(+)=Z.RACE_NO                                                                
      AND B.RACE_NO(+)=Z.RACE_NO                                                            
      AND R.RACE_NO(+)=Z.RACE_NO                                                            
      AND D.RACE_NO(+)=Z.RACE_NO
      AND E.RACE_NO(+)=Z.RACE_NO                                                            
  ORDER BY Z.RACE_NO
 #String#2012#String#003#String#17#String#1#String#2012#String#003#String#17#String#1#String#2012#String#003#String#17#String#1#String#2012#String#17#String#1#String#2012#String#17#String#1#String#2012#String#17#String#1#
>
[I][UbiData][2012-06-07 19:15:53]	- Row size : 15
[I][UbiData][2012-06-07 19:15:53]	- Data
<
01^t3-5-6^t윤영근^t배혜민^t박광혁^t4.9^t1.5^t2.5^t15.2^t9.6^t12.6^t35611700^t204009400^t239621100^t0^t241173800^t-1552700^t-.64^t^t^t^t^t^t^t^n02^t2-1-6^t사재준^t김민길^t이주영^t1.3^t1^t2.3^t5^t3.6^t8.6^t45014100^t266961600^t311975700^t0^t306515100^t5460600^t1.78^t^t^t^t^t^t^t^n03^t5-1-3^t심상철^t최재원^t서지혜^t2.6^t1.2^t1.5^t4.1^t2^t1.8^t56343300^t317613800^t373957100^t0^t367015400^t6941700^t1.89^t^t^t^t^t^t^t^n04^t3-6-4^t정인교^t유해광^t진석현^t3.5^t1.4^t3.7^t17.9^t13.6^t6.7^t68390700^t353840800^t422231500^t0^t425410100^t-3178600^t-.75^t^t^t^t^t^t^t^n05^t6-5-1^t이승일^t강창효^t이종우^t7.8^t2.7^t4^t58.7^t25^t32.3^t77286400^t382717400^t460003800^t0^t479149900^t-19146100^t-4^t^t^t^t^t^t^t^n06^t1-4-6^t이지수^t서화모^t오승철^t2.1^t1.2^t1.5^t5.1^t2.8^t23.3^t75287300^t409594400^t484881700^t0^t469081700^t15800000^t3.37^t^t^t^t^t^t^t^n07^t6-2-1^t황이태^t민영건^t배혜민^t21.1^t7.4^t3.4^t84.1^t48^t14.6^t83973800^t442296200^t526270000^t0^t515496200^t10773800^t2.09^t^t^t^t^t^t^t^n08^t4-1-6^t신동길^t우진수^t구현구^t1.5^t1.2^t2^t5^t3^t6.1^t87946200^t465878600^t553824800^t0^t556565300^t-2740500^t-.49^t^t^t^t^t^t^t^n09^t2-4-1^t김정구^t손동민^t이흥우^t1.7^t1.2^t1.9^t4.5^t3.2^t3.3^t90588300^t496773300^t587361600^t0^t548482300^t38879300^t7.09^t^t^t^t^t^t^t^n10^t1-6-5^t김영욱^t사재준^t윤영근^t1.9^t1.3^t1.5^t4.4^t2.6^t3.6^t105524600^t548328500^t653853100^t0^t669189800^t-15336700^t-2.29^t^t^t^t^t^t^t^n11^t1-4-2^t심상철^t김민길^t박광혁^t1.8^t1.3^t3.6^t11.9^t8.6^t7.4^t102946300^t570560600^t673506900^t0^t707765400^t-34258500^t-4.84^t^t^t^t^t^t^t^n12^t1-4-6^t경상수^t김선필^t최재원^t2.4^t1.4^t8.3^t30.6^t24.2^t21.1^t115328700^t581139400^t696468100^t0^t682622600^t13845500^t2.03^t^t^t^t^t^t^t^n13^t5-3-1^t김효년^t문주엽^t주은석^t6^t2.3^t1.3^t14.7^t6.5^t3.3^t109989500^t598526200^t708515700^t0^t702342900^t6172800^t.88^t^t^t^t^t^t^t^n14^t2-4-3^t구현구^t장영태^t강창효^t1.7^t1.5^t1.7^t5.2^t3.7^t4.2^t105198100^t611299000^t716497100^t0^t698218300^t18278800^t2.62^t^t^t^t^t^t^t^n15^t3-5-1^t이태희^t어선규^t유해광^t2.2^t1.3^t1.5^t4^t2.5^t2.4^t105685700^t645669500^t751355200^t0^t735842100^t15513100^t2.11^t^t^t^t^t^t^t^n
>
[I][UbiData][2012-06-07 19:15:53][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 19:15:53][DATA QUERY START]
[I][UbiData][2012-06-07 19:15:53]	- sql id : rsm2020_s02Today
[I][UbiData][2012-06-07 19:15:53]	- Db charset : KSC5601
[I][UbiData][2012-06-07 19:15:53]	- Sql
<
SELECT                                                                                          
           MST.GBN       
         , YEAR.DIV_TOTAL AS YEAR_TOTAL 
         , YEAR.REFUND    AS YEAR_REFUND 
         , TMS.D_1 
         , TMS.D_2   
         , TMS.D_3   
         , TMS.D_4   
         , TMS.D_5   
         , TMS.D_6   
         , TMS.D_7   
         , TMS.TOTAL 
         , PRE.TOTAL AS PRE_TOTAL 
         , NVL(TMS.TOTAL, 0) - NVL(PRE .TOTAL, 0) ADD_POOL 
         , CASE WHEN (NVL(PRE.TOTAL, 0) = 0) AND (NVL(TMS.TOTAL, 0) = 0) THEN 0                  
                WHEN NVL(PRE.TOTAL, 0) = 0                               THEN 100                
                WHEN NVL(TMS.TOTAL, 0) = 0                                THEN -100              
                ELSE ROUND((NVL(TMS.TOTAL, 0) - NVL(PRE.TOTAL, 0)) / NVL(PRE.TOTAL, 0) * 100, 2) 
           END ADD_RATE 
  FROM                                                                                           
           (                                                                                     
              SELECT                                                                             
                       ?  STND_YEAR                                                      
                     , '매출총액' GBN                                                            
              FROM   DUAL                                                                        
           ) MST                                                                                 
         , (                                                                                     
              SELECT                                                                             
                       TMS.STND_YEAR                                                             
                     , MIN(DECODE(TMS.D, 1, TMS.AMOUNT)) D_1                                     
                     , MIN(DECODE(TMS.D, 2, TMS.AMOUNT)) D_2                                     
                     , MIN(DECODE(TMS.D, 3, TMS.AMOUNT)) D_3                                     
                     , MIN(DECODE(TMS.D, 4, TMS.AMOUNT)) D_4                                     
                     , MIN(DECODE(TMS.D, 5, TMS.AMOUNT)) D_5                                     
                     , MIN(DECODE(TMS.D, 6, TMS.AMOUNT)) D_6                                     
                     , MIN(DECODE(TMS.D, 7, TMS.AMOUNT)) D_7                                     
                     , SUM(TMS.AMOUNT)                   TOTAL                                   
              FROM   (                                                                           
                          SELECT                                                                 
                                   TSP.STND_YEAR                                                 
                                 , TO_CHAR(TO_DATE(INFO.RACE_DAY, 'YYYYMMDD'), 'D') D            
                                 , SUM(TSP.POOL_TOTAL) AMOUNT                                    
                          FROM     VW_SDL_INFO INFO                                              
                                 , TBES_SDL_PT       TSP                                         
                          WHERE  1=1
                          AND    INFO.STND_YEAR = TSP.STND_YEAR                                  
                          AND    INFO.MEET_CD    = TSP.MEET_CD                                   
                          AND    INFO.TMS       = TSP.TMS                                        
                          AND    INFO.DAY_ORD   = TSP.DAY_ORD                                    
                          AND    TSP.STND_YEAR  = ?   
                          AND    TSP.MEET_CD    = ?       
                          AND    TSP.TMS        = ?       
                          GROUP BY                                                               
                                   TSP.STND_YEAR                                                 
                                 , INFO.RACE_DAY                                                 
                     ) TMS                                                                       
              GROUP BY TMS.STND_YEAR                                                             
           ) TMS                                                                                 
         , (                                                                                     
              SELECT                                                                             
                       STND_YEAR                                                                 
                     , SUM(TSP.DIV_TOTAL) DIV_TOTAL                                              
                     , SUM(TSP.REFUND    ) REFUND                                                
              FROM   TBES_SDL_DT_SUM       TSP                                                       
              WHERE  TSP.STND_YEAR  = ?                                                  
              AND    TSP.MEET_CD    = ?                                                    
              AND    TSP.TMS       <= ?                                                        
              GROUP BY                                                                           
                       STND_YEAR                                                                 
           ) YEAR                                                                                
         , (                                                                                     
              SELECT                                                                             
                       STND_YEAR                                                                 
                     , TMS                                                                       
                     , NVL(SUM(TSP.POOL_TOTAL), 0)  TOTAL                                        
              FROM   TBES_SDL_PT       TSP                                                       
              WHERE  1=1
              AND TSP.STND_YEAR  = ? 
              AND    TSP.MEET_CD    = ?                                                    
              AND    TSP.TMS        = ?  - 1                                                   
              GROUP BY                                                                           
                       STND_YEAR                                                                 
                     , TMS                                                                       
           ) PRE                                                                                 
  WHERE  1=1
  AND   MST.STND_YEAR = TMS .STND_YEAR(+)                                                       
  AND    MST.STND_YEAR = YEAR.STND_YEAR(+)                                                       
  AND    MST.STND_YEAR = PRE .STND_YEAR(+)                                                       
  UNION ALL                                                                                      
  SELECT                                                                                         
           MST.GBN                                                                               
         , YEAR.DIV_TOTAL                   YEAR_TOTAL                                           
         , YEAR.REFUND                      YEAR_REFUND                                          
         , TMS.D_1                                                                               
         , TMS.D_2                                                                               
         , TMS.D_3                                                                               
         , TMS.D_4                                                                               
         , TMS.D_5                                                                               
         , TMS.D_6                                                                               
         , TMS.D_7                                                                               
         , TMS.TOTAL                                                                             
         , 0 PRE_TOTAL                                                                           
         , NVL(PRE .TOTAL, 0) - NVL(TMS.TOTAL, 0) ADD_POOL                                       
         , CASE WHEN (NVL(PRE.TOTAL, 0) = 0) AND (NVL(TMS.TOTAL, 0) = 0) THEN 0                  
                WHEN NVL(PRE.TOTAL, 0) = 0                               THEN -100               
                WHEN NVL(TMS.TOTAL, 0) = 0                                THEN 100               
                ELSE ROUND((NVL(PRE.TOTAL, 0) - NVL(TMS.TOTAL, 0)) / NVL(TMS.TOTAL, 0) * 100, 2) 
           END ADD_RATE                                                                          
  FROM                                                                                           
           (                                                                                     
              SELECT                                                                             
                       ?  -1 STND_YEAR                                                    
                     , '전년대비' GBN                                                            
              FROM   DUAL                                                                        
           ) MST                                                                                 
         , (                                                                                     
              SELECT                                                                             
                       TMS.STND_YEAR                                                             
                     , MIN(DECODE(TMS.D, 1, TMS.AMOUNT)) D_1                                     
                     , MIN(DECODE(TMS.D, 2, TMS.AMOUNT)) D_2                                     
                     , MIN(DECODE(TMS.D, 3, TMS.AMOUNT)) D_3                                     
                     , MIN(DECODE(TMS.D, 4, TMS.AMOUNT)) D_4                                     
                     , MIN(DECODE(TMS.D, 5, TMS.AMOUNT)) D_5                                     
                     , MIN(DECODE(TMS.D, 6, TMS.AMOUNT)) D_6                                     
                     , MIN(DECODE(TMS.D, 7, TMS.AMOUNT)) D_7                                     
                     , SUM(TMS.AMOUNT)                   TOTAL                                   
              FROM   (                                                                           
                          SELECT                                                                 
                                   TSP.STND_YEAR                                                 
                                 , TO_CHAR(TO_DATE(INFO.RACE_DAY, 'YYYYMMDD'), 'D') D            
                                 , SUM(TSP.POOL_TOTAL) AMOUNT                                    
                          FROM     VW_SDL_INFO INFO                                              
                                 , TBES_SDL_PT       TSP                                         
                          WHERE  1=1
                          AND  INFO.STND_YEAR = TSP.STND_YEAR                                  
                          AND    INFO.MEET_CD    = TSP.MEET_CD                                   
                          AND    INFO.TMS       = TSP.TMS                                        
                          AND    INFO.DAY_ORD   = TSP.DAY_ORD                                    
                          AND    TSP.STND_YEAR  =  ?  -1                                   
                          AND    TSP.MEET_CD    = ?                                        
                          AND    TSP.TMS        = ?                                            
                          GROUP BY                                                               
                                   TSP.STND_YEAR                                                 
                                 , INFO.RACE_DAY                                                 
                     ) TMS                                                                       
              GROUP BY TMS.STND_YEAR                                                             
           ) TMS                                                                                 
         , (                                                                                     
              SELECT                                                                             
                       STND_YEAR                                                                 
                     , SUM(TSP.DIV_TOTAL) DIV_TOTAL                                              
                     , SUM(TSP.REFUND    ) REFUND                                                
              FROM   TBES_SDL_DT_SUM       TSP                                                       
              WHERE  1=1
              AND TSP.STND_YEAR  = ?  -1                                               
              AND    TSP.MEET_CD    = ?                                                    
              AND    TSP.TMS       <= ?                                                        
              GROUP BY                                                                           
                       STND_YEAR                                                                 
           ) YEAR                                                                                
         , (                                                                                     
              SELECT                                                                             
                       STND_YEAR-1 STND_YEAR                                                     
                     , TMS                                                                       
                     , NVL(SUM(TSP.POOL_TOTAL), 0)  TOTAL                                        
              FROM   TBES_SDL_PT       TSP                                                       
              WHERE  1=1
              AND TSP.STND_YEAR  = ?                                                  
              AND    TSP.MEET_CD    = ?                                                    
              AND    TSP.TMS        = ?                                                        
              GROUP BY                                                                           
                       STND_YEAR                                                                 
                     , TMS                                                                       
           ) PRE                                                                                 
  WHERE  1=1
  AND MST.STND_YEAR = TMS.STND_YEAR(+)                                                        
  AND    MST.STND_YEAR = YEAR.STND_YEAR(+)                                                       
  AND    MST.STND_YEAR = PRE.STND_YEAR(+)
 #String#2012#String#2012#String#003#String#17#String#2012#String#003#String#17#String#2012#String#003#String#17#String#2012#String#2012#String#003#String#17#String#2012#String#003#String#17#String#2012#String#003#String#17#
>
[I][UbiData][2012-06-07 19:15:53]	- Row size : 2
[I][UbiData][2012-06-07 19:15:53]	- Data
<
매출총액^t255807593000^t4674302200^t^t^t^t^t8160323400^t^t^t8160323400^t16874921600^t-8714598200^t-51.64^t^n전년대비^t298819077500^t5513386200^t^t^t^t8970408300^t10464906900^t^t^t19435315200^t0^t-11274991800^t-58.01^t^n
>
[I][UbiData][2012-06-07 19:15:53][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 19:15:53][DATA QUERY START]
[I][UbiData][2012-06-07 19:15:53]	- sql id : rsm2020_s04
[I][UbiData][2012-06-07 19:15:53]	- Db charset : KSC5601
[I][UbiData][2012-06-07 19:15:53]	- Sql
<
SELECT 
   ROW_ORDER,
   MANA_DESC, 
   TOTAL        
        ,SUN_NUM     
        ,TUE_NUM     
        ,WEN_NUM     
        ,THU_NUM     
        ,TOT_PRSN_NUM,    
        
        B_TOT_PRSN_NUM,          
        
        CASE 
              WHEN ROW_ORDER='2' THEN N_TOT_PRSN_NUM - TOT_PRSN_NUM
              ELSE PRSN_NUM_MINUS
        END PRSN_NUM_MINUS,          
        
        ROUND(CASE 
              WHEN ROW_ORDER='2' THEN (N_TOT_PRSN_NUM - TOT_PRSN_NUM)/TOT_PRSN_NUM*100
              ELSE PER
        END,2) AS PER             
  FROM
 (
  
  SELECT '1' AS ROW_ORDER,
    '입장인원' AS MANA_DESC,
     A.TMS                                                               
        ,TOT_PRSN_NUM                     
        ,MON_NUM 
              ,TUE_NUM 
              ,WEN_NUM 
              ,THU_NUM 
              ,FRI_NUM 
              ,SAT_NUM 
              ,SUN_NUM 
              ,B_TOT_PRSN_NUM
              ,(TOT_PRSN_NUM-B_TOT_PRSN_NUM) AS PRSN_NUM_MINUS
              ,DECODE(B_TOT_PRSN_NUM,0,0,(TOT_PRSN_NUM-B_TOT_PRSN_NUM)/B_TOT_PRSN_NUM*100)  AS PER
              ,TOTAL          
  
    FROM
    
    
    (
    
     SELECT   MAX(TMS) TMS
           ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
           ,NVL(SUM(A.ENT_PRSN_NUM ),0)         TOT_PRSN_NUM                                                      
           
          
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'2', A.ENT_PRSN_NUM,0 )) ,0) MON_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'3', A.ENT_PRSN_NUM,0 )) ,0) TUE_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'4', A.ENT_PRSN_NUM,0 )) ,0) WEN_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'5', A.ENT_PRSN_NUM,0 )) ,0) THU_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'6', A.ENT_PRSN_NUM,0 )) ,0) FRI_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'7', A.ENT_PRSN_NUM,0 )) ,0) SAT_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'1', A.ENT_PRSN_NUM,0 )) ,0) SUN_NUM       
    
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) =  ?  
                AND MEET_CD = ?   
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE 1=1
             AND STND_YEAR = ?  
                AND MEET_CD = ? 
                AND TMS  = ?  
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    GROUP BY B.TMS
    ) A,
    
    
    (
    
     SELECT   
            MAX(TMS) TMS
           ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
           ,NVL(SUM(A.ENT_PRSN_NUM ),0)         B_TOT_PRSN_NUM  
           
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) =  ?  
                AND MEET_CD = ?    
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE 1=1
             AND STND_YEAR = ?    
                AND MEET_CD = ? 
                AND TMS  = ?  - 1   
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    GROUP BY B.TMS
    ) B,
    
    (
    
     SELECT NVL(SUM(A.ENT_PRSN_NUM ),0)         TOTAL  
           
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) = ?  
                AND MEET_CD = ?   
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE STND_YEAR = ?  
                AND MEET_CD = ? 
                AND TMS <= ?  
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    )C
  UNION ALL 
  
  
  SELECT '2' AS ROW_ORDER,
    '전년대비' AS MANA_DESC,
     A.TMS                                                               
        ,TOT_PRSN_NUM                     
        ,MON_NUM 
              ,TUE_NUM 
              ,WEN_NUM 
              ,THU_NUM 
              ,FRI_NUM 
              ,SAT_NUM 
              ,SUN_NUM 
              ,B_TOT_PRSN_NUM
              ,(TOT_PRSN_NUM-B_TOT_PRSN_NUM) AS PRSN_NUM_MINUS
              ,DECODE(B_TOT_PRSN_NUM,0,0,(TOT_PRSN_NUM-B_TOT_PRSN_NUM)/B_TOT_PRSN_NUM*100)  AS PER
              ,TOT          
  
    FROM
    
    
    (
    
     SELECT   MAX(TMS) TMS
           ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
           ,NVL(SUM(A.ENT_PRSN_NUM ),0)         TOT_PRSN_NUM                                                      
           
          
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'2', A.ENT_PRSN_NUM,0 )) ,0) MON_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'3', A.ENT_PRSN_NUM,0 )) ,0) TUE_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'4', A.ENT_PRSN_NUM,0 )) ,0) WEN_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'5', A.ENT_PRSN_NUM,0 )) ,0) THU_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'6', A.ENT_PRSN_NUM,0 )) ,0) FRI_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'7', A.ENT_PRSN_NUM,0 )) ,0) SAT_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'1', A.ENT_PRSN_NUM,0 )) ,0) SUN_NUM       
    
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) = ?  - 1  
                AND MEET_CD    = ?   
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE STND_YEAR = ?  - 1  
                AND MEET_CD =?  
                AND TMS  = ?    
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    GROUP BY B.TMS
    ) A,
    
    
    (
    
     SELECT   
            MAX(TMS) TMS
           ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
           ,NVL(SUM(A.ENT_PRSN_NUM ),0)         B_TOT_PRSN_NUM  
           
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) = ?  -1 
                AND MEET_CD = ?     
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE STND_YEAR = ?  - 1  
                AND MEET_CD = ? 
                AND TMS  = ?  - 1  
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    GROUP BY B.TMS
    ) B,
    
    (
    
     SELECT NVL(SUM(A.ENT_PRSN_NUM ),0)         TOT  
           
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) =  ?  -1 
                AND MEET_CD = '003'
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE STND_YEAR = ?  -1  
                AND MEET_CD = ? 
                AND TMS  <= ?   
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    )C
  ),
  (
  SELECT SUM(A.ENT_PRSN_NUM ) AS N_TOT_PRSN_NUM
      FROM 
          TBRC_STAY_MANA  A,       
          VW_SDL_INFO B
      WHERE 1 =1
        AND A.RACE_DT(+) = B.RACE_DAY
        AND B.STND_YEAR =  ?  
        AND B.MEET_CD = ?    
        AND B.TMS  = ?       
  )BB  
 ORDER BY MANA_DESC
 #String#2012#String#003#String#2012#String#003#String#17#String#2012#String#003#String#2012#String#003#String#17#String#2012#String#003#String#2012#String#003#String#17#String#2012#String#003#String#2012#String#003#String#17#String#2012#String#003#String#2012#String#003#String#17#String#2012#String#2012#String#003#String#17#String#2012#String#003#String#17#
>
[I][UbiData][2012-06-07 19:15:54]	- Row size : 2
[I][UbiData][2012-06-07 19:15:54]	- Data
<
1^t입장인원^t998229^t0^t0^t0^t32508^t32508^t67325^t-34817^t-51.71^t^n2^t전년대비^t1417977^t0^t0^t44040^t44345^t88385^t80393^t-55877^t-63.22^t^n
>
[I][UbiData][2012-06-07 19:15:54][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 19:15:54][DATA QUERY START]
[I][UbiData][2012-06-07 19:15:54]	- sql id : rsm2020_s07
[I][UbiData][2012-06-07 19:15:54]	- Db charset : KSC5601
[I][UbiData][2012-06-07 19:15:54]	- Sql
<
SELECT  
   '0~'||BB.RACE_NO||'R' AS RACE_DESC,
   DECODE(LEV,1,'인원','점유율') AS MANA_DESC,
      DECODE(LEV,1,INWON_12,DECODE(INWON_TOTAL,0,0,ROUND(INWON_12/INWON_TOTAL*100,2))) AS INWON_12, 
      DECODE(LEV,1,INWON_13,DECODE(INWON_TOTAL,0,0,ROUND(INWON_13/INWON_TOTAL*100,2))) AS INWON_13, 
      DECODE(LEV,1,INWON_14,DECODE(INWON_TOTAL,0,0,ROUND(INWON_14/INWON_TOTAL*100,2))) AS INWON_14, 
      DECODE(LEV,1,INWON_16,DECODE(INWON_TOTAL,0,0,ROUND(INWON_16/INWON_TOTAL*100,2))) AS INWON_16, 
      DECODE(LEV,1,INWON_19,DECODE(INWON_TOTAL,0,0,ROUND(INWON_19/INWON_TOTAL*100,2))) AS INWON_19, 
      DECODE(LEV,1,INWON_20,DECODE(INWON_TOTAL,0,0,ROUND(INWON_20/INWON_TOTAL*100,2))) AS INWON_20, 
      DECODE(LEV,1,INWON_22,DECODE(INWON_TOTAL,0,0,ROUND(INWON_22/INWON_TOTAL*100,2))) AS INWON_22, 
      DECODE(LEV,1,INWON_23,DECODE(INWON_TOTAL,0,0,ROUND(INWON_23/INWON_TOTAL*100,2))) AS INWON_23, 
      DECODE(LEV,1,INWON_24,DECODE(INWON_TOTAL,0,0,ROUND(INWON_24/INWON_TOTAL*100,2))) AS INWON_24, 
      DECODE(LEV,1,INWON_25,DECODE(INWON_TOTAL,0,0,ROUND(INWON_25/INWON_TOTAL*100,2))) AS INWON_25, 
      DECODE(LEV,1,INWON_26,DECODE(INWON_TOTAL,0,0,ROUND(INWON_26/INWON_TOTAL*100,2))) AS INWON_26, 
      DECODE(LEV,1,INWON_27,DECODE(INWON_TOTAL,0,0,ROUND(INWON_27/INWON_TOTAL*100,2))) AS INWON_27, 
      DECODE(LEV,1,INWON_28,DECODE(INWON_TOTAL,0,0,ROUND(INWON_28/INWON_TOTAL*100,2))) AS INWON_28, 
      DECODE(LEV,1,INWON_100,DECODE(INWON_TOTAL,0,0,ROUND(INWON_100/INWON_TOTAL*100,2))) AS INWON_100, 
      DECODE(LEV,1,INWON_101,DECODE(INWON_TOTAL,0,0,ROUND(INWON_101/INWON_TOTAL*100,2))) AS INWON_101, 
      DECODE(LEV,1,INWON_102,DECODE(INWON_TOTAL,0,0,ROUND(INWON_102/INWON_TOTAL*100,2))) AS INWON_102, 
      DECODE(LEV,1,INWON_103,DECODE(INWON_TOTAL,0,0,ROUND(INWON_103/INWON_TOTAL*100,2))) AS INWON_103, 
      DECODE(LEV,1,INWON_SUM,DECODE(INWON_TOTAL,0,0,ROUND(INWON_SUM/INWON_TOTAL*100,2))) AS INWON_TOTAL 
  FROM
 (
             SELECT  
        SUM(CASE WHEN BRNC_CD='12' THEN INWON END) AS INWON_12, 
        SUM(CASE WHEN BRNC_CD='13' THEN INWON END) AS INWON_13, 
        SUM(CASE WHEN BRNC_CD='14' THEN INWON END) AS INWON_14, 
        SUM(CASE WHEN BRNC_CD='16' THEN INWON END) AS INWON_16, 
        SUM(CASE WHEN BRNC_CD='19' THEN INWON END) AS INWON_19, 
        SUM(CASE WHEN BRNC_CD='20' THEN INWON END) AS INWON_20, 
        SUM(CASE WHEN BRNC_CD='22' THEN INWON END) AS INWON_22, 
        SUM(CASE WHEN BRNC_CD='23' THEN INWON END) AS INWON_23, 
        SUM(CASE WHEN BRNC_CD='24' THEN INWON END) AS INWON_24, 
        SUM(CASE WHEN BRNC_CD='25' THEN INWON END) AS INWON_25, 
        SUM(CASE WHEN BRNC_CD='26' THEN INWON END) AS INWON_26, 
        SUM(CASE WHEN BRNC_CD='27' THEN INWON END) AS INWON_27, 
        SUM(CASE WHEN BRNC_CD='28' THEN INWON END) AS INWON_28, 
        SUM(CASE WHEN BRNC_CD='100' THEN INWON END) AS INWON_100, 
        SUM(CASE WHEN BRNC_CD='101' THEN INWON END) AS INWON_101, 
        SUM(CASE WHEN BRNC_CD='102' THEN INWON END) AS INWON_102, 
        SUM(CASE WHEN BRNC_CD='103' THEN INWON END) AS INWON_103, 
        SUM(INWON ) AS INWON_TOTAL,
        SUM(CASE WHEN BRNC_CD='12' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='13' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='14' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='16' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='19' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='20' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='22' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='23' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='24' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='25' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='26' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='27' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='28' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='100' THEN INWON END) + 
                 SUM(CASE WHEN BRNC_CD='101' THEN INWON END) + 
                 SUM(CASE WHEN BRNC_CD='102' THEN INWON END) +
                 SUM(CASE WHEN BRNC_CD='103' THEN INWON END)  AS INWON_SUM 
     FROM
    (
    SELECT C.CD_NM, 
           E.BRNC_CD,                                      
            SUM( E.ENT_PRSN_NUM) INWON 
        FROM                                                   
         VW_SDL_INFO R       
         ,TBRC_STAY_MANA E, 
         TBRK_SPEC_CD C                      
        WHERE  1=1
           AND R.MEET_CD  = ?  
        AND R.STND_YEAR(+) = ?  
          AND R.TMS(+)   = ?  
          AND R.DAY_ORD(+) = ?  
         AND E.MEET_CD='003'                        
         AND E.RACE_DT=R.RACE_DAY                 
         AND C.GRP_CD IN ('018','032')                      
         AND C.CD=E.BRNC_CD                
         
        GROUP BY E.BRNC_CD,C.CD_NM          
        ORDER BY E.BRNC_CD
    )A
   )AA,
 (
  SELECT                                                                   
          MAX(RACE_NO)  AS RACE_NO
          
   FROM   (                                                                 
               SELECT                                                       
                        TOR.RACE_NO                                         
                      , TOR.RACE_REG_NO                                     
                      , TOR.RACER_NO                                        
                      , TOR.RANK                                            
                      , TRM.NM_KOR                                          
                      , RANK() OVER (PARTITION BY TOR.RACE_NO               
                                                , TOR.RANK                  
                                         ORDER BY TOR.RACE_REG_NO) SEQ      
               FROM     TBEB_ORGAN@MRASYSLINK        TOR                        
                      , TBEC_RACER_MASTER@MRASYSLINK TRM                        
               WHERE 1=1                                                        
               
               AND    TOR.RACER_NO   = TRM.RACER_NO                         
               AND    TOR.STND_YEAR  = ?  
               AND    TOR.MBR_CD     = '001'                                
               AND    TOR.TMS        = ?  
               
               AND    TOR.RANK BETWEEN 1                                    
                                   AND 3                                    
          )                                                                 
   START WITH SEQ = 1                                                       
   CONNECT BY PRIOR SEQ = SEQ - 1                                           
   AND PRIOR RACE_NO = RACE_NO AND RANK = RANK                           
 )BB , (SELECT LEVEL LEV FROM DUAL CONNECT BY LEVEL <=2 ) DU
 #String#003#String#2012#String#17#String#1#String#2012#String#17#
>
[I][UbiData][2012-06-07 19:15:54]	- Row size : 2
[I][UbiData][2012-06-07 19:15:54]	- Data
<
0~15R^t인원^t2680^t2455^t3022^t3198^t3442^t2948^t1271^t1987^t1627^t1257^t988^t3289^t1143^t0^t0^t0^t0^t29307^t^n0~15R^t점유율^t8.24^t7.55^t9.3^t9.84^t10.59^t9.07^t3.91^t6.11^t5^t3.87^t3.04^t10.12^t3.52^t0^t0^t0^t0^t90.15^t^n
>
[I][UbiData][2012-06-07 19:15:54][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 19:15:54][DATA QUERY START]
[I][UbiData][2012-06-07 19:15:54]	- sql id : rsm2020_s08
[I][UbiData][2012-06-07 19:15:54]	- Db charset : KSC5601
[I][UbiData][2012-06-07 19:15:54]	- Sql
<
SELECT                                       
       STND_YEAR,  
       TMS,           
       DAY_ORD,   
       SPEC_DESC   
  FROM TBRD_RACE_SPEC_DESC 
  WHERE 1=1
       AND STND_YEAR = ?  
       AND TMS  = ?  
       AND DAY_ORD = ?  
       AND MEET_CD   = ?  
 UNION ALL
 SELECT 
       ' ', 999, 999, ' '
 FROM DUAL          
 ORDER BY TMS
 #String#2012#String#17#String#1#String#003#
>
[I][UbiData][2012-06-07 19:15:54]	- Row size : 1
[I][UbiData][2012-06-07 19:15:54]	- Data
<
 ^t999^t999^t ^t^n
>
[I][UbiData][2012-06-07 19:15:54][DATA QUERY END]
--------------------------------------------------------------------------------


[I][UbiForm][2012-06-07 19:16:21][REQUEST FILE]
[I][UbiForm][2012-06-07 19:16:21]	- Report : /web/waspage/usrbm/report/rsm/rsm2020.jrf
[I][UbiForm][2012-06-07 19:16:21]	- Common : /web/waspage/usrbm/report/rsm/property/commonitem.xml [Not found]
--------------------------------------------------------------------------------


[I][UbiData][2012-06-07 19:16:21][REQUEST FILE]
[I][UbiData][2012-06-07 19:16:21]	- Report : rsm2020.jrf
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 19:16:21][DB CONNECT]
[I][UbiData][2012-06-07 19:16:21]	- Type : nonlookup
[I][UbiData][2012-06-07 19:16:21]	- Db id : rbm
[I][UbiData][2012-06-07 19:16:21]	- Sql id : rsm2020_s06Today
[I][UbiData][2012-06-07 19:16:21]	- Datasource : jdbc/RBM
[I][UbiData][2012-06-07 19:16:21]	- Status : Success
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 19:16:21][DATA QUERY START]
[I][UbiData][2012-06-07 19:16:21]	- sql id : rsm2020_s06Today
[I][UbiData][2012-06-07 19:16:21]	- Db charset : KSC5601
[I][UbiData][2012-06-07 19:16:21]	- Sql
<
WITH J 
 AS
 (SELECT    
         '전회' AS COL_DESC  
     , tms                                                                                       
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='12' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_02    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='16' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_06    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='22'  THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_12    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='20' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_10    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='23' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_13    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='24' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_14    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='13' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_03    
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='25'  THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_15    
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='19' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_09    
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='14' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_05    
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='26' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_16    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='27' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_17    
     , SUM(                                                                              
           CASE                                                                          
              WHEN COMM_NO='06'  THEN NVL(DIV_TOTAL, 0)                                  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_01_06_01    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='28' THEN NVL(DIV_TOTAL, 0) 
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_01_07_18    
         , SUM(                                                                              
               CASE                                                                          
                  WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_04_07_01    
         , SUM(                                                                              
               CASE                                                                          
                  WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='02' THEN NVL(DIV_TOTAL, 0)  
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_04_07_02    
        , SUM(                                                                              
               CASE                                                                          
                  WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='03' THEN NVL(DIV_TOTAL, 0)  
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_04_07_03    
         , SUM(                                                                              
               CASE                                                                          
                  WHEN SELL_CD='02' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_02_07_01    
 
         , SUM(                                                                              
               CASE                                                                          
                  WHEN COMM_NO NOT IN ('01','02','03','04','08') THEN NVL(DIV_TOTAL, 0)                         
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_JIJUM    
         , SUM(DIV_TOTAL)/100 DIV_TOTAL                                                             
  FROM   TBES_SDL_DT_SUM                                                                         
  WHERE  1=1                                                                                    
    AND STND_YEAR  = ?                                                            
    AND MEET_CD    = ?                                                        
    AND TMS        BETWEEN ?  - 1 AND ? 
    AND DAY_ORD    = ? 
  GROUP BY TMS 
 )
 SELECT  DECODE(TMS, ? , '합계','전회') COL_DESC
        , TMS
        ,'1' AS GUBN
        ,DIV_01_07_02 
        ,DIV_01_07_06 
        ,DIV_01_07_12 
        ,DIV_01_07_10 
        ,DIV_01_07_13 
        ,DIV_01_07_14 
        ,DIV_01_07_03 
        ,DIV_01_07_15 
        ,DIV_01_07_09 
        ,DIV_01_07_05 
        ,DIV_01_07_16 
        ,DIV_01_07_17 
        ,DIV_01_06_01 
        ,DIV_01_07_18 
        ,DIV_04_07_01 
        ,DIV_04_07_02 
        ,DIV_04_07_03 
        ,DIV_02_07_01
        ,DIV_JIJUM
        ,1
 FROM J
 UNION ALL
 SELECT '점유율'
       , TMS
       , '2'
       , ROUND(DIV_01_07_02 / DIV_TOTAL * 100, 2) 
       , ROUND(DIV_01_07_06 / DIV_TOTAL * 100, 2)   
       , ROUND(DIV_01_07_12 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_10 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_13 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_14 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_03 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_15 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_09 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_05 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_16 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_17 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_06_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_18 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_02 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_03 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_02_07_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_JIJUM / DIV_TOTAL * 100, 2)    
       , 100
 FROM J
 WHERE tms = ? 
 UNION ALL
 SELECT '전회차'
       , TMS
       , '2'
       , ROUND(DIV_01_07_02 / DIV_TOTAL * 100, 2) 
       , ROUND(DIV_01_07_06 / DIV_TOTAL * 100, 2)   
       , ROUND(DIV_01_07_12 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_10 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_13 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_14 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_03 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_15 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_09 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_05 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_16 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_17 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_06_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_18 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_02 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_03 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_02_07_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_JIJUM / DIV_TOTAL * 100, 2)    
       , 100
 FROM J
 WHERE TMS = ?  -1
 ORDER BY 3, 2 DESC
 #String#2012#String#003#String#17#String#17#String#1#String#17#String#17#String#17#
>
[I][UbiData][2012-06-07 19:16:21]	- Row size : 4
[I][UbiData][2012-06-07 19:16:21]	- Data
<
합계^t17^t1^t5759243^t6768872^t3464367^t4581356^t3964638^t6685253^t3899352^t3606854^t6970537^t6270105^t3005424^t6179547^t172346^t2917226^t1910858^t2796109^t0^t0^t68952087^t1^t^n전회^t16^t1^t5110145^t6625240^t3652284^t4516474^t4532647^t6596680^t4323166^t3600994^t7080707^t6011354^t3246328^t5786326^t150613^t2709578^t1871131^t2728615^t0^t0^t68542282^t1^t^n점유율^t17^t2^t7.06^t8.29^t4.25^t5.61^t4.86^t8.19^t4.78^t4.42^t8.54^t7.68^t3.68^t7.57^t.21^t3.57^t2.34^t3.43^t0^t0^t84.5^t100^t^n전회차^t16^t2^t6.31^t8.17^t4.51^t5.57^t5.59^t8.14^t5.33^t4.44^t8.74^t7.42^t4.01^t7.14^t.19^t3.34^t2.31^t3.37^t0^t0^t84.57^t100^t^n
>
[I][UbiData][2012-06-07 19:16:21][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 19:16:21][DATA QUERY START]
[I][UbiData][2012-06-07 19:16:21]	- sql id : rsm2020_s11
[I][UbiData][2012-06-07 19:16:21]	- Db charset : KSC5601
[I][UbiData][2012-06-07 19:16:21]	- Sql
<
SELECT 
         '0~'||BB.RACE_NO||'R' AS RACE_DESC,
         DECODE(LEV,1,'인원','점유율') AS MANA_DESC,
         CASE 
             WHEN LEV='2' AND IN_PRSN_NUM > 0 AND TOT_PRSN_NUM > 0 THEN ROUND(IN_PRSN_NUM / TOT_PRSN_NUM *100,2)    
             ELSE IN_PRSN_NUM
        END AS IN_PRSN_NUM, 
        CASE 
             WHEN LEV='2' AND BRNC_PRSN_NUM > 0 AND TOT_PRSN_NUM > 0 THEN ROUND(BRNC_PRSN_NUM / TOT_PRSN_NUM *100,2)    
             ELSE BRNC_PRSN_NUM
        END AS BRNC_PRSN_NUM, 
        CASE 
             WHEN LEV='2' AND TOT_PRSN_NUM > 0 THEN ROUND(TOT_PRSN_NUM / TOT_PRSN_NUM *100,2)    
             ELSE TOT_PRSN_NUM
        END AS TOT_PRSN_NUM, 
        CASE 
             WHEN LEV='1' THEN B_TOT_PRSN_NUM
        END AS B_TOT_PRSN_NUM, 
        CASE 
             WHEN LEV='1' THEN MINUS_PRSN_NUM
        END AS MINUS_PRSN_NUM, 
        CASE 
 
             WHEN LEV='1' AND TOT_PRSN_NUM>0 AND B_TOT_PRSN_NUM >0 THEN ROUND((TOT_PRSN_NUM - B_TOT_PRSN_NUM) / B_TOT_PRSN_NUM*100,2)
        END AS PER_PRSN_NUM 
 FROM
 (
      SELECT DU.LEV,
             SUM(CASE WHEN R.TMS =DU.TMS AND BRNC_CD = '98' THEN E.ENT_PRSN_NUM END) AS IN_PRSN_NUM,    
              SUM(CASE WHEN R.TMS =DU.TMS AND BRNC_CD <> '98' THEN E.ENT_PRSN_NUM END) AS BRNC_PRSN_NUM,    
              SUM(CASE WHEN R.TMS =DU.TMS THEN E.ENT_PRSN_NUM END) AS TOT_PRSN_NUM,    
              SUM(CASE WHEN R.TMS =DU.B_TMS THEN E.ENT_PRSN_NUM END) AS B_TOT_PRSN_NUM,    
              (SUM(CASE WHEN R.TMS =DU.TMS THEN E.ENT_PRSN_NUM END) - SUM(CASE WHEN R.TMS =DU.B_TMS THEN E.ENT_PRSN_NUM END)) AS MINUS_PRSN_NUM    
                      
          FROM                                                   
              TBRC_STAY_MANA E,    
              TBRK_SPEC_CD C,
              VW_SDL_INFO R,       
              (SELECT LEVEL AS LEV, ?  AS TMS,(?  - 1) AS B_TMS FROM DUAL CONNECT BY LEVEL<=2) DU 
          WHERE  1=1                
            AND E.BRNC_CD    = C.CD
            AND E.RACE_DT    = R.RACE_DAY                 
            AND C.GRP_CD        IN ('018','032')    
            AND R.MEET_CD    = '003'   
            AND R.STND_YEAR    = ?         
            AND R.TMS IN (? , ?  - 1)    
            AND R.DAY_ORD ='2'             
          GROUP BY DU.LEV
 )AA,
 (
     SELECT                                                                   
          MAX(RACE_NO)  AS RACE_NO
       FROM   (                                                                 
                   SELECT                                                       
                            TOR.RACE_NO                                         
                          , TOR.RACE_REG_NO                                     
                          , TOR.RACER_NO                                        
                          , TOR.RANK                                            
                          , TRM.NM_KOR                                          
                          , RANK() OVER (PARTITION BY TOR.RACE_NO               
                                                    , TOR.RANK                  
                                             ORDER BY TOR.RACE_REG_NO) SEQ      
                   FROM     TBEB_ORGAN@MRASYSLINK        TOR                        
                          , TBEC_RACER_MASTER@MRASYSLINK TRM                        
                   WHERE 1=1                                                        
                           
                   AND    TOR.RACER_NO   = TRM.RACER_NO                         
                   AND    TOR.STND_YEAR  = ?         
                   AND    TOR.MBR_CD     = '001'                                
                   AND    TOR.TMS        = ?         
                           
                   AND    TOR.RANK BETWEEN 1                                    
                                       AND 3                                    
              )                                                                 
       START WITH SEQ = 1                                                       
       CONNECT BY PRIOR SEQ = SEQ - 1                                           
       AND PRIOR RACE_NO = RACE_NO AND RANK = RANK     
 )BB
 ORDER BY AA.LEV
 #String#17#String#17#String#2012#String#17#String#17#String#2012#String#17#
>
[I][UbiData][2012-06-07 19:16:21]	- Row size : 2
[I][UbiData][2012-06-07 19:16:21]	- Data
<
0~15R^t인원^t^t^t^t33830^t^t^t^n0~15R^t점유율^t^t^t^t^t^t^t^n
>
[I][UbiData][2012-06-07 19:16:21][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 19:16:21][DATA QUERY START]
[I][UbiData][2012-06-07 19:16:21]	- sql id : rsm2020_s01
[I][UbiData][2012-06-07 19:16:21]	- Db charset : KSC5601
[I][UbiData][2012-06-07 19:16:21]	- Sql
<
SELECT 
           AA.MEET_CD,      
           AA.STND_YEAR,    
           AA.TMS,          
           AA.DAY_ORD,      
           TO_CHAR(TO_DATE(AA.RACE_DAY,'YYYYMMDD'),'YYYY-MM-DD') AS RACE_DAY, 
           AA.RACE_YOIL,    
           TO_CHAR(TO_DATE(AA.RACE_DAY,'YYYYMMDD'),'YYYY')||'년 '||AA.TMS||'회차 '||AA.DAY_ORD||'일차 ('|| TO_CHAR(TO_DATE(AA.RACE_DAY,'YYYYMMDD'),'YYYY-MM-DD')||') 경주 개최 결과'  
           AS RACE_DAY_INFO  
     
       FROM (         
             SELECT                              
             MEET_CD,      
             STND_YEAR,    
             TMS,          
             DAY_ORD,      
             RACE_DAY,     
             RACE_YOIL,    
             DECODE(RACE_YOIL,'MON','월','TUE','화','WED','수','THE','목','FRI','금','SAT','토','SUN','일','일') AS RACE_YOIL_KOR, 
             TO_CHAR(TO_DATE(RACE_DAY,'YYYYMMDD'),'YYYY-MM-DD')||
             ' ('||RACE_YOIL||') '||TMS||'회차 '||DAY_ORD||'일차'  
             AS RACE_INFO  
      FROM                                
             VW_SDL_INFO      
      WHERE  1=1                             
             AND MEET_CD = ?   
            AND STND_YEAR = ?   
            AND TMS= ?     
            AND DAY_ORD = ?        
    )AA
 #String#003#String#2012#String#17#String#1#
>
[I][UbiData][2012-06-07 19:16:21]	- Row size : 1
[I][UbiData][2012-06-07 19:16:21]	- Data
<
003^t2012^t17^t1^t2012-06-07^tTHU^t2012년 17회차 1일차 (2012-06-07) 경주 개최 결과^t^n
>
[I][UbiData][2012-06-07 19:16:21][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 19:16:21][DATA QUERY START]
[I][UbiData][2012-06-07 19:16:21]	- sql id : rsm2020_s05Today
[I][UbiData][2012-06-07 19:16:21]	- Db charset : KSC5601
[I][UbiData][2012-06-07 19:16:21]	- Sql
<
SELECT                                                                                      
       DECODE(GROUPING(RACE_NO),0,RACE_NO,'TOTAL') RACE_NO 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='12' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_02 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='16' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_06 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='22'  THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_12 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='20' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_10 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='23' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_13 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='24' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_14 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='13' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_03 
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='25'  THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_15 
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='19' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_09 
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='14' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_05 
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='26' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_16 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='27' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_17 
     , SUM(                                                                              
           CASE                                                                          
              WHEN COMM_NO='06'  THEN NVL(DIV_TOTAL, 0)                                  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_01_06_01 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='28' THEN NVL(DIV_TOTAL, 0) 
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_01_07_18 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_04_07_01 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='02' THEN NVL(DIV_TOTAL, 0)  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_04_07_02 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='03' THEN NVL(DIV_TOTAL, 0)  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_04_07_03    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='02' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_02_07_01 
     , SUM(                                                                              
           CASE                                                                          
              WHEN  COMM_NO NOT IN ('01','02','03','04','08') THEN NVL(DIV_TOTAL, 0)                         
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_JIJUM  
 
     , SUM(DIV_TOTAL)/100 DIV_TOTAL                                                          
 FROM   TBES_SDL_DT                                                                         
 WHERE   1=1                                                                                   
      AND STND_YEAR  = ?                                                             
      AND    MEET_CD    = ?                                                        
      AND    TMS        = ?                                                            
      AND    DAY_ORD    = ?                                                        
 
 GROUP BY RACE_NO                                                                                   
       
 ORDER BY RACE_NO
 #String#2012#String#003#String#17#String#1#
>
[I][UbiData][2012-06-07 19:16:21]	- Row size : 15
[I][UbiData][2012-06-07 19:16:21]	- Data
<
01^t140920^t197602^t96849^t127436^t119903^t187379^t128299^t116374^t219027^t183487^t108516^t160073^t7355^t93039^t59949^t93886^t0^t0^t2040094^t2396211^t^n02^t191278^t267508^t123529^t187360^t147399^t249704^t155747^t145620^t287810^t240820^t134529^t231415^t9365^t106436^t78894^t112202^t0^t0^t2669616^t3119757^t^n03^t218916^t312291^t160473^t214643^t185000^t303210^t189537^t171252^t321899^t281904^t151802^t275390^t11275^t162159^t84773^t131614^t0^t0^t3176138^t3739571^t^n04^t280723^t349162^t162668^t220723^t205104^t363694^t198947^t193854^t366506^t314797^t163251^t307239^t11636^t153198^t99509^t147397^t0^t0^t3538408^t4222315^t^n05^t293914^t356666^t179380^t247835^t236853^t376743^t193986^t198487^t385927^t363196^t170821^t362879^t10456^t178289^t114597^t157145^t0^t0^t3827174^t4600038^t^n06^t320577^t410766^t191760^t262742^t239275^t397830^t224139^t213663^t422296^t374549^t185676^t384443^t13418^t167359^t119122^t168329^t0^t0^t4095944^t4848817^t^n07^t373535^t432760^t204667^t303599^t258807^t408985^t246625^t214315^t457794^t408705^t182639^t417527^t12501^t187942^t128436^t184125^t0^t0^t4422962^t5262700^t^n08^t401087^t454010^t227928^t317354^t270820^t432896^t260257^t226171^t475649^t433911^t198906^t420465^t13274^t209941^t132238^t183879^t0^t0^t4658786^t5538248^t^n09^t437100^t484053^t233189^t323376^t300022^t463847^t282180^t288344^t503532^t460256^t213710^t426704^t12038^t218223^t137100^t184059^t0^t0^t4967733^t5873616^t^n10^t470862^t541950^t272328^t368669^t328440^t540666^t313885^t273198^t534426^t520280^t238905^t480109^t11995^t217489^t148525^t221558^t0^t0^t5483285^t6538531^t^n11^t466591^t561617^t317067^t365940^t318869^t591737^t323108^t316413^t577350^t534047^t224160^t502776^t13236^t222034^t156791^t213870^t0^t0^t5705606^t6735069^t^n12^t517154^t573936^t314455^t371388^t339082^t549091^t330869^t298274^t572163^t534089^t257848^t538886^t9827^t224241^t153182^t226909^t0^t0^t5811394^t6964681^t^n13^t526295^t583973^t330714^t397538^t324448^t593547^t335641^t314764^t598821^t528560^t248840^t537767^t13014^t243974^t168937^t238429^t0^t0^t5985262^t7085157^t^n14^t544820^t611235^t322648^t422943^t330535^t594065^t339607^t303922^t617748^t541795^t257654^t539796^t11784^t260972^t158394^t255072^t0^t0^t6112990^t7164971^t^n15^t575471^t631343^t326712^t449810^t360081^t631859^t376525^t332203^t629589^t549709^t268167^t594078^t11172^t271930^t170411^t277635^t0^t0^t6456695^t7513552^t^n
>
[I][UbiData][2012-06-07 19:16:21][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 19:16:21][DATA QUERY START]
[I][UbiData][2012-06-07 19:16:21]	- sql id : rsm2020_s03Today
[I][UbiData][2012-06-07 19:16:21]	- Db charset : KSC5601
[I][UbiData][2012-06-07 19:16:21]	- Sql
<
SELECT                                                                                    
      Z.RACE_NO, 
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          FC_GET_RSLT_RANK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO)                
      END RSLT_RANK, 
      R.RANK_1,  
      R.RANK_2,  
      R.RANK_3,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '001', NULL) 
      END WIN,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '002', '1')  
      END PLC,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '002', '2')  
      END PLC2,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '004', NULL) 
      END EX,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '005', NULL) 
      END QU,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '006', NULL) 
      END TRI,  
      D.BONJANG_TOTAL, 
      D.JIJUM_TOTAL,  
      C.DIV_TOTAL,  
      NVL(D.REFUND,0) REFUND, 
      NVL(B.B_DIV_TOTAL,0) AS B_DIV_TOTAL,    
      NVL((C.DIV_TOTAL-B.B_DIV_TOTAL),0) AS PLUS_MINUS, 
      CASE                                                                                  
          WHEN B.B_DIV_TOTAL<>0 THEN                                                        
          ROUND((C.DIV_TOTAL-B.B_DIV_TOTAL)/B.B_DIV_TOTAL*100,2)                            
          ELSE 0                                                                            
      END RATE,   
      SAME_PAYOFF_TOTAL,  
      SAME_PAYOFF_001, 
   SAME_PAYOFF_002, 
   SAME_PAYOFF_004, 
   SAME_PAYOFF_005, 
   SAME_PAYOFF_006 
  FROM   
   
      (   
                                                                 
          SELECT                                                                            
                D.MEET_CD,                                                                   
                D.STND_YEAR,                                                                 
                D.TMS,                                                                       
                D.DAY_ORD,                                                                   
                DECODE(D.RACE_NO,NULL,'TOTAL',D.RACE_NO) RACE_NO,                              
                SUM(                                                                        
                    CASE                                                                    
                      WHEN D.SELL_CD='03' THEN D.DIV_TOTAL                                    
                      ELSE 0                                                                
                    END                                                                     
                ) BONJANG_TOTAL,                                                            
                SUM(                                                                        
                    CASE                                                                    
                      WHEN D.SELL_CD !='03' THEN D.DIV_TOTAL                                     
                    END                                                                     
                ) JIJUM_TOTAL,                                                              
                SUM(D.REFUND) REFUND                                                         
          FROM   TBES_SDL_DT D                                                              
          WHERE 1=1                                                                             
              AND D.STND_YEAR(+)  = ? 
              AND D.MEET_CD(+)    = ? 
              AND D.TMS(+)        = ? 
              AND D.DAY_ORD(+)    = ? 
          GROUP BY                                                                          
                D.MEET_CD,                                                                   
                D.STND_YEAR,                                                                 
                D.TMS,                                                                       
                D.DAY_ORD,                                                                   
                ROLLUP(D.RACE_NO)                                                           
      ) D,                                                                                  
      (                                                                                     
         SELECT                                                                             
            P.MEET_CD,                                                                      
            P.STND_YEAR,                                                                    
            P.TMS,                                                                          
            P.DAY_ORD,                                                                      
            DECODE(P.RACE_NO,NULL,'TOTAL',P.RACE_NO) RACE_NO,                               
            SUM(POOL_TOTAL) DIV_TOTAL                                                       
         FROM                                                                               
             TBES_SDL_PT P                                                                  
         WHERE 1=1                                                                              
             AND P.STND_YEAR  = ? 
             AND P.MEET_CD    = ? 
             AND P.TMS        = ? 
             AND P.DAY_ORD    = ? 
         GROUP BY                                                                           
            P.MEET_CD,                                                                      
            P.STND_YEAR,                                                                    
            P.TMS,                                                                          
            P.DAY_ORD,                                                                      
            ROLLUP(P.RACE_NO)                                                               
      ) C,                                                                                  
      (                                                                                     
          SELECT                                                                            
                DECODE(RACE_NO,NULL,'TOTAL',RACE_NO) RACE_NO,                               
                SUM(DIV_TOTAL) B_DIV_TOTAL                                                  
          FROM   TBES_SDL_DT                                                                
          WHERE 1=1                                                                            
              AND  STND_YEAR  = ? 
              AND    MEET_CD    = ? 
              AND    TMS        = ?  -1                                                    
              AND    DAY_ORD    = ? 
          GROUP BY                                                                          
                ROLLUP(RACE_NO)                                                             
      ) B,                                                                                  
      (                                                                                     
          SELECT                                                                            
                RACE_NO                                                                     
              , MIN(DECODE(RANK, '1', NM_KOR)) RANK_1                                       
              , MIN(DECODE(RANK, '2', NM_KOR)) RANK_2                                       
              , MIN(DECODE(RANK, '3', NM_KOR)) RANK_3                                       
          FROM   (                                                                          
                   SELECT                                                                   
                            RACE_NO                                                         
                          , RANK                                                            
                          , SUBSTR(MAX(SYS_CONNECT_BY_PATH (NM_KOR, '/')), 2) NM_KOR        
                   FROM   (                                                                 
                               SELECT                                                       
                                        TOR.RACE_NO                                         
                                      , TOR.RACE_REG_NO                                     
                                      , TOR.RACER_NO                                        
                                      , TOR.RANK                                            
                                      , TRM.NM_KOR                                          
                                      , RANK() OVER (PARTITION BY TOR.RACE_NO               
                                                                , TOR.RANK                  
                                                         ORDER BY TOR.RACE_REG_NO) SEQ      
                               FROM     TBEB_ORGAN@MRASYSLINK        TOR                        
                                      , TBEC_RACER_MASTER@MRASYSLINK TRM                        
                               WHERE 1=1                
                               AND    TOR.RACER_NO   = TRM.RACER_NO                         
                               AND    TOR.STND_YEAR  = ? 
                               AND    TOR.MBR_CD     = '001'                                
                               AND    TOR.TMS        = ? 
                               AND    TOR.DAY_ORD    = ? 
                               AND    TOR.RANK BETWEEN 1                                    
                                                   AND 3                                    
                          )                                                                 
                   START WITH SEQ = 1                                                       
                   CONNECT BY PRIOR SEQ = SEQ - 1                                           
                   AND PRIOR RACE_NO = RACE_NO AND RANK = RANK                              
                   GROUP BY                                                                 
                            RACE_NO                                                         
                          , RANK                                                            
               )                                                                            
          GROUP BY RACE_NO                                                                  
          UNION ALL                                                                         
          SELECT 'TOTAL', '', '', '' FROM DUAL                                              
      ) R, 
      (   
     
       SELECT                                                                         
          RACE_NO,
            SUM(CASE 
                     WHEN POOL_CD = '001' AND RS_SEQ >= '2' THEN PAYOFF 
                     WHEN POOL_CD = '002' AND RS_SEQ >= '3' THEN PAYOFF 
                     WHEN POOL_CD = '004' AND RS_SEQ >= '2' THEN PAYOFF 
                     WHEN POOL_CD = '005' AND RS_SEQ >= '2' THEN PAYOFF 
                     WHEN POOL_CD = '006' AND RS_SEQ >= '2' THEN PAYOFF 
            END) AS SAME_PAYOFF_TOTAL, 
                               
            SUM(CASE WHEN POOL_CD = '001' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_001, 
            SUM(CASE WHEN POOL_CD = '002' AND RS_SEQ >= '3' THEN PAYOFF END) AS SAME_PAYOFF_002, 
            SUM(CASE WHEN POOL_CD = '004' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_004, 
            SUM(CASE WHEN POOL_CD = '005' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_005, 
            SUM(CASE WHEN POOL_CD = '006' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_006 
      FROM TBES_SDL_RS                                                                
      WHERE 1=1                                                                          
          AND MEET_CD  = '003'                                                              
          AND STND_YEAR = ?      
          AND TMS   = ?      
          AND DAY_ORD  = ?      
      GROUP BY          
       RACE_NO                                                              
 
   ) E,                                                                                  
  (                                       
    SELECT DISTINCT RACE_NO           
    FROM TBEB_RACE_DOC@MRASYSLINK D        
      WHERE 1=1                          
          AND D.STND_YEAR= ? 
          AND D.TMS=? 
           AND D.DAY_ORD=? 
 
   ) Z                                   
  WHERE 1=1                                                                                    
      AND C.RACE_NO(+)=Z.RACE_NO                                                                
      AND B.RACE_NO(+)=Z.RACE_NO                                                            
      AND R.RACE_NO(+)=Z.RACE_NO                                                            
      AND D.RACE_NO(+)=Z.RACE_NO
      AND E.RACE_NO(+)=Z.RACE_NO                                                            
  ORDER BY Z.RACE_NO
 #String#2012#String#003#String#17#String#1#String#2012#String#003#String#17#String#1#String#2012#String#003#String#17#String#1#String#2012#String#17#String#1#String#2012#String#17#String#1#String#2012#String#17#String#1#
>
[I][UbiData][2012-06-07 19:16:21]	- Row size : 15
[I][UbiData][2012-06-07 19:16:21]	- Data
<
01^t3-5-6^t윤영근^t배혜민^t박광혁^t4.9^t1.5^t2.5^t15.2^t9.6^t12.6^t35611700^t204009400^t239621100^t0^t241173800^t-1552700^t-.64^t^t^t^t^t^t^t^n02^t2-1-6^t사재준^t김민길^t이주영^t1.3^t1^t2.3^t5^t3.6^t8.6^t45014100^t266961600^t311975700^t0^t306515100^t5460600^t1.78^t^t^t^t^t^t^t^n03^t5-1-3^t심상철^t최재원^t서지혜^t2.6^t1.2^t1.5^t4.1^t2^t1.8^t56343300^t317613800^t373957100^t0^t367015400^t6941700^t1.89^t^t^t^t^t^t^t^n04^t3-6-4^t정인교^t유해광^t진석현^t3.5^t1.4^t3.7^t17.9^t13.6^t6.7^t68390700^t353840800^t422231500^t0^t425410100^t-3178600^t-.75^t^t^t^t^t^t^t^n05^t6-5-1^t이승일^t강창효^t이종우^t7.8^t2.7^t4^t58.7^t25^t32.3^t77286400^t382717400^t460003800^t0^t479149900^t-19146100^t-4^t^t^t^t^t^t^t^n06^t1-4-6^t이지수^t서화모^t오승철^t2.1^t1.2^t1.5^t5.1^t2.8^t23.3^t75287300^t409594400^t484881700^t0^t469081700^t15800000^t3.37^t^t^t^t^t^t^t^n07^t6-2-1^t황이태^t민영건^t배혜민^t21.1^t7.4^t3.4^t84.1^t48^t14.6^t83973800^t442296200^t526270000^t0^t515496200^t10773800^t2.09^t^t^t^t^t^t^t^n08^t4-1-6^t신동길^t우진수^t구현구^t1.5^t1.2^t2^t5^t3^t6.1^t87946200^t465878600^t553824800^t0^t556565300^t-2740500^t-.49^t^t^t^t^t^t^t^n09^t2-4-1^t김정구^t손동민^t이흥우^t1.7^t1.2^t1.9^t4.5^t3.2^t3.3^t90588300^t496773300^t587361600^t0^t548482300^t38879300^t7.09^t^t^t^t^t^t^t^n10^t1-6-5^t김영욱^t사재준^t윤영근^t1.9^t1.3^t1.5^t4.4^t2.6^t3.6^t105524600^t548328500^t653853100^t0^t669189800^t-15336700^t-2.29^t^t^t^t^t^t^t^n11^t1-4-2^t심상철^t김민길^t박광혁^t1.8^t1.3^t3.6^t11.9^t8.6^t7.4^t102946300^t570560600^t673506900^t0^t707765400^t-34258500^t-4.84^t^t^t^t^t^t^t^n12^t1-4-6^t경상수^t김선필^t최재원^t2.4^t1.4^t8.3^t30.6^t24.2^t21.1^t115328700^t581139400^t696468100^t0^t682622600^t13845500^t2.03^t^t^t^t^t^t^t^n13^t5-3-1^t김효년^t문주엽^t주은석^t6^t2.3^t1.3^t14.7^t6.5^t3.3^t109989500^t598526200^t708515700^t0^t702342900^t6172800^t.88^t^t^t^t^t^t^t^n14^t2-4-3^t구현구^t장영태^t강창효^t1.7^t1.5^t1.7^t5.2^t3.7^t4.2^t105198100^t611299000^t716497100^t0^t698218300^t18278800^t2.62^t^t^t^t^t^t^t^n15^t3-5-1^t이태희^t어선규^t유해광^t2.2^t1.3^t1.5^t4^t2.5^t2.4^t105685700^t645669500^t751355200^t0^t735842100^t15513100^t2.11^t^t^t^t^t^t^t^n
>
[I][UbiData][2012-06-07 19:16:21][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 19:16:21][DATA QUERY START]
[I][UbiData][2012-06-07 19:16:21]	- sql id : rsm2020_s02Today
[I][UbiData][2012-06-07 19:16:21]	- Db charset : KSC5601
[I][UbiData][2012-06-07 19:16:21]	- Sql
<
SELECT                                                                                          
           MST.GBN       
         , YEAR.DIV_TOTAL AS YEAR_TOTAL 
         , YEAR.REFUND    AS YEAR_REFUND 
         , TMS.D_1 
         , TMS.D_2   
         , TMS.D_3   
         , TMS.D_4   
         , TMS.D_5   
         , TMS.D_6   
         , TMS.D_7   
         , TMS.TOTAL 
         , PRE.TOTAL AS PRE_TOTAL 
         , NVL(TMS.TOTAL, 0) - NVL(PRE .TOTAL, 0) ADD_POOL 
         , CASE WHEN (NVL(PRE.TOTAL, 0) = 0) AND (NVL(TMS.TOTAL, 0) = 0) THEN 0                  
                WHEN NVL(PRE.TOTAL, 0) = 0                               THEN 100                
                WHEN NVL(TMS.TOTAL, 0) = 0                                THEN -100              
                ELSE ROUND((NVL(TMS.TOTAL, 0) - NVL(PRE.TOTAL, 0)) / NVL(PRE.TOTAL, 0) * 100, 2) 
           END ADD_RATE 
  FROM                                                                                           
           (                                                                                     
              SELECT                                                                             
                       ?  STND_YEAR                                                      
                     , '매출총액' GBN                                                            
              FROM   DUAL                                                                        
           ) MST                                                                                 
         , (                                                                                     
              SELECT                                                                             
                       TMS.STND_YEAR                                                             
                     , MIN(DECODE(TMS.D, 1, TMS.AMOUNT)) D_1                                     
                     , MIN(DECODE(TMS.D, 2, TMS.AMOUNT)) D_2                                     
                     , MIN(DECODE(TMS.D, 3, TMS.AMOUNT)) D_3                                     
                     , MIN(DECODE(TMS.D, 4, TMS.AMOUNT)) D_4                                     
                     , MIN(DECODE(TMS.D, 5, TMS.AMOUNT)) D_5                                     
                     , MIN(DECODE(TMS.D, 6, TMS.AMOUNT)) D_6                                     
                     , MIN(DECODE(TMS.D, 7, TMS.AMOUNT)) D_7                                     
                     , SUM(TMS.AMOUNT)                   TOTAL                                   
              FROM   (                                                                           
                          SELECT                                                                 
                                   TSP.STND_YEAR                                                 
                                 , TO_CHAR(TO_DATE(INFO.RACE_DAY, 'YYYYMMDD'), 'D') D            
                                 , SUM(TSP.POOL_TOTAL) AMOUNT                                    
                          FROM     VW_SDL_INFO INFO                                              
                                 , TBES_SDL_PT       TSP                                         
                          WHERE  1=1
                          AND    INFO.STND_YEAR = TSP.STND_YEAR                                  
                          AND    INFO.MEET_CD    = TSP.MEET_CD                                   
                          AND    INFO.TMS       = TSP.TMS                                        
                          AND    INFO.DAY_ORD   = TSP.DAY_ORD                                    
                          AND    TSP.STND_YEAR  = ?   
                          AND    TSP.MEET_CD    = ?       
                          AND    TSP.TMS        = ?       
                          GROUP BY                                                               
                                   TSP.STND_YEAR                                                 
                                 , INFO.RACE_DAY                                                 
                     ) TMS                                                                       
              GROUP BY TMS.STND_YEAR                                                             
           ) TMS                                                                                 
         , (                                                                                     
              SELECT                                                                             
                       STND_YEAR                                                                 
                     , SUM(TSP.DIV_TOTAL) DIV_TOTAL                                              
                     , SUM(TSP.REFUND    ) REFUND                                                
              FROM   TBES_SDL_DT_SUM       TSP                                                       
              WHERE  TSP.STND_YEAR  = ?                                                  
              AND    TSP.MEET_CD    = ?                                                    
              AND    TSP.TMS       <= ?                                                        
              GROUP BY                                                                           
                       STND_YEAR                                                                 
           ) YEAR                                                                                
         , (                                                                                     
              SELECT                                                                             
                       STND_YEAR                                                                 
                     , TMS                                                                       
                     , NVL(SUM(TSP.POOL_TOTAL), 0)  TOTAL                                        
              FROM   TBES_SDL_PT       TSP                                                       
              WHERE  1=1
              AND TSP.STND_YEAR  = ? 
              AND    TSP.MEET_CD    = ?                                                    
              AND    TSP.TMS        = ?  - 1                                                   
              GROUP BY                                                                           
                       STND_YEAR                                                                 
                     , TMS                                                                       
           ) PRE                                                                                 
  WHERE  1=1
  AND   MST.STND_YEAR = TMS .STND_YEAR(+)                                                       
  AND    MST.STND_YEAR = YEAR.STND_YEAR(+)                                                       
  AND    MST.STND_YEAR = PRE .STND_YEAR(+)                                                       
  UNION ALL                                                                                      
  SELECT                                                                                         
           MST.GBN                                                                               
         , YEAR.DIV_TOTAL                   YEAR_TOTAL                                           
         , YEAR.REFUND                      YEAR_REFUND                                          
         , TMS.D_1                                                                               
         , TMS.D_2                                                                               
         , TMS.D_3                                                                               
         , TMS.D_4                                                                               
         , TMS.D_5                                                                               
         , TMS.D_6                                                                               
         , TMS.D_7                                                                               
         , TMS.TOTAL                                                                             
         , 0 PRE_TOTAL                                                                           
         , NVL(PRE .TOTAL, 0) - NVL(TMS.TOTAL, 0) ADD_POOL                                       
         , CASE WHEN (NVL(PRE.TOTAL, 0) = 0) AND (NVL(TMS.TOTAL, 0) = 0) THEN 0                  
                WHEN NVL(PRE.TOTAL, 0) = 0                               THEN -100               
                WHEN NVL(TMS.TOTAL, 0) = 0                                THEN 100               
                ELSE ROUND((NVL(PRE.TOTAL, 0) - NVL(TMS.TOTAL, 0)) / NVL(TMS.TOTAL, 0) * 100, 2) 
           END ADD_RATE                                                                          
  FROM                                                                                           
           (                                                                                     
              SELECT                                                                             
                       ?  -1 STND_YEAR                                                    
                     , '전년대비' GBN                                                            
              FROM   DUAL                                                                        
           ) MST                                                                                 
         , (                                                                                     
              SELECT                                                                             
                       TMS.STND_YEAR                                                             
                     , MIN(DECODE(TMS.D, 1, TMS.AMOUNT)) D_1                                     
                     , MIN(DECODE(TMS.D, 2, TMS.AMOUNT)) D_2                                     
                     , MIN(DECODE(TMS.D, 3, TMS.AMOUNT)) D_3                                     
                     , MIN(DECODE(TMS.D, 4, TMS.AMOUNT)) D_4                                     
                     , MIN(DECODE(TMS.D, 5, TMS.AMOUNT)) D_5                                     
                     , MIN(DECODE(TMS.D, 6, TMS.AMOUNT)) D_6                                     
                     , MIN(DECODE(TMS.D, 7, TMS.AMOUNT)) D_7                                     
                     , SUM(TMS.AMOUNT)                   TOTAL                                   
              FROM   (                                                                           
                          SELECT                                                                 
                                   TSP.STND_YEAR                                                 
                                 , TO_CHAR(TO_DATE(INFO.RACE_DAY, 'YYYYMMDD'), 'D') D            
                                 , SUM(TSP.POOL_TOTAL) AMOUNT                                    
                          FROM     VW_SDL_INFO INFO                                              
                                 , TBES_SDL_PT       TSP                                         
                          WHERE  1=1
                          AND  INFO.STND_YEAR = TSP.STND_YEAR                                  
                          AND    INFO.MEET_CD    = TSP.MEET_CD                                   
                          AND    INFO.TMS       = TSP.TMS                                        
                          AND    INFO.DAY_ORD   = TSP.DAY_ORD                                    
                          AND    TSP.STND_YEAR  =  ?  -1                                   
                          AND    TSP.MEET_CD    = ?                                        
                          AND    TSP.TMS        = ?                                            
                          GROUP BY                                                               
                                   TSP.STND_YEAR                                                 
                                 , INFO.RACE_DAY                                                 
                     ) TMS                                                                       
              GROUP BY TMS.STND_YEAR                                                             
           ) TMS                                                                                 
         , (                                                                                     
              SELECT                                                                             
                       STND_YEAR                                                                 
                     , SUM(TSP.DIV_TOTAL) DIV_TOTAL                                              
                     , SUM(TSP.REFUND    ) REFUND                                                
              FROM   TBES_SDL_DT_SUM       TSP                                                       
              WHERE  1=1
              AND TSP.STND_YEAR  = ?  -1                                               
              AND    TSP.MEET_CD    = ?                                                    
              AND    TSP.TMS       <= ?                                                        
              GROUP BY                                                                           
                       STND_YEAR                                                                 
           ) YEAR                                                                                
         , (                                                                                     
              SELECT                                                                             
                       STND_YEAR-1 STND_YEAR                                                     
                     , TMS                                                                       
                     , NVL(SUM(TSP.POOL_TOTAL), 0)  TOTAL                                        
              FROM   TBES_SDL_PT       TSP                                                       
              WHERE  1=1
              AND TSP.STND_YEAR  = ?                                                  
              AND    TSP.MEET_CD    = ?                                                    
              AND    TSP.TMS        = ?                                                        
              GROUP BY                                                                           
                       STND_YEAR                                                                 
                     , TMS                                                                       
           ) PRE                                                                                 
  WHERE  1=1
  AND MST.STND_YEAR = TMS.STND_YEAR(+)                                                        
  AND    MST.STND_YEAR = YEAR.STND_YEAR(+)                                                       
  AND    MST.STND_YEAR = PRE.STND_YEAR(+)
 #String#2012#String#2012#String#003#String#17#String#2012#String#003#String#17#String#2012#String#003#String#17#String#2012#String#2012#String#003#String#17#String#2012#String#003#String#17#String#2012#String#003#String#17#
>
[I][UbiData][2012-06-07 19:16:22]	- Row size : 2
[I][UbiData][2012-06-07 19:16:22]	- Data
<
매출총액^t255807593000^t4674302200^t^t^t^t^t8160323400^t^t^t8160323400^t16874921600^t-8714598200^t-51.64^t^n전년대비^t298819077500^t5513386200^t^t^t^t8970408300^t10464906900^t^t^t19435315200^t0^t-11274991800^t-58.01^t^n
>
[I][UbiData][2012-06-07 19:16:22][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 19:16:22][DATA QUERY START]
[I][UbiData][2012-06-07 19:16:22]	- sql id : rsm2020_s04
[I][UbiData][2012-06-07 19:16:22]	- Db charset : KSC5601
[I][UbiData][2012-06-07 19:16:22]	- Sql
<
SELECT 
   ROW_ORDER,
   MANA_DESC, 
   TOTAL        
        ,SUN_NUM     
        ,TUE_NUM     
        ,WEN_NUM     
        ,THU_NUM     
        ,TOT_PRSN_NUM,    
        
        B_TOT_PRSN_NUM,          
        
        CASE 
              WHEN ROW_ORDER='2' THEN N_TOT_PRSN_NUM - TOT_PRSN_NUM
              ELSE PRSN_NUM_MINUS
        END PRSN_NUM_MINUS,          
        
        ROUND(CASE 
              WHEN ROW_ORDER='2' THEN (N_TOT_PRSN_NUM - TOT_PRSN_NUM)/TOT_PRSN_NUM*100
              ELSE PER
        END,2) AS PER             
  FROM
 (
  
  SELECT '1' AS ROW_ORDER,
    '입장인원' AS MANA_DESC,
     A.TMS                                                               
        ,TOT_PRSN_NUM                     
        ,MON_NUM 
              ,TUE_NUM 
              ,WEN_NUM 
              ,THU_NUM 
              ,FRI_NUM 
              ,SAT_NUM 
              ,SUN_NUM 
              ,B_TOT_PRSN_NUM
              ,(TOT_PRSN_NUM-B_TOT_PRSN_NUM) AS PRSN_NUM_MINUS
              ,DECODE(B_TOT_PRSN_NUM,0,0,(TOT_PRSN_NUM-B_TOT_PRSN_NUM)/B_TOT_PRSN_NUM*100)  AS PER
              ,TOTAL          
  
    FROM
    
    
    (
    
     SELECT   MAX(TMS) TMS
           ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
           ,NVL(SUM(A.ENT_PRSN_NUM ),0)         TOT_PRSN_NUM                                                      
           
          
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'2', A.ENT_PRSN_NUM,0 )) ,0) MON_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'3', A.ENT_PRSN_NUM,0 )) ,0) TUE_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'4', A.ENT_PRSN_NUM,0 )) ,0) WEN_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'5', A.ENT_PRSN_NUM,0 )) ,0) THU_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'6', A.ENT_PRSN_NUM,0 )) ,0) FRI_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'7', A.ENT_PRSN_NUM,0 )) ,0) SAT_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'1', A.ENT_PRSN_NUM,0 )) ,0) SUN_NUM       
    
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) =  ?  
                AND MEET_CD = ?   
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE 1=1
             AND STND_YEAR = ?  
                AND MEET_CD = ? 
                AND TMS  = ?  
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    GROUP BY B.TMS
    ) A,
    
    
    (
    
     SELECT   
            MAX(TMS) TMS
           ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
           ,NVL(SUM(A.ENT_PRSN_NUM ),0)         B_TOT_PRSN_NUM  
           
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) =  ?  
                AND MEET_CD = ?    
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE 1=1
             AND STND_YEAR = ?    
                AND MEET_CD = ? 
                AND TMS  = ?  - 1   
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    GROUP BY B.TMS
    ) B,
    
    (
    
     SELECT NVL(SUM(A.ENT_PRSN_NUM ),0)         TOTAL  
           
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) = ?  
                AND MEET_CD = ?   
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE STND_YEAR = ?  
                AND MEET_CD = ? 
                AND TMS <= ?  
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    )C
  UNION ALL 
  
  
  SELECT '2' AS ROW_ORDER,
    '전년대비' AS MANA_DESC,
     A.TMS                                                               
        ,TOT_PRSN_NUM                     
        ,MON_NUM 
              ,TUE_NUM 
              ,WEN_NUM 
              ,THU_NUM 
              ,FRI_NUM 
              ,SAT_NUM 
              ,SUN_NUM 
              ,B_TOT_PRSN_NUM
              ,(TOT_PRSN_NUM-B_TOT_PRSN_NUM) AS PRSN_NUM_MINUS
              ,DECODE(B_TOT_PRSN_NUM,0,0,(TOT_PRSN_NUM-B_TOT_PRSN_NUM)/B_TOT_PRSN_NUM*100)  AS PER
              ,TOT          
  
    FROM
    
    
    (
    
     SELECT   MAX(TMS) TMS
           ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
           ,NVL(SUM(A.ENT_PRSN_NUM ),0)         TOT_PRSN_NUM                                                      
           
          
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'2', A.ENT_PRSN_NUM,0 )) ,0) MON_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'3', A.ENT_PRSN_NUM,0 )) ,0) TUE_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'4', A.ENT_PRSN_NUM,0 )) ,0) WEN_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'5', A.ENT_PRSN_NUM,0 )) ,0) THU_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'6', A.ENT_PRSN_NUM,0 )) ,0) FRI_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'7', A.ENT_PRSN_NUM,0 )) ,0) SAT_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'1', A.ENT_PRSN_NUM,0 )) ,0) SUN_NUM       
    
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) = ?  - 1  
                AND MEET_CD    = ?   
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE STND_YEAR = ?  - 1  
                AND MEET_CD =?  
                AND TMS  = ?    
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    GROUP BY B.TMS
    ) A,
    
    
    (
    
     SELECT   
            MAX(TMS) TMS
           ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
           ,NVL(SUM(A.ENT_PRSN_NUM ),0)         B_TOT_PRSN_NUM  
           
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) = ?  -1 
                AND MEET_CD = ?     
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE STND_YEAR = ?  - 1  
                AND MEET_CD = ? 
                AND TMS  = ?  - 1  
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    GROUP BY B.TMS
    ) B,
    
    (
    
     SELECT NVL(SUM(A.ENT_PRSN_NUM ),0)         TOT  
           
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) =  ?  -1 
                AND MEET_CD = '003'
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE STND_YEAR = ?  -1  
                AND MEET_CD = ? 
                AND TMS  <= ?   
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    )C
  ),
  (
  SELECT SUM(A.ENT_PRSN_NUM ) AS N_TOT_PRSN_NUM
      FROM 
          TBRC_STAY_MANA  A,       
          VW_SDL_INFO B
      WHERE 1 =1
        AND A.RACE_DT(+) = B.RACE_DAY
        AND B.STND_YEAR =  ?  
        AND B.MEET_CD = ?    
        AND B.TMS  = ?       
  )BB  
 ORDER BY MANA_DESC
 #String#2012#String#003#String#2012#String#003#String#17#String#2012#String#003#String#2012#String#003#String#17#String#2012#String#003#String#2012#String#003#String#17#String#2012#String#003#String#2012#String#003#String#17#String#2012#String#003#String#2012#String#003#String#17#String#2012#String#2012#String#003#String#17#String#2012#String#003#String#17#
>
[I][UbiData][2012-06-07 19:16:22]	- Row size : 2
[I][UbiData][2012-06-07 19:16:22]	- Data
<
1^t입장인원^t998229^t0^t0^t0^t32508^t32508^t67325^t-34817^t-51.71^t^n2^t전년대비^t1417977^t0^t0^t44040^t44345^t88385^t80393^t-55877^t-63.22^t^n
>
[I][UbiData][2012-06-07 19:16:22][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 19:16:22][DATA QUERY START]
[I][UbiData][2012-06-07 19:16:22]	- sql id : rsm2020_s07
[I][UbiData][2012-06-07 19:16:22]	- Db charset : KSC5601
[I][UbiData][2012-06-07 19:16:22]	- Sql
<
SELECT  
   '0~'||BB.RACE_NO||'R' AS RACE_DESC,
   DECODE(LEV,1,'인원','점유율') AS MANA_DESC,
      DECODE(LEV,1,INWON_12,DECODE(INWON_TOTAL,0,0,ROUND(INWON_12/INWON_TOTAL*100,2))) AS INWON_12, 
      DECODE(LEV,1,INWON_13,DECODE(INWON_TOTAL,0,0,ROUND(INWON_13/INWON_TOTAL*100,2))) AS INWON_13, 
      DECODE(LEV,1,INWON_14,DECODE(INWON_TOTAL,0,0,ROUND(INWON_14/INWON_TOTAL*100,2))) AS INWON_14, 
      DECODE(LEV,1,INWON_16,DECODE(INWON_TOTAL,0,0,ROUND(INWON_16/INWON_TOTAL*100,2))) AS INWON_16, 
      DECODE(LEV,1,INWON_19,DECODE(INWON_TOTAL,0,0,ROUND(INWON_19/INWON_TOTAL*100,2))) AS INWON_19, 
      DECODE(LEV,1,INWON_20,DECODE(INWON_TOTAL,0,0,ROUND(INWON_20/INWON_TOTAL*100,2))) AS INWON_20, 
      DECODE(LEV,1,INWON_22,DECODE(INWON_TOTAL,0,0,ROUND(INWON_22/INWON_TOTAL*100,2))) AS INWON_22, 
      DECODE(LEV,1,INWON_23,DECODE(INWON_TOTAL,0,0,ROUND(INWON_23/INWON_TOTAL*100,2))) AS INWON_23, 
      DECODE(LEV,1,INWON_24,DECODE(INWON_TOTAL,0,0,ROUND(INWON_24/INWON_TOTAL*100,2))) AS INWON_24, 
      DECODE(LEV,1,INWON_25,DECODE(INWON_TOTAL,0,0,ROUND(INWON_25/INWON_TOTAL*100,2))) AS INWON_25, 
      DECODE(LEV,1,INWON_26,DECODE(INWON_TOTAL,0,0,ROUND(INWON_26/INWON_TOTAL*100,2))) AS INWON_26, 
      DECODE(LEV,1,INWON_27,DECODE(INWON_TOTAL,0,0,ROUND(INWON_27/INWON_TOTAL*100,2))) AS INWON_27, 
      DECODE(LEV,1,INWON_28,DECODE(INWON_TOTAL,0,0,ROUND(INWON_28/INWON_TOTAL*100,2))) AS INWON_28, 
      DECODE(LEV,1,INWON_100,DECODE(INWON_TOTAL,0,0,ROUND(INWON_100/INWON_TOTAL*100,2))) AS INWON_100, 
      DECODE(LEV,1,INWON_101,DECODE(INWON_TOTAL,0,0,ROUND(INWON_101/INWON_TOTAL*100,2))) AS INWON_101, 
      DECODE(LEV,1,INWON_102,DECODE(INWON_TOTAL,0,0,ROUND(INWON_102/INWON_TOTAL*100,2))) AS INWON_102, 
      DECODE(LEV,1,INWON_103,DECODE(INWON_TOTAL,0,0,ROUND(INWON_103/INWON_TOTAL*100,2))) AS INWON_103, 
      DECODE(LEV,1,INWON_SUM,DECODE(INWON_TOTAL,0,0,ROUND(INWON_SUM/INWON_TOTAL*100,2))) AS INWON_TOTAL 
  FROM
 (
             SELECT  
        SUM(CASE WHEN BRNC_CD='12' THEN INWON END) AS INWON_12, 
        SUM(CASE WHEN BRNC_CD='13' THEN INWON END) AS INWON_13, 
        SUM(CASE WHEN BRNC_CD='14' THEN INWON END) AS INWON_14, 
        SUM(CASE WHEN BRNC_CD='16' THEN INWON END) AS INWON_16, 
        SUM(CASE WHEN BRNC_CD='19' THEN INWON END) AS INWON_19, 
        SUM(CASE WHEN BRNC_CD='20' THEN INWON END) AS INWON_20, 
        SUM(CASE WHEN BRNC_CD='22' THEN INWON END) AS INWON_22, 
        SUM(CASE WHEN BRNC_CD='23' THEN INWON END) AS INWON_23, 
        SUM(CASE WHEN BRNC_CD='24' THEN INWON END) AS INWON_24, 
        SUM(CASE WHEN BRNC_CD='25' THEN INWON END) AS INWON_25, 
        SUM(CASE WHEN BRNC_CD='26' THEN INWON END) AS INWON_26, 
        SUM(CASE WHEN BRNC_CD='27' THEN INWON END) AS INWON_27, 
        SUM(CASE WHEN BRNC_CD='28' THEN INWON END) AS INWON_28, 
        SUM(CASE WHEN BRNC_CD='100' THEN INWON END) AS INWON_100, 
        SUM(CASE WHEN BRNC_CD='101' THEN INWON END) AS INWON_101, 
        SUM(CASE WHEN BRNC_CD='102' THEN INWON END) AS INWON_102, 
        SUM(CASE WHEN BRNC_CD='103' THEN INWON END) AS INWON_103, 
        SUM(INWON ) AS INWON_TOTAL,
        SUM(CASE WHEN BRNC_CD='12' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='13' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='14' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='16' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='19' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='20' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='22' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='23' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='24' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='25' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='26' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='27' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='28' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='100' THEN INWON END) + 
                 SUM(CASE WHEN BRNC_CD='101' THEN INWON END) + 
                 SUM(CASE WHEN BRNC_CD='102' THEN INWON END) +
                 SUM(CASE WHEN BRNC_CD='103' THEN INWON END)  AS INWON_SUM 
     FROM
    (
    SELECT C.CD_NM, 
           E.BRNC_CD,                                      
            SUM( E.ENT_PRSN_NUM) INWON 
        FROM                                                   
         VW_SDL_INFO R       
         ,TBRC_STAY_MANA E, 
         TBRK_SPEC_CD C                      
        WHERE  1=1
           AND R.MEET_CD  = ?  
        AND R.STND_YEAR(+) = ?  
          AND R.TMS(+)   = ?  
          AND R.DAY_ORD(+) = ?  
         AND E.MEET_CD='003'                        
         AND E.RACE_DT=R.RACE_DAY                 
         AND C.GRP_CD IN ('018','032')                      
         AND C.CD=E.BRNC_CD                
         
        GROUP BY E.BRNC_CD,C.CD_NM          
        ORDER BY E.BRNC_CD
    )A
   )AA,
 (
  SELECT                                                                   
          MAX(RACE_NO)  AS RACE_NO
          
   FROM   (                                                                 
               SELECT                                                       
                        TOR.RACE_NO                                         
                      , TOR.RACE_REG_NO                                     
                      , TOR.RACER_NO                                        
                      , TOR.RANK                                            
                      , TRM.NM_KOR                                          
                      , RANK() OVER (PARTITION BY TOR.RACE_NO               
                                                , TOR.RANK                  
                                         ORDER BY TOR.RACE_REG_NO) SEQ      
               FROM     TBEB_ORGAN@MRASYSLINK        TOR                        
                      , TBEC_RACER_MASTER@MRASYSLINK TRM                        
               WHERE 1=1                                                        
               
               AND    TOR.RACER_NO   = TRM.RACER_NO                         
               AND    TOR.STND_YEAR  = ?  
               AND    TOR.MBR_CD     = '001'                                
               AND    TOR.TMS        = ?  
               
               AND    TOR.RANK BETWEEN 1                                    
                                   AND 3                                    
          )                                                                 
   START WITH SEQ = 1                                                       
   CONNECT BY PRIOR SEQ = SEQ - 1                                           
   AND PRIOR RACE_NO = RACE_NO AND RANK = RANK                           
 )BB , (SELECT LEVEL LEV FROM DUAL CONNECT BY LEVEL <=2 ) DU
 #String#003#String#2012#String#17#String#1#String#2012#String#17#
>
[I][UbiData][2012-06-07 19:16:22]	- Row size : 2
[I][UbiData][2012-06-07 19:16:22]	- Data
<
0~15R^t인원^t2680^t2455^t3022^t3198^t3442^t2948^t1271^t1987^t1627^t1257^t988^t3289^t1143^t0^t0^t0^t0^t29307^t^n0~15R^t점유율^t8.24^t7.55^t9.3^t9.84^t10.59^t9.07^t3.91^t6.11^t5^t3.87^t3.04^t10.12^t3.52^t0^t0^t0^t0^t90.15^t^n
>
[I][UbiData][2012-06-07 19:16:22][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 19:16:22][DATA QUERY START]
[I][UbiData][2012-06-07 19:16:22]	- sql id : rsm2020_s08
[I][UbiData][2012-06-07 19:16:22]	- Db charset : KSC5601
[I][UbiData][2012-06-07 19:16:22]	- Sql
<
SELECT                                       
       STND_YEAR,  
       TMS,           
       DAY_ORD,   
       SPEC_DESC   
  FROM TBRD_RACE_SPEC_DESC 
  WHERE 1=1
       AND STND_YEAR = ?  
       AND TMS  = ?  
       AND DAY_ORD = ?  
       AND MEET_CD   = ?  
 UNION ALL
 SELECT 
       ' ', 999, 999, ' '
 FROM DUAL          
 ORDER BY TMS
 #String#2012#String#17#String#1#String#003#
>
[I][UbiData][2012-06-07 19:16:22]	- Row size : 1
[I][UbiData][2012-06-07 19:16:22]	- Data
<
 ^t999^t999^t ^t^n
>
[I][UbiData][2012-06-07 19:16:22][DATA QUERY END]
--------------------------------------------------------------------------------


[I][UbiForm][2012-06-07 19:17:16][REQUEST FILE]
[I][UbiForm][2012-06-07 19:17:16]	- Report : /web/waspage/usrbm/report/rsm/rsm2020.jrf
[I][UbiForm][2012-06-07 19:17:16]	- Common : /web/waspage/usrbm/report/rsm/property/commonitem.xml [Not found]
--------------------------------------------------------------------------------


[I][UbiData][2012-06-07 19:17:16][REQUEST FILE]
[I][UbiData][2012-06-07 19:17:16]	- Report : rsm2020.jrf
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 19:17:16][DB CONNECT]
[I][UbiData][2012-06-07 19:17:16]	- Type : nonlookup
[I][UbiData][2012-06-07 19:17:16]	- Db id : rbm
[I][UbiData][2012-06-07 19:17:16]	- Sql id : rsm2020_s06Today
[I][UbiData][2012-06-07 19:17:16]	- Datasource : jdbc/RBM
[I][UbiData][2012-06-07 19:17:16]	- Status : Success
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 19:17:16][DATA QUERY START]
[I][UbiData][2012-06-07 19:17:16]	- sql id : rsm2020_s06Today
[I][UbiData][2012-06-07 19:17:16]	- Db charset : KSC5601
[I][UbiData][2012-06-07 19:17:16]	- Sql
<
WITH J 
 AS
 (SELECT    
         '전회' AS COL_DESC  
     , tms                                                                                       
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='12' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_02    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='16' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_06    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='22'  THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_12    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='20' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_10    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='23' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_13    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='24' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_14    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='13' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_03    
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='25'  THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_15    
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='19' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_09    
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='14' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_05    
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='26' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_16    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='27' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_17    
     , SUM(                                                                              
           CASE                                                                          
              WHEN COMM_NO='06'  THEN NVL(DIV_TOTAL, 0)                                  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_01_06_01    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='28' THEN NVL(DIV_TOTAL, 0) 
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_01_07_18    
         , SUM(                                                                              
               CASE                                                                          
                  WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_04_07_01    
         , SUM(                                                                              
               CASE                                                                          
                  WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='02' THEN NVL(DIV_TOTAL, 0)  
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_04_07_02    
        , SUM(                                                                              
               CASE                                                                          
                  WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='03' THEN NVL(DIV_TOTAL, 0)  
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_04_07_03    
         , SUM(                                                                              
               CASE                                                                          
                  WHEN SELL_CD='02' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_02_07_01    
 
         , SUM(                                                                              
               CASE                                                                          
                  WHEN COMM_NO NOT IN ('01','02','03','04','08') THEN NVL(DIV_TOTAL, 0)                         
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_JIJUM    
         , SUM(DIV_TOTAL)/100 DIV_TOTAL                                                             
  FROM   TBES_SDL_DT_SUM                                                                         
  WHERE  1=1                                                                                    
    AND STND_YEAR  = ?                                                            
    AND MEET_CD    = ?                                                        
    AND TMS        BETWEEN ?  - 1 AND ? 
    AND DAY_ORD    = ? 
  GROUP BY TMS 
 )
 SELECT  DECODE(TMS, ? , '합계','전회') COL_DESC
        , TMS
        ,'1' AS GUBN
        ,DIV_01_07_02 
        ,DIV_01_07_06 
        ,DIV_01_07_12 
        ,DIV_01_07_10 
        ,DIV_01_07_13 
        ,DIV_01_07_14 
        ,DIV_01_07_03 
        ,DIV_01_07_15 
        ,DIV_01_07_09 
        ,DIV_01_07_05 
        ,DIV_01_07_16 
        ,DIV_01_07_17 
        ,DIV_01_06_01 
        ,DIV_01_07_18 
        ,DIV_04_07_01 
        ,DIV_04_07_02 
        ,DIV_04_07_03 
        ,DIV_02_07_01
        ,DIV_JIJUM
        ,1
 FROM J
 UNION ALL
 SELECT '점유율'
       , TMS
       , '2'
       , ROUND(DIV_01_07_02 / DIV_TOTAL * 100, 2) 
       , ROUND(DIV_01_07_06 / DIV_TOTAL * 100, 2)   
       , ROUND(DIV_01_07_12 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_10 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_13 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_14 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_03 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_15 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_09 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_05 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_16 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_17 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_06_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_18 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_02 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_03 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_02_07_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_JIJUM / DIV_TOTAL * 100, 2)    
       , 100
 FROM J
 WHERE tms = ? 
 UNION ALL
 SELECT '전회차'
       , TMS
       , '2'
       , ROUND(DIV_01_07_02 / DIV_TOTAL * 100, 2) 
       , ROUND(DIV_01_07_06 / DIV_TOTAL * 100, 2)   
       , ROUND(DIV_01_07_12 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_10 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_13 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_14 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_03 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_15 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_09 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_05 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_16 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_17 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_06_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_18 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_02 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_03 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_02_07_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_JIJUM / DIV_TOTAL * 100, 2)    
       , 100
 FROM J
 WHERE TMS = ?  -1
 ORDER BY 3, 2 DESC
 #String#2012#String#003#String#17#String#17#String#1#String#17#String#17#String#17#
>
[I][UbiData][2012-06-07 19:17:16]	- Row size : 4
[I][UbiData][2012-06-07 19:17:16]	- Data
<
합계^t17^t1^t5759243^t6768872^t3464367^t4581356^t3964638^t6685253^t3899352^t3606854^t6970537^t6270105^t3005424^t6179547^t172346^t2917226^t1910858^t2796109^t0^t0^t68952087^t1^t^n전회^t16^t1^t5110145^t6625240^t3652284^t4516474^t4532647^t6596680^t4323166^t3600994^t7080707^t6011354^t3246328^t5786326^t150613^t2709578^t1871131^t2728615^t0^t0^t68542282^t1^t^n점유율^t17^t2^t7.06^t8.29^t4.25^t5.61^t4.86^t8.19^t4.78^t4.42^t8.54^t7.68^t3.68^t7.57^t.21^t3.57^t2.34^t3.43^t0^t0^t84.5^t100^t^n전회차^t16^t2^t6.31^t8.17^t4.51^t5.57^t5.59^t8.14^t5.33^t4.44^t8.74^t7.42^t4.01^t7.14^t.19^t3.34^t2.31^t3.37^t0^t0^t84.57^t100^t^n
>
[I][UbiData][2012-06-07 19:17:16][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 19:17:16][DATA QUERY START]
[I][UbiData][2012-06-07 19:17:16]	- sql id : rsm2020_s11
[I][UbiData][2012-06-07 19:17:16]	- Db charset : KSC5601
[I][UbiData][2012-06-07 19:17:16]	- Sql
<
SELECT 
         '0~'||BB.RACE_NO||'R' AS RACE_DESC,
         DECODE(LEV,1,'인원','점유율') AS MANA_DESC,
         CASE 
             WHEN LEV='2' AND IN_PRSN_NUM > 0 AND TOT_PRSN_NUM > 0 THEN ROUND(IN_PRSN_NUM / TOT_PRSN_NUM *100,2)    
             ELSE IN_PRSN_NUM
        END AS IN_PRSN_NUM, 
        CASE 
             WHEN LEV='2' AND BRNC_PRSN_NUM > 0 AND TOT_PRSN_NUM > 0 THEN ROUND(BRNC_PRSN_NUM / TOT_PRSN_NUM *100,2)    
             ELSE BRNC_PRSN_NUM
        END AS BRNC_PRSN_NUM, 
        CASE 
             WHEN LEV='2' AND TOT_PRSN_NUM > 0 THEN ROUND(TOT_PRSN_NUM / TOT_PRSN_NUM *100,2)    
             ELSE TOT_PRSN_NUM
        END AS TOT_PRSN_NUM, 
        CASE 
             WHEN LEV='1' THEN B_TOT_PRSN_NUM
        END AS B_TOT_PRSN_NUM, 
        CASE 
             WHEN LEV='1' THEN MINUS_PRSN_NUM
        END AS MINUS_PRSN_NUM, 
        CASE 
 
             WHEN LEV='1' AND TOT_PRSN_NUM>0 AND B_TOT_PRSN_NUM >0 THEN ROUND((TOT_PRSN_NUM - B_TOT_PRSN_NUM) / B_TOT_PRSN_NUM*100,2)
        END AS PER_PRSN_NUM 
 FROM
 (
      SELECT DU.LEV,
             SUM(CASE WHEN R.TMS =DU.TMS AND BRNC_CD = '98' THEN E.ENT_PRSN_NUM END) AS IN_PRSN_NUM,    
              SUM(CASE WHEN R.TMS =DU.TMS AND BRNC_CD <> '98' THEN E.ENT_PRSN_NUM END) AS BRNC_PRSN_NUM,    
              SUM(CASE WHEN R.TMS =DU.TMS THEN E.ENT_PRSN_NUM END) AS TOT_PRSN_NUM,    
              SUM(CASE WHEN R.TMS =DU.B_TMS THEN E.ENT_PRSN_NUM END) AS B_TOT_PRSN_NUM,    
              (SUM(CASE WHEN R.TMS =DU.TMS THEN E.ENT_PRSN_NUM END) - SUM(CASE WHEN R.TMS =DU.B_TMS THEN E.ENT_PRSN_NUM END)) AS MINUS_PRSN_NUM    
                      
          FROM                                                   
              TBRC_STAY_MANA E,    
              TBRK_SPEC_CD C,
              VW_SDL_INFO R,       
              (SELECT LEVEL AS LEV, ?  AS TMS,(?  - 1) AS B_TMS FROM DUAL CONNECT BY LEVEL<=2) DU 
          WHERE  1=1                
            AND E.BRNC_CD    = C.CD
            AND E.RACE_DT    = R.RACE_DAY                 
            AND C.GRP_CD        IN ('018','032')    
            AND R.MEET_CD    = '003'   
            AND R.STND_YEAR    = ?         
            AND R.TMS IN (? , ?  - 1)    
            AND R.DAY_ORD ='2'             
          GROUP BY DU.LEV
 )AA,
 (
     SELECT                                                                   
          MAX(RACE_NO)  AS RACE_NO
       FROM   (                                                                 
                   SELECT                                                       
                            TOR.RACE_NO                                         
                          , TOR.RACE_REG_NO                                     
                          , TOR.RACER_NO                                        
                          , TOR.RANK                                            
                          , TRM.NM_KOR                                          
                          , RANK() OVER (PARTITION BY TOR.RACE_NO               
                                                    , TOR.RANK                  
                                             ORDER BY TOR.RACE_REG_NO) SEQ      
                   FROM     TBEB_ORGAN@MRASYSLINK        TOR                        
                          , TBEC_RACER_MASTER@MRASYSLINK TRM                        
                   WHERE 1=1                                                        
                           
                   AND    TOR.RACER_NO   = TRM.RACER_NO                         
                   AND    TOR.STND_YEAR  = ?         
                   AND    TOR.MBR_CD     = '001'                                
                   AND    TOR.TMS        = ?         
                           
                   AND    TOR.RANK BETWEEN 1                                    
                                       AND 3                                    
              )                                                                 
       START WITH SEQ = 1                                                       
       CONNECT BY PRIOR SEQ = SEQ - 1                                           
       AND PRIOR RACE_NO = RACE_NO AND RANK = RANK     
 )BB
 ORDER BY AA.LEV
 #String#17#String#17#String#2012#String#17#String#17#String#2012#String#17#
>
[I][UbiData][2012-06-07 19:17:16]	- Row size : 2
[I][UbiData][2012-06-07 19:17:16]	- Data
<
0~15R^t인원^t^t^t^t33830^t^t^t^n0~15R^t점유율^t^t^t^t^t^t^t^n
>
[I][UbiData][2012-06-07 19:17:16][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 19:17:16][DATA QUERY START]
[I][UbiData][2012-06-07 19:17:16]	- sql id : rsm2020_s01
[I][UbiData][2012-06-07 19:17:16]	- Db charset : KSC5601
[I][UbiData][2012-06-07 19:17:16]	- Sql
<
SELECT 
           AA.MEET_CD,      
           AA.STND_YEAR,    
           AA.TMS,          
           AA.DAY_ORD,      
           TO_CHAR(TO_DATE(AA.RACE_DAY,'YYYYMMDD'),'YYYY-MM-DD') AS RACE_DAY, 
           AA.RACE_YOIL,    
           TO_CHAR(TO_DATE(AA.RACE_DAY,'YYYYMMDD'),'YYYY')||'년 '||AA.TMS||'회차 '||AA.DAY_ORD||'일차 ('|| TO_CHAR(TO_DATE(AA.RACE_DAY,'YYYYMMDD'),'YYYY-MM-DD')||') 경주 개최 결과'  
           AS RACE_DAY_INFO  
     
       FROM (         
             SELECT                              
             MEET_CD,      
             STND_YEAR,    
             TMS,          
             DAY_ORD,      
             RACE_DAY,     
             RACE_YOIL,    
             DECODE(RACE_YOIL,'MON','월','TUE','화','WED','수','THE','목','FRI','금','SAT','토','SUN','일','일') AS RACE_YOIL_KOR, 
             TO_CHAR(TO_DATE(RACE_DAY,'YYYYMMDD'),'YYYY-MM-DD')||
             ' ('||RACE_YOIL||') '||TMS||'회차 '||DAY_ORD||'일차'  
             AS RACE_INFO  
      FROM                                
             VW_SDL_INFO      
      WHERE  1=1                             
             AND MEET_CD = ?   
            AND STND_YEAR = ?   
            AND TMS= ?     
            AND DAY_ORD = ?        
    )AA
 #String#003#String#2012#String#17#String#1#
>
[I][UbiData][2012-06-07 19:17:16]	- Row size : 1
[I][UbiData][2012-06-07 19:17:16]	- Data
<
003^t2012^t17^t1^t2012-06-07^tTHU^t2012년 17회차 1일차 (2012-06-07) 경주 개최 결과^t^n
>
[I][UbiData][2012-06-07 19:17:16][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 19:17:16][DATA QUERY START]
[I][UbiData][2012-06-07 19:17:16]	- sql id : rsm2020_s05Today
[I][UbiData][2012-06-07 19:17:16]	- Db charset : KSC5601
[I][UbiData][2012-06-07 19:17:16]	- Sql
<
SELECT                                                                                      
       DECODE(GROUPING(RACE_NO),0,RACE_NO,'TOTAL') RACE_NO 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='12' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_02 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='16' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_06 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='22'  THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_12 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='20' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_10 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='23' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_13 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='24' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_14 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='13' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_03 
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='25'  THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_15 
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='19' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_09 
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='14' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_05 
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='26' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_16 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='27' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_17 
     , SUM(                                                                              
           CASE                                                                          
              WHEN COMM_NO='06'  THEN NVL(DIV_TOTAL, 0)                                  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_01_06_01 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='28' THEN NVL(DIV_TOTAL, 0) 
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_01_07_18 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_04_07_01 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='02' THEN NVL(DIV_TOTAL, 0)  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_04_07_02 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='03' THEN NVL(DIV_TOTAL, 0)  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_04_07_03    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='02' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_02_07_01 
     , SUM(                                                                              
           CASE                                                                          
              WHEN  COMM_NO NOT IN ('01','02','03','04','08') THEN NVL(DIV_TOTAL, 0)                         
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_JIJUM  
 
     , SUM(DIV_TOTAL)/100 DIV_TOTAL                                                          
 FROM   TBES_SDL_DT                                                                         
 WHERE   1=1                                                                                   
      AND STND_YEAR  = ?                                                             
      AND    MEET_CD    = ?                                                        
      AND    TMS        = ?                                                            
      AND    DAY_ORD    = ?                                                        
 
 GROUP BY RACE_NO                                                                                   
       
 ORDER BY RACE_NO
 #String#2012#String#003#String#17#String#1#
>
[I][UbiData][2012-06-07 19:17:16]	- Row size : 15
[I][UbiData][2012-06-07 19:17:16]	- Data
<
01^t140920^t197602^t96849^t127436^t119903^t187379^t128299^t116374^t219027^t183487^t108516^t160073^t7355^t93039^t59949^t93886^t0^t0^t2040094^t2396211^t^n02^t191278^t267508^t123529^t187360^t147399^t249704^t155747^t145620^t287810^t240820^t134529^t231415^t9365^t106436^t78894^t112202^t0^t0^t2669616^t3119757^t^n03^t218916^t312291^t160473^t214643^t185000^t303210^t189537^t171252^t321899^t281904^t151802^t275390^t11275^t162159^t84773^t131614^t0^t0^t3176138^t3739571^t^n04^t280723^t349162^t162668^t220723^t205104^t363694^t198947^t193854^t366506^t314797^t163251^t307239^t11636^t153198^t99509^t147397^t0^t0^t3538408^t4222315^t^n05^t293914^t356666^t179380^t247835^t236853^t376743^t193986^t198487^t385927^t363196^t170821^t362879^t10456^t178289^t114597^t157145^t0^t0^t3827174^t4600038^t^n06^t320577^t410766^t191760^t262742^t239275^t397830^t224139^t213663^t422296^t374549^t185676^t384443^t13418^t167359^t119122^t168329^t0^t0^t4095944^t4848817^t^n07^t373535^t432760^t204667^t303599^t258807^t408985^t246625^t214315^t457794^t408705^t182639^t417527^t12501^t187942^t128436^t184125^t0^t0^t4422962^t5262700^t^n08^t401087^t454010^t227928^t317354^t270820^t432896^t260257^t226171^t475649^t433911^t198906^t420465^t13274^t209941^t132238^t183879^t0^t0^t4658786^t5538248^t^n09^t437100^t484053^t233189^t323376^t300022^t463847^t282180^t288344^t503532^t460256^t213710^t426704^t12038^t218223^t137100^t184059^t0^t0^t4967733^t5873616^t^n10^t470862^t541950^t272328^t368669^t328440^t540666^t313885^t273198^t534426^t520280^t238905^t480109^t11995^t217489^t148525^t221558^t0^t0^t5483285^t6538531^t^n11^t466591^t561617^t317067^t365940^t318869^t591737^t323108^t316413^t577350^t534047^t224160^t502776^t13236^t222034^t156791^t213870^t0^t0^t5705606^t6735069^t^n12^t517154^t573936^t314455^t371388^t339082^t549091^t330869^t298274^t572163^t534089^t257848^t538886^t9827^t224241^t153182^t226909^t0^t0^t5811394^t6964681^t^n13^t526295^t583973^t330714^t397538^t324448^t593547^t335641^t314764^t598821^t528560^t248840^t537767^t13014^t243974^t168937^t238429^t0^t0^t5985262^t7085157^t^n14^t544820^t611235^t322648^t422943^t330535^t594065^t339607^t303922^t617748^t541795^t257654^t539796^t11784^t260972^t158394^t255072^t0^t0^t6112990^t7164971^t^n15^t575471^t631343^t326712^t449810^t360081^t631859^t376525^t332203^t629589^t549709^t268167^t594078^t11172^t271930^t170411^t277635^t0^t0^t6456695^t7513552^t^n
>
[I][UbiData][2012-06-07 19:17:16][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 19:17:16][DATA QUERY START]
[I][UbiData][2012-06-07 19:17:16]	- sql id : rsm2020_s03Today
[I][UbiData][2012-06-07 19:17:16]	- Db charset : KSC5601
[I][UbiData][2012-06-07 19:17:16]	- Sql
<
SELECT                                                                                    
      Z.RACE_NO, 
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          FC_GET_RSLT_RANK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO)                
      END RSLT_RANK, 
      R.RANK_1,  
      R.RANK_2,  
      R.RANK_3,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '001', NULL) 
      END WIN,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '002', '1')  
      END PLC,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '002', '2')  
      END PLC2,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '004', NULL) 
      END EX,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '005', NULL) 
      END QU,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '006', NULL) 
      END TRI,  
      D.BONJANG_TOTAL/1000 AS BONJANG_TOTAL, 
      D.JIJUM_TOTAL/1000 AS JIJUM_TOTAL,  
      D.DIV_TOTAL/1000 AS DIV_TOTAL,  
      NVL(D.REFUND,0)/1000 AS REFUND, 
      NVL(B.B_DIV_TOTAL,0)/1000 AS B_DIV_TOTAL,    
      NVL2(D.DIV_TOTAL, NVL((C.DIV_TOTAL-B.B_DIV_TOTAL),0),0)/1000 AS PLUS_MINUS, 
      CASE                                                                                  
          WHEN B.B_DIV_TOTAL<>0 THEN                                                        
          ROUND((C.DIV_TOTAL-B.B_DIV_TOTAL)/B.B_DIV_TOTAL*100,2)                            
          ELSE 0                                                                            
      END RATE,   
      SAME_PAYOFF_TOTAL,  
      SAME_PAYOFF_001, 
   SAME_PAYOFF_002, 
   SAME_PAYOFF_004, 
   SAME_PAYOFF_005, 
   SAME_PAYOFF_006 
  FROM   
   
      (   
                                                                 
          SELECT                                                                            
                D.MEET_CD,                                                                   
                D.STND_YEAR,                                                                 
                D.TMS,                                                                       
                D.DAY_ORD,                                                                   
                DECODE(D.RACE_NO,NULL,'TOTAL',D.RACE_NO) RACE_NO,                              
                SUM(                                                                        
                    CASE                                                                    
                      WHEN D.SELL_CD='03' THEN D.DIV_TOTAL                                    
                      ELSE 0                                                                
                    END                                                                     
                ) BONJANG_TOTAL,                                                            
                SUM(                                                                        
                    CASE                                                                    
                      WHEN D.SELL_CD !='03' THEN D.DIV_TOTAL                                     
                    END                                                                     
                ) JIJUM_TOTAL,                                                              
                SUM(D.REFUND) REFUND,
                SUM(D.DIV_TOTAL) AS DIV_TOTAL                                                         
          FROM   TBES_SDL_DT D                                                              
          WHERE 1=1                                                                             
              AND D.STND_YEAR(+)  = ? 
              AND D.MEET_CD(+)    = ? 
              AND D.TMS(+)        = ? 
              AND D.DAY_ORD(+)    = ? 
          GROUP BY                                                                          
                D.MEET_CD,                                                                   
                D.STND_YEAR,                                                                 
                D.TMS,                                                                       
                D.DAY_ORD,                                                                   
                ROLLUP(D.RACE_NO)                                                           
      ) D,                                                                                  
      (                                                                                     
         SELECT                                                                             
            P.MEET_CD,                                                                      
            P.STND_YEAR,                                                                    
            P.TMS,                                                                          
            P.DAY_ORD,                                                                      
            DECODE(P.RACE_NO,NULL,'TOTAL',P.RACE_NO) RACE_NO,                               
            SUM(POOL_TOTAL) DIV_TOTAL                                                       
         FROM                                                                               
             TBES_SDL_PT P                                                                  
         WHERE 1=1                                                                              
             AND P.STND_YEAR  = ? 
             AND P.MEET_CD    = ? 
             AND P.TMS        = ? 
             AND P.DAY_ORD    = ? 
         GROUP BY                                                                           
            P.MEET_CD,                                                                      
            P.STND_YEAR,                                                                    
            P.TMS,                                                                          
            P.DAY_ORD,                                                                      
            ROLLUP(P.RACE_NO)                                                               
      ) C,                                                                                  
      (                                                                                     
          SELECT                                                                            
                DECODE(RACE_NO,NULL,'TOTAL',RACE_NO) RACE_NO,                               
                SUM(DIV_TOTAL) B_DIV_TOTAL                                                  
          FROM   TBES_SDL_DT                                                                
          WHERE 1=1                                                                            
              AND  STND_YEAR  = ? 
              AND    MEET_CD    = ? 
              AND    TMS        = ?  -1                                                    
              AND    DAY_ORD    = ? 
          GROUP BY                                                                          
                ROLLUP(RACE_NO)                                                             
      ) B,                                                                                  
      (                                                                                     
          SELECT                                                                            
                RACE_NO                                                                     
              , MIN(DECODE(RANK, '1', NM_KOR)) RANK_1                                       
              , MIN(DECODE(RANK, '2', NM_KOR)) RANK_2                                       
              , MIN(DECODE(RANK, '3', NM_KOR)) RANK_3                                       
          FROM   (                                                                          
                   SELECT                                                                   
                            RACE_NO                                                         
                          , RANK                                                            
                          , SUBSTR(MAX(SYS_CONNECT_BY_PATH (NM_KOR, '/')), 2) NM_KOR        
                   FROM   (                                                                 
                               SELECT                                                       
                                        TOR.RACE_NO                                         
                                      , TOR.RACE_REG_NO                                     
                                      , TOR.RACER_NO                                        
                                      , TOR.RANK                                            
                                      , TRM.NM_KOR                                          
                                      , RANK() OVER (PARTITION BY TOR.RACE_NO               
                                                                , TOR.RANK                  
                                                         ORDER BY TOR.RACE_REG_NO) SEQ      
                               FROM     TBEB_ORGAN@MRASYSLINK        TOR                        
                                      , TBEC_RACER_MASTER@MRASYSLINK TRM                        
                               WHERE 1=1                
                               AND    TOR.RACER_NO   = TRM.RACER_NO                         
                               AND    TOR.STND_YEAR  = ? 
                               AND    TOR.MBR_CD     = '001'                                
                               AND    TOR.TMS        = ? 
                               AND    TOR.DAY_ORD    = ? 
                               AND    TOR.RANK BETWEEN 1                                    
                                                   AND 3                                    
                          )                                                                 
                   START WITH SEQ = 1                                                       
                   CONNECT BY PRIOR SEQ = SEQ - 1                                           
                   AND PRIOR RACE_NO = RACE_NO AND RANK = RANK                              
                   GROUP BY                                                                 
                            RACE_NO                                                         
                          , RANK                                                            
               )                                                                            
          GROUP BY RACE_NO                                                                  
          UNION ALL                                                                         
          SELECT 'TOTAL', '', '', '' FROM DUAL                                              
      ) R, 
      (   
     
       SELECT                                                                         
          RACE_NO,
            SUM(CASE 
                     WHEN POOL_CD = '001' AND RS_SEQ >= '2' THEN PAYOFF 
                     WHEN POOL_CD = '002' AND RS_SEQ >= '3' THEN PAYOFF 
                     WHEN POOL_CD = '004' AND RS_SEQ >= '2' THEN PAYOFF 
                     WHEN POOL_CD = '005' AND RS_SEQ >= '2' THEN PAYOFF 
                     WHEN POOL_CD = '006' AND RS_SEQ >= '2' THEN PAYOFF 
            END) AS SAME_PAYOFF_TOTAL, 
                               
            SUM(CASE WHEN POOL_CD = '001' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_001, 
            SUM(CASE WHEN POOL_CD = '002' AND RS_SEQ >= '3' THEN PAYOFF END) AS SAME_PAYOFF_002, 
            SUM(CASE WHEN POOL_CD = '004' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_004, 
            SUM(CASE WHEN POOL_CD = '005' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_005, 
            SUM(CASE WHEN POOL_CD = '006' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_006 
      FROM TBES_SDL_RS                                                                
      WHERE 1=1                                                                          
          AND MEET_CD  = '003'                                                              
          AND STND_YEAR = ?      
          AND TMS   = ?      
          AND DAY_ORD  = ?      
      GROUP BY          
       RACE_NO                                                              
 
   ) E,                                                                                  
  (                                       
    SELECT DISTINCT RACE_NO           
    FROM TBEB_RACE_DOC@MRASYSLINK D        
      WHERE 1=1                          
          AND D.STND_YEAR= ? 
          AND D.TMS=? 
           AND D.DAY_ORD=? 
 
   ) Z                                   
  WHERE 1=1                                                                                    
      AND C.RACE_NO(+)=Z.RACE_NO                                                                
      AND B.RACE_NO(+)=Z.RACE_NO                                                            
      AND R.RACE_NO(+)=Z.RACE_NO                                                            
      AND D.RACE_NO(+)=Z.RACE_NO
      AND E.RACE_NO(+)=Z.RACE_NO                                                            
  ORDER BY Z.RACE_NO
 #String#2012#String#003#String#17#String#1#String#2012#String#003#String#17#String#1#String#2012#String#003#String#17#String#1#String#2012#String#17#String#1#String#2012#String#17#String#1#String#2012#String#17#String#1#
>
[I][UbiData][2012-06-07 19:17:17]	- Row size : 15
[I][UbiData][2012-06-07 19:17:17]	- Data
<
01^t3-5-6^t윤영근^t배혜민^t박광혁^t4.9^t1.5^t2.5^t15.2^t9.6^t12.6^t35611.7^t204009.4^t239621.1^t0^t241173.8^t-1552.7^t-.64^t^t^t^t^t^t^t^n02^t2-1-6^t사재준^t김민길^t이주영^t1.3^t1^t2.3^t5^t3.6^t8.6^t45014.1^t266961.6^t311975.7^t0^t306515.1^t5460.6^t1.78^t^t^t^t^t^t^t^n03^t5-1-3^t심상철^t최재원^t서지혜^t2.6^t1.2^t1.5^t4.1^t2^t1.8^t56343.3^t317613.8^t373957.1^t0^t367015.4^t6941.7^t1.89^t^t^t^t^t^t^t^n04^t3-6-4^t정인교^t유해광^t진석현^t3.5^t1.4^t3.7^t17.9^t13.6^t6.7^t68390.7^t353840.8^t422231.5^t0^t425410.1^t-3178.6^t-.75^t^t^t^t^t^t^t^n05^t6-5-1^t이승일^t강창효^t이종우^t7.8^t2.7^t4^t58.7^t25^t32.3^t77286.4^t382717.4^t460003.8^t0^t479149.9^t-19146.1^t-4^t^t^t^t^t^t^t^n06^t1-4-6^t이지수^t서화모^t오승철^t2.1^t1.2^t1.5^t5.1^t2.8^t23.3^t75287.3^t409594.4^t484881.7^t0^t469081.7^t15800^t3.37^t^t^t^t^t^t^t^n07^t6-2-1^t황이태^t민영건^t배혜민^t21.1^t7.4^t3.4^t84.1^t48^t14.6^t83973.8^t442296.2^t526270^t0^t515496.2^t10773.8^t2.09^t^t^t^t^t^t^t^n08^t4-1-6^t신동길^t우진수^t구현구^t1.5^t1.2^t2^t5^t3^t6.1^t87946.2^t465878.6^t553824.8^t0^t556565.3^t-2740.5^t-.49^t^t^t^t^t^t^t^n09^t2-4-1^t김정구^t손동민^t이흥우^t1.7^t1.2^t1.9^t4.5^t3.2^t3.3^t90588.3^t496773.3^t587361.6^t0^t548482.3^t38879.3^t7.09^t^t^t^t^t^t^t^n10^t1-6-5^t김영욱^t사재준^t윤영근^t1.9^t1.3^t1.5^t4.4^t2.6^t3.6^t105524.6^t548328.5^t653853.1^t0^t669189.8^t-15336.7^t-2.29^t^t^t^t^t^t^t^n11^t1-4-2^t심상철^t김민길^t박광혁^t1.8^t1.3^t3.6^t11.9^t8.6^t7.4^t102946.3^t570560.6^t673506.9^t0^t707765.4^t-34258.5^t-4.84^t^t^t^t^t^t^t^n12^t1-4-6^t경상수^t김선필^t최재원^t2.4^t1.4^t8.3^t30.6^t24.2^t21.1^t115328.7^t581139.4^t696468.1^t0^t682622.6^t13845.5^t2.03^t^t^t^t^t^t^t^n13^t5-3-1^t김효년^t문주엽^t주은석^t6^t2.3^t1.3^t14.7^t6.5^t3.3^t109989.5^t598526.2^t708515.7^t0^t702342.9^t6172.8^t.88^t^t^t^t^t^t^t^n14^t2-4-3^t구현구^t장영태^t강창효^t1.7^t1.5^t1.7^t5.2^t3.7^t4.2^t105198.1^t611299^t716497.1^t0^t698218.3^t18278.8^t2.62^t^t^t^t^t^t^t^n15^t3-5-1^t이태희^t어선규^t유해광^t2.2^t1.3^t1.5^t4^t2.5^t2.4^t105685.7^t645669.5^t751355.2^t0^t735842.1^t15513.1^t2.11^t^t^t^t^t^t^t^n
>
[I][UbiData][2012-06-07 19:17:17][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 19:17:17][DATA QUERY START]
[I][UbiData][2012-06-07 19:17:17]	- sql id : rsm2020_s02Today
[I][UbiData][2012-06-07 19:17:17]	- Db charset : KSC5601
[I][UbiData][2012-06-07 19:17:17]	- Sql
<
SELECT                                                                                          
           MST.GBN       
         , YEAR.DIV_TOTAL AS YEAR_TOTAL 
         , YEAR.REFUND    AS YEAR_REFUND 
         , TMS.D_1 
         , TMS.D_2   
         , TMS.D_3   
         , TMS.D_4   
         , TMS.D_5   
         , TMS.D_6   
         , TMS.D_7   
         , TMS.TOTAL 
         , PRE.TOTAL AS PRE_TOTAL 
         , NVL(TMS.TOTAL, 0) - NVL(PRE .TOTAL, 0) ADD_POOL 
         , CASE WHEN (NVL(PRE.TOTAL, 0) = 0) AND (NVL(TMS.TOTAL, 0) = 0) THEN 0                  
                WHEN NVL(PRE.TOTAL, 0) = 0                               THEN 100                
                WHEN NVL(TMS.TOTAL, 0) = 0                                THEN -100              
                ELSE ROUND((NVL(TMS.TOTAL, 0) - NVL(PRE.TOTAL, 0)) / NVL(PRE.TOTAL, 0) * 100, 2) 
           END ADD_RATE 
  FROM                                                                                           
           (                                                                                     
              SELECT                                                                             
                       ?  STND_YEAR                                                      
                     , '매출총액' GBN                                                            
              FROM   DUAL                                                                        
           ) MST                                                                                 
         , (                                                                                     
              SELECT                                                                             
                       TMS.STND_YEAR                                                             
                     , MIN(DECODE(TMS.D, 1, TMS.AMOUNT)) D_1                                     
                     , MIN(DECODE(TMS.D, 2, TMS.AMOUNT)) D_2                                     
                     , MIN(DECODE(TMS.D, 3, TMS.AMOUNT)) D_3                                     
                     , MIN(DECODE(TMS.D, 4, TMS.AMOUNT)) D_4                                     
                     , MIN(DECODE(TMS.D, 5, TMS.AMOUNT)) D_5                                     
                     , MIN(DECODE(TMS.D, 6, TMS.AMOUNT)) D_6                                     
                     , MIN(DECODE(TMS.D, 7, TMS.AMOUNT)) D_7                                     
                     , SUM(TMS.AMOUNT)                   TOTAL                                   
              FROM   (                                                                           
                          SELECT                                                                 
                                   TSP.STND_YEAR                                                 
                                 , TO_CHAR(TO_DATE(INFO.RACE_DAY, 'YYYYMMDD'), 'D') D            
                                 , SUM(TSP.POOL_TOTAL) AMOUNT                                    
                          FROM     VW_SDL_INFO INFO                                              
                                 , TBES_SDL_PT       TSP                                         
                          WHERE  1=1
                          AND    INFO.STND_YEAR = TSP.STND_YEAR                                  
                          AND    INFO.MEET_CD    = TSP.MEET_CD                                   
                          AND    INFO.TMS       = TSP.TMS                                        
                          AND    INFO.DAY_ORD   = TSP.DAY_ORD                                    
                          AND    TSP.STND_YEAR  = ?   
                          AND    TSP.MEET_CD    = ?       
                          AND    TSP.TMS        = ?       
                          GROUP BY                                                               
                                   TSP.STND_YEAR                                                 
                                 , INFO.RACE_DAY                                                 
                     ) TMS                                                                       
              GROUP BY TMS.STND_YEAR                                                             
           ) TMS                                                                                 
         , (                                                                                     
              SELECT                                                                             
                       STND_YEAR                                                                 
                     , SUM(TSP.DIV_TOTAL) DIV_TOTAL                                              
                     , SUM(TSP.REFUND    ) REFUND                                                
              FROM   TBES_SDL_DT_SUM       TSP                                                       
              WHERE  TSP.STND_YEAR  = ?                                                  
              AND    TSP.MEET_CD    = ?                                                    
              AND    TSP.TMS       <= ?                                                        
              GROUP BY                                                                           
                       STND_YEAR                                                                 
           ) YEAR                                                                                
         , (                                                                                     
              SELECT                                                                             
                       STND_YEAR                                                                 
                     , TMS                                                                       
                     , NVL(SUM(TSP.POOL_TOTAL), 0)  TOTAL                                        
              FROM   TBES_SDL_PT       TSP                                                       
              WHERE  1=1
              AND TSP.STND_YEAR  = ? 
              AND    TSP.MEET_CD    = ?                                                    
              AND    TSP.TMS        = ?  - 1                                                   
              GROUP BY                                                                           
                       STND_YEAR                                                                 
                     , TMS                                                                       
           ) PRE                                                                                 
  WHERE  1=1
  AND   MST.STND_YEAR = TMS .STND_YEAR(+)                                                       
  AND    MST.STND_YEAR = YEAR.STND_YEAR(+)                                                       
  AND    MST.STND_YEAR = PRE .STND_YEAR(+)                                                       
  UNION ALL                                                                                      
  SELECT                                                                                         
           MST.GBN                                                                               
         , YEAR.DIV_TOTAL                   YEAR_TOTAL                                           
         , YEAR.REFUND                      YEAR_REFUND                                          
         , TMS.D_1                                                                               
         , TMS.D_2                                                                               
         , TMS.D_3                                                                               
         , TMS.D_4                                                                               
         , TMS.D_5                                                                               
         , TMS.D_6                                                                               
         , TMS.D_7                                                                               
         , TMS.TOTAL                                                                             
         , 0 PRE_TOTAL                                                                           
         , NVL(PRE .TOTAL, 0) - NVL(TMS.TOTAL, 0) ADD_POOL                                       
         , CASE WHEN (NVL(PRE.TOTAL, 0) = 0) AND (NVL(TMS.TOTAL, 0) = 0) THEN 0                  
                WHEN NVL(PRE.TOTAL, 0) = 0                               THEN -100               
                WHEN NVL(TMS.TOTAL, 0) = 0                                THEN 100               
                ELSE ROUND((NVL(PRE.TOTAL, 0) - NVL(TMS.TOTAL, 0)) / NVL(TMS.TOTAL, 0) * 100, 2) 
           END ADD_RATE                                                                          
  FROM                                                                                           
           (                                                                                     
              SELECT                                                                             
                       ?  -1 STND_YEAR                                                    
                     , '전년대비' GBN                                                            
              FROM   DUAL                                                                        
           ) MST                                                                                 
         , (                                                                                     
              SELECT                                                                             
                       TMS.STND_YEAR                                                             
                     , MIN(DECODE(TMS.D, 1, TMS.AMOUNT)) D_1                                     
                     , MIN(DECODE(TMS.D, 2, TMS.AMOUNT)) D_2                                     
                     , MIN(DECODE(TMS.D, 3, TMS.AMOUNT)) D_3                                     
                     , MIN(DECODE(TMS.D, 4, TMS.AMOUNT)) D_4                                     
                     , MIN(DECODE(TMS.D, 5, TMS.AMOUNT)) D_5                                     
                     , MIN(DECODE(TMS.D, 6, TMS.AMOUNT)) D_6                                     
                     , MIN(DECODE(TMS.D, 7, TMS.AMOUNT)) D_7                                     
                     , SUM(TMS.AMOUNT)                   TOTAL                                   
              FROM   (                                                                           
                          SELECT                                                                 
                                   TSP.STND_YEAR                                                 
                                 , TO_CHAR(TO_DATE(INFO.RACE_DAY, 'YYYYMMDD'), 'D') D            
                                 , SUM(TSP.POOL_TOTAL) AMOUNT                                    
                          FROM     VW_SDL_INFO INFO                                              
                                 , TBES_SDL_PT       TSP                                         
                          WHERE  1=1
                          AND  INFO.STND_YEAR = TSP.STND_YEAR                                  
                          AND    INFO.MEET_CD    = TSP.MEET_CD                                   
                          AND    INFO.TMS       = TSP.TMS                                        
                          AND    INFO.DAY_ORD   = TSP.DAY_ORD                                    
                          AND    TSP.STND_YEAR  =  ?  -1                                   
                          AND    TSP.MEET_CD    = ?                                        
                          AND    TSP.TMS        = ?                                            
                          GROUP BY                                                               
                                   TSP.STND_YEAR                                                 
                                 , INFO.RACE_DAY                                                 
                     ) TMS                                                                       
              GROUP BY TMS.STND_YEAR                                                             
           ) TMS                                                                                 
         , (                                                                                     
              SELECT                                                                             
                       STND_YEAR                                                                 
                     , SUM(TSP.DIV_TOTAL) DIV_TOTAL                                              
                     , SUM(TSP.REFUND    ) REFUND                                                
              FROM   TBES_SDL_DT_SUM       TSP                                                       
              WHERE  1=1
              AND TSP.STND_YEAR  = ?  -1                                               
              AND    TSP.MEET_CD    = ?                                                    
              AND    TSP.TMS       <= ?                                                        
              GROUP BY                                                                           
                       STND_YEAR                                                                 
           ) YEAR                                                                                
         , (                                                                                     
              SELECT                                                                             
                       STND_YEAR-1 STND_YEAR                                                     
                     , TMS                                                                       
                     , NVL(SUM(TSP.POOL_TOTAL), 0)  TOTAL                                        
              FROM   TBES_SDL_PT       TSP                                                       
              WHERE  1=1
              AND TSP.STND_YEAR  = ?                                                  
              AND    TSP.MEET_CD    = ?                                                    
              AND    TSP.TMS        = ?                                                        
              GROUP BY                                                                           
                       STND_YEAR                                                                 
                     , TMS                                                                       
           ) PRE                                                                                 
  WHERE  1=1
  AND MST.STND_YEAR = TMS.STND_YEAR(+)                                                        
  AND    MST.STND_YEAR = YEAR.STND_YEAR(+)                                                       
  AND    MST.STND_YEAR = PRE.STND_YEAR(+)
 #String#2012#String#2012#String#003#String#17#String#2012#String#003#String#17#String#2012#String#003#String#17#String#2012#String#2012#String#003#String#17#String#2012#String#003#String#17#String#2012#String#003#String#17#
>
[I][UbiData][2012-06-07 19:17:17]	- Row size : 2
[I][UbiData][2012-06-07 19:17:17]	- Data
<
매출총액^t255807593000^t4674302200^t^t^t^t^t8160323400^t^t^t8160323400^t16874921600^t-8714598200^t-51.64^t^n전년대비^t298819077500^t5513386200^t^t^t^t8970408300^t10464906900^t^t^t19435315200^t0^t-11274991800^t-58.01^t^n
>
[I][UbiData][2012-06-07 19:17:17][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 19:17:17][DATA QUERY START]
[I][UbiData][2012-06-07 19:17:17]	- sql id : rsm2020_s04
[I][UbiData][2012-06-07 19:17:17]	- Db charset : KSC5601
[I][UbiData][2012-06-07 19:17:17]	- Sql
<
SELECT 
   ROW_ORDER,
   MANA_DESC, 
   TOTAL        
        ,SUN_NUM     
        ,TUE_NUM     
        ,WEN_NUM     
        ,THU_NUM     
        ,TOT_PRSN_NUM,    
        
        B_TOT_PRSN_NUM,          
        
        CASE 
              WHEN ROW_ORDER='2' THEN N_TOT_PRSN_NUM - TOT_PRSN_NUM
              ELSE PRSN_NUM_MINUS
        END PRSN_NUM_MINUS,          
        
        ROUND(CASE 
              WHEN ROW_ORDER='2' THEN (N_TOT_PRSN_NUM - TOT_PRSN_NUM)/TOT_PRSN_NUM*100
              ELSE PER
        END,2) AS PER             
  FROM
 (
  
  SELECT '1' AS ROW_ORDER,
    '입장인원' AS MANA_DESC,
     A.TMS                                                               
        ,TOT_PRSN_NUM                     
        ,MON_NUM 
              ,TUE_NUM 
              ,WEN_NUM 
              ,THU_NUM 
              ,FRI_NUM 
              ,SAT_NUM 
              ,SUN_NUM 
              ,B_TOT_PRSN_NUM
              ,(TOT_PRSN_NUM-B_TOT_PRSN_NUM) AS PRSN_NUM_MINUS
              ,DECODE(B_TOT_PRSN_NUM,0,0,(TOT_PRSN_NUM-B_TOT_PRSN_NUM)/B_TOT_PRSN_NUM*100)  AS PER
              ,TOTAL          
  
    FROM
    
    
    (
    
     SELECT   MAX(TMS) TMS
           ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
           ,NVL(SUM(A.ENT_PRSN_NUM ),0)         TOT_PRSN_NUM                                                      
           
          
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'2', A.ENT_PRSN_NUM,0 )) ,0) MON_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'3', A.ENT_PRSN_NUM,0 )) ,0) TUE_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'4', A.ENT_PRSN_NUM,0 )) ,0) WEN_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'5', A.ENT_PRSN_NUM,0 )) ,0) THU_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'6', A.ENT_PRSN_NUM,0 )) ,0) FRI_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'7', A.ENT_PRSN_NUM,0 )) ,0) SAT_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'1', A.ENT_PRSN_NUM,0 )) ,0) SUN_NUM       
    
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) =  ?  
                AND MEET_CD = ?   
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE 1=1
             AND STND_YEAR = ?  
                AND MEET_CD = ? 
                AND TMS  = ?  
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    GROUP BY B.TMS
    ) A,
    
    
    (
    
     SELECT   
            MAX(TMS) TMS
           ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
           ,NVL(SUM(A.ENT_PRSN_NUM ),0)         B_TOT_PRSN_NUM  
           
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) =  ?  
                AND MEET_CD = ?    
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE 1=1
             AND STND_YEAR = ?    
                AND MEET_CD = ? 
                AND TMS  = ?  - 1   
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    GROUP BY B.TMS
    ) B,
    
    (
    
     SELECT NVL(SUM(A.ENT_PRSN_NUM ),0)         TOTAL  
           
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) = ?  
                AND MEET_CD = ?   
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE STND_YEAR = ?  
                AND MEET_CD = ? 
                AND TMS <= ?  
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    )C
  UNION ALL 
  
  
  SELECT '2' AS ROW_ORDER,
    '전년대비' AS MANA_DESC,
     A.TMS                                                               
        ,TOT_PRSN_NUM                     
        ,MON_NUM 
              ,TUE_NUM 
              ,WEN_NUM 
              ,THU_NUM 
              ,FRI_NUM 
              ,SAT_NUM 
              ,SUN_NUM 
              ,B_TOT_PRSN_NUM
              ,(TOT_PRSN_NUM-B_TOT_PRSN_NUM) AS PRSN_NUM_MINUS
              ,DECODE(B_TOT_PRSN_NUM,0,0,(TOT_PRSN_NUM-B_TOT_PRSN_NUM)/B_TOT_PRSN_NUM*100)  AS PER
              ,TOT          
  
    FROM
    
    
    (
    
     SELECT   MAX(TMS) TMS
           ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
           ,NVL(SUM(A.ENT_PRSN_NUM ),0)         TOT_PRSN_NUM                                                      
           
          
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'2', A.ENT_PRSN_NUM,0 )) ,0) MON_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'3', A.ENT_PRSN_NUM,0 )) ,0) TUE_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'4', A.ENT_PRSN_NUM,0 )) ,0) WEN_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'5', A.ENT_PRSN_NUM,0 )) ,0) THU_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'6', A.ENT_PRSN_NUM,0 )) ,0) FRI_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'7', A.ENT_PRSN_NUM,0 )) ,0) SAT_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'1', A.ENT_PRSN_NUM,0 )) ,0) SUN_NUM       
    
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) = ?  - 1  
                AND MEET_CD    = ?   
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE STND_YEAR = ?  - 1  
                AND MEET_CD =?  
                AND TMS  = ?    
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    GROUP BY B.TMS
    ) A,
    
    
    (
    
     SELECT   
            MAX(TMS) TMS
           ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
           ,NVL(SUM(A.ENT_PRSN_NUM ),0)         B_TOT_PRSN_NUM  
           
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) = ?  -1 
                AND MEET_CD = ?     
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE STND_YEAR = ?  - 1  
                AND MEET_CD = ? 
                AND TMS  = ?  - 1  
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    GROUP BY B.TMS
    ) B,
    
    (
    
     SELECT NVL(SUM(A.ENT_PRSN_NUM ),0)         TOT  
           
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) =  ?  -1 
                AND MEET_CD = '003'
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE STND_YEAR = ?  -1  
                AND MEET_CD = ? 
                AND TMS  <= ?   
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    )C
  ),
  (
  SELECT SUM(A.ENT_PRSN_NUM ) AS N_TOT_PRSN_NUM
      FROM 
          TBRC_STAY_MANA  A,       
          VW_SDL_INFO B
      WHERE 1 =1
        AND A.RACE_DT(+) = B.RACE_DAY
        AND B.STND_YEAR =  ?  
        AND B.MEET_CD = ?    
        AND B.TMS  = ?       
  )BB  
 ORDER BY MANA_DESC
 #String#2012#String#003#String#2012#String#003#String#17#String#2012#String#003#String#2012#String#003#String#17#String#2012#String#003#String#2012#String#003#String#17#String#2012#String#003#String#2012#String#003#String#17#String#2012#String#003#String#2012#String#003#String#17#String#2012#String#2012#String#003#String#17#String#2012#String#003#String#17#
>
[I][UbiData][2012-06-07 19:17:17]	- Row size : 2
[I][UbiData][2012-06-07 19:17:17]	- Data
<
1^t입장인원^t998229^t0^t0^t0^t32508^t32508^t67325^t-34817^t-51.71^t^n2^t전년대비^t1417977^t0^t0^t44040^t44345^t88385^t80393^t-55877^t-63.22^t^n
>
[I][UbiData][2012-06-07 19:17:17][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 19:17:17][DATA QUERY START]
[I][UbiData][2012-06-07 19:17:17]	- sql id : rsm2020_s07
[I][UbiData][2012-06-07 19:17:17]	- Db charset : KSC5601
[I][UbiData][2012-06-07 19:17:17]	- Sql
<
SELECT  
   '0~'||BB.RACE_NO||'R' AS RACE_DESC,
   DECODE(LEV,1,'인원','점유율') AS MANA_DESC,
      DECODE(LEV,1,INWON_12,DECODE(INWON_TOTAL,0,0,ROUND(INWON_12/INWON_TOTAL*100,2))) AS INWON_12, 
      DECODE(LEV,1,INWON_13,DECODE(INWON_TOTAL,0,0,ROUND(INWON_13/INWON_TOTAL*100,2))) AS INWON_13, 
      DECODE(LEV,1,INWON_14,DECODE(INWON_TOTAL,0,0,ROUND(INWON_14/INWON_TOTAL*100,2))) AS INWON_14, 
      DECODE(LEV,1,INWON_16,DECODE(INWON_TOTAL,0,0,ROUND(INWON_16/INWON_TOTAL*100,2))) AS INWON_16, 
      DECODE(LEV,1,INWON_19,DECODE(INWON_TOTAL,0,0,ROUND(INWON_19/INWON_TOTAL*100,2))) AS INWON_19, 
      DECODE(LEV,1,INWON_20,DECODE(INWON_TOTAL,0,0,ROUND(INWON_20/INWON_TOTAL*100,2))) AS INWON_20, 
      DECODE(LEV,1,INWON_22,DECODE(INWON_TOTAL,0,0,ROUND(INWON_22/INWON_TOTAL*100,2))) AS INWON_22, 
      DECODE(LEV,1,INWON_23,DECODE(INWON_TOTAL,0,0,ROUND(INWON_23/INWON_TOTAL*100,2))) AS INWON_23, 
      DECODE(LEV,1,INWON_24,DECODE(INWON_TOTAL,0,0,ROUND(INWON_24/INWON_TOTAL*100,2))) AS INWON_24, 
      DECODE(LEV,1,INWON_25,DECODE(INWON_TOTAL,0,0,ROUND(INWON_25/INWON_TOTAL*100,2))) AS INWON_25, 
      DECODE(LEV,1,INWON_26,DECODE(INWON_TOTAL,0,0,ROUND(INWON_26/INWON_TOTAL*100,2))) AS INWON_26, 
      DECODE(LEV,1,INWON_27,DECODE(INWON_TOTAL,0,0,ROUND(INWON_27/INWON_TOTAL*100,2))) AS INWON_27, 
      DECODE(LEV,1,INWON_28,DECODE(INWON_TOTAL,0,0,ROUND(INWON_28/INWON_TOTAL*100,2))) AS INWON_28, 
      DECODE(LEV,1,INWON_100,DECODE(INWON_TOTAL,0,0,ROUND(INWON_100/INWON_TOTAL*100,2))) AS INWON_100, 
      DECODE(LEV,1,INWON_101,DECODE(INWON_TOTAL,0,0,ROUND(INWON_101/INWON_TOTAL*100,2))) AS INWON_101, 
      DECODE(LEV,1,INWON_102,DECODE(INWON_TOTAL,0,0,ROUND(INWON_102/INWON_TOTAL*100,2))) AS INWON_102, 
      DECODE(LEV,1,INWON_103,DECODE(INWON_TOTAL,0,0,ROUND(INWON_103/INWON_TOTAL*100,2))) AS INWON_103, 
      DECODE(LEV,1,INWON_SUM,DECODE(INWON_TOTAL,0,0,ROUND(INWON_SUM/INWON_TOTAL*100,2))) AS INWON_TOTAL 
  FROM
 (
             SELECT  
        SUM(CASE WHEN BRNC_CD='12' THEN INWON END) AS INWON_12, 
        SUM(CASE WHEN BRNC_CD='13' THEN INWON END) AS INWON_13, 
        SUM(CASE WHEN BRNC_CD='14' THEN INWON END) AS INWON_14, 
        SUM(CASE WHEN BRNC_CD='16' THEN INWON END) AS INWON_16, 
        SUM(CASE WHEN BRNC_CD='19' THEN INWON END) AS INWON_19, 
        SUM(CASE WHEN BRNC_CD='20' THEN INWON END) AS INWON_20, 
        SUM(CASE WHEN BRNC_CD='22' THEN INWON END) AS INWON_22, 
        SUM(CASE WHEN BRNC_CD='23' THEN INWON END) AS INWON_23, 
        SUM(CASE WHEN BRNC_CD='24' THEN INWON END) AS INWON_24, 
        SUM(CASE WHEN BRNC_CD='25' THEN INWON END) AS INWON_25, 
        SUM(CASE WHEN BRNC_CD='26' THEN INWON END) AS INWON_26, 
        SUM(CASE WHEN BRNC_CD='27' THEN INWON END) AS INWON_27, 
        SUM(CASE WHEN BRNC_CD='28' THEN INWON END) AS INWON_28, 
        SUM(CASE WHEN BRNC_CD='100' THEN INWON END) AS INWON_100, 
        SUM(CASE WHEN BRNC_CD='101' THEN INWON END) AS INWON_101, 
        SUM(CASE WHEN BRNC_CD='102' THEN INWON END) AS INWON_102, 
        SUM(CASE WHEN BRNC_CD='103' THEN INWON END) AS INWON_103, 
        SUM(INWON ) AS INWON_TOTAL,
        SUM(CASE WHEN BRNC_CD='12' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='13' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='14' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='16' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='19' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='20' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='22' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='23' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='24' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='25' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='26' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='27' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='28' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='100' THEN INWON END) + 
                 SUM(CASE WHEN BRNC_CD='101' THEN INWON END) + 
                 SUM(CASE WHEN BRNC_CD='102' THEN INWON END) +
                 SUM(CASE WHEN BRNC_CD='103' THEN INWON END)  AS INWON_SUM 
     FROM
    (
    SELECT C.CD_NM, 
           E.BRNC_CD,                                      
            SUM( E.ENT_PRSN_NUM) INWON 
        FROM                                                   
         VW_SDL_INFO R       
         ,TBRC_STAY_MANA E, 
         TBRK_SPEC_CD C                      
        WHERE  1=1
           AND R.MEET_CD  = ?  
        AND R.STND_YEAR(+) = ?  
          AND R.TMS(+)   = ?  
          AND R.DAY_ORD(+) = ?  
         AND E.MEET_CD='003'                        
         AND E.RACE_DT=R.RACE_DAY                 
         AND C.GRP_CD IN ('018','032')                      
         AND C.CD=E.BRNC_CD                
         
        GROUP BY E.BRNC_CD,C.CD_NM          
        ORDER BY E.BRNC_CD
    )A
   )AA,
 (
  SELECT                                                                   
          MAX(RACE_NO)  AS RACE_NO
          
   FROM   (                                                                 
               SELECT                                                       
                        TOR.RACE_NO                                         
                      , TOR.RACE_REG_NO                                     
                      , TOR.RACER_NO                                        
                      , TOR.RANK                                            
                      , TRM.NM_KOR                                          
                      , RANK() OVER (PARTITION BY TOR.RACE_NO               
                                                , TOR.RANK                  
                                         ORDER BY TOR.RACE_REG_NO) SEQ      
               FROM     TBEB_ORGAN@MRASYSLINK        TOR                        
                      , TBEC_RACER_MASTER@MRASYSLINK TRM                        
               WHERE 1=1                                                        
               
               AND    TOR.RACER_NO   = TRM.RACER_NO                         
               AND    TOR.STND_YEAR  = ?  
               AND    TOR.MBR_CD     = '001'                                
               AND    TOR.TMS        = ?  
               
               AND    TOR.RANK BETWEEN 1                                    
                                   AND 3                                    
          )                                                                 
   START WITH SEQ = 1                                                       
   CONNECT BY PRIOR SEQ = SEQ - 1                                           
   AND PRIOR RACE_NO = RACE_NO AND RANK = RANK                           
 )BB , (SELECT LEVEL LEV FROM DUAL CONNECT BY LEVEL <=2 ) DU
 #String#003#String#2012#String#17#String#1#String#2012#String#17#
>
[I][UbiData][2012-06-07 19:17:17]	- Row size : 2
[I][UbiData][2012-06-07 19:17:17]	- Data
<
0~15R^t인원^t2680^t2455^t3022^t3198^t3442^t2948^t1271^t1987^t1627^t1257^t988^t3289^t1143^t0^t0^t0^t0^t29307^t^n0~15R^t점유율^t8.24^t7.55^t9.3^t9.84^t10.59^t9.07^t3.91^t6.11^t5^t3.87^t3.04^t10.12^t3.52^t0^t0^t0^t0^t90.15^t^n
>
[I][UbiData][2012-06-07 19:17:17][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 19:17:17][DATA QUERY START]
[I][UbiData][2012-06-07 19:17:17]	- sql id : rsm2020_s08
[I][UbiData][2012-06-07 19:17:17]	- Db charset : KSC5601
[I][UbiData][2012-06-07 19:17:17]	- Sql
<
SELECT                                       
       STND_YEAR,  
       TMS,           
       DAY_ORD,   
       SPEC_DESC   
  FROM TBRD_RACE_SPEC_DESC 
  WHERE 1=1
       AND STND_YEAR = ?  
       AND TMS  = ?  
       AND DAY_ORD = ?  
       AND MEET_CD   = ?  
 UNION ALL
 SELECT 
       ' ', 999, 999, ' '
 FROM DUAL          
 ORDER BY TMS
 #String#2012#String#17#String#1#String#003#
>
[I][UbiData][2012-06-07 19:17:17]	- Row size : 1
[I][UbiData][2012-06-07 19:17:17]	- Data
<
 ^t999^t999^t ^t^n
>
[I][UbiData][2012-06-07 19:17:17][DATA QUERY END]
--------------------------------------------------------------------------------


[I][UbiForm][2012-06-07 23:10:48][REQUEST FILE]
[I][UbiForm][2012-06-07 23:10:48]	- Report : /web/waspage/usrbm/report/rsm/rsm2020.jrf
[I][UbiForm][2012-06-07 23:10:48]	- Common : /web/waspage/usrbm/report/rsm/property/commonitem.xml [Not found]
--------------------------------------------------------------------------------


[I][UbiData][2012-06-07 23:10:48][REQUEST FILE]
[I][UbiData][2012-06-07 23:10:48]	- Report : rsm2020.jrf
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 23:10:48][DB CONNECT]
[I][UbiData][2012-06-07 23:10:48]	- Type : nonlookup
[I][UbiData][2012-06-07 23:10:48]	- Db id : rbm
[I][UbiData][2012-06-07 23:10:48]	- Sql id : rsm2020_s06Today
[I][UbiData][2012-06-07 23:10:48]	- Datasource : jdbc/RBM
[I][UbiData][2012-06-07 23:10:48]	- Status : Success
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 23:10:48][DATA QUERY START]
[I][UbiData][2012-06-07 23:10:48]	- sql id : rsm2020_s06Today
[I][UbiData][2012-06-07 23:10:48]	- Db charset : KSC5601
[I][UbiData][2012-06-07 23:10:48]	- Sql
<
WITH J 
 AS
 (SELECT    
         '전회' AS COL_DESC  
     , tms                                                                                       
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='12' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_02    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='16' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_06    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='22'  THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_12    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='20' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_10    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='23' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_13    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='24' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_14    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='13' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_03    
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='25'  THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_15    
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='19' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_09    
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='14' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_05    
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='26' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_16    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='27' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_17    
     , SUM(                                                                              
           CASE                                                                          
              WHEN COMM_NO='06'  THEN NVL(DIV_TOTAL, 0)                                  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_01_06_01    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='28' THEN NVL(DIV_TOTAL, 0) 
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_01_07_18    
         , SUM(                                                                              
               CASE                                                                          
                  WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_04_07_01    
         , SUM(                                                                              
               CASE                                                                          
                  WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='02' THEN NVL(DIV_TOTAL, 0)  
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_04_07_02    
        , SUM(                                                                              
               CASE                                                                          
                  WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='03' THEN NVL(DIV_TOTAL, 0)  
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_04_07_03    
         , SUM(                                                                              
               CASE                                                                          
                  WHEN SELL_CD='02' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_02_07_01    
 
         , SUM(                                                                              
               CASE                                                                          
                  WHEN COMM_NO NOT IN ('01','02','03','04','08') THEN NVL(DIV_TOTAL, 0)                         
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_JIJUM    
         , SUM(DIV_TOTAL)/100 DIV_TOTAL                                                             
  FROM   TBES_SDL_DT_SUM                                                                         
  WHERE  1=1                                                                                    
    AND STND_YEAR  = ?                                                            
    AND MEET_CD    = ?                                                        
    AND TMS        BETWEEN ?  - 1 AND ? 
    AND DAY_ORD    = ? 
  GROUP BY TMS 
 )
 SELECT  DECODE(TMS, ? , '합계','전회') COL_DESC
        , TMS
        ,'1' AS GUBN
        ,DIV_01_07_02 
        ,DIV_01_07_06 
        ,DIV_01_07_12 
        ,DIV_01_07_10 
        ,DIV_01_07_13 
        ,DIV_01_07_14 
        ,DIV_01_07_03 
        ,DIV_01_07_15 
        ,DIV_01_07_09 
        ,DIV_01_07_05 
        ,DIV_01_07_16 
        ,DIV_01_07_17 
        ,DIV_01_06_01 
        ,DIV_01_07_18 
        ,DIV_04_07_01 
        ,DIV_04_07_02 
        ,DIV_04_07_03 
        ,DIV_02_07_01
        ,DIV_JIJUM
        ,1
 FROM J
 UNION ALL
 SELECT '점유율'
       , TMS
       , '2'
       , ROUND(DIV_01_07_02 / DIV_TOTAL * 100, 2) 
       , ROUND(DIV_01_07_06 / DIV_TOTAL * 100, 2)   
       , ROUND(DIV_01_07_12 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_10 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_13 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_14 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_03 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_15 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_09 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_05 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_16 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_17 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_06_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_18 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_02 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_03 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_02_07_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_JIJUM / DIV_TOTAL * 100, 2)    
       , 100
 FROM J
 WHERE tms = ? 
 UNION ALL
 SELECT '전회차'
       , TMS
       , '2'
       , ROUND(DIV_01_07_02 / DIV_TOTAL * 100, 2) 
       , ROUND(DIV_01_07_06 / DIV_TOTAL * 100, 2)   
       , ROUND(DIV_01_07_12 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_10 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_13 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_14 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_03 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_15 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_09 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_05 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_16 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_17 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_06_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_18 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_02 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_03 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_02_07_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_JIJUM / DIV_TOTAL * 100, 2)    
       , 100
 FROM J
 WHERE TMS = ?  -1
 ORDER BY 3, 2 DESC
 #String#2012#String#003#String#17#String#17#String#1#String#17#String#17#String#17#
>
[I][UbiData][2012-06-07 23:10:48]	- Row size : 4
[I][UbiData][2012-06-07 23:10:48]	- Data
<
합계^t17^t1^t5759243^t6768872^t3464367^t4581356^t3964638^t6685253^t3899352^t3606854^t6970537^t6270105^t3005424^t6179547^t172346^t2917226^t1910858^t2796109^t0^t0^t68952087^t1^t^n전회^t16^t1^t5110145^t6625240^t3652284^t4516474^t4532647^t6596680^t4323166^t3600994^t7080707^t6011354^t3246328^t5786326^t150613^t2709578^t1871131^t2728615^t0^t0^t68542282^t1^t^n점유율^t17^t2^t7.06^t8.29^t4.25^t5.61^t4.86^t8.19^t4.78^t4.42^t8.54^t7.68^t3.68^t7.57^t.21^t3.57^t2.34^t3.43^t0^t0^t84.5^t100^t^n전회차^t16^t2^t6.31^t8.17^t4.51^t5.57^t5.59^t8.14^t5.33^t4.44^t8.74^t7.42^t4.01^t7.14^t.19^t3.34^t2.31^t3.37^t0^t0^t84.57^t100^t^n
>
[I][UbiData][2012-06-07 23:10:48][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 23:10:48][DATA QUERY START]
[I][UbiData][2012-06-07 23:10:48]	- sql id : rsm2020_s11
[I][UbiData][2012-06-07 23:10:48]	- Db charset : KSC5601
[I][UbiData][2012-06-07 23:10:48]	- Sql
<
SELECT 
         '0~'||BB.RACE_NO||'R' AS RACE_DESC,
         DECODE(LEV,1,'인원','점유율') AS MANA_DESC,
         CASE 
             WHEN LEV='2' AND IN_PRSN_NUM > 0 AND TOT_PRSN_NUM > 0 THEN ROUND(IN_PRSN_NUM / TOT_PRSN_NUM *100,2)    
             ELSE IN_PRSN_NUM
        END AS IN_PRSN_NUM, 
        CASE 
             WHEN LEV='2' AND BRNC_PRSN_NUM > 0 AND TOT_PRSN_NUM > 0 THEN ROUND(BRNC_PRSN_NUM / TOT_PRSN_NUM *100,2)    
             ELSE BRNC_PRSN_NUM
        END AS BRNC_PRSN_NUM, 
        CASE 
             WHEN LEV='2' AND TOT_PRSN_NUM > 0 THEN ROUND(TOT_PRSN_NUM / TOT_PRSN_NUM *100,2)    
             ELSE TOT_PRSN_NUM
        END AS TOT_PRSN_NUM, 
        CASE 
             WHEN LEV='1' THEN B_TOT_PRSN_NUM
        END AS B_TOT_PRSN_NUM, 
        CASE 
             WHEN LEV='1' THEN MINUS_PRSN_NUM
        END AS MINUS_PRSN_NUM, 
        CASE 
 
             WHEN LEV='1' AND TOT_PRSN_NUM>0 AND B_TOT_PRSN_NUM >0 THEN ROUND((TOT_PRSN_NUM - B_TOT_PRSN_NUM) / B_TOT_PRSN_NUM*100,2)
        END AS PER_PRSN_NUM 
 FROM
 (
      SELECT DU.LEV,
             SUM(CASE WHEN R.TMS =DU.TMS AND BRNC_CD = '98' THEN E.ENT_PRSN_NUM END) AS IN_PRSN_NUM,    
              SUM(CASE WHEN R.TMS =DU.TMS AND BRNC_CD <> '98' THEN E.ENT_PRSN_NUM END) AS BRNC_PRSN_NUM,    
              SUM(CASE WHEN R.TMS =DU.TMS THEN E.ENT_PRSN_NUM END) AS TOT_PRSN_NUM,    
              SUM(CASE WHEN R.TMS =DU.B_TMS THEN E.ENT_PRSN_NUM END) AS B_TOT_PRSN_NUM,    
              (SUM(CASE WHEN R.TMS =DU.TMS THEN E.ENT_PRSN_NUM END) - SUM(CASE WHEN R.TMS =DU.B_TMS THEN E.ENT_PRSN_NUM END)) AS MINUS_PRSN_NUM    
                      
          FROM                                                   
              TBRC_STAY_MANA E,    
              TBRK_SPEC_CD C,
              VW_SDL_INFO R,       
              (SELECT LEVEL AS LEV, ?  AS TMS,(?  - 1) AS B_TMS FROM DUAL CONNECT BY LEVEL<=2) DU 
          WHERE  1=1                
            AND E.BRNC_CD    = C.CD
            AND E.RACE_DT    = R.RACE_DAY                 
            AND C.GRP_CD        IN ('018','032')    
            AND R.MEET_CD    = '003'   
            AND R.STND_YEAR    = ?         
            AND R.TMS IN (? , ?  - 1)    
            AND R.DAY_ORD ='2'             
          GROUP BY DU.LEV
 )AA,
 (
     SELECT                                                                   
          MAX(RACE_NO)  AS RACE_NO
       FROM   (                                                                 
                   SELECT                                                       
                            TOR.RACE_NO                                         
                          , TOR.RACE_REG_NO                                     
                          , TOR.RACER_NO                                        
                          , TOR.RANK                                            
                          , TRM.NM_KOR                                          
                          , RANK() OVER (PARTITION BY TOR.RACE_NO               
                                                    , TOR.RANK                  
                                             ORDER BY TOR.RACE_REG_NO) SEQ      
                   FROM     TBEB_ORGAN@MRASYSLINK        TOR                        
                          , TBEC_RACER_MASTER@MRASYSLINK TRM                        
                   WHERE 1=1                                                        
                           
                   AND    TOR.RACER_NO   = TRM.RACER_NO                         
                   AND    TOR.STND_YEAR  = ?         
                   AND    TOR.MBR_CD     = '001'                                
                   AND    TOR.TMS        = ?         
                           
                   AND    TOR.RANK BETWEEN 1                                    
                                       AND 3                                    
              )                                                                 
       START WITH SEQ = 1                                                       
       CONNECT BY PRIOR SEQ = SEQ - 1                                           
       AND PRIOR RACE_NO = RACE_NO AND RANK = RANK     
 )BB
 ORDER BY AA.LEV
 #String#17#String#17#String#2012#String#17#String#17#String#2012#String#17#
>
[I][UbiData][2012-06-07 23:10:49]	- Row size : 2
[I][UbiData][2012-06-07 23:10:49]	- Data
<
0~15R^t인원^t^t^t^t33830^t^t^t^n0~15R^t점유율^t^t^t^t^t^t^t^n
>
[I][UbiData][2012-06-07 23:10:49][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 23:10:49][DATA QUERY START]
[I][UbiData][2012-06-07 23:10:49]	- sql id : rsm2020_s01
[I][UbiData][2012-06-07 23:10:49]	- Db charset : KSC5601
[I][UbiData][2012-06-07 23:10:49]	- Sql
<
SELECT 
           AA.MEET_CD,      
           AA.STND_YEAR,    
           AA.TMS,          
           AA.DAY_ORD,      
           TO_CHAR(TO_DATE(AA.RACE_DAY,'YYYYMMDD'),'YYYY-MM-DD') AS RACE_DAY, 
           AA.RACE_YOIL,    
           TO_CHAR(TO_DATE(AA.RACE_DAY,'YYYYMMDD'),'YYYY')||'년 '||AA.TMS||'회차 '||AA.DAY_ORD||'일차 ('|| TO_CHAR(TO_DATE(AA.RACE_DAY,'YYYYMMDD'),'YYYY-MM-DD')||') 경주 개최 결과'  
           AS RACE_DAY_INFO  
     
       FROM (         
             SELECT                              
             MEET_CD,      
             STND_YEAR,    
             TMS,          
             DAY_ORD,      
             RACE_DAY,     
             RACE_YOIL,    
             DECODE(RACE_YOIL,'MON','월','TUE','화','WED','수','THE','목','FRI','금','SAT','토','SUN','일','일') AS RACE_YOIL_KOR, 
             TO_CHAR(TO_DATE(RACE_DAY,'YYYYMMDD'),'YYYY-MM-DD')||
             ' ('||RACE_YOIL||') '||TMS||'회차 '||DAY_ORD||'일차'  
             AS RACE_INFO  
      FROM                                
             VW_SDL_INFO      
      WHERE  1=1                             
             AND MEET_CD = ?   
            AND STND_YEAR = ?   
            AND TMS= ?     
            AND DAY_ORD = ?        
    )AA
 #String#003#String#2012#String#17#String#1#
>
[I][UbiData][2012-06-07 23:10:49]	- Row size : 1
[I][UbiData][2012-06-07 23:10:49]	- Data
<
003^t2012^t17^t1^t2012-06-07^tTHU^t2012년 17회차 1일차 (2012-06-07) 경주 개최 결과^t^n
>
[I][UbiData][2012-06-07 23:10:49][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 23:10:49][DATA QUERY START]
[I][UbiData][2012-06-07 23:10:49]	- sql id : rsm2020_s05Today
[I][UbiData][2012-06-07 23:10:49]	- Db charset : KSC5601
[I][UbiData][2012-06-07 23:10:49]	- Sql
<
SELECT                                                                                      
       DECODE(GROUPING(RACE_NO),0,RACE_NO,'TOTAL') RACE_NO 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='12' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_02 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='16' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_06 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='22'  THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_12 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='20' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_10 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='23' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_13 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='24' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_14 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='13' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_03 
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='25'  THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_15 
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='19' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_09 
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='14' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_05 
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='26' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_16 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='27' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_17 
     , SUM(                                                                              
           CASE                                                                          
              WHEN COMM_NO='06'  THEN NVL(DIV_TOTAL, 0)                                  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_01_06_01 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='28' THEN NVL(DIV_TOTAL, 0) 
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_01_07_18 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_04_07_01 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='02' THEN NVL(DIV_TOTAL, 0)  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_04_07_02 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='03' THEN NVL(DIV_TOTAL, 0)  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_04_07_03    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='02' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_02_07_01 
     , SUM(                                                                              
           CASE                                                                          
              WHEN  COMM_NO NOT IN ('01','02','03','04','08') THEN NVL(DIV_TOTAL, 0)                         
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_JIJUM  
 
     , SUM(DIV_TOTAL)/100 DIV_TOTAL                                                          
 FROM   TBES_SDL_DT                                                                         
 WHERE   1=1                                                                                   
      AND STND_YEAR  = ?                                                             
      AND    MEET_CD    = ?                                                        
      AND    TMS        = ?                                                            
      AND    DAY_ORD    = ?                                                        
 
 GROUP BY RACE_NO                                                                                   
       
 ORDER BY RACE_NO
 #String#2012#String#003#String#17#String#1#
>
[I][UbiData][2012-06-07 23:10:49]	- Row size : 15
[I][UbiData][2012-06-07 23:10:49]	- Data
<
01^t140920^t197602^t96849^t127436^t119903^t187379^t128299^t116374^t219027^t183487^t108516^t160073^t7355^t93039^t59949^t93886^t0^t0^t2040094^t2396211^t^n02^t191278^t267508^t123529^t187360^t147399^t249704^t155747^t145620^t287810^t240820^t134529^t231415^t9365^t106436^t78894^t112202^t0^t0^t2669616^t3119757^t^n03^t218916^t312291^t160473^t214643^t185000^t303210^t189537^t171252^t321899^t281904^t151802^t275390^t11275^t162159^t84773^t131614^t0^t0^t3176138^t3739571^t^n04^t280723^t349162^t162668^t220723^t205104^t363694^t198947^t193854^t366506^t314797^t163251^t307239^t11636^t153198^t99509^t147397^t0^t0^t3538408^t4222315^t^n05^t293914^t356666^t179380^t247835^t236853^t376743^t193986^t198487^t385927^t363196^t170821^t362879^t10456^t178289^t114597^t157145^t0^t0^t3827174^t4600038^t^n06^t320577^t410766^t191760^t262742^t239275^t397830^t224139^t213663^t422296^t374549^t185676^t384443^t13418^t167359^t119122^t168329^t0^t0^t4095944^t4848817^t^n07^t373535^t432760^t204667^t303599^t258807^t408985^t246625^t214315^t457794^t408705^t182639^t417527^t12501^t187942^t128436^t184125^t0^t0^t4422962^t5262700^t^n08^t401087^t454010^t227928^t317354^t270820^t432896^t260257^t226171^t475649^t433911^t198906^t420465^t13274^t209941^t132238^t183879^t0^t0^t4658786^t5538248^t^n09^t437100^t484053^t233189^t323376^t300022^t463847^t282180^t288344^t503532^t460256^t213710^t426704^t12038^t218223^t137100^t184059^t0^t0^t4967733^t5873616^t^n10^t470862^t541950^t272328^t368669^t328440^t540666^t313885^t273198^t534426^t520280^t238905^t480109^t11995^t217489^t148525^t221558^t0^t0^t5483285^t6538531^t^n11^t466591^t561617^t317067^t365940^t318869^t591737^t323108^t316413^t577350^t534047^t224160^t502776^t13236^t222034^t156791^t213870^t0^t0^t5705606^t6735069^t^n12^t517154^t573936^t314455^t371388^t339082^t549091^t330869^t298274^t572163^t534089^t257848^t538886^t9827^t224241^t153182^t226909^t0^t0^t5811394^t6964681^t^n13^t526295^t583973^t330714^t397538^t324448^t593547^t335641^t314764^t598821^t528560^t248840^t537767^t13014^t243974^t168937^t238429^t0^t0^t5985262^t7085157^t^n14^t544820^t611235^t322648^t422943^t330535^t594065^t339607^t303922^t617748^t541795^t257654^t539796^t11784^t260972^t158394^t255072^t0^t0^t6112990^t7164971^t^n15^t575471^t631343^t326712^t449810^t360081^t631859^t376525^t332203^t629589^t549709^t268167^t594078^t11172^t271930^t170411^t277635^t0^t0^t6456695^t7513552^t^n
>
[I][UbiData][2012-06-07 23:10:49][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 23:10:49][DATA QUERY START]
[I][UbiData][2012-06-07 23:10:49]	- sql id : rsm2020_s03Today
[I][UbiData][2012-06-07 23:10:49]	- Db charset : KSC5601
[I][UbiData][2012-06-07 23:10:49]	- Sql
<
SELECT                                                                                    
      Z.RACE_NO, 
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          FC_GET_RSLT_RANK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO)                
      END RSLT_RANK, 
      R.RANK_1,  
      R.RANK_2,  
      R.RANK_3,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '001', NULL) 
      END WIN,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '002', '1')  
      END PLC,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '002', '2')  
      END PLC2,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '004', NULL) 
      END EX,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '005', NULL) 
      END QU,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '006', NULL) 
      END TRI,  
      D.BONJANG_TOTAL/1000 AS BONJANG_TOTAL, 
      D.JIJUM_TOTAL/1000 AS JIJUM_TOTAL,  
      D.DIV_TOTAL/1000 AS DIV_TOTAL,  
      NVL(D.REFUND,0)/1000 AS REFUND, 
      NVL(B.B_DIV_TOTAL,0)/1000 AS B_DIV_TOTAL,    
      NVL2(D.DIV_TOTAL, NVL((C.DIV_TOTAL-B.B_DIV_TOTAL),0),0)/1000 AS PLUS_MINUS, 
      CASE                                                                                  
          WHEN B.B_DIV_TOTAL<>0 THEN                                                        
          ROUND((C.DIV_TOTAL-B.B_DIV_TOTAL)/B.B_DIV_TOTAL*100,2)                            
          ELSE 0                                                                            
      END RATE,   
      SAME_PAYOFF_TOTAL,  
      SAME_PAYOFF_001, 
   SAME_PAYOFF_002, 
   SAME_PAYOFF_004, 
   SAME_PAYOFF_005, 
   SAME_PAYOFF_006 
  FROM   
   
      (   
                                                                 
          SELECT                                                                            
                D.MEET_CD,                                                                   
                D.STND_YEAR,                                                                 
                D.TMS,                                                                       
                D.DAY_ORD,                                                                   
                DECODE(D.RACE_NO,NULL,'TOTAL',D.RACE_NO) RACE_NO,                              
                SUM(                                                                        
                    CASE                                                                    
                      WHEN D.SELL_CD='03' THEN D.DIV_TOTAL                                    
                      ELSE 0                                                                
                    END                                                                     
                ) BONJANG_TOTAL,                                                            
                SUM(                                                                        
                    CASE                                                                    
                      WHEN D.SELL_CD !='03' THEN D.DIV_TOTAL                                     
                    END                                                                     
                ) JIJUM_TOTAL,                                                              
                SUM(D.REFUND) REFUND,
                SUM(D.DIV_TOTAL) AS DIV_TOTAL                                                         
          FROM   TBES_SDL_DT D                                                              
          WHERE 1=1                                                                             
              AND D.STND_YEAR(+)  = ? 
              AND D.MEET_CD(+)    = ? 
              AND D.TMS(+)        = ? 
              AND D.DAY_ORD(+)    = ? 
          GROUP BY                                                                          
                D.MEET_CD,                                                                   
                D.STND_YEAR,                                                                 
                D.TMS,                                                                       
                D.DAY_ORD,                                                                   
                ROLLUP(D.RACE_NO)                                                           
      ) D,                                                                                  
      (                                                                                     
         SELECT                                                                             
            P.MEET_CD,                                                                      
            P.STND_YEAR,                                                                    
            P.TMS,                                                                          
            P.DAY_ORD,                                                                      
            DECODE(P.RACE_NO,NULL,'TOTAL',P.RACE_NO) RACE_NO,                               
            SUM(POOL_TOTAL) DIV_TOTAL                                                       
         FROM                                                                               
             TBES_SDL_PT P                                                                  
         WHERE 1=1                                                                              
             AND P.STND_YEAR  = ? 
             AND P.MEET_CD    = ? 
             AND P.TMS        = ? 
             AND P.DAY_ORD    = ? 
         GROUP BY                                                                           
            P.MEET_CD,                                                                      
            P.STND_YEAR,                                                                    
            P.TMS,                                                                          
            P.DAY_ORD,                                                                      
            ROLLUP(P.RACE_NO)                                                               
      ) C,                                                                                  
      (                                                                                     
          SELECT                                                                            
                DECODE(RACE_NO,NULL,'TOTAL',RACE_NO) RACE_NO,                               
                SUM(DIV_TOTAL) B_DIV_TOTAL                                                  
          FROM   TBES_SDL_DT                                                                
          WHERE 1=1                                                                            
              AND  STND_YEAR  = ? 
              AND    MEET_CD    = ? 
              AND    TMS        = ?  -1                                                    
              AND    DAY_ORD    = ? 
          GROUP BY                                                                          
                ROLLUP(RACE_NO)                                                             
      ) B,                                                                                  
      (                                                                                     
          SELECT                                                                            
                RACE_NO                                                                     
              , MIN(DECODE(RANK, '1', NM_KOR)) RANK_1                                       
              , MIN(DECODE(RANK, '2', NM_KOR)) RANK_2                                       
              , MIN(DECODE(RANK, '3', NM_KOR)) RANK_3                                       
          FROM   (                                                                          
                   SELECT                                                                   
                            RACE_NO                                                         
                          , RANK                                                            
                          , SUBSTR(MAX(SYS_CONNECT_BY_PATH (NM_KOR, '/')), 2) NM_KOR        
                   FROM   (                                                                 
                               SELECT                                                       
                                        TOR.RACE_NO                                         
                                      , TOR.RACE_REG_NO                                     
                                      , TOR.RACER_NO                                        
                                      , TOR.RANK                                            
                                      , TRM.NM_KOR                                          
                                      , RANK() OVER (PARTITION BY TOR.RACE_NO               
                                                                , TOR.RANK                  
                                                         ORDER BY TOR.RACE_REG_NO) SEQ      
                               FROM     TBEB_ORGAN@MRASYSLINK        TOR                        
                                      , TBEC_RACER_MASTER@MRASYSLINK TRM                        
                               WHERE 1=1                
                               AND    TOR.RACER_NO   = TRM.RACER_NO                         
                               AND    TOR.STND_YEAR  = ? 
                               AND    TOR.MBR_CD     = '001'                                
                               AND    TOR.TMS        = ? 
                               AND    TOR.DAY_ORD    = ? 
                               AND    TOR.RANK BETWEEN 1                                    
                                                   AND 3                                    
                          )                                                                 
                   START WITH SEQ = 1                                                       
                   CONNECT BY PRIOR SEQ = SEQ - 1                                           
                   AND PRIOR RACE_NO = RACE_NO AND RANK = RANK                              
                   GROUP BY                                                                 
                            RACE_NO                                                         
                          , RANK                                                            
               )                                                                            
          GROUP BY RACE_NO                                                                  
          UNION ALL                                                                         
          SELECT 'TOTAL', '', '', '' FROM DUAL                                              
      ) R, 
      (   
     
       SELECT                                                                         
          RACE_NO,
            SUM(CASE 
                     WHEN POOL_CD = '001' AND RS_SEQ >= '2' THEN PAYOFF 
                     WHEN POOL_CD = '002' AND RS_SEQ >= '3' THEN PAYOFF 
                     WHEN POOL_CD = '004' AND RS_SEQ >= '2' THEN PAYOFF 
                     WHEN POOL_CD = '005' AND RS_SEQ >= '2' THEN PAYOFF 
                     WHEN POOL_CD = '006' AND RS_SEQ >= '2' THEN PAYOFF 
            END) AS SAME_PAYOFF_TOTAL, 
                               
            SUM(CASE WHEN POOL_CD = '001' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_001, 
            SUM(CASE WHEN POOL_CD = '002' AND RS_SEQ >= '3' THEN PAYOFF END) AS SAME_PAYOFF_002, 
            SUM(CASE WHEN POOL_CD = '004' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_004, 
            SUM(CASE WHEN POOL_CD = '005' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_005, 
            SUM(CASE WHEN POOL_CD = '006' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_006 
      FROM TBES_SDL_RS                                                                
      WHERE 1=1                                                                          
          AND MEET_CD  = '003'                                                              
          AND STND_YEAR = ?      
          AND TMS   = ?      
          AND DAY_ORD  = ?      
      GROUP BY          
       RACE_NO                                                              
 
   ) E,                                                                                  
  (                                       
    SELECT DISTINCT RACE_NO           
    FROM TBEB_RACE_DOC@MRASYSLINK D        
      WHERE 1=1                          
          AND D.STND_YEAR= ? 
          AND D.TMS=? 
           AND D.DAY_ORD=? 
 
   ) Z                                   
  WHERE 1=1                                                                                    
      AND C.RACE_NO(+)=Z.RACE_NO                                                                
      AND B.RACE_NO(+)=Z.RACE_NO                                                            
      AND R.RACE_NO(+)=Z.RACE_NO                                                            
      AND D.RACE_NO(+)=Z.RACE_NO
      AND E.RACE_NO(+)=Z.RACE_NO                                                            
  ORDER BY Z.RACE_NO
 #String#2012#String#003#String#17#String#1#String#2012#String#003#String#17#String#1#String#2012#String#003#String#17#String#1#String#2012#String#17#String#1#String#2012#String#17#String#1#String#2012#String#17#String#1#
>
[I][UbiData][2012-06-07 23:10:49]	- Row size : 15
[I][UbiData][2012-06-07 23:10:49]	- Data
<
01^t3-5-6^t윤영근^t배혜민^t박광혁^t4.9^t1.5^t2.5^t15.2^t9.6^t12.6^t35611.7^t204009.4^t239621.1^t0^t241173.8^t-1552.7^t-.64^t^t^t^t^t^t^t^n02^t2-1-6^t사재준^t김민길^t이주영^t1.3^t1^t2.3^t5^t3.6^t8.6^t45014.1^t266961.6^t311975.7^t0^t306515.1^t5460.6^t1.78^t^t^t^t^t^t^t^n03^t5-1-3^t심상철^t최재원^t서지혜^t2.6^t1.2^t1.5^t4.1^t2^t1.8^t56343.3^t317613.8^t373957.1^t0^t367015.4^t6941.7^t1.89^t^t^t^t^t^t^t^n04^t3-6-4^t정인교^t유해광^t진석현^t3.5^t1.4^t3.7^t17.9^t13.6^t6.7^t68390.7^t353840.8^t422231.5^t0^t425410.1^t-3178.6^t-.75^t^t^t^t^t^t^t^n05^t6-5-1^t이승일^t강창효^t이종우^t7.8^t2.7^t4^t58.7^t25^t32.3^t77286.4^t382717.4^t460003.8^t0^t479149.9^t-19146.1^t-4^t^t^t^t^t^t^t^n06^t1-4-6^t이지수^t서화모^t오승철^t2.1^t1.2^t1.5^t5.1^t2.8^t23.3^t75287.3^t409594.4^t484881.7^t0^t469081.7^t15800^t3.37^t^t^t^t^t^t^t^n07^t6-2-1^t황이태^t민영건^t배혜민^t21.1^t7.4^t3.4^t84.1^t48^t14.6^t83973.8^t442296.2^t526270^t0^t515496.2^t10773.8^t2.09^t^t^t^t^t^t^t^n08^t4-1-6^t신동길^t우진수^t구현구^t1.5^t1.2^t2^t5^t3^t6.1^t87946.2^t465878.6^t553824.8^t0^t556565.3^t-2740.5^t-.49^t^t^t^t^t^t^t^n09^t2-4-1^t김정구^t손동민^t이흥우^t1.7^t1.2^t1.9^t4.5^t3.2^t3.3^t90588.3^t496773.3^t587361.6^t0^t548482.3^t38879.3^t7.09^t^t^t^t^t^t^t^n10^t1-6-5^t김영욱^t사재준^t윤영근^t1.9^t1.3^t1.5^t4.4^t2.6^t3.6^t105524.6^t548328.5^t653853.1^t0^t669189.8^t-15336.7^t-2.29^t^t^t^t^t^t^t^n11^t1-4-2^t심상철^t김민길^t박광혁^t1.8^t1.3^t3.6^t11.9^t8.6^t7.4^t102946.3^t570560.6^t673506.9^t0^t707765.4^t-34258.5^t-4.84^t^t^t^t^t^t^t^n12^t1-4-6^t경상수^t김선필^t최재원^t2.4^t1.4^t8.3^t30.6^t24.2^t21.1^t115328.7^t581139.4^t696468.1^t0^t682622.6^t13845.5^t2.03^t^t^t^t^t^t^t^n13^t5-3-1^t김효년^t문주엽^t주은석^t6^t2.3^t1.3^t14.7^t6.5^t3.3^t109989.5^t598526.2^t708515.7^t0^t702342.9^t6172.8^t.88^t^t^t^t^t^t^t^n14^t2-4-3^t구현구^t장영태^t강창효^t1.7^t1.5^t1.7^t5.2^t3.7^t4.2^t105198.1^t611299^t716497.1^t0^t698218.3^t18278.8^t2.62^t^t^t^t^t^t^t^n15^t3-5-1^t이태희^t어선규^t유해광^t2.2^t1.3^t1.5^t4^t2.5^t2.4^t105685.7^t645669.5^t751355.2^t0^t735842.1^t15513.1^t2.11^t^t^t^t^t^t^t^n
>
[I][UbiData][2012-06-07 23:10:49][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 23:10:49][DATA QUERY START]
[I][UbiData][2012-06-07 23:10:49]	- sql id : rsm2020_s02Today
[I][UbiData][2012-06-07 23:10:49]	- Db charset : KSC5601
[I][UbiData][2012-06-07 23:10:49]	- Sql
<
SELECT                                                                                          
           MST.GBN       
         , YEAR.DIV_TOTAL AS YEAR_TOTAL 
         , YEAR.REFUND    AS YEAR_REFUND 
         , TMS.D_1 
         , TMS.D_2   
         , TMS.D_3   
         , TMS.D_4   
         , TMS.D_5   
         , TMS.D_6   
         , TMS.D_7   
         , TMS.TOTAL 
         , PRE.TOTAL AS PRE_TOTAL 
         , NVL(TMS.TOTAL, 0) - NVL(PRE .TOTAL, 0) ADD_POOL 
         , CASE WHEN (NVL(PRE.TOTAL, 0) = 0) AND (NVL(TMS.TOTAL, 0) = 0) THEN 0                  
                WHEN NVL(PRE.TOTAL, 0) = 0                               THEN 100                
                WHEN NVL(TMS.TOTAL, 0) = 0                                THEN -100              
                ELSE ROUND((NVL(TMS.TOTAL, 0) - NVL(PRE.TOTAL, 0)) / NVL(PRE.TOTAL, 0) * 100, 2) 
           END ADD_RATE 
  FROM                                                                                           
           (                                                                                     
              SELECT                                                                             
                       ?  STND_YEAR                                                      
                     , '매출총액' GBN                                                            
              FROM   DUAL                                                                        
           ) MST                                                                                 
         , (                                                                                     
              SELECT                                                                             
                       TMS.STND_YEAR                                                             
                     , MIN(DECODE(TMS.D, 1, TMS.AMOUNT)) D_1                                     
                     , MIN(DECODE(TMS.D, 2, TMS.AMOUNT)) D_2                                     
                     , MIN(DECODE(TMS.D, 3, TMS.AMOUNT)) D_3                                     
                     , MIN(DECODE(TMS.D, 4, TMS.AMOUNT)) D_4                                     
                     , MIN(DECODE(TMS.D, 5, TMS.AMOUNT)) D_5                                     
                     , MIN(DECODE(TMS.D, 6, TMS.AMOUNT)) D_6                                     
                     , MIN(DECODE(TMS.D, 7, TMS.AMOUNT)) D_7                                     
                     , SUM(TMS.AMOUNT)                   TOTAL                                   
              FROM   (                                                                           
                          SELECT                                                                 
                                   TSP.STND_YEAR                                                 
                                 , TO_CHAR(TO_DATE(INFO.RACE_DAY, 'YYYYMMDD'), 'D') D            
                                 , SUM(TSP.POOL_TOTAL) AMOUNT                                    
                          FROM     VW_SDL_INFO INFO                                              
                                 , TBES_SDL_PT       TSP                                         
                          WHERE  1=1
                          AND    INFO.STND_YEAR = TSP.STND_YEAR                                  
                          AND    INFO.MEET_CD    = TSP.MEET_CD                                   
                          AND    INFO.TMS       = TSP.TMS                                        
                          AND    INFO.DAY_ORD   = TSP.DAY_ORD                                    
                          AND    TSP.STND_YEAR  = ?   
                          AND    TSP.MEET_CD    = ?       
                          AND    TSP.TMS        = ?       
                          GROUP BY                                                               
                                   TSP.STND_YEAR                                                 
                                 , INFO.RACE_DAY                                                 
                     ) TMS                                                                       
              GROUP BY TMS.STND_YEAR                                                             
           ) TMS                                                                                 
         , (                                                                                     
              SELECT                                                                             
                       STND_YEAR                                                                 
                     , SUM(TSP.DIV_TOTAL) DIV_TOTAL                                              
                     , SUM(TSP.REFUND    ) REFUND                                                
              FROM   TBES_SDL_DT_SUM       TSP                                                       
              WHERE  TSP.STND_YEAR  = ?                                                  
              AND    TSP.MEET_CD    = ?                                                    
              AND    TSP.TMS       <= ?                                                        
              GROUP BY                                                                           
                       STND_YEAR                                                                 
           ) YEAR                                                                                
         , (                                                                                     
              SELECT                                                                             
                       STND_YEAR                                                                 
                     , TMS                                                                       
                     , NVL(SUM(TSP.POOL_TOTAL), 0)  TOTAL                                        
              FROM   TBES_SDL_PT       TSP                                                       
              WHERE  1=1
              AND TSP.STND_YEAR  = ? 
              AND    TSP.MEET_CD    = ?                                                    
              AND    TSP.TMS        = ?  - 1                                                   
              GROUP BY                                                                           
                       STND_YEAR                                                                 
                     , TMS                                                                       
           ) PRE                                                                                 
  WHERE  1=1
  AND   MST.STND_YEAR = TMS .STND_YEAR(+)                                                       
  AND    MST.STND_YEAR = YEAR.STND_YEAR(+)                                                       
  AND    MST.STND_YEAR = PRE .STND_YEAR(+)                                                       
  UNION ALL                                                                                      
  SELECT                                                                                         
           MST.GBN                                                                               
         , YEAR.DIV_TOTAL                   YEAR_TOTAL                                           
         , YEAR.REFUND                      YEAR_REFUND                                          
         , TMS.D_1                                                                               
         , TMS.D_2                                                                               
         , TMS.D_3                                                                               
         , TMS.D_4                                                                               
         , TMS.D_5                                                                               
         , TMS.D_6                                                                               
         , TMS.D_7                                                                               
         , TMS.TOTAL                                                                             
         , 0 PRE_TOTAL                                                                           
         , NVL(PRE .TOTAL, 0) - NVL(TMS.TOTAL, 0) ADD_POOL                                       
         , CASE WHEN (NVL(PRE.TOTAL, 0) = 0) AND (NVL(TMS.TOTAL, 0) = 0) THEN 0                  
                WHEN NVL(PRE.TOTAL, 0) = 0                               THEN -100               
                WHEN NVL(TMS.TOTAL, 0) = 0                                THEN 100               
                ELSE ROUND((NVL(PRE.TOTAL, 0) - NVL(TMS.TOTAL, 0)) / NVL(TMS.TOTAL, 0) * 100, 2) 
           END ADD_RATE                                                                          
  FROM                                                                                           
           (                                                                                     
              SELECT                                                                             
                       ?  -1 STND_YEAR                                                    
                     , '전년대비' GBN                                                            
              FROM   DUAL                                                                        
           ) MST                                                                                 
         , (                                                                                     
              SELECT                                                                             
                       TMS.STND_YEAR                                                             
                     , MIN(DECODE(TMS.D, 1, TMS.AMOUNT)) D_1                                     
                     , MIN(DECODE(TMS.D, 2, TMS.AMOUNT)) D_2                                     
                     , MIN(DECODE(TMS.D, 3, TMS.AMOUNT)) D_3                                     
                     , MIN(DECODE(TMS.D, 4, TMS.AMOUNT)) D_4                                     
                     , MIN(DECODE(TMS.D, 5, TMS.AMOUNT)) D_5                                     
                     , MIN(DECODE(TMS.D, 6, TMS.AMOUNT)) D_6                                     
                     , MIN(DECODE(TMS.D, 7, TMS.AMOUNT)) D_7                                     
                     , SUM(TMS.AMOUNT)                   TOTAL                                   
              FROM   (                                                                           
                          SELECT                                                                 
                                   TSP.STND_YEAR                                                 
                                 , TO_CHAR(TO_DATE(INFO.RACE_DAY, 'YYYYMMDD'), 'D') D            
                                 , SUM(TSP.POOL_TOTAL) AMOUNT                                    
                          FROM     VW_SDL_INFO INFO                                              
                                 , TBES_SDL_PT       TSP                                         
                          WHERE  1=1
                          AND  INFO.STND_YEAR = TSP.STND_YEAR                                  
                          AND    INFO.MEET_CD    = TSP.MEET_CD                                   
                          AND    INFO.TMS       = TSP.TMS                                        
                          AND    INFO.DAY_ORD   = TSP.DAY_ORD                                    
                          AND    TSP.STND_YEAR  =  ?  -1                                   
                          AND    TSP.MEET_CD    = ?                                        
                          AND    TSP.TMS        = ?                                            
                          GROUP BY                                                               
                                   TSP.STND_YEAR                                                 
                                 , INFO.RACE_DAY                                                 
                     ) TMS                                                                       
              GROUP BY TMS.STND_YEAR                                                             
           ) TMS                                                                                 
         , (                                                                                     
              SELECT                                                                             
                       STND_YEAR                                                                 
                     , SUM(TSP.DIV_TOTAL) DIV_TOTAL                                              
                     , SUM(TSP.REFUND    ) REFUND                                                
              FROM   TBES_SDL_DT_SUM       TSP                                                       
              WHERE  1=1
              AND TSP.STND_YEAR  = ?  -1                                               
              AND    TSP.MEET_CD    = ?                                                    
              AND    TSP.TMS       <= ?                                                        
              GROUP BY                                                                           
                       STND_YEAR                                                                 
           ) YEAR                                                                                
         , (                                                                                     
              SELECT                                                                             
                       STND_YEAR-1 STND_YEAR                                                     
                     , TMS                                                                       
                     , NVL(SUM(TSP.POOL_TOTAL), 0)  TOTAL                                        
              FROM   TBES_SDL_PT       TSP                                                       
              WHERE  1=1
              AND TSP.STND_YEAR  = ?                                                  
              AND    TSP.MEET_CD    = ?                                                    
              AND    TSP.TMS        = ?                                                        
              GROUP BY                                                                           
                       STND_YEAR                                                                 
                     , TMS                                                                       
           ) PRE                                                                                 
  WHERE  1=1
  AND MST.STND_YEAR = TMS.STND_YEAR(+)                                                        
  AND    MST.STND_YEAR = YEAR.STND_YEAR(+)                                                       
  AND    MST.STND_YEAR = PRE.STND_YEAR(+)
 #String#2012#String#2012#String#003#String#17#String#2012#String#003#String#17#String#2012#String#003#String#17#String#2012#String#2012#String#003#String#17#String#2012#String#003#String#17#String#2012#String#003#String#17#
>
[I][UbiData][2012-06-07 23:10:49]	- Row size : 2
[I][UbiData][2012-06-07 23:10:49]	- Data
<
매출총액^t255807593000^t4674302200^t^t^t^t^t8160323400^t^t^t8160323400^t16874921600^t-8714598200^t-51.64^t^n전년대비^t298819077500^t5513386200^t^t^t^t8970408300^t10464906900^t^t^t19435315200^t0^t-11274991800^t-58.01^t^n
>
[I][UbiData][2012-06-07 23:10:49][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 23:10:49][DATA QUERY START]
[I][UbiData][2012-06-07 23:10:49]	- sql id : rsm2020_s04
[I][UbiData][2012-06-07 23:10:49]	- Db charset : KSC5601
[I][UbiData][2012-06-07 23:10:49]	- Sql
<
SELECT 
   ROW_ORDER,
   MANA_DESC, 
   TOTAL        
        ,SUN_NUM     
        ,TUE_NUM     
        ,WEN_NUM     
        ,THU_NUM     
        ,TOT_PRSN_NUM,    
        
        B_TOT_PRSN_NUM,          
        
        CASE 
              WHEN ROW_ORDER='2' THEN N_TOT_PRSN_NUM - TOT_PRSN_NUM
              ELSE PRSN_NUM_MINUS
        END PRSN_NUM_MINUS,          
        
        ROUND(CASE 
              WHEN ROW_ORDER='2' THEN (N_TOT_PRSN_NUM - TOT_PRSN_NUM)/TOT_PRSN_NUM*100
              ELSE PER
        END,2) AS PER             
  FROM
 (
  
  SELECT '1' AS ROW_ORDER,
    '입장인원' AS MANA_DESC,
     A.TMS                                                               
        ,TOT_PRSN_NUM                     
        ,MON_NUM 
              ,TUE_NUM 
              ,WEN_NUM 
              ,THU_NUM 
              ,FRI_NUM 
              ,SAT_NUM 
              ,SUN_NUM 
              ,B_TOT_PRSN_NUM
              ,(TOT_PRSN_NUM-B_TOT_PRSN_NUM) AS PRSN_NUM_MINUS
              ,DECODE(B_TOT_PRSN_NUM,0,0,(TOT_PRSN_NUM-B_TOT_PRSN_NUM)/B_TOT_PRSN_NUM*100)  AS PER
              ,TOTAL          
  
    FROM
    
    
    (
    
     SELECT   MAX(TMS) TMS
           ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
           ,NVL(SUM(A.ENT_PRSN_NUM ),0)         TOT_PRSN_NUM                                                      
           
          
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'2', A.ENT_PRSN_NUM,0 )) ,0) MON_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'3', A.ENT_PRSN_NUM,0 )) ,0) TUE_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'4', A.ENT_PRSN_NUM,0 )) ,0) WEN_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'5', A.ENT_PRSN_NUM,0 )) ,0) THU_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'6', A.ENT_PRSN_NUM,0 )) ,0) FRI_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'7', A.ENT_PRSN_NUM,0 )) ,0) SAT_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'1', A.ENT_PRSN_NUM,0 )) ,0) SUN_NUM       
    
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) =  ?  
                AND MEET_CD = ?   
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE 1=1
             AND STND_YEAR = ?  
                AND MEET_CD = ? 
                AND TMS  = ?  
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    GROUP BY B.TMS
    ) A,
    
    
    (
    
     SELECT   
            MAX(TMS) TMS
           ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
           ,NVL(SUM(A.ENT_PRSN_NUM ),0)         B_TOT_PRSN_NUM  
           
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) =  ?  
                AND MEET_CD = ?    
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE 1=1
             AND STND_YEAR = ?    
                AND MEET_CD = ? 
                AND TMS  = ?  - 1   
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    GROUP BY B.TMS
    ) B,
    
    (
    
     SELECT NVL(SUM(A.ENT_PRSN_NUM ),0)         TOTAL  
           
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) = ?  
                AND MEET_CD = ?   
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE STND_YEAR = ?  
                AND MEET_CD = ? 
                AND TMS <= ?  
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    )C
  UNION ALL 
  
  
  SELECT '2' AS ROW_ORDER,
    '전년대비' AS MANA_DESC,
     A.TMS                                                               
        ,TOT_PRSN_NUM                     
        ,MON_NUM 
              ,TUE_NUM 
              ,WEN_NUM 
              ,THU_NUM 
              ,FRI_NUM 
              ,SAT_NUM 
              ,SUN_NUM 
              ,B_TOT_PRSN_NUM
              ,(TOT_PRSN_NUM-B_TOT_PRSN_NUM) AS PRSN_NUM_MINUS
              ,DECODE(B_TOT_PRSN_NUM,0,0,(TOT_PRSN_NUM-B_TOT_PRSN_NUM)/B_TOT_PRSN_NUM*100)  AS PER
              ,TOT          
  
    FROM
    
    
    (
    
     SELECT   MAX(TMS) TMS
           ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
           ,NVL(SUM(A.ENT_PRSN_NUM ),0)         TOT_PRSN_NUM                                                      
           
          
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'2', A.ENT_PRSN_NUM,0 )) ,0) MON_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'3', A.ENT_PRSN_NUM,0 )) ,0) TUE_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'4', A.ENT_PRSN_NUM,0 )) ,0) WEN_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'5', A.ENT_PRSN_NUM,0 )) ,0) THU_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'6', A.ENT_PRSN_NUM,0 )) ,0) FRI_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'7', A.ENT_PRSN_NUM,0 )) ,0) SAT_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'1', A.ENT_PRSN_NUM,0 )) ,0) SUN_NUM       
    
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) = ?  - 1  
                AND MEET_CD    = ?   
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE STND_YEAR = ?  - 1  
                AND MEET_CD =?  
                AND TMS  = ?    
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    GROUP BY B.TMS
    ) A,
    
    
    (
    
     SELECT   
            MAX(TMS) TMS
           ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
           ,NVL(SUM(A.ENT_PRSN_NUM ),0)         B_TOT_PRSN_NUM  
           
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) = ?  -1 
                AND MEET_CD = ?     
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE STND_YEAR = ?  - 1  
                AND MEET_CD = ? 
                AND TMS  = ?  - 1  
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    GROUP BY B.TMS
    ) B,
    
    (
    
     SELECT NVL(SUM(A.ENT_PRSN_NUM ),0)         TOT  
           
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) =  ?  -1 
                AND MEET_CD = '003'
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE STND_YEAR = ?  -1  
                AND MEET_CD = ? 
                AND TMS  <= ?   
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    )C
  ),
  (
  SELECT SUM(A.ENT_PRSN_NUM ) AS N_TOT_PRSN_NUM
      FROM 
          TBRC_STAY_MANA  A,       
          VW_SDL_INFO B
      WHERE 1 =1
        AND A.RACE_DT(+) = B.RACE_DAY
        AND B.STND_YEAR =  ?  
        AND B.MEET_CD = ?    
        AND B.TMS  = ?       
  )BB  
 ORDER BY MANA_DESC
 #String#2012#String#003#String#2012#String#003#String#17#String#2012#String#003#String#2012#String#003#String#17#String#2012#String#003#String#2012#String#003#String#17#String#2012#String#003#String#2012#String#003#String#17#String#2012#String#003#String#2012#String#003#String#17#String#2012#String#2012#String#003#String#17#String#2012#String#003#String#17#
>
[I][UbiData][2012-06-07 23:10:49]	- Row size : 2
[I][UbiData][2012-06-07 23:10:49]	- Data
<
1^t입장인원^t998229^t0^t0^t0^t32508^t32508^t67325^t-34817^t-51.71^t^n2^t전년대비^t1417977^t0^t0^t44040^t44345^t88385^t80393^t-55877^t-63.22^t^n
>
[I][UbiData][2012-06-07 23:10:49][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 23:10:49][DATA QUERY START]
[I][UbiData][2012-06-07 23:10:49]	- sql id : rsm2020_s07
[I][UbiData][2012-06-07 23:10:49]	- Db charset : KSC5601
[I][UbiData][2012-06-07 23:10:49]	- Sql
<
SELECT  
   '0~'||BB.RACE_NO||'R' AS RACE_DESC,
   DECODE(LEV,1,'인원','점유율') AS MANA_DESC,
      DECODE(LEV,1,INWON_12,DECODE(INWON_TOTAL,0,0,ROUND(INWON_12/INWON_TOTAL*100,2))) AS INWON_12, 
      DECODE(LEV,1,INWON_13,DECODE(INWON_TOTAL,0,0,ROUND(INWON_13/INWON_TOTAL*100,2))) AS INWON_13, 
      DECODE(LEV,1,INWON_14,DECODE(INWON_TOTAL,0,0,ROUND(INWON_14/INWON_TOTAL*100,2))) AS INWON_14, 
      DECODE(LEV,1,INWON_16,DECODE(INWON_TOTAL,0,0,ROUND(INWON_16/INWON_TOTAL*100,2))) AS INWON_16, 
      DECODE(LEV,1,INWON_19,DECODE(INWON_TOTAL,0,0,ROUND(INWON_19/INWON_TOTAL*100,2))) AS INWON_19, 
      DECODE(LEV,1,INWON_20,DECODE(INWON_TOTAL,0,0,ROUND(INWON_20/INWON_TOTAL*100,2))) AS INWON_20, 
      DECODE(LEV,1,INWON_22,DECODE(INWON_TOTAL,0,0,ROUND(INWON_22/INWON_TOTAL*100,2))) AS INWON_22, 
      DECODE(LEV,1,INWON_23,DECODE(INWON_TOTAL,0,0,ROUND(INWON_23/INWON_TOTAL*100,2))) AS INWON_23, 
      DECODE(LEV,1,INWON_24,DECODE(INWON_TOTAL,0,0,ROUND(INWON_24/INWON_TOTAL*100,2))) AS INWON_24, 
      DECODE(LEV,1,INWON_25,DECODE(INWON_TOTAL,0,0,ROUND(INWON_25/INWON_TOTAL*100,2))) AS INWON_25, 
      DECODE(LEV,1,INWON_26,DECODE(INWON_TOTAL,0,0,ROUND(INWON_26/INWON_TOTAL*100,2))) AS INWON_26, 
      DECODE(LEV,1,INWON_27,DECODE(INWON_TOTAL,0,0,ROUND(INWON_27/INWON_TOTAL*100,2))) AS INWON_27, 
      DECODE(LEV,1,INWON_28,DECODE(INWON_TOTAL,0,0,ROUND(INWON_28/INWON_TOTAL*100,2))) AS INWON_28, 
      DECODE(LEV,1,INWON_100,DECODE(INWON_TOTAL,0,0,ROUND(INWON_100/INWON_TOTAL*100,2))) AS INWON_100, 
      DECODE(LEV,1,INWON_101,DECODE(INWON_TOTAL,0,0,ROUND(INWON_101/INWON_TOTAL*100,2))) AS INWON_101, 
      DECODE(LEV,1,INWON_102,DECODE(INWON_TOTAL,0,0,ROUND(INWON_102/INWON_TOTAL*100,2))) AS INWON_102, 
      DECODE(LEV,1,INWON_103,DECODE(INWON_TOTAL,0,0,ROUND(INWON_103/INWON_TOTAL*100,2))) AS INWON_103, 
      DECODE(LEV,1,INWON_SUM,DECODE(INWON_TOTAL,0,0,ROUND(INWON_SUM/INWON_TOTAL*100,2))) AS INWON_TOTAL 
  FROM
 (
             SELECT  
        SUM(CASE WHEN BRNC_CD='12' THEN INWON END) AS INWON_12, 
        SUM(CASE WHEN BRNC_CD='13' THEN INWON END) AS INWON_13, 
        SUM(CASE WHEN BRNC_CD='14' THEN INWON END) AS INWON_14, 
        SUM(CASE WHEN BRNC_CD='16' THEN INWON END) AS INWON_16, 
        SUM(CASE WHEN BRNC_CD='19' THEN INWON END) AS INWON_19, 
        SUM(CASE WHEN BRNC_CD='20' THEN INWON END) AS INWON_20, 
        SUM(CASE WHEN BRNC_CD='22' THEN INWON END) AS INWON_22, 
        SUM(CASE WHEN BRNC_CD='23' THEN INWON END) AS INWON_23, 
        SUM(CASE WHEN BRNC_CD='24' THEN INWON END) AS INWON_24, 
        SUM(CASE WHEN BRNC_CD='25' THEN INWON END) AS INWON_25, 
        SUM(CASE WHEN BRNC_CD='26' THEN INWON END) AS INWON_26, 
        SUM(CASE WHEN BRNC_CD='27' THEN INWON END) AS INWON_27, 
        SUM(CASE WHEN BRNC_CD='28' THEN INWON END) AS INWON_28, 
        SUM(CASE WHEN BRNC_CD='100' THEN INWON END) AS INWON_100, 
        SUM(CASE WHEN BRNC_CD='101' THEN INWON END) AS INWON_101, 
        SUM(CASE WHEN BRNC_CD='102' THEN INWON END) AS INWON_102, 
        SUM(CASE WHEN BRNC_CD='103' THEN INWON END) AS INWON_103, 
        SUM(INWON ) AS INWON_TOTAL,
        SUM(CASE WHEN BRNC_CD='12' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='13' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='14' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='16' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='19' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='20' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='22' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='23' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='24' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='25' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='26' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='27' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='28' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='100' THEN INWON END) + 
                 SUM(CASE WHEN BRNC_CD='101' THEN INWON END) + 
                 SUM(CASE WHEN BRNC_CD='102' THEN INWON END) +
                 SUM(CASE WHEN BRNC_CD='103' THEN INWON END)  AS INWON_SUM 
     FROM
    (
    SELECT C.CD_NM, 
           E.BRNC_CD,                                      
            SUM( E.ENT_PRSN_NUM) INWON 
        FROM                                                   
         VW_SDL_INFO R       
         ,TBRC_STAY_MANA E, 
         TBRK_SPEC_CD C                      
        WHERE  1=1
           AND R.MEET_CD  = ?  
        AND R.STND_YEAR(+) = ?  
          AND R.TMS(+)   = ?  
          AND R.DAY_ORD(+) = ?  
         AND E.MEET_CD='003'                        
         AND E.RACE_DT=R.RACE_DAY                 
         AND C.GRP_CD IN ('018','032')                      
         AND C.CD=E.BRNC_CD                
         
        GROUP BY E.BRNC_CD,C.CD_NM          
        ORDER BY E.BRNC_CD
    )A
   )AA,
 (
  SELECT                                                                   
          MAX(RACE_NO)  AS RACE_NO
          
   FROM   (                                                                 
               SELECT                                                       
                        TOR.RACE_NO                                         
                      , TOR.RACE_REG_NO                                     
                      , TOR.RACER_NO                                        
                      , TOR.RANK                                            
                      , TRM.NM_KOR                                          
                      , RANK() OVER (PARTITION BY TOR.RACE_NO               
                                                , TOR.RANK                  
                                         ORDER BY TOR.RACE_REG_NO) SEQ      
               FROM     TBEB_ORGAN@MRASYSLINK        TOR                        
                      , TBEC_RACER_MASTER@MRASYSLINK TRM                        
               WHERE 1=1                                                        
               
               AND    TOR.RACER_NO   = TRM.RACER_NO                         
               AND    TOR.STND_YEAR  = ?  
               AND    TOR.MBR_CD     = '001'                                
               AND    TOR.TMS        = ?  
               
               AND    TOR.RANK BETWEEN 1                                    
                                   AND 3                                    
          )                                                                 
   START WITH SEQ = 1                                                       
   CONNECT BY PRIOR SEQ = SEQ - 1                                           
   AND PRIOR RACE_NO = RACE_NO AND RANK = RANK                           
 )BB , (SELECT LEVEL LEV FROM DUAL CONNECT BY LEVEL <=2 ) DU
 #String#003#String#2012#String#17#String#1#String#2012#String#17#
>
[I][UbiData][2012-06-07 23:10:49]	- Row size : 2
[I][UbiData][2012-06-07 23:10:49]	- Data
<
0~15R^t인원^t2680^t2455^t3022^t3198^t3442^t2948^t1271^t1987^t1627^t1257^t988^t3289^t1143^t0^t0^t0^t0^t29307^t^n0~15R^t점유율^t8.24^t7.55^t9.3^t9.84^t10.59^t9.07^t3.91^t6.11^t5^t3.87^t3.04^t10.12^t3.52^t0^t0^t0^t0^t90.15^t^n
>
[I][UbiData][2012-06-07 23:10:49][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-06-07 23:10:49][DATA QUERY START]
[I][UbiData][2012-06-07 23:10:49]	- sql id : rsm2020_s08
[I][UbiData][2012-06-07 23:10:49]	- Db charset : KSC5601
[I][UbiData][2012-06-07 23:10:49]	- Sql
<
SELECT                                       
       STND_YEAR,  
       TMS,           
       DAY_ORD,   
       SPEC_DESC   
  FROM TBRD_RACE_SPEC_DESC 
  WHERE 1=1
       AND STND_YEAR = ?  
       AND TMS  = ?  
       AND DAY_ORD = ?  
       AND MEET_CD   = ?  
 UNION ALL
 SELECT 
       ' ', 999, 999, ' '
 FROM DUAL          
 ORDER BY TMS
 #String#2012#String#17#String#1#String#003#
>
[I][UbiData][2012-06-07 23:10:49]	- Row size : 1
[I][UbiData][2012-06-07 23:10:49]	- Data
<
 ^t999^t999^t ^t^n
>
[I][UbiData][2012-06-07 23:10:49][DATA QUERY END]
--------------------------------------------------------------------------------

