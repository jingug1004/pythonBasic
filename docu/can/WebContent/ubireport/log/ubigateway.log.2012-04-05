
[I][UbiForm][2012-04-05 14:24:17][REQUEST FILE]
[I][UbiForm][2012-04-05 14:24:17]	- Report : /web/waspage/usrbm/report/rsm/rsm2050_5.jrf
[I][UbiForm][2012-04-05 14:24:17]	- Common : /web/waspage/usrbm/report/rsm/property/commonitem.xml [Not found]
--------------------------------------------------------------------------------


[I][UbiData][2012-04-05 14:24:18][REQUEST FILE]
[I][UbiData][2012-04-05 14:24:18]	- Report : rsm2050_5.jrf
--------------------------------------------------------------------------------
[I][UbiData][2012-04-05 14:24:18][DB CONNECT]
[I][UbiData][2012-04-05 14:24:18]	- Type : nonlookup
[I][UbiData][2012-04-05 14:24:18]	- Db id : rbm
[I][UbiData][2012-04-05 14:24:18]	- Sql id : dsBrncCompareSales1
[I][UbiData][2012-04-05 14:24:18]	- Datasource : jdbc/RBM
[I][UbiData][2012-04-05 14:24:18]	- Status : Success
--------------------------------------------------------------------------------
[I][UbiData][2012-04-05 14:24:18][DATA QUERY START]
[I][UbiData][2012-04-05 14:24:18]	- sql id : dsBrncCompareSales1
[I][UbiData][2012-04-05 14:24:18]	- Db charset : KSC5601
[I][UbiData][2012-04-05 14:24:18]	- Sql
<
SELECT 
      0 AS ORD,
      MEET_CD, 
            TDIV_NO, 
            NO_ORDER, 
            DECODE(NO_ORDER,'B01','창원','B02','부산',CD_NM) AS BRNCH_NM,   
            round(B_AMT/? ,0) AS N_DIV_TOTAL,    
            round(L_AMT/ (SELECT MAX(INF.TMS) FROM VW_SDL_INFO INF
                                                              WHERE INF.STND_YEAR=?  -1
                                                                   AND INF.MEET_CD ='001') ,0) AS L_DIV_TOTAL
    FROM(
        
        SELECT MEET_CD,TDIV_NO,NO_ORDER,NET_AMT,B_AMT,L_AMT
        FROM
        (
            SELECT MEET_CD,TDIV_NO,
                   CASE WHEN TDIV_NO ='06' THEN 'A60'
                   ELSE 'A'||TDIV_NO 
                   END AS NO_ORDER
            ,SUM(NET_AMT)/10000 AS NET_AMT,SUM(B_AMT)/10000 AS B_AMT,SUM(L_AMT)/10000 AS L_AMT
            FROM
            (
             
             SELECT MEET_CD,
             
              TDIV_NO,
              
              SUM(NET_AMT) AS NET_AMT,
              0 AS B_AMT,
              0 AS L_AMT
             FROM
             (
                 SELECT                                                                                       
              B.MEET_CD AS MEET_CD, B.STND_YEAR STND_YEAR,SELL_CD,COMM_NO,DIV_NO,
              CASE WHEN SELL_CD IN ('01','03') AND COMM_NO = '06' THEN '06' 
                  WHEN SELL_CD IN ('01','03') AND COMM_NO < '11' THEN '01' 
                   ELSE COMM_NO
              END AS TDIV_NO,
              
              SUM(A.NET_AMT) AS NET_AMT                                            
                 FROM VW_SDL_INFO B,                                                                                 
              VW_PC_SATLIT_SUM A                                                                                  
                 WHERE 1 = 1                                                                                         
              AND B.MEET_CD = '001'        
              AND B.STND_YEAR = ?   
              AND B.TMS  <= ?   
              AND A.MEET_CD = B.MEET_CD                 
              AND A.STND_YEAR = B.STND_YEAR                                                                   
              AND A.TMS = B.TMS                                                                               
              AND A.DAY_ORD = B.DAY_ORD                                                                       
                 GROUP BY B.MEET_CD,B.STND_YEAR,A.SELL_CD,A.COMM_NO,A.DIV_NO
             )AA 
             GROUP BY AA.MEET_CD,AA.TDIV_NO
             UNION 
             
             
             SELECT MEET_CD,
             
              TDIV_NO,
              
              0 AS NET_AMT,
              SUM(NET_AMT) AS B_AMT,
              0 AS L_AMT
             FROM
             (
                 SELECT                                                                                       
              B.MEET_CD AS MEET_CD, B.STND_YEAR STND_YEAR,SELL_CD,COMM_NO,DIV_NO,
              CASE WHEN SELL_CD IN ('01','03') AND COMM_NO = '06' THEN '06' 
                  WHEN SELL_CD IN ('01','03') AND COMM_NO < '11' THEN '01' 
                   ELSE COMM_NO
              END AS TDIV_NO,
              
              SUM(A.NET_AMT) AS NET_AMT                                            
                 FROM VW_SDL_INFO B,                                                                                 
              VW_PC_SATLIT_SUM A                                                                                  
                 WHERE 1 = 1                                                                                         
              AND B.MEET_CD = '001'        
              AND B.STND_YEAR = ?  
              AND B.TMS  <= ?   
              AND A.MEET_CD = B.MEET_CD                 
              AND A.STND_YEAR = B.STND_YEAR                                                                   
              AND A.TMS = B.TMS                                                                               
              AND A.DAY_ORD = B.DAY_ORD                                                                       
                 GROUP BY B.MEET_CD,B.STND_YEAR,A.SELL_CD,A.COMM_NO,A.DIV_NO
             )BB
             GROUP BY BB.MEET_CD,BB.TDIV_NO
             UNION 
             
             
             SELECT MEET_CD,
             
              TDIV_NO,
              
              0 AS NET_AMT,
              0 AS B_AMT,
              SUM(NET_AMT) AS L_AMT
             FROM
             (
                 SELECT                                                                                       
              B.MEET_CD AS MEET_CD, B.STND_YEAR STND_YEAR,SELL_CD,COMM_NO,DIV_NO,
              CASE WHEN SELL_CD IN ('01','03') AND COMM_NO = '06' THEN '06' 
                  WHEN SELL_CD IN ('01','03') AND COMM_NO < '11' THEN '01' 
                   ELSE COMM_NO
              END AS TDIV_NO,
              
              SUM(A.NET_AMT) AS NET_AMT                                            
                 FROM VW_SDL_INFO B,                                                                                 
              VW_PC_SATLIT_SUM A                                                                                  
                 WHERE 1 = 1                                                                                         
              AND B.MEET_CD = '001'        
              AND B.STND_YEAR = ?  -1  
                                AND B.TMS <= (SELECT MAX(INF.TMS) FROM VW_SDL_INFO INF
                                                         WHERE INF.STND_YEAR=?  -1
                                                              AND INF.MEET_CD ='002')    
              AND A.MEET_CD = B.MEET_CD
              AND A.STND_YEAR = B.STND_YEAR                                                                   
              AND A.TMS = B.TMS                                                                               
              AND A.DAY_ORD = B.DAY_ORD                                                                       
                 GROUP BY B.MEET_CD,B.STND_YEAR,A.SELL_CD,A.COMM_NO,A.DIV_NO
             )CC
             GROUP BY CC.MEET_CD,CC.TDIV_NO
            )CCC   
            GROUP BY CCC.MEET_CD,CCC.TDIV_NO
        )DDD
            
        UNION ALL
        
        
        SELECT MEET_CD,
            SELL_CD,
            NO_ORDER,
            N_AMT,                                      
            B_AMT,
            L_AMT
        FROM(    
            SELECT                                      
                MEET_CD,
                 SELL_CD                                    
                ,DECODE(SELL_CD,'02','B01','04','B02') AS NO_ORDER 
                ,N_AMT                                      
                ,B_AMT                                      
                ,CASE WHEN B_AMT > N_AMT THEN '△' 
                      WHEN B_AMT = N_AMT THEN '-'  
                      WHEN B_AMT < N_AMT THEN ''   
                 END B_AMT_SIGN                             
                ,DECODE(B_AMT,0,0,ROUND(ABS(B_AMT-N_AMT)/B_AMT*100,1)) B_AMT_RATE 
                ,L_AMT                                      
                ,CASE WHEN L_AMT > N_AMT THEN '△' 
                      WHEN L_AMT = N_AMT THEN '-'  
                      WHEN L_AMT < N_AMT THEN ''   
                 END L_AMT_SIGN                             
                ,DECODE(L_AMT,0,0,ROUND(ABS(L_AMT-N_AMT)/L_AMT*100,1)) L_AMT_RATE 
                FROM (                                      
                 SELECT                                    
                     MEET_CD
                  ,SELL_CD                                 
                  ,SUM(N_AMT)/1000000 N_AMT      
                  ,SUM(B_AMT)/1000000 B_AMT      
                  ,SUM(L_AMT)/1000000 L_AMT      
                 FROM (                                    
                  SELECT   
                        MEET_CD,                               
                   SELL_CD                               
                   ,SUM(NET_AMT) N_AMT                   
                   ,0 B_AMT                              
                   ,0 L_AMT                              
                  FROM VW_PC_PAYOFFS                    
                  WHERE 1=1
                  AND MEET_CD = '001'     
                  AND STND_YEAR = ?   
                  AND TMS   <= ?   
                  AND SELL_CD IN ('02','04')              
                  GROUP BY MEET_CD,SELL_CD                        
                  UNION                                   
                   SELECT    
                   MEET_CD,                                 
                   SELL_CD                               
                   ,0 N_AMT                              
                   ,SUM(NET_AMT) B_AMT                   
                   ,0 L_AMT                              
                  FROM VW_PC_PAYOFFS                    
                  WHERE 1=1
                  AND MEET_CD = '001'     
                  AND STND_YEAR = '2011'  
                  AND TMS   <= ?   
                  AND SELL_CD IN ('02','04')              
                  GROUP BY MEET_CD,SELL_CD                        
                  UNION                                   
                   SELECT   
                   MEET_CD,                                  
                   SELL_CD                               
                   ,0 N_AMT                              
                   ,0 B_AMT                              
                   ,SUM(NET_AMT) L_AMT                   
                  FROM VW_PC_PAYOFFS                    
                  WHERE 1=1                               
                  AND STND_YEAR = (                       
                   SELECT DISTINCT STND_YEAR             
                   FROM VW_SDL_INFO                      
                   WHERE 1=1
                   AND STND_YEAR =?  -1  
                  )
                  AND MEET_CD = '001'         
                                             AND TMS <= (SELECT MAX(INF.TMS) FROM VW_SDL_INFO INF
                                                              WHERE INF.STND_YEAR=?  -1
                                                                   AND INF.MEET_CD ='002')    
                  AND SELL_CD IN ('02','04')              
                  GROUP BY MEET_CD,SELL_CD                        
                 ) GROUP BY MEET_CD,SELL_CD                        
                )                                
        )EEE        
    )AAAA,
    (
    
             SELECT  CD,
                     DECODE(CD,'01','본장','06','그린카드',CD_NM) AS CD_NM
               FROM  TBRK_SPEC_CD A  
              WHERE  1=1
              AND  A.GRP_CD = '060' 
              AND A.CD NOT IN('00','29')
             ) BB    
             WHERE 1=1
             AND TDIV_NO= BB.CD(+)
             AND TDIV_NO <> '999'
    GROUP BY MEET_CD,TDIV_NO,NO_ORDER,CD_NM,NET_AMT,B_AMT,L_AMT
    ORDER BY AAAA.NO_ORDER
 #String#12#String#2012#String#2012#String#12#String#2012#String#12#String#2012#String#2012#String#2012#String#12#String#12#String#2012#String#2012#
>
[I][UbiData][2012-04-05 14:24:22]	- Row size : 22
[I][UbiData][2012-04-05 14:24:22]	- Data
<
0^t001^t01^tA01^t본장^t4778^t4631^t^n0^t001^t11^tA11^t수원^t1756^t1774^t^n0^t001^t12^tA12^t상봉^t2568^t2379^t^n0^t001^t13^tA13^t일산^t1354^t1574^t^n0^t001^t14^tA14^t분당^t2470^t2349^t^n0^t001^t15^tA15^t동대문^t1472^t1096^t^n0^t001^t16^tA16^t장안^t3315^t2872^t^n0^t001^t17^tA17^t산본^t1448^t1386^t^n0^t001^t18^tA18^t부천^t1457^t1448^t^n0^t001^t19^tA19^t관악^t1558^t1432^t^n0^t001^t20^tA20^t길음^t0^t1435^t^n0^t001^t21^tA21^t당산^t2128^t1873^t^n0^t001^t22^tA22^t유성^t1401^t1290^t^n0^t001^t23^tA23^t인천^t913^t970^t^n0^t001^t24^tA24^t시흥^t1288^t1269^t^n0^t001^t25^tA25^t논현^t1317^t1220^t^n0^t001^t26^tA26^t천안^t979^t908^t^n0^t001^t27^tA27^t올림픽^t3838^t4154^t^n0^t001^t28^tA28^t의정부^t964^t790^t^n0^t001^t06^tA60^t그린카드^t215^t278^t^n0^t001^t02^tB01^t창원^t2892^t2944^t^n0^t001^t04^tB02^t부산^t3182^t3082^t^n
>
[I][UbiData][2012-04-05 14:24:22][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-04-05 14:24:22][DATA QUERY START]
[I][UbiData][2012-04-05 14:24:22]	- sql id : dsStndYearTms
[I][UbiData][2012-04-05 14:24:22]	- Db charset : KSC5601
[I][UbiData][2012-04-05 14:24:22]	- Sql
<
SELECT
   ?  AS  STND_YEAR
  ,?  AS TMS
 FROM DUAL
 #String#2012#String#12#
>
[I][UbiData][2012-04-05 14:24:22]	- Row size : 1
[I][UbiData][2012-04-05 14:24:22]	- Data
<
2012^t12^t^n
>
[I][UbiData][2012-04-05 14:24:22][DATA QUERY END]
--------------------------------------------------------------------------------


[I][UbiForm][2012-04-05 17:43:08][REQUEST FILE]
[I][UbiForm][2012-04-05 17:43:08]	- Report : /web/waspage/usrbm/report/rsm/rsm2020.jrf
[I][UbiForm][2012-04-05 17:43:08]	- Common : /web/waspage/usrbm/report/rsm/property/commonitem.xml [Not found]
--------------------------------------------------------------------------------


[I][UbiData][2012-04-05 17:43:08][REQUEST FILE]
[I][UbiData][2012-04-05 17:43:08]	- Report : rsm2020.jrf
--------------------------------------------------------------------------------
[I][UbiData][2012-04-05 17:43:11][DB CONNECT]
[I][UbiData][2012-04-05 17:43:11]	- Type : nonlookup
[I][UbiData][2012-04-05 17:43:11]	- Db id : rbm
[I][UbiData][2012-04-05 17:43:11]	- Sql id : rsm2020_s06Today
[I][UbiData][2012-04-05 17:43:11]	- Datasource : jdbc/RBM
[I][UbiData][2012-04-05 17:43:11]	- Status : Success
--------------------------------------------------------------------------------
[I][UbiData][2012-04-05 17:43:11][DATA QUERY START]
[I][UbiData][2012-04-05 17:43:11]	- sql id : rsm2020_s06Today
[I][UbiData][2012-04-05 17:43:11]	- Db charset : KSC5601
[I][UbiData][2012-04-05 17:43:11]	- Sql
<
WITH J 
 AS
 (SELECT    
         '전회' AS COL_DESC  
     , tms                                                                                       
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='12' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_02    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='16' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_06    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='22'  THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_12    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='20' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_10    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='23' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_13    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='24' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_14    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='13' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_03    
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='25'  THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_15    
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='19' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_09    
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='14' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_05    
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='26' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_16    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='27' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_17    
     , SUM(                                                                              
           CASE                                                                          
              WHEN COMM_NO='06'  THEN NVL(DIV_TOTAL, 0)                                  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_01_06_01    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='28' THEN NVL(DIV_TOTAL, 0) 
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_01_07_18    
         , SUM(                                                                              
               CASE                                                                          
                  WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_04_07_01    
         , SUM(                                                                              
               CASE                                                                          
                  WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='02' THEN NVL(DIV_TOTAL, 0)  
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_04_07_02    
        , SUM(                                                                              
               CASE                                                                          
                  WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='03' THEN NVL(DIV_TOTAL, 0)  
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_04_07_03    
         , SUM(                                                                              
               CASE                                                                          
                  WHEN SELL_CD='02' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_02_07_01    
 
         , SUM(                                                                              
               CASE                                                                          
                  WHEN COMM_NO NOT IN ('01','02','03','04','08') THEN NVL(DIV_TOTAL, 0)                         
                  ELSE 0                                                                     
               END                                                                           
           )/100 DIV_JIJUM    
         , SUM(DIV_TOTAL)/100 DIV_TOTAL                                                             
  FROM   TBES_SDL_DT_SUM                                                                         
  WHERE  1=1                                                                                    
    AND STND_YEAR  = ?                                                            
    AND MEET_CD    = ?                                                        
    AND TMS        BETWEEN ?  - 1 AND ? 
    AND DAY_ORD    = ? 
  GROUP BY TMS 
 )
 SELECT  DECODE(TMS, ? , '합계','전회') COL_DESC
        , TMS
        ,'1' AS GUBN
        ,DIV_01_07_02 
        ,DIV_01_07_06 
        ,DIV_01_07_12 
        ,DIV_01_07_10 
        ,DIV_01_07_13 
        ,DIV_01_07_14 
        ,DIV_01_07_03 
        ,DIV_01_07_15 
        ,DIV_01_07_09 
        ,DIV_01_07_05 
        ,DIV_01_07_16 
        ,DIV_01_07_17 
        ,DIV_01_06_01 
        ,DIV_01_07_18 
        ,DIV_04_07_01 
        ,DIV_04_07_02 
        ,DIV_04_07_03 
        ,DIV_02_07_01
        ,DIV_JIJUM
        ,1
 FROM J
 UNION ALL
 SELECT '점유율'
       , TMS
       , '2'
       , ROUND(DIV_01_07_02 / DIV_TOTAL * 100, 2) 
       , ROUND(DIV_01_07_06 / DIV_TOTAL * 100, 2)   
       , ROUND(DIV_01_07_12 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_10 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_13 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_14 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_03 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_15 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_09 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_05 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_16 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_17 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_06_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_18 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_02 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_03 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_02_07_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_JIJUM / DIV_TOTAL * 100, 2)    
       , 100
 FROM J
 WHERE tms = ? 
 UNION ALL
 SELECT '전회차'
       , TMS
       , '2'
       , ROUND(DIV_01_07_02 / DIV_TOTAL * 100, 2) 
       , ROUND(DIV_01_07_06 / DIV_TOTAL * 100, 2)   
       , ROUND(DIV_01_07_12 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_10 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_13 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_14 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_03 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_15 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_09 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_05 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_16 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_17 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_06_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_01_07_18 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_02 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_04_07_03 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_02_07_01 / DIV_TOTAL * 100, 2)    
       , ROUND(DIV_JIJUM / DIV_TOTAL * 100, 2)    
       , 100
 FROM J
 WHERE TMS = ?  -1
 ORDER BY 3, 2 DESC
 #String#2012#String#003#String#8#String#8#String#2#String#8#String#8#String#8#
>
[I][UbiData][2012-04-05 17:43:12]	- Row size : 2
[I][UbiData][2012-04-05 17:43:12]	- Data
<
전회^t7^t1^t5803402^t7996473^t3376091^t0^t4260248^t6960773^t4243380^t4582683^t7297744^t6042361^t3402968^t7188092^t216032^t3055642^t1718587^t2902899^t0^t0^t69047375^t1^t^n전회차^t7^t2^t7.1^t9.79^t4.13^t0^t5.21^t8.52^t5.19^t5.61^t8.93^t7.4^t4.17^t8.8^t.26^t3.74^t2.1^t3.55^t0^t0^t84.52^t100^t^n
>
[I][UbiData][2012-04-05 17:43:12][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-04-05 17:43:12][DATA QUERY START]
[I][UbiData][2012-04-05 17:43:12]	- sql id : rsm2020_s11
[I][UbiData][2012-04-05 17:43:12]	- Db charset : KSC5601
[I][UbiData][2012-04-05 17:43:12]	- Sql
<
SELECT 
         '0~'||BB.RACE_NO||'R' AS RACE_DESC,
         DECODE(LEV,1,'인원','점유율') AS MANA_DESC,
         CASE 
             WHEN LEV='2' AND IN_PRSN_NUM > 0 AND TOT_PRSN_NUM > 0 THEN ROUND(IN_PRSN_NUM / TOT_PRSN_NUM *100,2)    
             ELSE IN_PRSN_NUM
        END AS IN_PRSN_NUM, 
        CASE 
             WHEN LEV='2' AND BRNC_PRSN_NUM > 0 AND TOT_PRSN_NUM > 0 THEN ROUND(BRNC_PRSN_NUM / TOT_PRSN_NUM *100,2)    
             ELSE BRNC_PRSN_NUM
        END AS BRNC_PRSN_NUM, 
        CASE 
             WHEN LEV='2' AND TOT_PRSN_NUM > 0 THEN ROUND(TOT_PRSN_NUM / TOT_PRSN_NUM *100,2)    
             ELSE TOT_PRSN_NUM
        END AS TOT_PRSN_NUM, 
        CASE 
             WHEN LEV='1' THEN B_TOT_PRSN_NUM
        END AS B_TOT_PRSN_NUM, 
        CASE 
             WHEN LEV='1' THEN MINUS_PRSN_NUM
        END AS MINUS_PRSN_NUM, 
        CASE 
 
             WHEN LEV='1' AND TOT_PRSN_NUM>0 AND B_TOT_PRSN_NUM >0 THEN ROUND((TOT_PRSN_NUM - B_TOT_PRSN_NUM) / B_TOT_PRSN_NUM*100,2)
        END AS PER_PRSN_NUM 
 FROM
 (
      SELECT DU.LEV,
             SUM(CASE WHEN R.TMS =DU.TMS AND BRNC_CD = '98' THEN E.ENT_PRSN_NUM END) AS IN_PRSN_NUM,    
              SUM(CASE WHEN R.TMS =DU.TMS AND BRNC_CD <> '98' THEN E.ENT_PRSN_NUM END) AS BRNC_PRSN_NUM,    
              SUM(CASE WHEN R.TMS =DU.TMS THEN E.ENT_PRSN_NUM END) AS TOT_PRSN_NUM,    
              SUM(CASE WHEN R.TMS =DU.B_TMS THEN E.ENT_PRSN_NUM END) AS B_TOT_PRSN_NUM,    
              (SUM(CASE WHEN R.TMS =DU.TMS THEN E.ENT_PRSN_NUM END) - SUM(CASE WHEN R.TMS =DU.B_TMS THEN E.ENT_PRSN_NUM END)) AS MINUS_PRSN_NUM    
                      
          FROM                                                   
              TBRC_STAY_MANA E,    
              TBRK_SPEC_CD C,
              VW_SDL_INFO R,       
              (SELECT LEVEL AS LEV, ?  AS TMS,(?  - 1) AS B_TMS FROM DUAL CONNECT BY LEVEL<=2) DU 
          WHERE  1=1                
            AND E.BRNC_CD    = C.CD
            AND E.RACE_DT    = R.RACE_DAY                 
            AND C.GRP_CD        IN ('018','032')    
            AND R.MEET_CD    = '003'   
            AND R.STND_YEAR    = ?         
            AND R.TMS IN (? , ?  - 1)    
            AND R.DAY_ORD ='2'             
          GROUP BY DU.LEV
 )AA,
 (
     SELECT                                                                   
          MAX(RACE_NO)  AS RACE_NO
       FROM   (                                                                 
                   SELECT                                                       
                            TOR.RACE_NO                                         
                          , TOR.RACE_REG_NO                                     
                          , TOR.RACER_NO                                        
                          , TOR.RANK                                            
                          , TRM.NM_KOR                                          
                          , RANK() OVER (PARTITION BY TOR.RACE_NO               
                                                    , TOR.RANK                  
                                             ORDER BY TOR.RACE_REG_NO) SEQ      
                   FROM     TBEB_ORGAN@MRASYSLINK        TOR                        
                          , TBEC_RACER_MASTER@MRASYSLINK TRM                        
                   WHERE 1=1                                                        
                           
                   AND    TOR.RACER_NO   = TRM.RACER_NO                         
                   AND    TOR.STND_YEAR  = ?         
                   AND    TOR.MBR_CD     = '001'                                
                   AND    TOR.TMS        = ?         
                           
                   AND    TOR.RANK BETWEEN 1                                    
                                       AND 3                                    
              )                                                                 
       START WITH SEQ = 1                                                       
       CONNECT BY PRIOR SEQ = SEQ - 1                                           
       AND PRIOR RACE_NO = RACE_NO AND RANK = RANK     
 )BB
 ORDER BY AA.LEV
 #String#8#String#8#String#2012#String#8#String#8#String#2012#String#8#
>
[I][UbiData][2012-04-05 17:43:12]	- Row size : 2
[I][UbiData][2012-04-05 17:43:12]	- Data
<
0~15R^t인원^t3204^t25466^t28670^t31586^t-2916^t-9.23^t^n0~15R^t점유율^t11.18^t88.82^t100^t^t^t^t^n
>
[I][UbiData][2012-04-05 17:43:12][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-04-05 17:43:12][DATA QUERY START]
[I][UbiData][2012-04-05 17:43:12]	- sql id : rsm2020_s01
[I][UbiData][2012-04-05 17:43:12]	- Db charset : KSC5601
[I][UbiData][2012-04-05 17:43:12]	- Sql
<
SELECT 
           AA.MEET_CD,      
           AA.STND_YEAR,    
           AA.TMS,          
           AA.DAY_ORD,      
           TO_CHAR(TO_DATE(AA.RACE_DAY,'YYYYMMDD'),'YYYY-MM-DD') AS RACE_DAY, 
           AA.RACE_YOIL,    
           TO_CHAR(TO_DATE(AA.RACE_DAY,'YYYYMMDD'),'YYYY')||'년 '||AA.TMS||'회차 '||AA.DAY_ORD||'일차 ('|| TO_CHAR(TO_DATE(AA.RACE_DAY,'YYYYMMDD'),'YYYY-MM-DD')||') 경주 개최 결과'  
           AS RACE_DAY_INFO  
     
       FROM (         
             SELECT                              
             MEET_CD,      
             STND_YEAR,    
             TMS,          
             DAY_ORD,      
             RACE_DAY,     
             RACE_YOIL,    
             DECODE(RACE_YOIL,'MON','월','TUE','화','WED','수','THE','목','FRI','금','SAT','토','SUN','일','일') AS RACE_YOIL_KOR, 
             TO_CHAR(TO_DATE(RACE_DAY,'YYYYMMDD'),'YYYY-MM-DD')||
             ' ('||RACE_YOIL||') '||TMS||'회차 '||DAY_ORD||'일차'  
             AS RACE_INFO  
      FROM                                
             VW_SDL_INFO      
      WHERE  1=1                             
             AND MEET_CD = ?   
            AND STND_YEAR = ?   
            AND TMS= ?     
            AND DAY_ORD = ?        
    )AA
 #String#003#String#2012#String#8#String#2#
>
[I][UbiData][2012-04-05 17:43:12]	- Row size : 1
[I][UbiData][2012-04-05 17:43:12]	- Data
<
003^t2012^t8^t2^t2012-04-05^tTHU^t2012년 8회차 2일차 (2012-04-05) 경주 개최 결과^t^n
>
[I][UbiData][2012-04-05 17:43:12][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-04-05 17:43:12][DATA QUERY START]
[I][UbiData][2012-04-05 17:43:12]	- sql id : rsm2020_s05Today
[I][UbiData][2012-04-05 17:43:12]	- Db charset : KSC5601
[I][UbiData][2012-04-05 17:43:12]	- Sql
<
SELECT                                                                                      
       DECODE(GROUPING(RACE_NO),0,RACE_NO,'TOTAL') RACE_NO 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='12' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_02 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='16' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_06 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='22'  THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_12 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='20' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_10 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='23' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_13 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='24' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_14 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='13' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_03 
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='25'  THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_15 
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='19' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_09 
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='14' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_05 
 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='26' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_16 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='27' THEN NVL(DIV_TOTAL, 0)  
           END                                                                           
       )/100 DIV_01_07_17 
     , SUM(                                                                              
           CASE                                                                          
              WHEN COMM_NO='06'  THEN NVL(DIV_TOTAL, 0)                                  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_01_06_01 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='01' AND COMM_NO='28' THEN NVL(DIV_TOTAL, 0) 
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_01_07_18 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_04_07_01 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='02' THEN NVL(DIV_TOTAL, 0)  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_04_07_02 
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='04' AND COMM_NO='07' AND DIV_NO='03' THEN NVL(DIV_TOTAL, 0)  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_04_07_03    
     , SUM(                                                                              
           CASE                                                                          
              WHEN SELL_CD='02' AND COMM_NO='07' AND DIV_NO='01' THEN NVL(DIV_TOTAL, 0)  
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_02_07_01 
     , SUM(                                                                              
           CASE                                                                          
              WHEN  COMM_NO NOT IN ('01','02','03','04','08') THEN NVL(DIV_TOTAL, 0)                         
              ELSE 0                                                                     
           END                                                                           
       )/100 DIV_JIJUM  
 
     , SUM(DIV_TOTAL)/100 DIV_TOTAL                                                          
 FROM   TBES_SDL_DT                                                                         
 WHERE   1=1                                                                                   
      AND STND_YEAR  = ?                                                             
      AND    MEET_CD    = ?                                                        
      AND    TMS        = ?                                                            
      AND    DAY_ORD    = ?                                                        
 
 GROUP BY RACE_NO                                                                                   
       
 ORDER BY RACE_NO
 #String#2012#String#003#String#8#String#2#
>
[I][UbiData][2012-04-05 17:43:12]	- Row size : 14
[I][UbiData][2012-04-05 17:43:12]	- Data
<
01^t172617^t246835^t101225^t0^t154050^t197083^t152853^t129885^t257096^t198370^t98125^t191705^t9446^t101942^t47736^t115114^t0^t0^t2174082^t2530960^t^n02^t214937^t280429^t116147^t0^t178926^t242335^t166198^t137196^t267440^t247583^t121271^t233163^t10906^t101380^t59002^t120257^t0^t0^t2497170^t2903566^t^n03^t253493^t319933^t138100^t0^t186347^t285794^t177903^t162140^t297876^t255258^t129656^t252742^t10537^t110288^t68085^t141145^t0^t0^t2789297^t3326901^t^n04^t295943^t415072^t156238^t0^t227254^t338704^t195501^t201382^t370708^t325214^t171348^t316103^t10756^t138797^t80021^t159329^t0^t0^t3402370^t4048138^t^n05^t335273^t431392^t181926^t0^t288207^t376026^t224939^t253629^t445072^t416028^t192100^t386337^t11277^t179827^t91181^t182579^t0^t0^t3995793^t4811452^t^n06^t356993^t428470^t178108^t0^t279265^t393998^t233897^t248817^t446166^t364249^t195978^t384088^t16395^t185553^t102380^t188070^t0^t0^t4002427^t4761534^t^n07^t395197^t487772^t207446^t0^t283700^t416179^t242963^t287520^t476434^t356884^t201011^t441862^t20052^t208571^t116485^t204560^t0^t0^t4346636^t5170037^t^n08^t419304^t528899^t227680^t0^t303885^t487124^t257561^t281518^t523849^t431007^t210963^t459688^t15504^t217984^t111820^t223261^t0^t0^t4700047^t5578230^t^n09^t455802^t574755^t221580^t0^t318865^t513105^t287999^t324539^t527391^t420927^t234487^t503706^t13718^t217172^t138073^t190867^t0^t0^t4942986^t5816881^t^n10^t558874^t727451^t286870^t0^t399871^t658230^t392606^t434504^t643103^t546186^t282491^t631532^t15276^t282365^t156734^t256084^t0^t0^t6272177^t7378473^t^n11^t604486^t800546^t306985^t0^t412789^t652640^t394967^t425237^t652575^t568873^t276103^t604775^t12892^t298678^t166462^t285955^t0^t0^t6463963^t7617722^t^n12^t544439^t760575^t304491^t0^t404042^t643408^t377675^t381519^t671940^t548797^t253935^t620690^t13650^t271100^t154948^t274768^t0^t0^t6225977^t7362278^t^n13^t580764^t757084^t324628^t0^t390987^t631698^t390412^t406805^t663818^t573076^t262678^t606142^t14480^t290094^t152960^t245147^t0^t0^t6290773^t7438908^t^n14^t600318^t808516^t300608^t0^t425405^t681190^t426173^t423120^t736246^t594610^t252753^t655109^t12705^t321912^t182744^t278141^t0^t0^t6699550^t7805645^t^n
>
[I][UbiData][2012-04-05 17:43:12][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-04-05 17:43:12][DATA QUERY START]
[I][UbiData][2012-04-05 17:43:12]	- sql id : rsm2020_s03Today
[I][UbiData][2012-04-05 17:43:12]	- Db charset : KSC5601
[I][UbiData][2012-04-05 17:43:12]	- Sql
<
SELECT                                                                                    
      Z.RACE_NO, 
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          FC_GET_RSLT_RANK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO)                
      END RSLT_RANK, 
      R.RANK_1,  
      R.RANK_2,  
      R.RANK_3,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '001', NULL) 
      END WIN,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '002', '1')  
      END PLC,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '002', '2')  
      END PLC2,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '004', NULL) 
      END EX,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '005', NULL) 
      END QU,  
      CASE                                                                                  
          WHEN C.RACE_NO <> 'TOTAL' THEN                                                    
          GET_RSLT_PAYOFF@MRASYSLINK(C.STND_YEAR, C.MEET_CD, C.TMS, C.DAY_ORD, C.RACE_NO, '006', NULL) 
      END TRI,  
      D.BONJANG_TOTAL, 
      D.JIJUM_TOTAL,  
      C.DIV_TOTAL,  
      NVL(D.REFUND,0) REFUND, 
      NVL(B.B_DIV_TOTAL,0) AS B_DIV_TOTAL,    
      NVL((C.DIV_TOTAL-B.B_DIV_TOTAL),0) AS PLUS_MINUS, 
      CASE                                                                                  
          WHEN B.B_DIV_TOTAL<>0 THEN                                                        
          ROUND((C.DIV_TOTAL-B.B_DIV_TOTAL)/B.B_DIV_TOTAL*100,2)                            
          ELSE 0                                                                            
      END RATE,   
      SAME_PAYOFF_TOTAL,  
      SAME_PAYOFF_001, 
   SAME_PAYOFF_002, 
   SAME_PAYOFF_004, 
   SAME_PAYOFF_005, 
   SAME_PAYOFF_006 
  FROM   
   
      (   
                                                                 
          SELECT                                                                            
                D.MEET_CD,                                                                   
                D.STND_YEAR,                                                                 
                D.TMS,                                                                       
                D.DAY_ORD,                                                                   
                DECODE(D.RACE_NO,NULL,'TOTAL',D.RACE_NO) RACE_NO,                              
                SUM(                                                                        
                    CASE                                                                    
                      WHEN D.SELL_CD='03' THEN D.DIV_TOTAL                                    
                      ELSE 0                                                                
                    END                                                                     
                ) BONJANG_TOTAL,                                                            
                SUM(                                                                        
                    CASE                                                                    
                      WHEN D.SELL_CD !='03' THEN D.DIV_TOTAL                                     
                    END                                                                     
                ) JIJUM_TOTAL,                                                              
                SUM(D.REFUND) REFUND                                                         
          FROM   TBES_SDL_DT D                                                              
          WHERE 1=1                                                                             
              AND D.STND_YEAR(+)  = ? 
              AND D.MEET_CD(+)    = ? 
              AND D.TMS(+)        = ? 
              AND D.DAY_ORD(+)    = ? 
          GROUP BY                                                                          
                D.MEET_CD,                                                                   
                D.STND_YEAR,                                                                 
                D.TMS,                                                                       
                D.DAY_ORD,                                                                   
                ROLLUP(D.RACE_NO)                                                           
      ) D,                                                                                  
      (                                                                                     
         SELECT                                                                             
            P.MEET_CD,                                                                      
            P.STND_YEAR,                                                                    
            P.TMS,                                                                          
            P.DAY_ORD,                                                                      
            DECODE(P.RACE_NO,NULL,'TOTAL',P.RACE_NO) RACE_NO,                               
            SUM(POOL_TOTAL) DIV_TOTAL                                                       
         FROM                                                                               
             TBES_SDL_PT P                                                                  
         WHERE 1=1                                                                              
             AND P.STND_YEAR  = ? 
             AND P.MEET_CD    = ? 
             AND P.TMS        = ? 
             AND P.DAY_ORD    = ? 
         GROUP BY                                                                           
            P.MEET_CD,                                                                      
            P.STND_YEAR,                                                                    
            P.TMS,                                                                          
            P.DAY_ORD,                                                                      
            ROLLUP(P.RACE_NO)                                                               
      ) C,                                                                                  
      (                                                                                     
          SELECT                                                                            
                DECODE(RACE_NO,NULL,'TOTAL',RACE_NO) RACE_NO,                               
                SUM(DIV_TOTAL) B_DIV_TOTAL                                                  
          FROM   TBES_SDL_DT                                                                
          WHERE 1=1                                                                            
              AND  STND_YEAR  = ? 
              AND    MEET_CD    = ? 
              AND    TMS        = ?  -1                                                    
              AND    DAY_ORD    = ? 
          GROUP BY                                                                          
                ROLLUP(RACE_NO)                                                             
      ) B,                                                                                  
      (                                                                                     
          SELECT                                                                            
                RACE_NO                                                                     
              , MIN(DECODE(RANK, '1', NM_KOR)) RANK_1                                       
              , MIN(DECODE(RANK, '2', NM_KOR)) RANK_2                                       
              , MIN(DECODE(RANK, '3', NM_KOR)) RANK_3                                       
          FROM   (                                                                          
                   SELECT                                                                   
                            RACE_NO                                                         
                          , RANK                                                            
                          , SUBSTR(MAX(SYS_CONNECT_BY_PATH (NM_KOR, '/')), 2) NM_KOR        
                   FROM   (                                                                 
                               SELECT                                                       
                                        TOR.RACE_NO                                         
                                      , TOR.RACE_REG_NO                                     
                                      , TOR.RACER_NO                                        
                                      , TOR.RANK                                            
                                      , TRM.NM_KOR                                          
                                      , RANK() OVER (PARTITION BY TOR.RACE_NO               
                                                                , TOR.RANK                  
                                                         ORDER BY TOR.RACE_REG_NO) SEQ      
                               FROM     TBEB_ORGAN@MRASYSLINK        TOR                        
                                      , TBEC_RACER_MASTER@MRASYSLINK TRM                        
                               WHERE 1=1                
                               AND    TOR.RACER_NO   = TRM.RACER_NO                         
                               AND    TOR.STND_YEAR  = ? 
                               AND    TOR.MBR_CD     = '001'                                
                               AND    TOR.TMS        = ? 
                               AND    TOR.DAY_ORD    = ? 
                               AND    TOR.RANK BETWEEN 1                                    
                                                   AND 3                                    
                          )                                                                 
                   START WITH SEQ = 1                                                       
                   CONNECT BY PRIOR SEQ = SEQ - 1                                           
                   AND PRIOR RACE_NO = RACE_NO AND RANK = RANK                              
                   GROUP BY                                                                 
                            RACE_NO                                                         
                          , RANK                                                            
               )                                                                            
          GROUP BY RACE_NO                                                                  
          UNION ALL                                                                         
          SELECT 'TOTAL', '', '', '' FROM DUAL                                              
      ) R, 
      (   
     
       SELECT                                                                         
          RACE_NO,
            SUM(CASE 
                     WHEN POOL_CD = '001' AND RS_SEQ >= '2' THEN PAYOFF 
                     WHEN POOL_CD = '002' AND RS_SEQ >= '3' THEN PAYOFF 
                     WHEN POOL_CD = '004' AND RS_SEQ >= '2' THEN PAYOFF 
                     WHEN POOL_CD = '005' AND RS_SEQ >= '2' THEN PAYOFF 
                     WHEN POOL_CD = '006' AND RS_SEQ >= '2' THEN PAYOFF 
            END) AS SAME_PAYOFF_TOTAL, 
                               
            SUM(CASE WHEN POOL_CD = '001' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_001, 
            SUM(CASE WHEN POOL_CD = '002' AND RS_SEQ >= '3' THEN PAYOFF END) AS SAME_PAYOFF_002, 
            SUM(CASE WHEN POOL_CD = '004' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_004, 
            SUM(CASE WHEN POOL_CD = '005' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_005, 
            SUM(CASE WHEN POOL_CD = '006' AND RS_SEQ >= '2' THEN PAYOFF END) AS SAME_PAYOFF_006 
      FROM TBES_SDL_RS                                                                
      WHERE 1=1                                                                          
          AND MEET_CD  = '003'                                                              
          AND STND_YEAR = ?      
          AND TMS   = ?      
          AND DAY_ORD  = ?      
      GROUP BY          
       RACE_NO                                                              
 
   ) E,                                                                                  
  (                                       
    SELECT DISTINCT RACE_NO           
    FROM TBEB_RACE_DOC@MRASYSLINK D        
      WHERE 1=1                          
          AND D.STND_YEAR= ? 
          AND D.TMS=? 
           AND D.DAY_ORD=? 
 
   ) Z                                   
  WHERE 1=1                                                                                    
      AND C.RACE_NO(+)=Z.RACE_NO                                                                
      AND B.RACE_NO(+)=Z.RACE_NO                                                            
      AND R.RACE_NO(+)=Z.RACE_NO                                                            
      AND D.RACE_NO(+)=Z.RACE_NO
      AND E.RACE_NO(+)=Z.RACE_NO                                                            
  ORDER BY Z.RACE_NO
 #String#2012#String#003#String#8#String#2#String#2012#String#003#String#8#String#2#String#2012#String#003#String#8#String#2#String#2012#String#8#String#2#String#2012#String#8#String#2#String#2012#String#8#String#2#
>
[I][UbiData][2012-04-05 17:43:13]	- Row size : 15
[I][UbiData][2012-04-05 17:43:13]	- Data
<
01^t5-3-6^t구현구^t심상철^t김정구^t5.1^t1.5^t1.3^t13.6^t5.4^t21^t35687800^t217408200^t253096000^t0^t14062300^t239033700^t1699.82^t^t^t^t^t^t^t^n02^t2-6-5^t정훈민^t서  휘^t김강현^t2.8^t2.2^t8.6^t50.3^t33.1^t19.4^t40639600^t249717000^t290356600^t0^t281366000^t8990600^t3.2^t^t^t^t^t^t^t^n03^t6-3-2^t문주엽^t이경원^t이경섭^t4.2^t2^t2^t14^t5.6^t10.5^t53760400^t278929700^t332690100^t0^t367123900^t-34433800^t-9.38^t^t^t^t^t^t^t^n04^t1-3-6^t김명진^t김대선^t정종훈^t2.2^t1.4^t2.2^t8.3^t5.5^t7.4^t64576800^t340237000^t404813800^t0^t410100700^t-5286900^t-1.29^t^t^t^t^t^t^t^n05^t2-4-6^t사재준^t손제민^t경상수^t1.3^t1^t1.8^t2.8^t2^t9.3^t81565900^t399579300^t481145200^t0^t468180300^t12964900^t2.77^t^t^t^t^t^t^t^n06^t2-1-6^t박종덕^t한  진^t어선규^t1.5^t1.2^t3.1^t13.2^t9^t6.1^t75910700^t400242700^t476153400^t0^t499266100^t-23112700^t-4.63^t^t^t^t^t^t^t^n07^t4-1-3^t김희용^t이지수^t강지환^t15.8^t8^t1.3^t73^t21.3^t29.7^t82340100^t434663600^t517003700^t0^t503193800^t13809900^t2.74^t^t^t^t^t^t^t^n08^t5-1-2^t권현기^t우진수^t정주현^t9.6^t4.1^t1.5^t62.5^t18.7^t9.9^t87818300^t470004700^t557823000^t0^t569672100^t-11849100^t-2.08^t^t^t^t^t^t^t^n09^t4-5-2^t정용진^t김기한^t한  운^t1.4^t1.3^t3.6^t6.8^t6.4^t5.7^t87389500^t494298600^t581688100^t0^t590157500^t-8469400^t-1.44^t^t^t^t^t^t^t^n10^t1-2-5^t최재원^t여현창^t원용관^t2^t1.2^t4.3^t14.3^t9^t35.7^t110629600^t627217700^t737847300^t0^t714509200^t23338100^t3.27^t^t^t^t^t^t^t^n11^t1-4-2^t구현구^t김종희^t문주엽^t1.9^t1.3^t1.7^t6.2^t3.9^t2.5^t115375900^t646396300^t761772200^t0^t729070900^t32701300^t4.49^t^t^t^t^t^t^t^n12^t1-6-3^t이택근^t심상철^t한종석^t1.5^t1.2^t2.8^t5.1^t3.7^t6.3^t113630100^t622597700^t736227800^t0^t739175900^t-2948100^t-.4^t^t^t^t^t^t^t^n13^t1-5-6^t정종훈^t강지환^t오세준^t2.3^t1.3^t8.1^t27.3^t22.1^t32.8^t114813500^t629077300^t743890800^t0^t711978600^t31912200^t4.48^t^t^t^t^t^t^t^n14^t1-3-6^t서화모^t어선규^t고일수^t2.2^t1.1^t1.4^t3.4^t1.8^t6.5^t110609500^t669955000^t780564500^t0^t766288700^t14275800^t1.86^t^t^t^t^t^t^t^n15^t--^t경상수^t이재학^t박광혁^t^t^t^t^t^t^t^t^t819999200^t0^t805121000^t14878200^t1.85^t^t^t^t^t^t^t^n
>
[I][UbiData][2012-04-05 17:43:13][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-04-05 17:43:13][DATA QUERY START]
[I][UbiData][2012-04-05 17:43:13]	- sql id : rsm2020_s02Today
[I][UbiData][2012-04-05 17:43:13]	- Db charset : KSC5601
[I][UbiData][2012-04-05 17:43:13]	- Sql
<
SELECT                                                                                          
           MST.GBN       
         , YEAR.DIV_TOTAL AS YEAR_TOTAL 
         , YEAR.REFUND    AS YEAR_REFUND 
         , TMS.D_1 
         , TMS.D_2   
         , TMS.D_3   
         , TMS.D_4   
         , TMS.D_5   
         , TMS.D_6   
         , TMS.D_7   
         , TMS.TOTAL 
         , PRE.TOTAL AS PRE_TOTAL 
         , NVL(TMS.TOTAL, 0) - NVL(PRE .TOTAL, 0) ADD_POOL 
         , CASE WHEN (NVL(PRE.TOTAL, 0) = 0) AND (NVL(TMS.TOTAL, 0) = 0) THEN 0                  
                WHEN NVL(PRE.TOTAL, 0) = 0                               THEN 100                
                WHEN NVL(TMS.TOTAL, 0) = 0                                THEN -100              
                ELSE ROUND((NVL(TMS.TOTAL, 0) - NVL(PRE.TOTAL, 0)) / NVL(PRE.TOTAL, 0) * 100, 2) 
           END ADD_RATE 
  FROM                                                                                           
           (                                                                                     
              SELECT                                                                             
                       ?  STND_YEAR                                                      
                     , '매출총액' GBN                                                            
              FROM   DUAL                                                                        
           ) MST                                                                                 
         , (                                                                                     
              SELECT                                                                             
                       TMS.STND_YEAR                                                             
                     , MIN(DECODE(TMS.D, 1, TMS.AMOUNT)) D_1                                     
                     , MIN(DECODE(TMS.D, 2, TMS.AMOUNT)) D_2                                     
                     , MIN(DECODE(TMS.D, 3, TMS.AMOUNT)) D_3                                     
                     , MIN(DECODE(TMS.D, 4, TMS.AMOUNT)) D_4                                     
                     , MIN(DECODE(TMS.D, 5, TMS.AMOUNT)) D_5                                     
                     , MIN(DECODE(TMS.D, 6, TMS.AMOUNT)) D_6                                     
                     , MIN(DECODE(TMS.D, 7, TMS.AMOUNT)) D_7                                     
                     , SUM(TMS.AMOUNT)                   TOTAL                                   
              FROM   (                                                                           
                          SELECT                                                                 
                                   TSP.STND_YEAR                                                 
                                 , TO_CHAR(TO_DATE(INFO.RACE_DAY, 'YYYYMMDD'), 'D') D            
                                 , SUM(TSP.POOL_TOTAL) AMOUNT                                    
                          FROM     VW_SDL_INFO INFO                                              
                                 , TBES_SDL_PT       TSP                                         
                          WHERE  1=1
                          AND    INFO.STND_YEAR = TSP.STND_YEAR                                  
                          AND    INFO.MEET_CD    = TSP.MEET_CD                                   
                          AND    INFO.TMS       = TSP.TMS                                        
                          AND    INFO.DAY_ORD   = TSP.DAY_ORD                                    
                          AND    TSP.STND_YEAR  = ?   
                          AND    TSP.MEET_CD    = ?       
                          AND    TSP.TMS        = ?       
                          GROUP BY                                                               
                                   TSP.STND_YEAR                                                 
                                 , INFO.RACE_DAY                                                 
                     ) TMS                                                                       
              GROUP BY TMS.STND_YEAR                                                             
           ) TMS                                                                                 
         , (                                                                                     
              SELECT                                                                             
                       STND_YEAR                                                                 
                     , SUM(TSP.DIV_TOTAL) DIV_TOTAL                                              
                     , SUM(TSP.REFUND    ) REFUND                                                
              FROM   TBES_SDL_DT_SUM       TSP                                                       
              WHERE  TSP.STND_YEAR  = ?                                                  
              AND    TSP.MEET_CD    = ?                                                    
              AND    TSP.TMS       <= ?                                                        
              GROUP BY                                                                           
                       STND_YEAR                                                                 
           ) YEAR                                                                                
         , (                                                                                     
              SELECT                                                                             
                       STND_YEAR                                                                 
                     , TMS                                                                       
                     , NVL(SUM(TSP.POOL_TOTAL), 0)  TOTAL                                        
              FROM   TBES_SDL_PT       TSP                                                       
              WHERE  1=1
              AND TSP.STND_YEAR  = ? 
              AND    TSP.MEET_CD    = ?                                                    
              AND    TSP.TMS        = ?  - 1                                                   
              GROUP BY                                                                           
                       STND_YEAR                                                                 
                     , TMS                                                                       
           ) PRE                                                                                 
  WHERE  1=1
  AND   MST.STND_YEAR = TMS .STND_YEAR(+)                                                       
  AND    MST.STND_YEAR = YEAR.STND_YEAR(+)                                                       
  AND    MST.STND_YEAR = PRE .STND_YEAR(+)                                                       
  UNION ALL                                                                                      
  SELECT                                                                                         
           MST.GBN                                                                               
         , YEAR.DIV_TOTAL                   YEAR_TOTAL                                           
         , YEAR.REFUND                      YEAR_REFUND                                          
         , TMS.D_1                                                                               
         , TMS.D_2                                                                               
         , TMS.D_3                                                                               
         , TMS.D_4                                                                               
         , TMS.D_5                                                                               
         , TMS.D_6                                                                               
         , TMS.D_7                                                                               
         , TMS.TOTAL                                                                             
         , 0 PRE_TOTAL                                                                           
         , NVL(PRE .TOTAL, 0) - NVL(TMS.TOTAL, 0) ADD_POOL                                       
         , CASE WHEN (NVL(PRE.TOTAL, 0) = 0) AND (NVL(TMS.TOTAL, 0) = 0) THEN 0                  
                WHEN NVL(PRE.TOTAL, 0) = 0                               THEN -100               
                WHEN NVL(TMS.TOTAL, 0) = 0                                THEN 100               
                ELSE ROUND((NVL(PRE.TOTAL, 0) - NVL(TMS.TOTAL, 0)) / NVL(TMS.TOTAL, 0) * 100, 2) 
           END ADD_RATE                                                                          
  FROM                                                                                           
           (                                                                                     
              SELECT                                                                             
                       ?  -1 STND_YEAR                                                    
                     , '전년대비' GBN                                                            
              FROM   DUAL                                                                        
           ) MST                                                                                 
         , (                                                                                     
              SELECT                                                                             
                       TMS.STND_YEAR                                                             
                     , MIN(DECODE(TMS.D, 1, TMS.AMOUNT)) D_1                                     
                     , MIN(DECODE(TMS.D, 2, TMS.AMOUNT)) D_2                                     
                     , MIN(DECODE(TMS.D, 3, TMS.AMOUNT)) D_3                                     
                     , MIN(DECODE(TMS.D, 4, TMS.AMOUNT)) D_4                                     
                     , MIN(DECODE(TMS.D, 5, TMS.AMOUNT)) D_5                                     
                     , MIN(DECODE(TMS.D, 6, TMS.AMOUNT)) D_6                                     
                     , MIN(DECODE(TMS.D, 7, TMS.AMOUNT)) D_7                                     
                     , SUM(TMS.AMOUNT)                   TOTAL                                   
              FROM   (                                                                           
                          SELECT                                                                 
                                   TSP.STND_YEAR                                                 
                                 , TO_CHAR(TO_DATE(INFO.RACE_DAY, 'YYYYMMDD'), 'D') D            
                                 , SUM(TSP.POOL_TOTAL) AMOUNT                                    
                          FROM     VW_SDL_INFO INFO                                              
                                 , TBES_SDL_PT       TSP                                         
                          WHERE  1=1
                          AND  INFO.STND_YEAR = TSP.STND_YEAR                                  
                          AND    INFO.MEET_CD    = TSP.MEET_CD                                   
                          AND    INFO.TMS       = TSP.TMS                                        
                          AND    INFO.DAY_ORD   = TSP.DAY_ORD                                    
                          AND    TSP.STND_YEAR  =  ?  -1                                   
                          AND    TSP.MEET_CD    = ?                                        
                          AND    TSP.TMS        = ?                                            
                          GROUP BY                                                               
                                   TSP.STND_YEAR                                                 
                                 , INFO.RACE_DAY                                                 
                     ) TMS                                                                       
              GROUP BY TMS.STND_YEAR                                                             
           ) TMS                                                                                 
         , (                                                                                     
              SELECT                                                                             
                       STND_YEAR                                                                 
                     , SUM(TSP.DIV_TOTAL) DIV_TOTAL                                              
                     , SUM(TSP.REFUND    ) REFUND                                                
              FROM   TBES_SDL_DT_SUM       TSP                                                       
              WHERE  1=1
              AND TSP.STND_YEAR  = ?  -1                                               
              AND    TSP.MEET_CD    = ?                                                    
              AND    TSP.TMS       <= ?                                                        
              GROUP BY                                                                           
                       STND_YEAR                                                                 
           ) YEAR                                                                                
         , (                                                                                     
              SELECT                                                                             
                       STND_YEAR-1 STND_YEAR                                                     
                     , TMS                                                                       
                     , NVL(SUM(TSP.POOL_TOTAL), 0)  TOTAL                                        
              FROM   TBES_SDL_PT       TSP                                                       
              WHERE  1=1
              AND TSP.STND_YEAR  = ?                                                  
              AND    TSP.MEET_CD    = ?                                                    
              AND    TSP.TMS        = ?                                                        
              GROUP BY                                                                           
                       STND_YEAR                                                                 
                     , TMS                                                                       
           ) PRE                                                                                 
  WHERE  1=1
  AND MST.STND_YEAR = TMS.STND_YEAR(+)                                                        
  AND    MST.STND_YEAR = YEAR.STND_YEAR(+)                                                       
  AND    MST.STND_YEAR = PRE.STND_YEAR(+)
 #String#2012#String#2012#String#003#String#8#String#2012#String#003#String#8#String#2012#String#003#String#8#String#2012#String#2012#String#003#String#8#String#2012#String#003#String#8#String#2012#String#003#String#8#
>
[I][UbiData][2012-04-05 17:43:13]	- Row size : 2
[I][UbiData][2012-04-05 17:43:13]	- Data
<
매출총액^t115965917500^t1293362300^t^t^t^t8434884800^t8475071700^t^t^t16909956500^t16111554800^t798401700^t4.96^t^n전년대비^t133414437800^t3735895900^t^t^t^t8531436400^t8602669500^t^t^t17134105900^t0^t-224149400^t-1.31^t^n
>
[I][UbiData][2012-04-05 17:43:13][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-04-05 17:43:13][DATA QUERY START]
[I][UbiData][2012-04-05 17:43:13]	- sql id : rsm2020_s04
[I][UbiData][2012-04-05 17:43:13]	- Db charset : KSC5601
[I][UbiData][2012-04-05 17:43:13]	- Sql
<
SELECT 
   ROW_ORDER,
   MANA_DESC, 
   TOTAL        
        ,SUN_NUM     
        ,TUE_NUM     
        ,WEN_NUM     
        ,THU_NUM     
        ,TOT_PRSN_NUM,    
        
        B_TOT_PRSN_NUM,          
        
        CASE 
              WHEN ROW_ORDER='2' THEN N_TOT_PRSN_NUM - TOT_PRSN_NUM
              ELSE PRSN_NUM_MINUS
        END PRSN_NUM_MINUS,          
        
        ROUND(CASE 
              WHEN ROW_ORDER='2' THEN (N_TOT_PRSN_NUM - TOT_PRSN_NUM)/TOT_PRSN_NUM*100
              ELSE PER
        END,2) AS PER             
  FROM
 (
  
  SELECT '1' AS ROW_ORDER,
    '입장인원' AS MANA_DESC,
     A.TMS                                                               
        ,TOT_PRSN_NUM                     
        ,MON_NUM 
              ,TUE_NUM 
              ,WEN_NUM 
              ,THU_NUM 
              ,FRI_NUM 
              ,SAT_NUM 
              ,SUN_NUM 
              ,B_TOT_PRSN_NUM
              ,(TOT_PRSN_NUM-B_TOT_PRSN_NUM) AS PRSN_NUM_MINUS
              ,DECODE(B_TOT_PRSN_NUM,0,0,(TOT_PRSN_NUM-B_TOT_PRSN_NUM)/B_TOT_PRSN_NUM*100)  AS PER
              ,TOTAL          
  
    FROM
    
    
    (
    
     SELECT   MAX(TMS) TMS
           ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
           ,NVL(SUM(A.ENT_PRSN_NUM ),0)         TOT_PRSN_NUM                                                      
           
          
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'2', A.ENT_PRSN_NUM,0 )) ,0) MON_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'3', A.ENT_PRSN_NUM,0 )) ,0) TUE_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'4', A.ENT_PRSN_NUM,0 )) ,0) WEN_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'5', A.ENT_PRSN_NUM,0 )) ,0) THU_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'6', A.ENT_PRSN_NUM,0 )) ,0) FRI_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'7', A.ENT_PRSN_NUM,0 )) ,0) SAT_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'1', A.ENT_PRSN_NUM,0 )) ,0) SUN_NUM       
    
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) =  ?  
                AND MEET_CD = ?   
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE 1=1
             AND STND_YEAR = ?  
                AND MEET_CD = ? 
                AND TMS  = ?  
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    GROUP BY B.TMS
    ) A,
    
    
    (
    
     SELECT   
            MAX(TMS) TMS
           ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
           ,NVL(SUM(A.ENT_PRSN_NUM ),0)         B_TOT_PRSN_NUM  
           
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) =  ?  
                AND MEET_CD = ?    
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE 1=1
             AND STND_YEAR = ?    
                AND MEET_CD = ? 
                AND TMS  = ?  - 1   
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    GROUP BY B.TMS
    ) B,
    
    (
    
     SELECT NVL(SUM(A.ENT_PRSN_NUM ),0)         TOTAL  
           
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) = ?  
                AND MEET_CD = ?   
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE STND_YEAR = ?  
                AND MEET_CD = ? 
                AND TMS <= ?  
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    )C
  UNION ALL 
  
  
  SELECT '2' AS ROW_ORDER,
    '전년대비' AS MANA_DESC,
     A.TMS                                                               
        ,TOT_PRSN_NUM                     
        ,MON_NUM 
              ,TUE_NUM 
              ,WEN_NUM 
              ,THU_NUM 
              ,FRI_NUM 
              ,SAT_NUM 
              ,SUN_NUM 
              ,B_TOT_PRSN_NUM
              ,(TOT_PRSN_NUM-B_TOT_PRSN_NUM) AS PRSN_NUM_MINUS
              ,DECODE(B_TOT_PRSN_NUM,0,0,(TOT_PRSN_NUM-B_TOT_PRSN_NUM)/B_TOT_PRSN_NUM*100)  AS PER
              ,TOT          
  
    FROM
    
    
    (
    
     SELECT   MAX(TMS) TMS
           ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
           ,NVL(SUM(A.ENT_PRSN_NUM ),0)         TOT_PRSN_NUM                                                      
           
          
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'2', A.ENT_PRSN_NUM,0 )) ,0) MON_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'3', A.ENT_PRSN_NUM,0 )) ,0) TUE_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'4', A.ENT_PRSN_NUM,0 )) ,0) WEN_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'5', A.ENT_PRSN_NUM,0 )) ,0) THU_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'6', A.ENT_PRSN_NUM,0 )) ,0) FRI_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'7', A.ENT_PRSN_NUM,0 )) ,0) SAT_NUM       
          ,NVL(SUM( DECODE (TO_CHAR(TO_DATE(A.RACE_DT),'D'),'1', A.ENT_PRSN_NUM,0 )) ,0) SUN_NUM       
    
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) = ?  - 1  
                AND MEET_CD    = ?   
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE STND_YEAR = ?  - 1  
                AND MEET_CD =?  
                AND TMS  = ?    
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    GROUP BY B.TMS
    ) A,
    
    
    (
    
     SELECT   
            MAX(TMS) TMS
           ,MAX(SUBSTR(B.RACE_DAY,5,2)) RACE_MM
           ,NVL(SUM(A.ENT_PRSN_NUM ),0)         B_TOT_PRSN_NUM  
           
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) = ?  -1 
                AND MEET_CD = ?     
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE STND_YEAR = ?  - 1  
                AND MEET_CD = ? 
                AND TMS  = ?  - 1  
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    GROUP BY B.TMS
    ) B,
    
    (
    
     SELECT NVL(SUM(A.ENT_PRSN_NUM ),0)         TOT  
           
    FROM
        (SELECT
             RACE_DT,ENT_PRSN_NUM
            FROM 
                TBRC_STAY_MANA         
            WHERE 1 =1
                AND SUBSTR(RACE_DT,0,4) =  ?  -1 
                AND MEET_CD = '003'
        )A
      ,(
        SELECT
             MEET_CD
            ,STND_YEAR
            ,TMS
            ,RACE_DAY
        FROM  VW_SDL_INFO
            WHERE STND_YEAR = ?  -1  
                AND MEET_CD = ? 
                AND TMS  <= ?   
                            
      )B
    WHERE  A.RACE_DT(+) = B.RACE_DAY
    )C
  ),
  (
  SELECT SUM(A.ENT_PRSN_NUM ) AS N_TOT_PRSN_NUM
      FROM 
          TBRC_STAY_MANA  A,       
          VW_SDL_INFO B
      WHERE 1 =1
        AND A.RACE_DT(+) = B.RACE_DAY
        AND B.STND_YEAR =  ?  
        AND B.MEET_CD = ?    
        AND B.TMS  = ?       
  )BB  
 ORDER BY MANA_DESC
 #String#2012#String#003#String#2012#String#003#String#8#String#2012#String#003#String#2012#String#003#String#8#String#2012#String#003#String#2012#String#003#String#8#String#2012#String#003#String#2012#String#003#String#8#String#2012#String#003#String#2012#String#003#String#8#String#2012#String#2012#String#003#String#8#String#2012#String#003#String#8#
>
[I][UbiData][2012-04-05 17:43:13]	- Row size : 2
[I][UbiData][2012-04-05 17:43:13]	- Data
<
1^t입장인원^t482182^t0^t0^t32132^t28670^t60802^t61901^t-1099^t-1.78^t^n2^t전년대비^t654677^t0^t0^t41373^t40514^t81887^t88078^t-21085^t-25.75^t^n
>
[I][UbiData][2012-04-05 17:43:13][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-04-05 17:43:13][DATA QUERY START]
[I][UbiData][2012-04-05 17:43:13]	- sql id : rsm2020_s07
[I][UbiData][2012-04-05 17:43:13]	- Db charset : KSC5601
[I][UbiData][2012-04-05 17:43:13]	- Sql
<
SELECT  
   '0~'||BB.RACE_NO||'R' AS RACE_DESC,
   DECODE(LEV,1,'인원','점유율') AS MANA_DESC,
      DECODE(LEV,1,INWON_12,DECODE(INWON_TOTAL,0,0,ROUND(INWON_12/INWON_TOTAL*100,2))) AS INWON_12, 
      DECODE(LEV,1,INWON_13,DECODE(INWON_TOTAL,0,0,ROUND(INWON_13/INWON_TOTAL*100,2))) AS INWON_13, 
      DECODE(LEV,1,INWON_14,DECODE(INWON_TOTAL,0,0,ROUND(INWON_14/INWON_TOTAL*100,2))) AS INWON_14, 
      DECODE(LEV,1,INWON_16,DECODE(INWON_TOTAL,0,0,ROUND(INWON_16/INWON_TOTAL*100,2))) AS INWON_16, 
      DECODE(LEV,1,INWON_19,DECODE(INWON_TOTAL,0,0,ROUND(INWON_19/INWON_TOTAL*100,2))) AS INWON_19, 
      DECODE(LEV,1,INWON_20,DECODE(INWON_TOTAL,0,0,ROUND(INWON_20/INWON_TOTAL*100,2))) AS INWON_20, 
      DECODE(LEV,1,INWON_22,DECODE(INWON_TOTAL,0,0,ROUND(INWON_22/INWON_TOTAL*100,2))) AS INWON_22, 
      DECODE(LEV,1,INWON_23,DECODE(INWON_TOTAL,0,0,ROUND(INWON_23/INWON_TOTAL*100,2))) AS INWON_23, 
      DECODE(LEV,1,INWON_24,DECODE(INWON_TOTAL,0,0,ROUND(INWON_24/INWON_TOTAL*100,2))) AS INWON_24, 
      DECODE(LEV,1,INWON_25,DECODE(INWON_TOTAL,0,0,ROUND(INWON_25/INWON_TOTAL*100,2))) AS INWON_25, 
      DECODE(LEV,1,INWON_26,DECODE(INWON_TOTAL,0,0,ROUND(INWON_26/INWON_TOTAL*100,2))) AS INWON_26, 
      DECODE(LEV,1,INWON_27,DECODE(INWON_TOTAL,0,0,ROUND(INWON_27/INWON_TOTAL*100,2))) AS INWON_27, 
      DECODE(LEV,1,INWON_28,DECODE(INWON_TOTAL,0,0,ROUND(INWON_28/INWON_TOTAL*100,2))) AS INWON_28, 
      DECODE(LEV,1,INWON_100,DECODE(INWON_TOTAL,0,0,ROUND(INWON_100/INWON_TOTAL*100,2))) AS INWON_100, 
      DECODE(LEV,1,INWON_101,DECODE(INWON_TOTAL,0,0,ROUND(INWON_101/INWON_TOTAL*100,2))) AS INWON_101, 
      DECODE(LEV,1,INWON_102,DECODE(INWON_TOTAL,0,0,ROUND(INWON_102/INWON_TOTAL*100,2))) AS INWON_102, 
      DECODE(LEV,1,INWON_103,DECODE(INWON_TOTAL,0,0,ROUND(INWON_103/INWON_TOTAL*100,2))) AS INWON_103, 
      DECODE(LEV,1,INWON_SUM,DECODE(INWON_TOTAL,0,0,ROUND(INWON_SUM/INWON_TOTAL*100,2))) AS INWON_TOTAL 
  FROM
 (
             SELECT  
        SUM(CASE WHEN BRNC_CD='12' THEN INWON END) AS INWON_12, 
        SUM(CASE WHEN BRNC_CD='13' THEN INWON END) AS INWON_13, 
        SUM(CASE WHEN BRNC_CD='14' THEN INWON END) AS INWON_14, 
        SUM(CASE WHEN BRNC_CD='16' THEN INWON END) AS INWON_16, 
        SUM(CASE WHEN BRNC_CD='19' THEN INWON END) AS INWON_19, 
        SUM(CASE WHEN BRNC_CD='20' THEN INWON END) AS INWON_20, 
        SUM(CASE WHEN BRNC_CD='22' THEN INWON END) AS INWON_22, 
        SUM(CASE WHEN BRNC_CD='23' THEN INWON END) AS INWON_23, 
        SUM(CASE WHEN BRNC_CD='24' THEN INWON END) AS INWON_24, 
        SUM(CASE WHEN BRNC_CD='25' THEN INWON END) AS INWON_25, 
        SUM(CASE WHEN BRNC_CD='26' THEN INWON END) AS INWON_26, 
        SUM(CASE WHEN BRNC_CD='27' THEN INWON END) AS INWON_27, 
        SUM(CASE WHEN BRNC_CD='28' THEN INWON END) AS INWON_28, 
        SUM(CASE WHEN BRNC_CD='100' THEN INWON END) AS INWON_100, 
        SUM(CASE WHEN BRNC_CD='101' THEN INWON END) AS INWON_101, 
        SUM(CASE WHEN BRNC_CD='102' THEN INWON END) AS INWON_102, 
        SUM(CASE WHEN BRNC_CD='103' THEN INWON END) AS INWON_103, 
        SUM(INWON ) AS INWON_TOTAL,
        SUM(CASE WHEN BRNC_CD='12' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='13' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='14' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='16' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='19' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='20' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='22' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='23' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='24' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='25' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='26' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='27' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='28' THEN INWON END)  + 
                 SUM(CASE WHEN BRNC_CD='100' THEN INWON END) + 
                 SUM(CASE WHEN BRNC_CD='101' THEN INWON END) + 
                 SUM(CASE WHEN BRNC_CD='102' THEN INWON END) +
                 SUM(CASE WHEN BRNC_CD='103' THEN INWON END)  AS INWON_SUM 
     FROM
    (
    SELECT C.CD_NM, 
           E.BRNC_CD,                                      
            SUM( E.ENT_PRSN_NUM) INWON 
        FROM                                                   
         VW_SDL_INFO R       
         ,TBRC_STAY_MANA E, 
         TBRK_SPEC_CD C                      
        WHERE  1=1
           AND R.MEET_CD  = ?  
        AND R.STND_YEAR(+) = ?  
          AND R.TMS(+)   = ?  
          AND R.DAY_ORD(+) = ?  
         AND E.MEET_CD='003'                        
         AND E.RACE_DT=R.RACE_DAY                 
         AND C.GRP_CD IN ('018','032')                      
         AND C.CD=E.BRNC_CD                
         
        GROUP BY E.BRNC_CD,C.CD_NM          
        ORDER BY E.BRNC_CD
    )A
   )AA,
 (
  SELECT                                                                   
          MAX(RACE_NO)  AS RACE_NO
          
   FROM   (                                                                 
               SELECT                                                       
                        TOR.RACE_NO                                         
                      , TOR.RACE_REG_NO                                     
                      , TOR.RACER_NO                                        
                      , TOR.RANK                                            
                      , TRM.NM_KOR                                          
                      , RANK() OVER (PARTITION BY TOR.RACE_NO               
                                                , TOR.RANK                  
                                         ORDER BY TOR.RACE_REG_NO) SEQ      
               FROM     TBEB_ORGAN@MRASYSLINK        TOR                        
                      , TBEC_RACER_MASTER@MRASYSLINK TRM                        
               WHERE 1=1                                                        
               
               AND    TOR.RACER_NO   = TRM.RACER_NO                         
               AND    TOR.STND_YEAR  = ?  
               AND    TOR.MBR_CD     = '001'                                
               AND    TOR.TMS        = ?  
               
               AND    TOR.RANK BETWEEN 1                                    
                                   AND 3                                    
          )                                                                 
   START WITH SEQ = 1                                                       
   CONNECT BY PRIOR SEQ = SEQ - 1                                           
   AND PRIOR RACE_NO = RACE_NO AND RANK = RANK                           
 )BB , (SELECT LEVEL LEV FROM DUAL CONNECT BY LEVEL <=2 ) DU
 #String#003#String#2012#String#8#String#2#String#2012#String#8#
>
[I][UbiData][2012-04-05 17:43:13]	- Row size : 2
[I][UbiData][2012-04-05 17:43:13]	- Data
<
0~15R^t인원^t2651^t2749^t3110^t3993^t2411^t0^t1239^t2107^t2153^t1510^t0^t2244^t1299^t0^t0^t0^t0^t25466^t^n0~15R^t점유율^t9.25^t9.59^t10.85^t13.93^t8.41^t0^t4.32^t7.35^t7.51^t5.27^t0^t7.83^t4.53^t0^t0^t0^t0^t88.82^t^n
>
[I][UbiData][2012-04-05 17:43:13][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-04-05 17:43:13][DATA QUERY START]
[I][UbiData][2012-04-05 17:43:13]	- sql id : rsm2020_s08
[I][UbiData][2012-04-05 17:43:13]	- Db charset : KSC5601
[I][UbiData][2012-04-05 17:43:13]	- Sql
<
SELECT                                       
       STND_YEAR,  
       TMS,           
       DAY_ORD,   
       SPEC_DESC   
  FROM TBRD_RACE_SPEC_DESC 
  WHERE 1=1
       AND STND_YEAR = ?  
       AND TMS  = ?  
       AND DAY_ORD = ?  
       AND MEET_CD   = ?  
 UNION ALL
 SELECT 
       ' ', 999, 999, ' '
 FROM DUAL          
 ORDER BY TMS
 #String#2012#String#8#String#2#String#003#
>
[I][UbiData][2012-04-05 17:43:13]	- Row size : 1
[I][UbiData][2012-04-05 17:43:13]	- Data
<
 ^t999^t999^t ^t^n
>
[I][UbiData][2012-04-05 17:43:13][DATA QUERY END]
--------------------------------------------------------------------------------


[I][UbiForm][2012-04-05 17:57:48][REQUEST FILE]
[I][UbiForm][2012-04-05 17:57:48]	- Report : /web/waspage/usrbm/report/rsm/rsm4060.jrf
[I][UbiForm][2012-04-05 17:57:48]	- Common : /web/waspage/usrbm/report/rsm/property/commonitem.xml [Not found]
--------------------------------------------------------------------------------


[I][UbiData][2012-04-05 17:57:48][REQUEST FILE]
[I][UbiData][2012-04-05 17:57:48]	- Report : rsm4060.jrf
--------------------------------------------------------------------------------
[I][UbiData][2012-04-05 17:57:48][DB CONNECT]
[I][UbiData][2012-04-05 17:57:48]	- Type : nonlookup
[I][UbiData][2012-04-05 17:57:48]	- Db id : rbm
[I][UbiData][2012-04-05 17:57:48]	- Sql id : SQL1
[I][UbiData][2012-04-05 17:57:48]	- Datasource : jdbc/RBM
[I][UbiData][2012-04-05 17:57:48]	- Status : Success
--------------------------------------------------------------------------------
[I][UbiData][2012-04-05 17:57:48][DATA QUERY START]
[I][UbiData][2012-04-05 17:57:48]	- sql id : SQL1
[I][UbiData][2012-04-05 17:57:48]	- Db charset : KSC5601
[I][UbiData][2012-04-05 17:57:48]	- Sql
<
SELECT *
 FROM (
     SELECT  
           MEET_CD,  
           STND_YEAR,  
           DT,   
          BRNC_CD,  
          CD_NM,      
          GROSS_SALES, 
          CANCELS,  
          TOT_SALES,  
          CASHES,  
          NET_INCOME,  
          DRAWS,   
          RETURNS,
          BALANCE,  
          VERI,   
          VERI_DT,  
          FILE_PATH,  
          FILE_NM  
     FROM TBRD_LIS_FILE A 
     ,TBRK_SPEC_CD B    
     WHERE 1=1
      AND BRNC_CD=B.CD
      AND B.GRP_CD = '018'         
      AND BRNC_CD NOT IN ('00','01','02','03','04','06','08','98')
      AND STND_YEAR = ? 
      AND DT  = ? 
    ORDER BY BRNC_CD
 ) A
 #String#2012#String#0405#
>
[I][UbiData][2012-04-05 17:57:48]	- Row size : 12
[I][UbiData][2012-04-05 17:57:48]	- Data
<
003^t2012^t0405^t12^t상봉^t849598050^t30000^t849568050^t670283530^t179284520^t89845000^t269129520^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120405/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0405^t13^t일산^t679760240^t27000^t679733240^t560287360^t119445880^t49470000^t168915880^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120405/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0405^t14^t분당^t952137700^t66000^t952071700^t808085250^t143986450^t188700000^t332686450^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120405/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0405^t16^t장안^t950892310^t83600^t950808710^t733370150^t217438560^t109353887^t326792447^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120405/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0405^t19^t관악^t881956170^t0^t881956170^t674188610^t207767560^t91923990^t299691550^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120405/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0405^t22^t유성^t406145030^t0^t406145030^t314077470^t92067560^t53520850^t145588410^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120405/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0405^t23^t인천^t552390460^t0^t552390460^t415772090^t136618370^t54732000^t191350370^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120405/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0405^t24^t시흥^t1131798420^t100000^t1131698420^t933846200^t197852220^t61655240^t259507460^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120405/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0405^t25^t논현^t782377510^t65000^t782312510^t655075190^t127237320^t54177550^t181414870^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120405/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0405^t26^t천안^t581365600^t0^t581365600^t487538640^t93826960^t13909580^t107736540^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120405/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0405^t27^t올림픽^t1204823390^t17000^t1204806390^t1001619640^t203186750^t78303000^t281489750^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120405/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0405^t28^t의정부^t661702080^t60000^t661642080^t561572650^t100069430^t24315000^t124384430^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120405/divstatrpt.lis^tdivstatrpt.lis^t^n
>
[I][UbiData][2012-04-05 17:57:48][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-04-05 17:57:48][DATA QUERY START]
[I][UbiData][2012-04-05 17:57:48]	- sql id : SQL2
[I][UbiData][2012-04-05 17:57:48]	- Db charset : KSC5601
[I][UbiData][2012-04-05 17:57:48]	- Sql
<
SELECT *
 FROM (
  SELECT 
    MEET_CD,
          MEET_DESC,
          BRNC_CD,
          SUM(GROSS_SALES) AS GROSS_SALES,
          SUM(CANCELS) AS CANCELS,  
          SUM(TOT_SALES) AS TOT_SALES,  
          SUM(CASHES) AS CASHES,  
          SUM(NET_INCOME) AS NET_INCOME,  
          SUM(BALANCE) AS BALANCE  
  FROM
  (            
      SELECT 
        
              MEET_CD,  
        STND_YEAR,  
        DT,   
        CASE 
            WHEN  A.BRNC_CD NOT IN ('00','01','02','03','04','06','08','98') THEN '지점계' 
            WHEN  A.BRNC_CD IN ('06') THEN '그린카드'
            WHEN  A.BRNC_CD IN ('01','02','03','04','06','08','98') AND MEET_CD ='003' THEN '미사리'
            WHEN  A.BRNC_CD IN ('01','02','03','04','06','08','98') AND MEET_CD ='001' THEN '스피돔'
           ELSE  'X' 
           END AS  MEET_DESC, 
           CASE 
            WHEN  A.BRNC_CD NOT IN ('00','01','02','03','04','06','08','98') THEN '18' 
            WHEN  A.BRNC_CD IN ('06') THEN '06'
            WHEN  A.BRNC_CD IN ('01','02','03','04','06','08','98') THEN '00'
           ELSE  'X'
           END AS BRNC_CD,
           CASE 
            WHEN  A.BRNC_CD NOT IN ('00','01','02','03','04','06','08','98') THEN '1' 
            WHEN  A.BRNC_CD IN ('06') THEN '2'
            WHEN  A.BRNC_CD IN ('01','02','03','04','06','08','98') THEN '3'
           ELSE  'X' 
           END AS MEET_ORDER,           
           SUM(GROSS_SALES) AS GROSS_SALES,
           SUM(CANCELS) AS CANCELS,  
           SUM(TOT_SALES) AS TOT_SALES,  
           SUM(CASHES) AS CASHES,  
           SUM(NET_INCOME) AS NET_INCOME,  
           SUM(BALANCE) AS BALANCE  
     FROM TBRD_LIS_FILE A 
     WHERE 1=1     
       AND STND_YEAR = ? 
       AND DT    = ? 
     GROUP BY MEET_CD,  
        STND_YEAR,  
        DT,  
        A.BRNC_CD
  )        
  WHERE BRNC_CD != 'X'
  GROUP BY MEET_CD,MEET_ORDER,MEET_DESC,
          BRNC_CD        
  ORDER BY  MEET_ORDER                                  
 ) A
 #String#2012#String#0405#
>
[I][UbiData][2012-04-05 17:57:48]	- Row size : 3
[I][UbiData][2012-04-05 17:57:48]	- Data
<
003^t지점계^t18^t9634946960^t448600^t9634498360^t7815716780^t1818781580^t0^t^n003^t그린카드^t06^t32335270^t0^t32335270^t22733610^t9601660^t9601660^t^n003^t미사리^t00^t1990308735^t0^t1990308735^t1615676225^t374632510^t0^t^n
>
[I][UbiData][2012-04-05 17:57:48][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-04-05 17:57:48][DATA QUERY START]
[I][UbiData][2012-04-05 17:57:48]	- sql id : SQL3
[I][UbiData][2012-04-05 17:57:48]	- Db charset : KSC5601
[I][UbiData][2012-04-05 17:57:48]	- Sql
<
SELECT *
 FROM (
     SELECT 
      '그린카드' AS MYCAT, 
      COMM_NO, 
      DIV_NO, 
      DECODE(DIV_NO,'00','본장','15','논현','올림픽') AS COMM_NAME, 
      OUT_AMT, 
      IN_AMT, 
      MILEAGE_AMT, 
      BONUS_AMT,
      (IN_AMT-OUT_AMT-MILEAGE_AMT-BONUS_AMT) AS SIL_IN_AMT 
  FROM VW_MYCAT_INOUT                                              
    WHERE 1=1
   AND RACE_DAY = ?  
    ORDER BY DIV_NO   
 ) A
 #String#20120405#
>
[I][UbiData][2012-04-05 17:57:48]	- Row size : 3
[I][UbiData][2012-04-05 17:57:48]	- Data
<
그린카드^t06^t00^t본장^t5725070^t5489770^t87700^t0^t-323000^t^n그린카드^t06^t15^t논현^t1764300^t7139500^t115500^t0^t5259700^t^n그린카드^t06^t17^t올림픽^t3100^t0^t0^t0^t-3100^t^n
>
[I][UbiData][2012-04-05 17:57:48][DATA QUERY END]
--------------------------------------------------------------------------------


[I][UbiForm][2012-04-05 17:59:08][REQUEST FILE]
[I][UbiForm][2012-04-05 17:59:08]	- Report : /web/waspage/usrbm/report/rsm/rsm4060.jrf
[I][UbiForm][2012-04-05 17:59:08]	- Common : /web/waspage/usrbm/report/rsm/property/commonitem.xml [Not found]
--------------------------------------------------------------------------------


[I][UbiData][2012-04-05 17:59:09][REQUEST FILE]
[I][UbiData][2012-04-05 17:59:09]	- Report : rsm4060.jrf
--------------------------------------------------------------------------------
[I][UbiData][2012-04-05 17:59:09][DB CONNECT]
[I][UbiData][2012-04-05 17:59:09]	- Type : nonlookup
[I][UbiData][2012-04-05 17:59:09]	- Db id : rbm
[I][UbiData][2012-04-05 17:59:09]	- Sql id : SQL1
[I][UbiData][2012-04-05 17:59:09]	- Datasource : jdbc/RBM
[I][UbiData][2012-04-05 17:59:09]	- Status : Success
--------------------------------------------------------------------------------
[I][UbiData][2012-04-05 17:59:09][DATA QUERY START]
[I][UbiData][2012-04-05 17:59:09]	- sql id : SQL1
[I][UbiData][2012-04-05 17:59:09]	- Db charset : KSC5601
[I][UbiData][2012-04-05 17:59:09]	- Sql
<
SELECT *
 FROM (
     SELECT  
           MEET_CD,  
           STND_YEAR,  
           DT,   
          BRNC_CD,  
          CD_NM,      
          GROSS_SALES, 
          CANCELS,  
          TOT_SALES,  
          CASHES,  
          NET_INCOME,  
          DRAWS,   
          RETURNS,
          BALANCE,  
          VERI,   
          VERI_DT,  
          FILE_PATH,  
          FILE_NM  
     FROM TBRD_LIS_FILE A 
     ,TBRK_SPEC_CD B    
     WHERE 1=1
      AND BRNC_CD=B.CD
      AND B.GRP_CD = '018'         
      AND BRNC_CD NOT IN ('00','01','02','03','04','06','08','98')
      AND STND_YEAR = ? 
      AND DT  = ? 
    ORDER BY BRNC_CD
 ) A
 #String#2012#String#0405#
>
[I][UbiData][2012-04-05 17:59:09]	- Row size : 12
[I][UbiData][2012-04-05 17:59:09]	- Data
<
003^t2012^t0405^t12^t상봉^t849598050^t30000^t849568050^t670283530^t179284520^t89845000^t269129520^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120405/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0405^t13^t일산^t679760240^t27000^t679733240^t560287360^t119445880^t49470000^t168915880^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120405/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0405^t14^t분당^t952137700^t66000^t952071700^t808085250^t143986450^t188700000^t332686450^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120405/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0405^t16^t장안^t950892310^t83600^t950808710^t733370150^t217438560^t109353887^t326792447^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120405/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0405^t19^t관악^t881956170^t0^t881956170^t674188610^t207767560^t91923990^t299691550^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120405/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0405^t22^t유성^t406145030^t0^t406145030^t314077470^t92067560^t53520850^t145588410^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120405/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0405^t23^t인천^t552390460^t0^t552390460^t415772090^t136618370^t54732000^t191350370^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120405/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0405^t24^t시흥^t1131798420^t100000^t1131698420^t933846200^t197852220^t61655240^t259507460^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120405/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0405^t25^t논현^t782377510^t65000^t782312510^t655075190^t127237320^t54177550^t181414870^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120405/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0405^t26^t천안^t581365600^t0^t581365600^t487538640^t93826960^t13909580^t107736540^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120405/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0405^t27^t올림픽^t1204823390^t17000^t1204806390^t1001619640^t203186750^t78303000^t281489750^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120405/divstatrpt.lis^tdivstatrpt.lis^t^n003^t2012^t0405^t28^t의정부^t661702080^t60000^t661642080^t561572650^t100069430^t24315000^t124384430^t0^t^t^t/web/waspage/usrbm/upload_file/lis_file/2012/20120405/divstatrpt.lis^tdivstatrpt.lis^t^n
>
[I][UbiData][2012-04-05 17:59:09][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-04-05 17:59:09][DATA QUERY START]
[I][UbiData][2012-04-05 17:59:09]	- sql id : SQL2
[I][UbiData][2012-04-05 17:59:09]	- Db charset : KSC5601
[I][UbiData][2012-04-05 17:59:09]	- Sql
<
SELECT *
 FROM (
  SELECT 
    MEET_CD,
          MEET_DESC,
          BRNC_CD,
          SUM(GROSS_SALES) AS GROSS_SALES,
          SUM(CANCELS) AS CANCELS,  
          SUM(TOT_SALES) AS TOT_SALES,  
          SUM(CASHES) AS CASHES,  
          SUM(NET_INCOME) AS NET_INCOME,  
          SUM(BALANCE) AS BALANCE  
  FROM
  (            
      SELECT 
        
              MEET_CD,  
        STND_YEAR,  
        DT,   
        CASE 
            WHEN  A.BRNC_CD NOT IN ('00','01','02','03','04','06','08','98') THEN '지점계' 
            WHEN  A.BRNC_CD IN ('06') THEN '그린카드'
            WHEN  A.BRNC_CD IN ('01','02','03','04','06','08','98') AND MEET_CD ='003' THEN '미사리'
            WHEN  A.BRNC_CD IN ('01','02','03','04','06','08','98') AND MEET_CD ='001' THEN '스피돔'
           ELSE  'X' 
           END AS  MEET_DESC, 
           CASE 
            WHEN  A.BRNC_CD NOT IN ('00','01','02','03','04','06','08','98') THEN '18' 
            WHEN  A.BRNC_CD IN ('06') THEN '06'
            WHEN  A.BRNC_CD IN ('01','02','03','04','06','08','98') THEN '00'
           ELSE  'X'
           END AS BRNC_CD,
           CASE 
            WHEN  A.BRNC_CD NOT IN ('00','01','02','03','04','06','08','98') THEN '1' 
            WHEN  A.BRNC_CD IN ('06') THEN '2'
            WHEN  A.BRNC_CD IN ('01','02','03','04','06','08','98') THEN '3'
           ELSE  'X' 
           END AS MEET_ORDER,           
           SUM(GROSS_SALES) AS GROSS_SALES,
           SUM(CANCELS) AS CANCELS,  
           SUM(TOT_SALES) AS TOT_SALES,  
           SUM(CASHES) AS CASHES,  
           SUM(NET_INCOME) AS NET_INCOME,  
           SUM(BALANCE) AS BALANCE  
     FROM TBRD_LIS_FILE A 
     WHERE 1=1     
       AND STND_YEAR = ? 
       AND DT    = ? 
     GROUP BY MEET_CD,  
        STND_YEAR,  
        DT,  
        A.BRNC_CD
  )        
  WHERE BRNC_CD != 'X'
  GROUP BY MEET_CD,MEET_ORDER,MEET_DESC,
          BRNC_CD        
  ORDER BY  MEET_ORDER                                  
 ) A
 #String#2012#String#0405#
>
[I][UbiData][2012-04-05 17:59:09]	- Row size : 3
[I][UbiData][2012-04-05 17:59:09]	- Data
<
003^t지점계^t18^t9634946960^t448600^t9634498360^t7815716780^t1818781580^t0^t^n003^t그린카드^t06^t32335270^t0^t32335270^t22733610^t9601660^t9601660^t^n003^t미사리^t00^t1990308735^t0^t1990308735^t1615676225^t374632510^t0^t^n
>
[I][UbiData][2012-04-05 17:59:09][DATA QUERY END]
--------------------------------------------------------------------------------
[I][UbiData][2012-04-05 17:59:09][DATA QUERY START]
[I][UbiData][2012-04-05 17:59:09]	- sql id : SQL3
[I][UbiData][2012-04-05 17:59:09]	- Db charset : KSC5601
[I][UbiData][2012-04-05 17:59:09]	- Sql
<
SELECT *
 FROM (
     SELECT 
      '그린카드' AS MYCAT, 
      COMM_NO, 
      DIV_NO, 
      DECODE(DIV_NO,'00','본장','15','논현','올림픽') AS COMM_NAME, 
      OUT_AMT, 
      IN_AMT, 
      MILEAGE_AMT, 
      BONUS_AMT,
      (IN_AMT-OUT_AMT-MILEAGE_AMT-BONUS_AMT) AS SIL_IN_AMT 
  FROM VW_MYCAT_INOUT                                              
    WHERE 1=1
   AND RACE_DAY = ?  
    ORDER BY DIV_NO   
 ) A
 #String#20120405#
>
[I][UbiData][2012-04-05 17:59:09]	- Row size : 3
[I][UbiData][2012-04-05 17:59:09]	- Data
<
그린카드^t06^t00^t본장^t5725070^t5489770^t87700^t0^t-323000^t^n그린카드^t06^t15^t논현^t1764300^t7139500^t115500^t0^t5259700^t^n그린카드^t06^t17^t올림픽^t3100^t0^t0^t0^t-3100^t^n
>
[I][UbiData][2012-04-05 17:59:09][DATA QUERY END]
--------------------------------------------------------------------------------

