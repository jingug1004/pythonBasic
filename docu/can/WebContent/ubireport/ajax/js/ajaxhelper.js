function ajax(options) { options={ type: options.type || "POST", url: options.url || "", timeout: options.timeout || 60000, onComplete: options.onComplete || function(){}, onError: options.onError || function(){}, onSuccess: options.onSuccess || function(){}, reqdata: options.reqdata || "", datatype: options.datatype || "" }; if(typeof XMLHttpRequest == "undefined"){ XMLHttpRequest=function() { return new ActiveXObject( navigator.userAgent.indexOf("MSIE 5") >= 0 ? "Microsoft.XMLHTTP" : "Msxml2.XMLHTTP" ); }; } var xml=new XMLHttpRequest(); if(options.type == "POST") { xml.open(options.type, options.url, true); } else if(options.type == "GET") { xml.open(options.type, options.url+((options.reqdata !== "")?"?"+serialize(options.reqdata):""), true); } var timeoutLength=options.timeout; var requestDone=false; setTimeout(function() { requestDone=true; }, timeoutLength); xml.onreadystatechange=function() { if( xml.readyState == 4 && !requestDone) { if( xml.responseText.indexOf("ER0") != 0 && httpSuccess(xml) ) { options.onSuccess( httpData(xml, options.datatype)); } else { options.onError(xml.responseText); } options.onComplete(); xml=null; } }; if(options.type == "POST") { xml.setRequestHeader("Content-Type", "application/x-www-form-urlencoded"); if(xml.overrideMimeType) xml.setRequestHeader("Connection", "close"); xml.send(serialize(options.reqdata)); } else { xml.send(); } function httpSuccess(r) { try{ return (!r.status && location.protocol == "file:") || (r.status >= 200 && r.status < 300) || r.satus == 304 || navigator.userAgent.indexOf("Safari") >= 0 && typeof r.status == "undefined;"; }catch(e){} return false; } function httpData(r, type) { var ct=r.getResponseHeader("content-type"); var data=!type && ct && ct.indexOf("xml") >= 0; data=type == "xml" || data ? r.responseXML : r.responseText; if(type == "script") eval.call(window, data); return data; } function serialize(a) { var s=[]; if(a.constructor == Array) { for(var i=0; i<a.length; i++) s.push(a[i].name + "=" + encodeURIComponent(a[i].value)); } else { for(var j in a) s.push( j + "=" + encodeURIComponent(a[j])); } return s.join("&"); } }