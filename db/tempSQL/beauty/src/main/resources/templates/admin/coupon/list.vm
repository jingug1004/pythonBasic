<!DOCTYPE html>
<html lang="en">

  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <!-- Meta, title, CSS, favicons, etc. -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

   	#parse ("/admin/layout/common_css.vm")	
   	
   	<link href="https://cdn.datatables.net/1.10.13/css/jquery.dataTables.min.css" rel="stylesheet">
   	<link href="https://cdn.datatables.net/buttons/1.2.4/css/buttons.dataTables.min.css" rel="stylesheet">
   	<link href="https://cdn.datatables.net/buttons/1.2.4/css/buttons.bootstrap.min.css" rel="stylesheet">
   	<link href="https://cdn.datatables.net/select/1.2.1/css/select.dataTables.min.css" rel="stylesheet">
	<link href="https://cdn.datatables.net/responsive/2.0.2/css/responsive.dataTables.min.css" rel="stylesheet" />
</head>

<body class="nav-md footer_fixed">
	<div class="container body">
		<div class="main_container">
			#parse ("/admin/layout/header.vm")
			<!-- page content -->
			<div class="right_col" role="main">
				<div class="col-md-12 col-sm-12 col-xs-12">
                <div class="x_panel">
                  <div class="x_title">
                    <h2>쿠폰 <small>목록</small></h2>
                    <ul class="nav navbar-right">
                    </ul>
                    <div class="clearfix"></div>
                  </div>
                  <div class="x_content">
                    <table id="datatables" class="table table-striped table-bordered dt-responsive nowrap" cellspacing="0" width="100%">
                      <thead>
                        <tr>
                        	<th>쿠폰코드</th>
                        	<th>쿠폰타입</th>
                        	<th>자동발급</th>
                        	<th>다운로드</th>
            			    <th>쿠폰명</th>
            			    <th>할인타입</th>
            			    <th>할인액</th>
            			    <th>최대할인</th>
            			    <th>최소금액</th>
            			    <th>남은수량</th>
							<th>소멸</th>
							<th>소멸기준</th>   
							<th>등록일</th>     			    
                        </tr>
                      </thead>
                      <tbody>	
                      	<tr>
                      		<td></td>
                      		<td></td>
                      		<td></td>
                      		<td></td>
            			    <td></td>
            			    <td></td>
                      		<td></td>
            			    <td></td>
            			    <td></td>
            			    <td></td>
            			    <td></td>
            			    <td></td>
            			    <td></td>
                        </tr>
                      </tbody>
                    </table>
              </div>
			</div>
			</div>
			
			<div id="items" class="col-md-12 col-sm-12 col-xs-12" style="display:none;">
					<div class="x_panel">
						<div class="x_content">
							<table id="item_datatables" class="table table-striped table-bordered dt-responsive nowrap" cellspacing="0" width="100%" >
								<thead>
			                        <tr>
			                        	<th>등록 정보</th>
			                        </tr>
			                      </thead>
			                      <tbody>	
			                      	<tr>
			            			    <td></td>
			                        </tr>
								</tbody>
							</table>
						</div>
					</div>
				</div>
		</div>
		<!-- page content end-->
		#parse ("/admin/layout/footer.vm")
	</div>
</div>
		#parse ("/admin/layout/common_js.vm")
	<script src="https://cdn.datatables.net/1.10.13/js/jquery.dataTables.min.js"></script>
	<script src="https://cdn.datatables.net/buttons/1.2.4/js/dataTables.buttons.min.js"></script>
	<script src="https://cdn.datatables.net/select/1.2.1/js/dataTables.select.min.js"></script>
	<script src="https://cdn.datatables.net/responsive/2.0.2/js/dataTables.responsive.min.js"></script>
    <script>
    var myTable;
    var itemTable;
    $(document).ready(function() {
        myTable = $('#datatables').DataTable({
        	 dom: 'Bfrtip',
			stateSave: true,	
          	"processing": true,
          	"serverSide": true,
          	"order": [],
          	"ajax": {
          		"url": "list_processing",
          		"data": function(data) {
          			planify(data);
                }
          	},
          	select:true,
          	columns: [
					{"data": "cpId", "name": "cpId"},
					{"data": "cpType", "name": "cpType"},
					{"data": "auto", "name": "auto"},
					{"data": "download", "name": "download"},
					{"data": "cpName", "name": "cpName"},
					{"data": "saleType", "name": "saleType"},
					{"data": "price", "name": "price"},
					{"data": "maximum", "name": "maximum"},
					{"data": "minimum", "name": "minimum"},
					{"data": "cpCount", "name": "cpCount"},
					{"data": "endType", "name": "endType"},
					{"data": "endDate", "name": "endDate"},
					{"data": "regDate", "name": "regDate"}
				],   
			"columnDefs": [
					{
						"targets": 1,//index of column starting from 0	
						"data": "cpType", //this name should exist in your JSON response
						"render": function ( data, type, full, meta ) {
							if(data == 0) {
								return '일반쿠폰';	
							} else if(data == 1) {
								return '중복쿠폰';	
							} else if(data == 2) {
								return '특별쿠폰-브랜드';	
							} else if(data == 3) {
								return '특별쿠폰-카테고리';	
							} else if(data == 4) {
								return '특별쿠폰-제품';	
							}  else if(data == 5) {
								return '제품교환권';	
							} else {
								return data;
							}
						}
					},
					{
						"targets": 2,//index of column starting from 0	
						"data": "auto", //this name should exist in your JSON response
						"render": function ( data, type, full, meta ) {
							if(data == 1) {
								return '신규회원';	
							} else if(data == 2) {
								return '첫구매';	
							} else {
								return '';
							}
								
						}
					},
					{
						"targets": 3,//index of column starting from 0	
						"data": "download", //this name should exist in your JSON response
						"render": function ( data, type, full, meta ) {
							if(data == 0) {
								return '불가';	
							} else {
								return '가능';
							}
								
						}
					},
					{
						"targets": 5,//index of column starting from 0	
						"data": "cpType", //this name should exist in your JSON response
						"render": function ( data, type, full, meta ) {
							if(data == 0) {
								return '할인율';	
							} else {
								return '금액할인';
							}
								
						}
					},
					{
						"targets": 6,//index of column starting from 0	
						"data": "saleType", //this name should exist in your JSON response
						"render": function ( data, type, full, meta ) {
							if(full.saleType == 0) {
								return data + '%';	
							} else {
								return data + '원';
							}
								
						}
					},
					{
						"targets": 7,//index of column starting from 0	
						"data": "maximum", //this name should exist in your JSON response
						"render": function ( data, type, full, meta ) {
							if(data == 0) {
								return '제한없음';	
							} else {
								return data;
							}
								
						}
					},
					{
						"targets": 8,//index of column starting from 0	
						"data": "minimum", //this name should exist in your JSON response
						"render": function ( data, type, full, meta ) {
							if(data == 0) {
								return '제한없음';	
							} else {
								return data;
							}
								
						}
					},
					{
						"targets": 9,//index of column starting from 0	
						"data": "cpCount", //this name should exist in your JSON response
						"render": function ( data, type, full, meta ) {
							if(data == -1) {
								return '제한없음';	
							} else {
								return data;
							}
								
						}
					},
					{
						"targets": 10,//index of column starting from 0	
						"data": "endType", //this name should exist in your JSON response
						"render": function ( data, type, full, meta ) {
							if(data == 0) {
								return '다운로드';	
							} else if(data == 1) {
								return '특정일';	
							} else if(data == 2) {
								return '매일자정';	
							}else {
								return data;
							}
								
						}
					},
					{
						"targets": 11,//index of column starting from 0	
						"data": "endType", //this name should exist in your JSON response
						"render": function ( data, type, full, meta ) {
							if(full.endType == 0) {
								return full.endAfter + "일 후";	
							} else if(full.endType == 1) {
								return new Date(full.endDate).format("yyyy-MM-dd HH:mm:ss");	
							} else if(full.endType == 2) {
								return '';	
							}else {
								return data;
							}
								
						}
					},
					{
		  				   "targets": 12,//index of column starting from 0
		  				    "data": "regDate", //this name should exist in your JSON response
		  				    "render": function ( data, type, full, meta ) {
		  				    	return new Date(data).format("yyyy-MM-dd HH:mm:ss");		
		  			   		}
			  			}
			],
			buttons: [
				        {
				              text: '등록',
				              action: function ( e, dt, button, config ) {
				                  //addBrand();
				                  location.href="write";
				              }
				          },
				          {
				              text: '다운로드 가능',
				              enabled: false,
				              action: function ( e, dt, button, config ) {
				            	  var rowData = myTable.rows( '.selected' ).data().toArray();
				            	  download(rowData, 1);
				              }
				          },
				          {
				              text: '다운로드 불가',
				              enabled: false,
				              action: function ( e, dt, button, config ) {
				            	  var rowData = myTable.rows( '.selected' ).data().toArray();
				            	  download(rowData, 0);
				              }
				          },
				          {
				              text: '자동발급',
				              enabled: false,
				              action: function ( e, dt, button, config ) {
				            	  var rowData = myTable.rows( '.selected' ).data().toArray();
				            	  auto(rowData);
				              }
				          }
				      ],
			responsive: true
        });
        myTable.on( 'select', function () {
            var selectedRows = myTable.rows( { selected: true } ).count();
            myTable.button( 1 ).enable( selectedRows > 0 );
            myTable.button( 2 ).enable( selectedRows > 0 );
            myTable.button( 3 ).enable( selectedRows > 0 );
            if(selectedRows == 1) {
            	var rowData = myTable.rows( '.selected' ).data().toArray();
            	if(rowData[0].cpType > 1) {
            		initItemTable(rowData[0].cpId, rowData[0].cpType);
        			$("#items").css("display", "block");
            	} else {
            		$("#items").css("display", "none");
            	}
            } else {
            	$("#items").css("display", "none");
            }
        
        } );
        
        myTable.on( 'deselect', function () {
            var selectedRows = myTable.rows( { selected: true } ).count();
            console.log(selectedRows);
            if(selectedRows == 0) {
            	myTable.button( 3 ).disable();
            	myTable.button( 2 ).disable();
           		myTable.button( 1 ).disable();
           		$("#items").css("display", "none");
            }
            
            if(selectedRows == 1) {
            	var rowData = myTable.rows( '.selected' ).data().toArray();
            	if(rowData[0].cpType > 1) {
            		initItemTable(rowData[0].cpId, rowData[0].cpType);
        			$("#items").css("display", "block");
            	} else {
            		$("#items").css("display", "none");
            	}
            } else {
            	$("#items").css("display", "none");
            }
            
        } );
        
    } );
    
    function planify(data) {
        for (var i = 0; i < data.columns.length; i++) {
            column = data.columns[i];
            column.searchRegex = column.search.regex;
            column.searchValue = column.search.value;
            delete(column.search);
        }
    }

    function initItemTable(cpid, cpType) {
    	var mName;
    	if(cpType == 2) {
    		mName = "brandName";
		} else if(cpType == 3) {
			mName = "menuName";
		} else {
			mName = "prodName";
		}
    	$('#item_datatables').dataTable().fnDestroy();
		$("#items").css("display", "block");
	    itemTable = $('#item_datatables').DataTable({
			stateSave: true,	
	     	"processing": true,
	     	"serverSide": true,
	     	"order": [],
	     	"paging": false,
	     	"searching": false,
	     	"ajax": {
	     		"url": "data_processing?cpId="+cpid,
	     		"data": function(data) {
	     			console.log(data);
	     			planify(data);
	           }
	     	},
	     	select:false,
	     	columns: [
						{"data": mName, "name": mName}	
			],
			"columnDefs": [
						{
							"targets": 0,//index of column starting from 0	
							"data": mName, //this name should exist in your JSON response
							"render": function ( data, type, full, meta ) {
								return data;	
							}
						}
			],
			responsive: true
	   });
		
	}

    function download(rowData, flag) {
    	var message = "상태 변경 하시겠습니까?";
    	bootbox.confirm({
    	    message: message,
    	    buttons: {
    	        confirm: {
    	            label: 'Yes',
    	            className: 'btn-success'
    	        },
    	        cancel: {
    	            label: 'No',
    	            className: 'btn-danger'
    	        }
    	    },
    	    callback: function (result) {
    	    	if(result) {
    	    		$.ajax({
        				url: "download?flag="+flag,
        				contentType: 'application/json',
        			    mimeType: 'application/json',
        			    dataType: 'json', 
        			    data: JSON.stringify(rowData), 
        				type: 'POST',
        				success: function(result){
        					if(result.resultCode == 200) {
        						bootbox.alert(result.message, function() {
        							myTable.ajax.reload();
        						});
        					} else {
        						bootbox.alert(result.message, function() {});
        					}
        				},
        				error: function(){
        					bootbox.alert("오류가 발생였습니다.\n잠시 후 다시 시도해 주세요.", function() {});
        				}
        			});
    	    	}
    	    }
    	});
    }
    
    function auto(rowData) {
    	bootbox.prompt({
    	    title: "선택 해 주세요.",
    	    buttons: {
    	        confirm: {
    	            label: '저장',
    	            className: 'btn-success'
    	        },
    	        cancel: {
    	            label: '취소',
    	            className: 'btn-danger'
    	        }
    	    },
    	    inputType: 'select',
    	    inputOptions: [
						{
						    text: '일반',
						    value: '0',
						},
	                   {
	                       text: '신규 회원',
	                       value: '1',
	                   },
	                   {
	                       text: '첫구매',
	                       value: '2',
	                   }
			],
			callback: function (result) {
				if(result) {
					$.ajax({
        				url: "auto?flag="+result,
        				contentType: 'application/json',
        			    mimeType: 'application/json',
        			    dataType: 'json', 
        			    data: JSON.stringify(rowData), 
        				type: 'POST',
        				success: function(result){
        					if(result.resultCode == 200) {
        						bootbox.alert(result.message, function() {
        							myTable.ajax.reload();
        						});
        					} else {
        						bootbox.alert(result.message, function() {});
        					}
        				},
        				error: function(){
        					bootbox.alert("오류가 발생였습니다.\n잠시 후 다시 시도해 주세요.", function() {});
        				}
        			});
				}
			}
    	});
    }
    </script>
    <!-- /Datatables -->
</body>
</html>