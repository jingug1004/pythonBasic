<!DOCTYPE html>
<html lang="en">

  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <!-- Meta, title, CSS, favicons, etc. -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
	
	<title>발그레 | 관리자페이지</title>
   	
   	#parse ("/admin/layout/common_css.vm")	
   	
   	<link href="https://cdn.datatables.net/1.10.13/css/jquery.dataTables.min.css" rel="stylesheet">
   	<link href="https://cdn.datatables.net/buttons/1.2.4/css/buttons.dataTables.min.css" rel="stylesheet">
   	<link href="https://cdn.datatables.net/buttons/1.2.4/css/buttons.bootstrap.min.css" rel="stylesheet">
   	<link href="https://cdn.datatables.net/select/1.2.1/css/select.dataTables.min.css" rel="stylesheet">
	<link href="https://cdn.datatables.net/responsive/2.0.2/css/responsive.dataTables.min.css" rel="stylesheet" />
	    <!-- cropper -->
    <link href="/vendors/cropper/dist/cropper.min.css" rel="stylesheet">
</head>

<body class="nav-md footer_fixed">
	<div class="container body">
		<div class="main_container">
			#parse ("/admin/layout/header.vm")
			<!-- page content -->
			<div class="right_col" role="main">
				<div class="col-md-12 col-sm-12 col-xs-12">
                <div class="x_panel">
                  <div class="x_title">
                    <h2>기획전 <small>목록</small></h2>
                    <ul class="nav navbar-right">
                    </ul>
                    <div class="clearfix"></div>
                  </div>
                <div class="x_content">
					<table id="pdatatables" class="table table-striped table-bordered dt-responsive nowrap" cellspacing="0" width="100%">
                      <thead>
                        <tr>
                        	<th>순서</th>
                        	<th>이미지</th>
            			    <th>제목</th>
            			    <th>진행여부</th>
            			    <th>등록일</th>
                        </tr>
                      </thead>
                      <tbody>	
                      	<tr>
            			    <td></td>
            			    <td></td>
            			    <td></td>
            			    <td></td>
            			    <td></td>
                        </tr>
                      </tbody>
					</table>
				</div>
				<div id="items" class="col-md-12 col-sm-12 col-xs-12" style="display:none;">
					<div class="x_panel">
						<div class="x_content">
							<table id="item_datatables" class="table table-striped table-bordered dt-responsive nowrap" cellspacing="0" width="100%">
								<thead>
			                        <tr>
			                        	<th>pg.no</th>
			            			    <th>이미지</th>
			            			    <th>순서</th>
			            			    <th>사용</th>
			                        </tr>
			                      </thead>
			                      <tbody>	
			                      	<tr>
			            			    <td></td>
			            			    <td></td>
			            			    <td></td>
			            			    <td></td>
			                        </tr>
								</tbody>
							</table>
						</div>
					</div>
				</div>
				<div id="products" class="col-md-12 col-sm-12 col-xs-12" style="display:none;">
					<div class="x_panel">
						<div class="x_content">
							<table id="prod_datatables" class="table table-striped table-bordered dt-responsive nowrap" cellspacing="0" width="100%" >
								<thead>
			                        <tr>
			                        	<th>상품명</th>
			            			    <th>이미지</th>
			                        </tr>
			                      </thead>
			                      <tbody>	
			                      	<tr>
			            			    <td></td>
			            			    <td></td>
			                        </tr>
								</tbody>
							</table>
						</div>
					</div>
				</div>
			</div>
			</div>
			#parse ("/admin/plan/item_modal.vm")
			#parse ("/admin/plan/sel_modal.vm")
		</div>
		<!-- page content end-->
		#parse ("/admin/layout/footer.vm")
	</div>
</div>
		#parse ("/admin/layout/common_js.vm")
	<script src="https://cdn.datatables.net/1.10.13/js/jquery.dataTables.min.js"></script>
	<script src="https://cdn.datatables.net/buttons/1.2.4/js/dataTables.buttons.min.js"></script>
	<script src="https://cdn.datatables.net/select/1.2.1/js/dataTables.select.min.js"></script>
	<script src="https://cdn.datatables.net/responsive/2.0.2/js/dataTables.responsive.min.js"></script>
	<script src="https://cdn.datatables.net/rowreorder/1.1.2/js/dataTables.rowReorder.min.js"></script>
		<!-- Cropper -->
    <script src="/vendors/cropper/dist/cropper.min.js"></script>
	<script src="/dist/js/cropper.init.js"></script>
	    
    <script>
    var myTable;
    var itemTable;
    var prodTable;
    $(document).ready(function() {
		myTable = $('#pdatatables').DataTable({
						dom: 'Bfrtip',
						rowReorder: {
			 	  	        selector: 'td:nth-child(2)',
			 	  	     	update: false
			 	  	    },
						stateSave: true,	
        						"processing": true,
        						"serverSide": true,
        						"order": [ [0, "asc"] ],
        			          	"lengthChange": true,
        						"ajax": {
        							"url": "list_processing",
        							"data": function(data) {
        								planify(data);
              				}
          				},
          				select:true,
          				columns: [
								{"data": "sort", "name": "sort", "orderable": true},
								{"data": "thumbnail", "name": "thumbnail", "orderable": false},
								{"data": "title", "name": "title", "orderable": false},
								{"data": "stopPlan", "name": "stopPlan", "orderable": false},
								{"data": "regDate", "name": "regDate", "orderable": false}
						],
						"columnDefs": [
								{
			   						"targets": 1,//index of column starting from 0	
			    					"data": "thumbnail", //this name should exist in your JSON response
			    					"render": function ( data, type, full, meta ) {
			    						return '<img src="' + "${image_url}" + data + '" height="70" />';	
			    					}
								},
								{
			   						"targets": 3,//index of column starting from 0	
			    					"data": "stopEvent", //this name should exist in your JSON response
			    					"render": function ( data, type, full, meta ) {
			    						if(data == 1) {
			    							return '<span class="label label-danger">종료</span>';
			    						} else {
			    							return '<span class="label label-success">진행 중</span>';	
			    						}
			    								
			    					}
								},
								{
				  				   "targets": 4,//index of column starting from 0
				  				    "data": "regDate", //this name should exist in your JSON response
				  				    "render": function ( data, type, full, meta ) {
				  				    	e();
				  				    	return new Date(data).format("yyyy-MM-dd HH:mm:ss");		
				  			   		}
					  			}
						],
						buttons: [
								'pageLength',
				        		{
				              		text: '등록',
				              		action: function ( e, dt, button, config ) {
				            	  		location.href="write";
				              		}
				          		},
				          		{
				              		text: '수정',
				              		enabled: false,
				              		action: function ( e, dt, button, config ) {
				            	  		var rowData = myTable.rows( '.selected' ).data().toArray();
				            	  		location.href="write?pid="+rowData[0].pid;
				              		}
				          		},
				          		{
				              		text: '그룹등록',
				              		enabled: false,
				              		action: function ( e, dt, button, config ) {
				            	  		var rowData = myTable.rows( '.selected' ).data().toArray();
				            	  		itemModal("add", rowData[0].pid);
				              		}
				          		},
				          		{
				              		text: '노출',
				              		enabled: false,
				              		action: function ( e, dt, button, config ) {
				            	  		var rowData = myTable.rows( '.selected' ).data().toArray();
				                  		setStat(rowData, 0);
				            	  	}
				          		},
				          		{
				              		text: '중지',
				              		enabled: false,
				              		action: function ( e, dt, button, config ) {
				            	  		var rowData = myTable.rows( '.selected' ).data().toArray();
				            	  		setStat(rowData, 1);
				              		}
				          		},
				          		{
				              		text: '삭제',
				              		enabled: false,
				              		action: function ( e, dt, button, config ) {
				            	  		var rowData = myTable.rows( '.selected' ).data().toArray();
				            	  		deleteItem(rowData);
				              		}
				          		}
				      	],
						responsive: true
        });
        
        myTable.on( 'select', function () {
            var selectedRows = myTable.rows( { selected: true } ).count();
            
            if(selectedRows == 1) {
            	var rowData = myTable.rows( '.selected' ).data().toArray();
            	initItemTable(rowData[0].pid);
            	$("#items").css("display", "block");
            } else {
            	$("#items").css("display", "none");
            }
            myTable.button( 6 ).enable( selectedRows > 0 );
            myTable.button( 5 ).enable( selectedRows > 0 );
            myTable.button( 4 ).enable( selectedRows > 0 );
            myTable.button( 3 ).enable( selectedRows == 1 );
            myTable.button( 2 ).enable( selectedRows == 1 );
            
            e();
        });
        
        myTable.on( 'deselect', function () {
            var selectedRows = myTable.rows( { selected: true } ).count();
            if(selectedRows == 0) {
           	    myTable.button( 6 ).disable();
            	myTable.button( 5 ).disable();
            	myTable.button( 4 ).disable();
            	$("#items").css("display", "none");
            }
            
            if(selectedRows == 1) {
            	myTable.button( 3 ).enable();
            	myTable.button( 2 ).enable();
            }
            
            e();
        });
        
        myTable.on( 'row-reorder', function ( e, diff, edit ) {
      	  	var pid = edit.triggerRow.data().pid;
      	  	var sort = edit.triggerRow.data().sort;
      	  	//console.log(eid);
      		//console.log(sort);
      	  //var ord = edit.triggerRow.data()[0];
      		/*<![CDATA[*/
      		for(var i=0; i<diff.length; i++) {
      			var oldData = myTable.row(diff[i].oldPosition).data();
      			var newData = myTable.row(diff[i].newPosition).data();
      			if(oldData.sort == sort) {
      				reorderData(pid, oldData.sort, newData.sort )
      			}
      		}
      		 /*]]>*/
      	
      	});
    	
		$("#prod").select2({
          placeholder: "상품을 선택하세요.",
          allowClear: true
        });
		
		$('#item_form').submit(function(e) {
 			e.preventDefault();
 			var submit = true;

  	        // evaluate the form using generic validaing
	  	    if (!validator.checkAll($(this))) {
				submit = false;
			}
	  	        
			if (submit) 
				insertItem();
	
			return false;
		});
		
		$('#prod_form').submit(function(e) {
 			e.preventDefault();
 			var submit = true;

  	        // evaluate the form using generic validaing
	  	    if (!validator.checkAll($(this))) {
				submit = false;
			}
	  	        
			if (submit) 
				insertProd();
	
			return false;
		});
    });
    
    function planify(data) {
        for (var i = 0; i < data.columns.length; i++) {
            column = data.columns[i];
            column.searchRegex = column.search.regex;
            column.searchValue = column.search.value;
            delete(column.search);
        }
    }
   
    function reorderData(pid, oldorder,neworder) {
    	var formData = new FormData();
    	formData.append("pid", pid);
    	formData.append("oldorder", oldorder);
    	formData.append("neworder", neworder);
    	
    	$.ajax({
    		url: 'reorder',
    		processData: false,
    		contentType: false,
    		data: formData,
    		type: 'POST',
    		success: function(result){
    			myTable.ajax.reload();
    		},
    		error: function(){
    			alert("오류가 발생하여 잠시 후 다시 시도해 주세요.");
    		}
    	});
    }
    
    function setStat(rowData, flag) {
    	console.log(rowData);
    	var message;
    	if(flag == 0) {
    		message = "선택한 기획전을 진행 하시겠습니까?";
    	} else {
    		message = "선택한 기획전을 종료 하시겠습니까?";
    	}
    	bootbox.confirm({
    	    message: message,
    	    buttons: {
    	        confirm: {
    	            label: 'Yes',
    	            className: 'btn-success'
    	        },
    	        cancel: {
    	            label: 'No',
    	            className: 'btn-danger'
    	        }
    	    },
    	    callback: function (result) {
    	    	if(result) {
    	    		$.ajax({
        				url: "planStat?stat="+flag,
        				contentType: 'application/json',
        			    mimeType: 'application/json',
        			    dataType: 'json', 
        			    data: JSON.stringify(rowData), 
        				type: 'POST',
        				success: function(result){
        					if(result.resultCode == 200) {
        						bootbox.alert(result.message, function() {
        							myTable.ajax.reload();
        						});
        					} else {
        						bootbox.alert(result.message, function() {});
        					}
        				},
        				error: function(){
        					bootbox.alert("오류가 발생였습니다.\n잠시 후 다시 시도해 주세요.", function() {});
        				}
        			});
    	    	}
    	    }
    	});
    }
    
    function itemModal(action, id, pgid) {
		console.log("item : " + action + ", " + id);
		var formData = new FormData();
      	formData.append("item_id", id);
      	$('#item_form').each(function(){
      	     this.reset();
      	});
      	
      	if(action == "add") {
      		$("#pgId").val("");
      		$("#action").val("write");
      		$("#pid").val(id);
      		$("#itemSubmit").text("등록");
      		$('#item_modal').modal();
      	} else {
      		$("#pgId").val(pgid);
      		$("#action").val("update");
      		$("#pid").val(id);
      		$("#itemSubmit").text("수정");
      		$('#item_modal').modal();
      	}
	}
	    
    function initItemTable(pid) {
		if(itemTable) {
			itemTable.ajax.url( "group_processing?pid="+pid);
			itemTable.ajax.reload();
		} else {
			$("#items").css("display", "block");
		    itemTable = $('#item_datatables').DataTable({
		   	 dom: 'Bfrtip',
				stateSave: true,	
		     	"processing": true,
		     	"serverSide": true,
		     	"order": [],
		     	"paging": false,
		     	"searching": false,
		     	"ajax": {
		     		"url": "group_processing?pid="+pid,
		     		"data": function(data) {
		     			console.log(data);
		     			planify(data);
		           }
		     	},
		     	select:true,
		     	columns: [
						{"data": "pgId", "name": "pgId"},
						{"data": "thumbnail", "name": "thumbnail"},
						{"data": "sort", "name": "sort"},
						{"data": "stopGroup", "name": "stopGroup"}
					],
					"columnDefs": [
							{
								"targets": 1,//index of column starting from 0	
								"data": "thumbnail", //this name should exist in your JSON response
								"render": function ( data, type, full, meta ) {
									console.log(data);
									return '<img src="' + "${image_url}" + data + '"  height="70" />';	
								}
							},
							{
		   						"targets": 3,//index of column starting from 0	
		    					"data": "stopEvent", //this name should exist in your JSON response
		    					"render": function ( data, type, full, meta ) {
		    						console.log(data);
		    						if(data == 1) {
		    							return '<span class="label label-danger">중지</span>';
		    						} else {
		    							return '<span class="label label-success">사용 중</span>';	
		    						}
		    								
		    					}
							}
						],
					buttons: [
								{
								    text: '상품 등록',
								    enabled: false,
								    action: function ( e, dt, button, config ) {
								  	  var rowData = itemTable.rows( '.selected' ).data().toArray();
								  	  getProduct(rowData[0].pgId);
								    }
								},
					          {
					              text: '수정',
					              enabled: false,
					              action: function ( e, dt, button, config ) {
					            	  var rowData = itemTable.rows( '.selected' ).data().toArray();
					            
					            	  itemModal("upd", pid, rowData[0].pgId);
					              }
					          },
					          {
					              text: '사용',
					              enabled: false,
					              action: function ( e, dt, button, config ) {
					            	  var rowData = itemTable.rows( '.selected' ).data().toArray();
					            	  groupStat(rowData, 0, pid);
					              }
					          },
					          {
					              text: '사용중지',
					              enabled: false,
					              action: function ( e, dt, button, config ) {
					            	  var rowData = itemTable.rows( '.selected' ).data().toArray();
					            	  groupStat(rowData, 1, pid);
					              }
					          },
					             {
					              text: '삭제',
					              enabled: false,
					              action: function ( e, dt, button, config ) {
					            	  var rowData = itemTable.rows( '.selected' ).data().toArray();
					            	
					           		
					            //	console.log(rowData);
					            	deleteItem(rowData);
					              }
					          }
					          
					      ],
				responsive: true
		   });
		   
		    itemTable.on( 'select', function () {
		       var selectedRows = itemTable.rows( { selected: true } ).count();
		       itemTable.button( 4 ).enable( selectedRows > 0 );
		       itemTable.button( 3 ).enable( selectedRows > 0 );
		       itemTable.button( 2 ).enable( selectedRows > 0 );
		       itemTable.button( 1 ).enable( selectedRows > 0 );
		       itemTable.button( 0 ).enable( selectedRows === 1 );
		       
		       
	            if(selectedRows == 1) {
	            	var rowData = itemTable.rows( '.selected' ).data().toArray();
	            	initProdTable(rowData[0].pgId);
	            } else {
	            	$("#products").css("display", "none");
	            }
	            
	            e();
		   } );
		   
		    itemTable.on( 'deselect', function () {
		       var selectedRows = itemTable.rows( { selected: true } ).count();
		       console.log(selectedRows);
		       if(selectedRows == 0) {
		       	   itemTable.button( 4 ).disable();
		    	   itemTable.button( 3 ).disable();
		    	   itemTable.button( 2 ).disable();
		    	   itemTable.button( 1 ).disable();
		    	   itemTable.button( 0 ).disable();
		    	   $("#products").css("display", "none");
		       }
		       
		       if(selectedRows == 1) { 
		    	   itemTable.button( 1 ).enable();
		    	   
		       }
		       
		       if(selectedRows > 1) {
		    	   itemTable.button( 3 ).enable();
		    	   itemTable.button( 2 ).enable();
		       }
		       
		       e();
		   	});
		}
	}
	    
    function insertItem() {
    	var params = $("#item_form").serializeObject();
    	var result = $('#image').cropper("getCroppedCanvas");
    	
		if(result.toDataURL) {
  			params.thumbUrl = result.toDataURL();
  		} else {
  			bootbox.alert("썸네일을 등록해 주세요.", function() {});
  			return;
  		}
		
    	console.log(JSON.stringify(params));
    	$.ajax({
			url: "group_save",
			contentType: 'application/json',
		    mimeType: 'application/json',
		    dataType: 'json', 
		    data: JSON.stringify(params),
			type: 'POST',
			success: function(result){
				if(result.resultCode == 200) {
					bootbox.alert(result.message, function() {
						$('#item_modal').modal('hide');
						itemTable.ajax.reload();
					});
				} else {
					bootbox.alert(result.message, function() {});
				}
			},
			error: function(){
				bootbox.alert("오류가 발생였습니다.\n잠시 후 다시 시도해 주세요.", function() {});
			}
		});
    }
    
    function groupStat(rowData, flag, pid) {
    	console.log(rowData);
    	console.log(pid);
    	var message;
    	if(flag == 0) {
    		message = "선택한 그룹을 사용 하시겠습니까?";
    	} else {
    		message = "선택한 그룹을 중지 하시겠습니까?";
    	}
    	bootbox.confirm({
    	    message: message,
    	    buttons: {
    	        confirm: {
    	            label: 'Yes',
    	            className: 'btn-success'
    	        },
    	        cancel: {
    	            label: 'No',
    	            className: 'btn-danger'
    	        }
    	    },
    	    callback: function (result) {
    	    	if(result) {
    	    		$.ajax({
        				url: "group_stat?pid=" + pid + "&stat="+flag,
        				contentType: 'application/json',
        			    mimeType: 'application/json',
        			    dataType: 'json', 
        			    data: JSON.stringify(rowData), 
        				type: 'POST',
        				success: function(result){
        					if(result.resultCode == 200) {
        						bootbox.alert(result.message, function() {
        							itemTable.ajax.reload();
        						});
        					} else {
        						bootbox.alert(result.message, function() {});
        					}
        				},
        				error: function(){
        					bootbox.alert("오류가 발생였습니다.\n잠시 후 다시 시도해 주세요.", function() {});
        				}
        			});
    	    	}
    	    }
    	});
    }

    <!-- /GROUP -->
    
    
    
    function initProdTable(pid) {

		$("#products").css("display", "block");
		if(prodTable) {
			prodTable.ajax.url( "item_processing?pgid="+pid);
			prodTable.ajax.reload();
		} else {
			prodTable = $('#prod_datatables').DataTable({
		   	 dom: 'Bfrtip',
				stateSave: true,	
		     	"processing": true,
		     	"serverSide": true,
		     	"order": [],
		     	"paging": false,
		     	"searching": false,
		     	"ajax": {
		     		"url": "item_processing?pgid="+pid,
		     		"data": function(data) {
		     			console.log(data);
		     			planify(data);
		           }
		     	},
		     	select:true,
		     	columns: [
						{"data": "product.prodName", "name": "product.prodName"},
						{"data": "product.thumbUrl", "name": "product.thumbUrl"}
					],
					"columnDefs": [
							{
								"targets": 1,//index of column starting from 0	
								"data": "product.thumbUrl", //this name should exist in your JSON response
								"render": function ( data, type, full, meta ) {
									console.log(data);
									e();
									return '<img src="' + "${image_url}" + data + '"  height="70" />';	
								}
							}
						],
					buttons: [
					          {
					              text: '제거',
					              enabled: false,
					              action: function ( e, dt, button, config ) {
					            	  var rowData = prodTable.rows( '.selected' ).data().toArray();
					            	  deleteProd(rowData);
					              }
					          }
					      ],
				responsive: true
		   });
		   
			prodTable.on( 'select', function () {
		       var selectedRows = prodTable.rows( { selected: true } ).count();
		       prodTable.button( 0 ).enable( selectedRows > 0 );
		   } );
		   
			prodTable.on( 'deselect', function () {
		       var selectedRows = itemTable.rows( { selected: true } ).count();
		       console.log(selectedRows);
		       if(selectedRows == 0) {
		    	   prodTable.button( 0 ).disable();
		    	   
		       }
		       
		   	});
		}
	}
    function getProduct(pgid) {
		//var formData = new FormData();
      	//formData.append("item_id", pgid);
      	
      	$('#prod_form').each(function(){
      	     this.reset();
      	});
      	
      	$("#prod").html(''); 
      	
      	$.ajax({
		     type: "GET",
		     url: "getProduct?pgid="+pgid,
		     data:null,
	         success: function(data){
	        	 for(i=0; i<data.length; i++) {
	        		 $("#prod").append($("<option></option>").attr("value", data[i].productId ).text(data[i].prodName ));
	        		 
	        	 }
	        	 console.log(data.length);
		     },
			 error: function(){
				bootbox.alert("오류가 발생였습니다.\n잠시 후 다시 시도해 주세요.", function() {});
			 }
	  	});
      	
      	//$("#prod").append($("<option></option>").attr("value", data[i].brandId ).attr("selected", true).text(data[i].brandName ));	
		/*	$(".select2_multiple").select2({
          placeholder: "상품을 선택하세요.",
          allowClear: true
        });*/
		
		$("#plgId").val(pgid);
     	$("#prodSubmit").text("등록");
     	$('#sel_modal').modal();
    }
    
    function insertProd() {
    	var params = $("#prod_form").serializeObject();
    	
    	$.ajax({
			type: 'POST',
		    url: "item_save",
		    contentType: 'application/json',
		    mimeType: 'application/json',
		    dataType: 'json', 
		    data: JSON.stringify(params),
	        success: function(result){
	        	if(result.resultCode == 200) {
	        		bootbox.alert("등록 되었습니다.", function() {
	        			prodTable.ajax.reload();
	        			$('#sel_modal').modal('hide');
					});
    			} else {
    				bootbox.alert(result.message, function() {});
    			}
		     },
			 error: function(){
				bootbox.alert("오류가 발생였습니다.\n잠시 후 다시 시도해 주세요.", function() {});
			 }
	  	});
    }
    
    function deleteProd(rowData) {
    	
    	var message = "선택한 상품을 삭제 하시겠습니까?";
    	bootbox.confirm({
    	    message: message,
    	    buttons: {
    	        confirm: {
    	            label: 'Yes',
    	            className: 'btn-success'
    	        },
    	        cancel: {
    	            label: 'No',
    	            className: 'btn-danger'
    	        }
    	    },
    	    callback: function (result) {
    	    	if(result) {
    	    		$.ajax({
        				url: "deleteProd",
        				contentType: 'application/json',
        			    mimeType: 'application/json',
        			    dataType: 'json', 
        			    data: JSON.stringify(rowData), 
        				type: 'POST',
        				success: function(result){
        					if(result.resultCode == 200) {
        						bootbox.alert(result.message, function() {
        							prodTable.ajax.reload();
        						});
        					} else {
        						bootbox.alert(result.message, function() {});
        					}
        				},
        				error: function(){
        					bootbox.alert("오류가 발생였습니다.\n잠시 후 다시 시도해 주세요.", function() {});
        				}
        			});
    	    	}
    	    }
    	});
    }
   function deleteItem(rowData) {
    	console.log(rowData);
    	console.log(rowData[0].sort);
    	console.log(rowData[0].planProduct);
  	    console.log(rowData[0].planProduct[0].ppId);
  	    
    	var message = "선택한 상품을 삭제 하시겠습니까?";
    	bootbox.confirm({
    	    message: message,
    	    buttons: {
    	        confirm: {
    	            label: 'Yes',
    	            className: 'btn-success'
    	        },
    	        cancel: {
    	            label: 'No',
    	            className: 'btn-danger'
    	        }
    	    },
    	    callback: function (result) {
    	    	if(result) {
    	    		$.ajax({
        				url: "deleteItem",
        				contentType: 'application/json',
        			    mimeType: 'application/json',
        			    dataType: 'json', 
        			    data: JSON.stringify(rowData), 
        				type: 'POST',
        				success: function(result){
        					if(result.resultCode == 200) {
        						bootbox.alert(result.message, function() {
        							itemTable.ajax.reload();
        						});
        					} else {
        						bootbox.alert(result.message, function() {});
        					}
        				},
        				error: function(){
        					bootbox.alert("오류가 발생였습니다.\n잠시 후 다시 시도해 주세요.", function() {});
        				}
        			});
    	    	}
    	    }
    	});
    }
    <!-- /ITEM-->
    </script>
</body>
</html>