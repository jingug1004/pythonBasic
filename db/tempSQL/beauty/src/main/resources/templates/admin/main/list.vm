<!DOCTYPE html>
<html lang="en">

  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <!-- Meta, title, CSS, favicons, etc. -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
	
	<title>발그레 | 관리자페이지</title>
	
   	#parse ("/admin/layout/common_css.vm")	
   	
   	<link href="https://cdn.datatables.net/1.10.13/css/jquery.dataTables.min.css" rel="stylesheet">
   	<link href="https://cdn.datatables.net/buttons/1.2.4/css/buttons.dataTables.min.css" rel="stylesheet">
   	<link href="https://cdn.datatables.net/buttons/1.2.4/css/buttons.bootstrap.min.css" rel="stylesheet">
   	<link href="https://cdn.datatables.net/select/1.2.1/css/select.dataTables.min.css" rel="stylesheet">
	<link href="https://cdn.datatables.net/responsive/2.0.2/css/responsive.dataTables.min.css" rel="stylesheet" />
</head>

<body class="nav-md footer_fixed">
	<div class="container body">
		<div class="main_container">
			#parse ("/admin/layout/header.vm")
			<!-- page content -->
			<div class="right_col" role="main">
				<div class="col-md-12 col-sm-12 col-xs-12">
                <div class="x_panel">
                  <div class="x_title">
                    <h2>메인 <small>목록</small></h2>
                    <ul class="nav navbar-right">
                    </ul>
                    <div class="clearfix"></div>
                  </div>
                  <div class="x_content">
                    <table id="datatables" class="table table-striped table-bordered dt-responsive nowrap" cellspacing="0" width="100%">
                      <thead>
                        <tr>
                        	<th>no.</th>
                        	<th>제목</th>
                        	<th>상품수</th>
            			    <th>순서</th>
            			    <th>등록일</th>
                        </tr>
                      </thead>
                      <tbody>	
                      	<tr>
                      		<td></td>
            			    <td></td>
            			    <td></td>
            			    <td></td>
            			    <td></td>
                        </tr>
                      </tbody>
                    </table>
              </div>
			</div>
			</div>
			#parse ("/admin/main/list_modal.vm")
		</div>
		<!-- page content end-->
		#parse ("/admin/layout/footer.vm")
	</div>
</div>
		#parse ("/admin/layout/common_js.vm")
	<script src="https://cdn.datatables.net/1.10.13/js/jquery.dataTables.min.js"></script>
	<script src="https://cdn.datatables.net/buttons/1.2.4/js/dataTables.buttons.min.js"></script>
	<script src="https://cdn.datatables.net/select/1.2.1/js/dataTables.select.min.js"></script>
	<script src="https://cdn.datatables.net/responsive/2.0.2/js/dataTables.responsive.min.js"></script>
	
		
    <script>
    var myTable;
    var t;
    $(document).ready(function() {
    	$("#prod").select2();
        myTable = $('#datatables').DataTable({
        	 dom: 'Bfrtip',
			stateSave: true,	
          	"processing": true,
          	"serverSide": true,
          	"searching": false,
          	"order": [],
          	"ajax": {
          		"url": "list_processing",
          		"data": function(data) {
          			console.log(data);
          			planify(data);
                }
          	},
          	select:true,
          	columns: [
					{"data": "mid", "name": "mid"},
					{"data": "name", "name": "name"},
					{"data": "mainMenuItem", "name": "mainMenuItem"},
					{"data": "sort", "name": "sort"},
					{"data": "regDate", "name": "regDate"}
				],
				"columnDefs": [
								{
										"targets": 2,//index of column starting from 0	
										"data": "mainMenuItem", //this name should exist in your JSON response
										"render": function ( data, type, full, meta ) {
										return data.length;
									}
								},
								{
				  				   "targets": 4,//index of column starting from 0
				  				    "data": "regDate", //this name should exist in your JSON response
				  				    "render": function ( data, type, full, meta ) {
				  				    	return new Date(data).format("yyyy-MM-dd HH:mm:ss");		
				  			   		}
					  			}
							],
			buttons: [
				        {
				              text: '등록',
				              action: function ( e, dt, button, config ) {
				            	  itemModal('add', '');
				              }
				          },
				          {
				              text: '수정',
				              enabled: false,
				              action: function ( e, dt, button, config ) {
				            	  var rowData = myTable.rows( '.selected' ).data().toArray();
				            	  itemModal('upd', rowData);
				              }
				          },
				          {
				              text: '삭제',
				              enabled: false,
				              action: function ( e, dt, button, config ) {
				            	  var rowData = myTable.rows( '.selected' ).data().toArray();
				            	  deleteItem(rowData);
				              }
				          }
				      ],
			responsive: true
        });
        
        myTable.on( 'select', function () {
            var selectedRows = myTable.rows( { selected: true } ).count();
            myTable.button( 2 ).enable( selectedRows > 0 );
            myTable.button( 1 ).enable( selectedRows == 1 );
        } );
        
        myTable.on( 'deselect', function () {
            var selectedRows = myTable.rows( { selected: true } ).count();
            console.log(selectedRows);
            if(selectedRows == 0) {
            	myTable.button( 2 ).disable();
            }
            
            if(selectedRows == 1) {
            	myTable.button( 1 ).enable();
            }
        } );
        
        $('#item_form').submit(function(e) {
 			e.preventDefault();
 			var submit = true;

  	        // evaluate the form using generic validaing
	  	    if (!validator.checkAll($(this))) {
				submit = false;
			}
	  	        
			if (submit) 
				insertData();
	
			return false;
		});
    } );
    
    function planify(data) {
        for (var i = 0; i < data.columns.length; i++) {
            column = data.columns[i];
            column.searchRegex = column.search.regex;
            column.searchValue = column.search.value;
            delete(column.search);
        }
    }
   
    function itemModal(action, rowData) {
      	$('#item_form').each(function(){
      	     this.reset();
      	});
      	
      	if(action == "add") {
      		$("#prod").val([]).trigger("change"); 
      		$("#itemTable").css("display", "none");
      		$("#dId").val("");
      		$("#action").val("write");
      		$("#itemSubmit").text("등록");
      		$('#data_modal').modal();
      	} else {
      		$("#dId").val(rowData[0].mid);
      		if(!t) {
      			t = $("#item-datatables").DataTable({
		 			stateSave: false,	
		           	"processing": false,
		           	"serverSide": false,
		           	"searching": false,
		           	"ordering": false,
		           	"paging": false,
		           	select:false,
		 			responsive: true
				});	
      		}
      		
      		var pid = [];
      		t.clear().draw();
      		for(i=0; i<rowData[0].mainMenuItem.length; i++) {
      			pid.push(rowData[0].mainMenuItem[i].product.productId);
      			t.row.add([
      			           	'<img src="${image_url}' + rowData[0].mainMenuItem[i].product.banner + '" height="40"/>',
      			         	rowData[0].mainMenuItem[i].product.prodName
      			         ]).draw();
      		}
      		
      		
      		$("#prod").val(pid).trigger("change"); 
      		$("#itemTable").css("display", "block");
      		$("#subject").val(rowData[0].name);
      		$("#action").val("update");
      		$("#itemSubmit").text("수정");
      		$('#data_modal').modal();
      	}
	}
    
    function deleteItem(rowData) {
    	console.log(rowData);
    	var message = "선택한 항목을 삭제 하시겠습니까?";
    	bootbox.confirm({
    	    message: message,
    	    buttons: {
    	        confirm: {
    	            label: 'Yes',
    	            className: 'btn-success'
    	        },
    	        cancel: {
    	            label: 'No',
    	            className: 'btn-danger'
    	        }
    	    },
    	    callback: function (result) {
    	    	if(result) {
    	    		$.ajax({
        				url: "listDelete",
        				contentType: 'application/json',
        			    mimeType: 'application/json',
        			    dataType: 'json', 
        			    data: JSON.stringify(rowData), 
        				type: 'POST',
        				success: function(result){
        					if(result.resultCode == 200) {
        						bootbox.alert(result.message, function() {
        							myTable.ajax.reload();
        						});
        					} else {
        						bootbox.alert(result.message, function() {});
        					}
        				},
        				error: function(){
        					bootbox.alert("오류가 발생였습니다.\n잠시 후 다시 시도해 주세요.", function() {});
        				}
        			});
    	    	}
    	    }
    	});
    }
    
    function insertData() {
    	var params = $("#item_form").serializeObject();
		
    	$.ajax({
			url: "listSave",
			contentType: 'application/json',
		    mimeType: 'application/json',
		    dataType: 'json', 
		    data: JSON.stringify(params),
			type: 'POST',
			success: function(result){
				if(result.resultCode == 200) {
					bootbox.alert(result.message, function() {
						$('#data_modal').modal('hide');
						myTable.ajax.reload();
					});
				} else {
					bootbox.alert(result.message, function() {});
				}
			},
			error: function(){
				bootbox.alert("오류가 발생였습니다.\n잠시 후 다시 시도해 주세요.", function() {});
			}
		});
    }
    </script>
    <!-- /Datatables -->
</body>
</html>